


Dyck language




Dyck language

 In the theory of formal languages of computer science, mathematics, and linguistics, the Dyck language is the language consisting of balanced strings of square brackets [ and ]. It is important in the parsing of expressions that must have a correctly nested sequence of brackets, such as arithmetic or algebraic expressions. It is named after the mathematician Walther von Dyck.
Formal definition
Let 
 
 
 
  be the alphabet consisting of the symbols [ and ] and let 
 
 
 
  denote its Kleene closure. For any element 
 
 
 
  with length 
 
 
 
  we define partial functions

 
  and 
 
 
 
  by


 
  is 
 
 
 
  with "
 
 
 
 " inserted into the 
 
 
 
 th position


 
  is 
 
 
 
  with "
 
 
 
 " deleted from the 
 
 
 
 th position
with the understanding that 
 
 
 
  is undefined for 
 
 
 
  and 
 
 
 
  is undefined if 
 
 
 
 . We define an equivalence relation

 
  on 
 
 
 
  as follows: for elements 
 
 
 
  we have 
 
 
 
  if and only if there exists a finite sequence of applications of the 
 
 
 
  and 
 
 
 
  functions starting with 
 
 
 
  and ending with 
 
 
 
 , where the empty sequence is allowed. That the empty sequence is allowed accounts for the reflexivity of 
 
 
 
 . Symmetry follows from the observation that any finite sequence of applications of 
 
 
 
  to a string can be undone with a finite sequence of applications of 
 
 
 
 . Transitivity is clear from the definition.
The equivalence relation partitions the language 
 
 
 
  into equivalence classes. If we take 
 
 
 
  to denote the empty string, then the language corresponding to the equivalence class 
 
 
 
  is called the Dyck language.
Alternative definition
An alternative definition of the Dyck language can be formulated when we introduce the 
 
 
 
  function.


 
  for any 
 
 
 
 .
where 
 
 
 
  and 
 
 
 
  are respectively the number of [ and ] in 
 
 
 
 . I.e. 
 
 
 
  counts the imbalance of [ over ]. If 
 
 
 
  is positive then 
 
 
 
  has more [ than ].
Now, the Dyck language can be defined as the language



Properties

The Dyck language is closed under the operation of concatenation.
By treating 
 
 
 
  as an algebraic monoid under concatenation we see that the monoid structure transfers onto the quotient

 
 , resulting in the syntactic monoid of the Dyck language. The class 
 
 
 
  will be denoted 
 
 
 
 .
The syntactic monoid of the Dyck language is not commutative: if 
 
 
 
  and 
 
 
 
  then 
 
 
 
 .
With the notation above, 
 
 
 
  but neither 
 
 
 
  nor 
 
 
 
  are invertible in 
 
 
 
 .
The syntactic monoid of the Dyck language is isomorphic to the bicyclic semigroup by virtue of the properties of 
 
 
 
  and 
 
 
 
  described above.
By the Chomsky–Schützenberger representation theorem, any context-free language is a homomorphic image of the intersection of some regular language with a homomorphic preimage of the Dyck language on two brackets.1
The Dyck language with two distinct types of brackets can be recognized in the complexity class 

. 2

Examples
For Example : As you move from left to right , insert a '[' for every times it goes up and a ']'for every times go down you end up with a string such as [[]]. Two diagrams are connected if swapping one set of two adjacent brackets produces the other. i.e. in the top, [[]] is connected to [[[][]]] and vice versa by swapping the middle two. It's major uses are in combinatorics.
See also

Catalan number
Dyck congruence

Notes
References

A proof of the Chomsky Schützenberger theorem

"
Category:Formal languages



Kambites, Communications in Algebra Volume 37 Issue 1 (2009) 193-208↩
Barrington and Corbett, Information Processing Letters 32 (1989) 251-256↩




