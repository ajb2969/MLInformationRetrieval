   Divided differences      Divided differences   In mathematics , divided differences is a recursive  division process.  The method can be used to calculate the coefficients in the interpolation polynomial in the Newton form .  Definition  Given k+1 data points       (   x  0   ,   y  0   )   ,  …  ,   (   x  k   ,   y  k   )        subscript  x  0    subscript  y  0    normal-…    subscript  x  k    subscript  y  k      (x_{0},y_{0}),\ldots,(x_{k},y_{k})     The forward divided differences are defined as:        [   y  ν   ]   :=   y  ν    ,   ν  ∈   {  0  ,  …  ,  k  }       formulae-sequence   assign   delimited-[]   subscript  y  ν     subscript  y  ν      ν   0  normal-…  k      [y_{\nu}]:=y_{\nu},\qquad\nu\in\{0,\ldots,k\}            [   y  ν   ,  …  ,   y   ν  +  j    ]   :=     [   y   ν  +  1    ,  …  ,   y   ν  +  j    ]   -   [   y  ν   ,  …  ,   y    ν  +  j   -  1    ]      x   ν  +  j    -   x  ν      ,    ν  ∈   {  0  ,  …  ,   k  -  j   }    ,   j  ∈   {  1  ,  …  ,  k  }      .     formulae-sequence   assign    subscript  y  ν   normal-…   subscript  y    ν  j           subscript  y    ν  1    normal-…   subscript  y    ν  j       subscript  y  ν   normal-…   subscript  y      ν  j   1         subscript  x    ν  j     subscript  x  ν       formulae-sequence    ν   0  normal-…    k  j       j   1  normal-…  k       [y_{\nu},\ldots,y_{\nu+j}]:=\frac{[y_{\nu+1},\ldots,y_{\nu+j}]-[y_{\nu},\ldots%
 ,y_{\nu+j-1}]}{x_{\nu+j}-x_{\nu}},\qquad\nu\in\{0,\ldots,k-j\},\ j\in\{1,%
 \ldots,k\}.     The backward divided differences are defined as:        [   y  ν   ]   :=   y  ν    ,   ν  ∈   {  0  ,  …  ,  k  }       formulae-sequence   assign   delimited-[]   subscript  y  ν     subscript  y  ν      ν   0  normal-…  k      [y_{\nu}]:=y_{\nu},\qquad\nu\in\{0,\ldots,k\}            [   y  ν   ,  …  ,   y   ν  -  j    ]   :=     [   y  ν   ,  …  ,   y    ν  -  j   +  1    ]   -   [   y   ν  -  1    ,  …  ,   y   ν  -  j    ]      x  ν   -   x   ν  -  j       ,    ν  ∈   {  j  ,  …  ,  k  }    ,   j  ∈   {  1  ,  …  ,  k  }      .     formulae-sequence   assign    subscript  y  ν   normal-…   subscript  y    ν  j           subscript  y  ν   normal-…   subscript  y      ν  j   1       subscript  y    ν  1    normal-…   subscript  y    ν  j         subscript  x  ν    subscript  x    ν  j        formulae-sequence    ν   j  normal-…  k      j   1  normal-…  k       [y_{\nu},\ldots,y_{\nu-j}]:=\frac{[y_{\nu},\ldots,y_{\nu-j+1}]-[y_{\nu-1},%
 \ldots,y_{\nu-j}]}{x_{\nu}-x_{\nu-j}},\qquad\nu\in\{j,\ldots,k\},\ j\in\{1,%
 \ldots,k\}.     Notation  If the data points are given as a function ƒ ,       (   x  0   ,   f   (   x  0   )    )   ,  …  ,   (   x  k   ,   f   (   x  k   )    )        subscript  x  0     f   subscript  x  0     normal-…    subscript  x  k     f   subscript  x  k       (x_{0},f(x_{0})),\ldots,(x_{k},f(x_{k}))     one sometimes writes        f   [   x  ν   ]    :=   f   (   x  ν   )     ,   ν  ∈   {  0  ,  …  ,  k  }       formulae-sequence   assign    f   delimited-[]   subscript  x  ν       f   subscript  x  ν       ν   0  normal-…  k      f[x_{\nu}]:=f(x_{\nu}),\qquad\nu\in\{0,\ldots,k\}            f   [   x  ν   ,  …  ,   x   ν  +  j    ]    :=     f   [   x   ν  +  1    ,  …  ,   x   ν  +  j    ]    -   f   [   x  ν   ,  …  ,   x    ν  +  j   -  1    ]       x   ν  +  j    -   x  ν      ,    ν  ∈   {  0  ,  …  ,   k  -  j   }    ,   j  ∈   {  1  ,  …  ,  k  }      .     formulae-sequence   assign    f    subscript  x  ν   normal-…   subscript  x    ν  j            f    subscript  x    ν  1    normal-…   subscript  x    ν  j        f    subscript  x  ν   normal-…   subscript  x      ν  j   1          subscript  x    ν  j     subscript  x  ν       formulae-sequence    ν   0  normal-…    k  j       j   1  normal-…  k       f[x_{\nu},\ldots,x_{\nu+j}]:=\frac{f[x_{\nu+1},\ldots,x_{\nu+j}]-f[x_{\nu},%
 \ldots,x_{\nu+j-1}]}{x_{\nu+j}-x_{\nu}},\qquad\nu\in\{0,\ldots,k-j\},\ j\in\{1%
 ,\ldots,k\}.     Several notations for the divided difference of the function ƒ on the nodes x 0 , ..., x n are used:        [   x  0   ,  …  ,   x  n   ]   f   ,        subscript  x  0   normal-…   subscript  x  n    f    [x_{0},\ldots,x_{n}]f,          [   x  0   ,  …  ,   x  n   ;  f  ]   ,      subscript  x  0   normal-…   subscript  x  n   f    [x_{0},\ldots,x_{n};f],         D   [   x  0   ,  …  ,   x  n   ]   f      D    subscript  x  0   normal-…   subscript  x  n    f    D[x_{0},\ldots,x_{n}]f     etc.  Example  For the first few values of   ν   ν   \nu   , this yields:      [   y  0   ]     delimited-[]   subscript  y  0     \displaystyle\mathopen{[}y_{0}]     To make the recursive process more clear, the divided differences can be put in a tabular form:         x  0       y  0   =   [   y  0   ]                        [   y  0   ,   y  1   ]              x  1       y  1   =   [   y  1   ]          [   y  0   ,   y  1   ,   y  2   ]                 [   y  1   ,   y  2   ]         [   y  0   ,   y  1   ,   y  2   ,   y  3   ]        x  2       y  2   =   [   y  2   ]          [   y  1   ,   y  2   ,   y  3   ]                 [   y  2   ,   y  3   ]              x  3       y  3   =   [   y  3   ]                    subscript  x  0      subscript  y  0    delimited-[]   subscript  y  0     absent  absent  absent    absent  absent    subscript  y  0    subscript  y  1    absent  absent     subscript  x  1      subscript  y  1    delimited-[]   subscript  y  1     absent    subscript  y  0    subscript  y  1    subscript  y  2    absent    absent  absent    subscript  y  1    subscript  y  2    absent    subscript  y  0    subscript  y  1    subscript  y  2    subscript  y  3       subscript  x  2      subscript  y  2    delimited-[]   subscript  y  2     absent    subscript  y  1    subscript  y  2    subscript  y  3    absent    absent  absent    subscript  y  2    subscript  y  3    absent  absent     subscript  x  3      subscript  y  3    delimited-[]   subscript  y  3     absent  absent  absent     \begin{matrix}x_{0}&y_{0}=[y_{0}]&&&\\
 &&[y_{0},y_{1}]&&\\
 x_{1}&y_{1}=[y_{1}]&&[y_{0},y_{1},y_{2}]&\\
 &&[y_{1},y_{2}]&&[y_{0},y_{1},y_{2},y_{3}]\\
 x_{2}&y_{2}=[y_{2}]&&[y_{1},y_{2},y_{3}]&\\
 &&[y_{2},y_{3}]&&\\
 x_{3}&y_{3}=[y_{3}]&&&\\
 \end{matrix}     Properties   Linearity           (   f  +  g   )    [   x  0   ,  …  ,   x  n   ]    =    f   [   x  0   ,  …  ,   x  n   ]    +   g   [   x  0   ,  …  ,   x  n   ]             f  g     subscript  x  0   normal-…   subscript  x  n         f    subscript  x  0   normal-…   subscript  x  n       g    subscript  x  0   normal-…   subscript  x  n        (f+g)[x_{0},\dots,x_{n}]=f[x_{0},\dots,x_{n}]+g[x_{0},\dots,x_{n}]           (   λ  ⋅  f   )    [   x  0   ,  …  ,   x  n   ]    =    λ  ⋅  f    [   x  0   ,  …  ,   x  n   ]           normal-⋅  λ  f     subscript  x  0   normal-…   subscript  x  n        normal-⋅  λ  f     subscript  x  0   normal-…   subscript  x  n       (\lambda\cdot f)[x_{0},\dots,x_{n}]=\lambda\cdot f[x_{0},\dots,x_{n}]         Leibniz rule           (   f  ⋅  g   )    [   x  0   ,  …  ,   x  n   ]    =      f   [   x  0   ]    ⋅  g    [   x  0   ,  …  ,   x  n   ]    +     f   [   x  0   ,   x  1   ]    ⋅  g    [   x  1   ,  …  ,   x  n   ]    +  …  +     f   [   x  0   ,  …  ,   x  n   ]    ⋅  g    [   x  n   ]            normal-⋅  f  g     subscript  x  0   normal-…   subscript  x  n          normal-⋅    f   delimited-[]   subscript  x  0     g     subscript  x  0   normal-…   subscript  x  n        normal-⋅    f    subscript  x  0    subscript  x  1     g     subscript  x  1   normal-…   subscript  x  n     normal-…     normal-⋅    f    subscript  x  0   normal-…   subscript  x  n     g    delimited-[]   subscript  x  n        (f\cdot g)[x_{0},\dots,x_{n}]=f[x_{0}]\cdot g[x_{0},\dots,x_{n}]+f[x_{0},x_{1}%
 ]\cdot g[x_{1},\dots,x_{n}]+\dots+f[x_{0},\dots,x_{n}]\cdot g[x_{n}]         From the mean value theorem for divided differences it follows that          f   [   x  0   ,  …  ,   x  n   ]    =     f   (  n  )     (  ξ  )     n  !          f    subscript  x  0   normal-…   subscript  x  n          superscript  f  n   ξ     n      f[x_{0},\dots,x_{n}]=\frac{f^{(n)}(\xi)}{n!}        Matrix form  The divided difference scheme can be put into an upper triangular matrix . Let      T  f    (   x  0   ,  …  ,   x  n   )    =   (      f   [   x  0   ]       f   [   x  0   ,   x  1   ]       f   [   x  0   ,   x  1   ,   x  2   ]      …     f   [   x  0   ,  …  ,   x  n   ]        0     f   [   x  1   ]       f   [   x  1   ,   x  2   ]      …     f   [   x  1   ,  …  ,   x  n   ]        ⋮    ⋮    ⋮    ⋱    ⋮      0    0    0    …     f   [   x  n   ]       )          subscript  T  f     subscript  x  0   normal-…   subscript  x  n         f   delimited-[]   subscript  x  0       f    subscript  x  0    subscript  x  1       f    subscript  x  0    subscript  x  1    subscript  x  2     normal-…    f    subscript  x  0   normal-…   subscript  x  n       0    f   delimited-[]   subscript  x  1       f    subscript  x  1    subscript  x  2     normal-…    f    subscript  x  1   normal-…   subscript  x  n       normal-⋮  normal-⋮  normal-⋮  normal-⋱  normal-⋮    0  0  0  normal-…    f   delimited-[]   subscript  x  n         T_{f}(x_{0},\dots,x_{n})=\begin{pmatrix}f[x_{0}]&f[x_{0},x_{1}]&f[x_{0},x_{1},%
 x_{2}]&\ldots&f[x_{0},\dots,x_{n}]\\
 0&f[x_{1}]&f[x_{1},x_{2}]&\ldots&f[x_{1},\dots,x_{n}]\\
 \vdots&\vdots&\vdots&\ddots&\vdots\\
 0&0&0&\ldots&f[x_{n}]\end{pmatrix}   .  Then it holds         T   f  +  g    x   =     T  f   x   +    T  g   x           subscript  T    f  g    x        subscript  T  f   x      subscript  T  g   x      T_{f+g}x=T_{f}x+T_{g}x           T   f  ⋅  g    x   =      T  f   x   ⋅   T  g    x          subscript  T   normal-⋅  f  g    x      normal-⋅     subscript  T  f   x    subscript  T  g    x     T_{f\cdot g}x=T_{f}x\cdot T_{g}x        This follows from the Leibniz rule. It means that multiplication of such matrices is commutative . Summarised, the matrices of divided difference schemes with respect to the same set of nodes form a commutative ring .      Since     T  f   x       subscript  T  f   x    T_{f}x   is a triangular matrix, its eigenvalues are obviously     f   (   x  0   )    ,  …  ,   f   (   x  n   )         f   subscript  x  0    normal-…    f   subscript  x  n      f(x_{0}),\dots,f(x_{n})   .  Let    δ  ξ     subscript  δ  ξ    \delta_{\xi}   be a Kronecker delta -like function, that is           δ  ξ    (  t  )    =   {     1       :   t  =  ξ    ,       0       :  else   .              subscript  δ  ξ   t    cases  1   normal-:  absent    t  ξ    0   normal-:  absent  else      \delta_{\xi}(t)=\begin{cases}1&:t=\xi,\\
 0&:\mbox{else}.\end{cases}       Obviously     f  ⋅   δ  ξ    =    f   (  ξ  )    ⋅   δ  ξ         normal-⋅  f   subscript  δ  ξ     normal-⋅    f  ξ    subscript  δ  ξ      f\cdot\delta_{\xi}=f(\xi)\cdot\delta_{\xi}   , thus    δ  ξ     subscript  δ  ξ    \delta_{\xi}   is an eigenfunction of the pointwise function multiplication. That is     T   δ   x  i     x       subscript  T   subscript  δ   subscript  x  i     x    T_{\delta_{x_{i}}}x   is somehow an " eigenmatrix " of     T  f   x       subscript  T  f   x    T_{f}x           T  f   x   ⋅   T   δ   x  i      x   =     f   (   x  i   )    ⋅   T   δ   x  i      x          normal-⋅     subscript  T  f   x    subscript  T   subscript  δ   subscript  x  i      x      normal-⋅    f   subscript  x  i     subscript  T   subscript  δ   subscript  x  i      x     T_{f}x\cdot T_{\delta_{x_{i}}}x=f(x_{i})\cdot T_{\delta_{x_{i}}}x   . However, all columns of     T   δ   x  i     x       subscript  T   subscript  δ   subscript  x  i     x    T_{\delta_{x_{i}}}x   are multiples of each other, the matrix rank of     T   δ   x  i     x       subscript  T   subscript  δ   subscript  x  i     x    T_{\delta_{x_{i}}}x   is 1. So you can compose the matrix of all eigenvectors from the   i   i   i   -th column of each     T   δ   x  i     x       subscript  T   subscript  δ   subscript  x  i     x    T_{\delta_{x_{i}}}x   . Denote the matrix of eigenvectors with    U  x      U  x    Ux   . Example : U(x_0,x_1,x_2,x_3) = \begin{pmatrix}    1 & \frac{1}{(x_1-x_0)} & \frac{1}{(x_2-x_0)\cdot(x_2-x_1)} & \frac{1}{(x_3-x_0)\cdot(x_3-x_1)\cdot(x_3-x_2)} \\ 0 & 1 & \frac{1}{(x_2-x_1)} & \frac{1}{(x_3-x_1)\cdot(x_3-x_2)} \\ 0 & 0 & 1 & \frac{1}{(x_3-x_2)} \\ 0 & 0 & 0 & 1 \end{pmatrix}   The diagonalization of     T  f   x       subscript  T  f   x    T_{f}x   can be written as       U  x   ⋅   diag   (   f   (   x  0   )    ,  …  ,   f   (   x  n   )    )     =      T  f   x   ⋅  U   x        normal-⋅    U  x    diag    f   subscript  x  0    normal-…    f   subscript  x  n         normal-⋅     subscript  T  f   x   U   x     Ux\cdot\operatorname{diag}(f(x_{0}),\dots,f(x_{n}))=T_{f}x\cdot Ux   .    Alternative definitions  Expanded form         f   [   x  0   ]        =   f   (   x  0   )          f   [   x  0   ,   x  1   ]        =      f   (   x  0   )     (    x  0   -   x  1    )     +     f   (   x  1   )     (    x  1   -   x  0    )            f   [   x  0   ,   x  1   ,   x  2   ]        =      f   (   x  0   )      (    x  0   -   x  1    )   ⋅   (    x  0   -   x  2    )      +     f   (   x  1   )      (    x  1   -   x  0    )   ⋅   (    x  1   -   x  2    )      +     f   (   x  2   )      (    x  2   -   x  0    )   ⋅   (    x  2   -   x  1    )             f   [   x  0   ,   x  1   ,   x  2   ,   x  3   ]        =      f   (   x  0   )      (    x  0   -   x  1    )   ⋅   (    x  0   -   x  2    )   ⋅   (    x  0   -   x  3    )      +     f   (   x  1   )      (    x  1   -   x  0    )   ⋅   (    x  1   -   x  2    )   ⋅   (    x  1   -   x  3    )      +      f   (   x  2   )      (    x  2   -   x  0    )   ⋅   (    x  2   -   x  1    )   ⋅   (    x  2   -   x  3    )      +              f   (   x  3   )      (    x  3   -   x  0    )   ⋅   (    x  3   -   x  1    )   ⋅   (    x  3   -   x  2    )            f   [   x  0   ,  …  ,   x  n   ]        =     ∑   j  =  0   n       f   (   x  j   )      ∏   k  ∈    {  0  ,  …  ,  n  }   ∖   {  j  }       (    x  j   -   x  k    )                f   delimited-[]   subscript  x  0       absent    f   subscript  x  0         f    subscript  x  0    subscript  x  1       absent        f   subscript  x  0       subscript  x  0    subscript  x  1         f   subscript  x  1       subscript  x  1    subscript  x  0           f    subscript  x  0    subscript  x  1    subscript  x  2       absent        f   subscript  x  0     normal-⋅     subscript  x  0    subscript  x  1       subscript  x  0    subscript  x  2          f   subscript  x  1     normal-⋅     subscript  x  1    subscript  x  0       subscript  x  1    subscript  x  2          f   subscript  x  2     normal-⋅     subscript  x  2    subscript  x  0       subscript  x  2    subscript  x  1            f    subscript  x  0    subscript  x  1    subscript  x  2    subscript  x  3       absent        f   subscript  x  0     normal-⋅     subscript  x  0    subscript  x  1       subscript  x  0    subscript  x  2       subscript  x  0    subscript  x  3          f   subscript  x  1     normal-⋅     subscript  x  1    subscript  x  0       subscript  x  1    subscript  x  2       subscript  x  1    subscript  x  3       limit-from      f   subscript  x  2     normal-⋅     subscript  x  2    subscript  x  0       subscript  x  2    subscript  x  1       subscript  x  2    subscript  x  3             missing-subexpression       f   subscript  x  3     normal-⋅     subscript  x  3    subscript  x  0       subscript  x  3    subscript  x  1       subscript  x  3    subscript  x  2          f    subscript  x  0   normal-…   subscript  x  n       absent    superscript   subscript     j  0    n       f   subscript  x  j      subscript  product    k     0  normal-…  n    j         subscript  x  j    subscript  x  k           \begin{aligned}\displaystyle f[x_{0}]&\displaystyle=f(x_{0})\\
 \displaystyle f[x_{0},x_{1}]&\displaystyle=\frac{f(x_{0})}{(x_{0}-x_{1})}+%
 \frac{f(x_{1})}{(x_{1}-x_{0})}\\
 \displaystyle f[x_{0},x_{1},x_{2}]&\displaystyle=\frac{f(x_{0})}{(x_{0}-x_{1})%
 \cdot(x_{0}-x_{2})}+\frac{f(x_{1})}{(x_{1}-x_{0})\cdot(x_{1}-x_{2})}+\frac{f(x%
 _{2})}{(x_{2}-x_{0})\cdot(x_{2}-x_{1})}\\
 \displaystyle f[x_{0},x_{1},x_{2},x_{3}]&\displaystyle=\frac{f(x_{0})}{(x_{0}-%
 x_{1})\cdot(x_{0}-x_{2})\cdot(x_{0}-x_{3})}+\frac{f(x_{1})}{(x_{1}-x_{0})\cdot%
 (x_{1}-x_{2})\cdot(x_{1}-x_{3})}+\frac{f(x_{2})}{(x_{2}-x_{0})\cdot(x_{2}-x_{1%
 })\cdot(x_{2}-x_{3})}+\\
 &\displaystyle\quad\quad\frac{f(x_{3})}{(x_{3}-x_{0})\cdot(x_{3}-x_{1})\cdot(x%
 _{3}-x_{2})}\\
 \displaystyle f[x_{0},\dots,x_{n}]&\displaystyle=\sum_{j=0}^{n}\frac{f(x_{j})}%
 {\prod_{k\in\{0,\dots,n\}\setminus\{j\}}(x_{j}-x_{k})}\end{aligned}     With the help of a polynomial function    q   q   q   with     q   (  ξ  )    =    (   ξ  -   x  0    )   ⋯   (   ξ  -   x  n    )          q  ξ       ξ   subscript  x  0    normal-⋯    ξ   subscript  x  n       q(\xi)=(\xi-x_{0})\cdots(\xi-x_{n})   this can be written as        f   [   x  0   ,  …  ,   x  n   ]    =    ∑   j  =  0   n     f   (   x  j   )      q  ′    (   x  j   )       .        f    subscript  x  0   normal-…   subscript  x  n       superscript   subscript     j  0    n       f   subscript  x  j       superscript  q  normal-′    subscript  x  j        f[x_{0},\dots,x_{n}]=\sum_{j=0}^{n}\frac{f(x_{j})}{q^{\prime}(x_{j})}.     Alternatively, we can allow counting backwards from the start of the sequence by defining     x  k   =   x   k  +  n  +  1    =   x   k  -   (   n  +  1   )            subscript  x  k    subscript  x    k  n  1          subscript  x    k    n  1        x_{k}=x_{k+n+1}=x_{k-(n+1)}   whenever    k  <  0      k  0    k<0   or    n  <  k      n  k    n   . This definition allows    x   -  1      subscript  x    1     x_{-1}   to be interpreted as    x  n     subscript  x  n    x_{n}   ,    x   -  2      subscript  x    2     x_{-2}   to be interpreted as    x   n  -  1      subscript  x    n  1     x_{n-1}   ,    x   -  n      subscript  x    n     x_{-n}   to be interpreted as    x  0     subscript  x  0    x_{0}   , etc. The expanded form of the divided difference thus becomes       f   [   x  0   ,  …  ,   x  n   ]    =    ∑   j  =  0   n     f   (   x  j   )       ∏   k  =   j  -  n     j  -  1      (    x  j   -   x  k    )      =    ∑   j  =  0   n     f   (   x  j   )       ∏   k  =   j  +  1     j  +  n      (    x  j   -   x  k    )              f    subscript  x  0   normal-…   subscript  x  n       superscript   subscript     j  0    n       f   subscript  x  j      superscript   subscript  product    k    j  n       j  1       subscript  x  j    subscript  x  k              superscript   subscript     j  0    n       f   subscript  x  j      superscript   subscript  product    k    j  1       j  n       subscript  x  j    subscript  x  k          f[x_{0},\dots,x_{n}]=\sum_{j=0}^{n}\frac{f(x_{j})}{\prod\limits_{k=j-n}^{j-1}(%
 x_{j}-x_{k})}=\sum_{j=0}^{n}\frac{f(x_{j})}{\prod\limits_{k=j+1}^{j+n}(x_{j}-x%
 _{k})}     Yet another characterization utilizes limits:       f   [   x  0   ,  …  ,   x  n   ]    =    ∑   j  =  0   n     lim   x  →   x  j      [    f   (   x  j   )    (   x  -   x  j    )       ∏   k  =  0   n     (   x  -   x  k    )     ]           f    subscript  x  0   normal-…   subscript  x  n       superscript   subscript     j  0    n     subscript    normal-→  x   subscript  x  j      delimited-[]      f   subscript  x  j     x   subscript  x  j       superscript   subscript  product    k  0    n     x   subscript  x  k           f[x_{0},\dots,x_{n}]=\sum_{j=0}^{n}\lim_{x\rightarrow x_{j}}\left[\frac{f(x_{j%
 })(x-x_{j})}{\prod\limits_{k=0}^{n}(x-x_{k})}\right]     Partial fractions  You can represent partial fractions using the expanded form of divided differences. (This does not simplify computation, but is interesting in itself.) If   p   p   p   and   q   q   q   are polynomial functions , where      deg   p   <    deg   q         deg  p     deg  q     \mathrm{deg}\ p<\mathrm{deg}\ q   and   q   q   q   is given in terms of linear factors by     q   (  ξ  )    =    (   ξ  -   x  1    )   ⋅  …  ⋅   (   ξ  -   x  n    )          q  ξ    normal-⋅    ξ   subscript  x  1    normal-…    ξ   subscript  x  n       q(\xi)=(\xi-x_{1})\cdot\dots\cdot(\xi-x_{n})   , then it follows from partial fraction decomposition that        p   (  ξ  )     q   (  ξ  )     =   (  t  →    p   (  t  )     ξ  -  t    )    [   x  1   ,  …  ,   x  n   ]   .     fragments      p  ξ     q  ξ      fragments  normal-(  t  normal-→      p  t     ξ  t    normal-)    fragments  normal-[   subscript  x  1   normal-,  normal-…  normal-,   subscript  x  n   normal-]   normal-.    \frac{p(\xi)}{q(\xi)}=\left(t\to\frac{p(t)}{\xi-t}\right)[x_{1},\dots,x_{n}].   If limits of the divided differences are accepted, then this connection does also hold, if some of the    x  j     subscript  x  j    x_{j}   coincide.  If   f   f   f   is a polynomial function with arbitrary degree and it is decomposed by     f   (  x  )    =    p   (  x  )    +     q   (  x  )    ⋅  d    (  x  )           f  x       p  x      normal-⋅    q  x   d   x      f(x)=p(x)+q(x)\cdot d(x)   using polynomial division of   f   f   f   by   q   q   q   , then        p   (  ξ  )     q   (  ξ  )     =   (  t  →    f   (  t  )     ξ  -  t    )    [   x  1   ,  …  ,   x  n   ]   .     fragments      p  ξ     q  ξ      fragments  normal-(  t  normal-→      f  t     ξ  t    normal-)    fragments  normal-[   subscript  x  1   normal-,  normal-…  normal-,   subscript  x  n   normal-]   normal-.    \frac{p(\xi)}{q(\xi)}=\left(t\to\frac{f(t)}{\xi-t}\right)[x_{1},\dots,x_{n}].     Peano form  The divided differences can be expressed as       f   [   x  0   ,  …  ,   x  n   ]    =    1   n  !      ∫   x  0    x  n      f   (  n  )     (  t  )    B   n  -  1     (  t  )   d  t           f    subscript  x  0   normal-…   subscript  x  n         1    n      superscript   subscript    subscript  x  0     subscript  x  n       superscript  f  n   t   subscript  B    n  1    t  d  t       f[x_{0},\ldots,x_{n}]=\frac{1}{n!}\int_{x_{0}}^{x_{n}}f^{(n)}(t)B_{n-1}(t)\,dt     where    B   n  -  1      subscript  B    n  1     B_{n-1}   is a B-spline of degree    n  -  1      n  1    n-1   for the data points     x  0   ,  …  ,   x  n       subscript  x  0   normal-…   subscript  x  n     x_{0},\dots,x_{n}   and    f   (  n  )      superscript  f  n    f^{(n)}   is the   n   n   n   -th derivative of the function   f   f   f   .  This is called the Peano form of the divided differences and    B   n  -  1      subscript  B    n  1     B_{n-1}   is called the Peano kernel for the divided differences, both named after Giuseppe Peano .  Taylor form  First order  If nodes are cumulated, then the numerical computation of the divided differences is inaccurate, because you divide almost two zeros, each of which with a high relative error due to differences of similar values . However we know, that difference quotients approximate the derivative and vice versa:         f   (  y  )    -   f   (  x  )      y  -  x    ≈    f  ′    (  x  )              f  y     f  x      y  x       superscript  f  normal-′   x     \frac{f(y)-f(x)}{y-x}\approx f^{\prime}(x)   for    x  ≈  y      x  y    x\approx y     This approximation can be turned into an identity whenever Taylor's theorem applies.       f   (  y  )    =    f   (  x  )    +     f  ′    (  x  )    ⋅   (   y  -  x   )    +     f  ′′    (  x  )    ⋅     (   y  -  x   )   2    2  !     +     f  ′′′    (  x  )    ⋅     (   y  -  x   )   3    3  !     +  …         f  y       f  x    normal-⋅     superscript  f  normal-′   x     y  x     normal-⋅     superscript  f  ′′   x      superscript    y  x   2     2      normal-⋅     superscript  f  ′′′   x      superscript    y  x   3     3     normal-…     f(y)=f(x)+f^{\prime}(x)\cdot(y-x)+f^{\prime\prime}(x)\cdot\frac{(y-x)^{2}}{2!}%
 +f^{\prime\prime\prime}(x)\cdot\frac{(y-x)^{3}}{3!}+\dots          ⇒     f   (  y  )    -   f   (  x  )      y  -  x    =     f  ′    (  x  )    +     f  ′′    (  x  )    ⋅    y  -  x    2  !     +     f  ′′′    (  x  )    ⋅     (   y  -  x   )   2    3  !     +  …        normal-⇒  absent        f  y     f  x      y  x              superscript  f  normal-′   x    normal-⋅     superscript  f  ′′   x       y  x     2      normal-⋅     superscript  f  ′′′   x      superscript    y  x   2     3     normal-…      \Rightarrow\frac{f(y)-f(x)}{y-x}=f^{\prime}(x)+f^{\prime\prime}(x)\cdot\frac{y%
 -x}{2!}+f^{\prime\prime\prime}(x)\cdot\frac{(y-x)^{2}}{3!}+\dots     You can eliminate the odd powers of    y  -  x      y  x    y-x   by expanding the Taylor series at the center between   x   x   x   and   y   y   y   :       x  =   m  -  h    ,   y  =   m  +  h       formulae-sequence    x    m  h      y    m  h      x=m-h,y=m+h   , that is     m  =    x  +  y   2    ,   h  =    y  -  x   2       formulae-sequence    m      x  y   2      h      y  x   2      m=\frac{x+y}{2},h=\frac{y-x}{2}          f   (   m  +  h   )    =    f   (  m  )    +     f  ′    (  m  )    ⋅  h   +     f  ′′    (  m  )    ⋅    h  2    2  !     +     f  ′′′    (  m  )    ⋅    h  3    3  !     +  …         f    m  h        f  m    normal-⋅     superscript  f  normal-′   m   h    normal-⋅     superscript  f  ′′   m      superscript  h  2     2      normal-⋅     superscript  f  ′′′   m      superscript  h  3     3     normal-…     f(m+h)=f(m)+f^{\prime}(m)\cdot h+f^{\prime\prime}(m)\cdot\frac{h^{2}}{2!}+f^{%
 \prime\prime\prime}(m)\cdot\frac{h^{3}}{3!}+\dots          f   (   m  -  h   )    =       f   (  m  )    -     f  ′    (  m  )    ⋅  h    +     f  ′′    (  m  )    ⋅    h  2    2  !      -     f  ′′′    (  m  )    ⋅    h  3    3  !      +  …         f    m  h              f  m    normal-⋅     superscript  f  normal-′   m   h     normal-⋅     superscript  f  ′′   m      superscript  h  2     2       normal-⋅     superscript  f  ′′′   m      superscript  h  3     3      normal-…     f(m-h)=f(m)-f^{\prime}(m)\cdot h+f^{\prime\prime}(m)\cdot\frac{h^{2}}{2!}-f^{%
 \prime\prime\prime}(m)\cdot\frac{h^{3}}{3!}+\dots            f   (  y  )    -   f   (  x  )      y  -  x    =     f   (   m  +  h   )    -   f   (   m  -  h   )      2  ⋅  h    =     f  ′    (  m  )    +     f  ′′′    (  m  )    ⋅    h  2    3  !     +  …               f  y     f  x      y  x          f    m  h      f    m  h      normal-⋅  2  h              superscript  f  normal-′   m    normal-⋅     superscript  f  ′′′   m      superscript  h  2     3     normal-…      \frac{f(y)-f(x)}{y-x}=\frac{f(m+h)-f(m-h)}{2\cdot h}=f^{\prime}(m)+f^{\prime%
 \prime\prime}(m)\cdot\frac{h^{2}}{3!}+\dots     Higher order  The Taylor series or any other representation with function series can in principle be used to approximate divided differences. Taylor series are infinite sums of power functions . The mapping from a function   f   f   f   to a divided difference    f   [   x  0   ,  …  ,   x  n   ]       f    subscript  x  0   normal-…   subscript  x  n      f[x_{0},\dots,x_{n}]   is a linear functional . We can as well apply this functional to the function summands.  Express power notation with an ordinary function       p  n    (  x  )    =   x  n    .         subscript  p  n   x    superscript  x  n     p_{n}(x)=x^{n}.     Regular Taylor series is a weighted sum of power functions    f  =     f   (  0  )    ⋅   p  0    +     f  ′    (  0  )    ⋅   p  1    +      f  ′′    (  0  )     2  !    ⋅   p  2    +      f  ′′′    (  0  )     3  !    ⋅   p  3    +  …       f     normal-⋅    f  0    subscript  p  0     normal-⋅     superscript  f  normal-′   0    subscript  p  1     normal-⋅       superscript  f  ′′   0     2     subscript  p  2     normal-⋅       superscript  f  ′′′   0     3     subscript  p  3    normal-…     f=f(0)\cdot p_{0}+f^{\prime}(0)\cdot p_{1}+\frac{f^{\prime\prime}(0)}{2!}\cdot
 p%
 _{2}+\frac{f^{\prime\prime\prime}(0)}{3!}\cdot p_{3}+\dots     Taylor series for divided differences     f   [   x  0   ,  …  ,   x  n   ]    =      f   (  0  )    ⋅   p  0     [   x  0   ,  …  ,   x  n   ]    +      f  ′    (  0  )    ⋅   p  1     [   x  0   ,  …  ,   x  n   ]    +       f  ′′    (  0  )     2  !    ⋅   p  2     [   x  0   ,  …  ,   x  n   ]    +       f  ′′′    (  0  )     3  !    ⋅   p  3     [   x  0   ,  …  ,   x  n   ]    +  …         f    subscript  x  0   normal-…   subscript  x  n          normal-⋅    f  0    subscript  p  0      subscript  x  0   normal-…   subscript  x  n        normal-⋅     superscript  f  normal-′   0    subscript  p  1      subscript  x  0   normal-…   subscript  x  n        normal-⋅       superscript  f  ′′   0     2     subscript  p  2      subscript  x  0   normal-…   subscript  x  n        normal-⋅       superscript  f  ′′′   0     3     subscript  p  3      subscript  x  0   normal-…   subscript  x  n     normal-…     f[x_{0},\dots,x_{n}]=f(0)\cdot p_{0}[x_{0},\dots,x_{n}]+f^{\prime}(0)\cdot p_{%
 1}[x_{0},\dots,x_{n}]+\frac{f^{\prime\prime}(0)}{2!}\cdot p_{2}[x_{0},\dots,x_%
 {n}]+\frac{f^{\prime\prime\prime}(0)}{3!}\cdot p_{3}[x_{0},\dots,x_{n}]+\dots     We know that the first   n   n   n   terms vanish, because we have a higher difference order than polynomial order, and in the following term the divided difference is one:     f   f   f   which is also a simple approximation of the divided difference, according to the mean value theorem for divided differences .  If we would have to compute the divided differences for the power functions in the usual way, we would encounter the same numerical problems that we had when computing the divided difference of      t  n   =     (   1  -    x  0   ⋅  t    )   …   ⋅   (   1  -    x  n   ⋅  t    )   ⋅   (     p  0    [   x  0   ,  …  ,   x  n   ]    +     p  1    [   x  0   ,  …  ,   x  n   ]    ⋅  t   +     p  2    [   x  0   ,  …  ,   x  n   ]    ⋅   t  2    +  …   )     .       superscript  t  n    normal-⋅      1   normal-⋅   subscript  x  0   t    normal-…     1   normal-⋅   subscript  x  n   t         subscript  p  0     subscript  x  0   normal-…   subscript  x  n      normal-⋅     subscript  p  1     subscript  x  0   normal-…   subscript  x  n     t    normal-⋅     subscript  p  2     subscript  x  0   normal-…   subscript  x  n      superscript  t  2    normal-…      t^{n}=(1-x_{0}\cdot t)\dots\cdot(1-x_{n}\cdot t)\cdot(p_{0}[x_{0},\dots,x_{n}]%
 +p_{1}[x_{0},\dots,x_{n}]\cdot t+p_{2}[x_{0},\dots,x_{n}]\cdot t^{2}+\dots).   . The nice thing is, that there is a simpler way. It holds      p  n     subscript  p  n    p_{n}   Consequently we can compute the divided differences of     p  n    [  h  ]        subscript  p  n    delimited-[]  h     p_{n}[h]   by a division of formal power series . See how this reduces to the successive computation of powers when we compute   n   n   n   for several   J   J   J   .  If you need to compute a whole divided difference scheme with respect to a Taylor series, see the section about divided differences of power series .  Polynomials and power series  Divided differences of polynomials are particularly interesting, because they can benefit from the Leibniz rule. The matrix    J  =   (      x  0     1    0    0    ⋯    0      0     x  1     1    0    ⋯    0      0    0     x  2     1       0      ⋮    ⋮       ⋱    ⋱         0    0    0    0        x  n      )       J     subscript  x  0   1  0  0  normal-⋯  0    0   subscript  x  1   1  0  normal-⋯  0    0  0   subscript  x  2   1  absent  0    normal-⋮  normal-⋮  absent  normal-⋱  normal-⋱  absent    0  0  0  0  absent   subscript  x  n       J=\begin{pmatrix}x_{0}&1&0&0&\cdots&0\\
 0&x_{1}&1&0&\cdots&0\\
 0&0&x_{2}&1&&0\\
 \vdots&\vdots&&\ddots&\ddots&\\
 0&0&0&0&&x_{n}\end{pmatrix}   with       x  0   ,  …  ,   x  n       subscript  x  0   normal-…   subscript  x  n     x_{0},\dots,x_{n}     contains the divided difference scheme for the identity function with respect to the nodes    J  n     superscript  J  n    J^{n}   , thus   n   n   n   contains the divided differences for the power function with exponent     φ   (  p  )       φ  p    \varphi(p)   . Consequently you can obtain the divided differences for a polynomial function    p   p   p   with respect to the polynomial    p   p   p   by applying     φ  M    (  p  )        subscript  φ  normal-M   p    \varphi_{\mathrm{M}}(p)   (more precisely: its corresponding matrix polynomial function   J   J   J   ) to the matrix     φ   (  p  )    (  ξ  )    =    a  0   +    a  1   ⋅  ξ   +  …  +    a  n   ⋅   ξ  n           φ  p  ξ      subscript  a  0    normal-⋅   subscript  a  1   ξ   normal-…   normal-⋅   subscript  a  n    superscript  ξ  n       \varphi(p)(\xi)=a_{0}+a_{1}\cdot\xi+\dots+a_{n}\cdot\xi^{n}   .        φ  M    (  p  )    (  J  )    =    a  0   +    a  1   ⋅  J   +  …  +    a  n   ⋅   J  n            subscript  φ  normal-M   p  J      subscript  a  0    normal-⋅   subscript  a  1   J   normal-…   normal-⋅   subscript  a  n    superscript  J  n       \varphi_{\mathrm{M}}(p)(J)=a_{0}+a_{1}\cdot J+\dots+a_{n}\cdot J^{n}        p   p   p       = \begin{pmatrix}     \varphi(p)[x_0] & \varphi(p)[x_0,x_1] & \varphi(p)[x_0,x_1,x_2] & \ldots & \varphi(p)[x_0,\dots,x_n] \\ 0 & \varphi(p)[x_1] & \varphi(p)[x_1,x_2] & \ldots & \varphi(p)[x_1,\dots,x_n] \\ \vdots & \ddots & \ddots & \ddots & \vdots \\ 0 & \ldots & 0 & 0 & \varphi(p)[x_n] \end{pmatrix}  This is known as Opitz' formula . 1  2  Now consider increasing the degree of   f   f   f   to infinity, i.e. turn the Taylor polynomial to a Taylor series . Let   J   J   J   be a function which corresponds to a power series . You can compute a divided difference scheme by computing the according matrix series applied to     x  0   ,  …  ,   x  n       subscript  x  0   normal-…   subscript  x  n     x_{0},\dots,x_{n}   . If the nodes   J   J   J   are all equal, then     (   x  0   ,   y  0   )   ,  …  ,   (   x   n  -  1    ,   y   n  -  1    )        subscript  x  0    subscript  y  0    normal-…    subscript  x    n  1     subscript  y    n  1       (x_{0},y_{0}),\ldots,(x_{n-1},y_{n-1})   is a Jordan block and computation boils down to generalizing a scalar function to a matrix function using Jordan decomposition .  Forward differences  When the data points are equidistantly distributed we get the special case called forward differences . They are easier to calculate than the more general divided differences.  Note that the "divided portion" from forward divided difference must still be computed, to recover the forward divided difference from the forward difference .  Definition  Given n data points        x  ν   =    x  0   +   ν  h  ,  h    >   0  ,  ν   =  0   ,   …  ,   n  -  1       formulae-sequence       subscript  x  ν      subscript  x  0     ν  h  ,  h           0  ,  ν        0     normal-…    n  1      x_{\nu}=x_{0}+\nu h\mbox{ , }h>0\mbox{ , }\nu=0,\ldots,n-1     with        △   (  0  )     y  i    :=   y  i      assign     superscript  normal-△  0    subscript  y  i     subscript  y  i     \triangle^{(0)}y_{i}:=y_{i}     the divided differences can be calculated via forward differences defined as        △   (  k  )     y  i    :=     △   (   k  -  1   )     y   i  +  1     -    △   (   k  -  1   )     y  i   ,  k    ≥  1.       assign     superscript  normal-△  k    subscript  y  i         superscript  normal-△    k  1     subscript  y    i  1        superscript  normal-△    k  1     subscript  y  i   ,  k         1.     \triangle^{(k)}y_{i}:=\triangle^{(k-1)}y_{i+1}-\triangle^{(k-1)}y_{i}\mbox{ , %
 }k\geq 1.            y  0                    △   y  0               y  1          △  2    y  0               △   y  1           △  3    y  0         y  2          △  2    y  1               △   y  2               y  3                   subscript  y  0   absent  absent  absent    absent    normal-△   subscript  y  0    absent  absent     subscript  y  1   absent     superscript  normal-△  2    subscript  y  0    absent    absent    normal-△   subscript  y  1    absent     superscript  normal-△  3    subscript  y  0       subscript  y  2   absent     superscript  normal-△  2    subscript  y  1    absent    absent    normal-△   subscript  y  2    absent  absent     subscript  y  3   absent  absent  absent     \begin{matrix}y_{0}&&&\\
 &\triangle y_{0}&&\\
 y_{1}&&\triangle^{2}y_{0}&\\
 &\triangle y_{1}&&\triangle^{3}y_{0}\\
 y_{2}&&\triangle^{2}y_{1}&\\
 &\triangle y_{2}&&\\
 y_{3}&&&\\
 \end{matrix}     Example  $$\begin{matrix}
 y_0 &               &                   &                  \\
     & \triangle y_0 &                   &                  \\
 y_1 &               & \triangle^{2} y_0 &                  \\
     & \triangle y_1 &                   & \triangle^{3} y_0\\
 y_2 &               & \triangle^{2} y_1 &                  \\
     & \triangle y_2 &                   &                  \\
 y_3 &               &                   &                  \\
 \end{matrix}$$  See also   Neville's algorithm  Polynomial interpolation  Mean value theorem for divided differences  Nörlund–Rice integral  Pascal's triangle   References       External links   An implementation in Haskell .   de:Polynominterpolation#Bestimmung der Koeffizienten: Schema der dividierten Differenzen "  Category:Finite differences     de Boor, Carl , Divided Differences , Surv. Approx. Theory 1 (2005), 46--69, 1 ↩  Opitz, G. Steigungsmatrizen , Z. Angew. Math. Mech. (1964), 44, T52-T54 ↩     