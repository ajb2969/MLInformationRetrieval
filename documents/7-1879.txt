


Corner detection




Corner detection

 
Corner detection is an approach used within computer vision systems to extract certain kinds of features and infer the contents of an image. Corner detection is frequently used in motion detection, image registration, video tracking, image mosaicing, panorama stitching, 3D modelling and object recognition. Corner detection overlaps with the topic of interest point detection.
Formalization
A corner can be defined as the intersection of two edges. A corner can also be defined as a point for which there are two dominant and different edge directions in a local neighbourhood of the point.
An interest point is a point in an image which has a well-defined position and can be robustly detected. This means that an interest point can be a corner but it can also be, for example, an isolated point of local intensity maximum or minimum, line endings, or a point on a curve where the curvature is locally maximal.
In practice, most so-called corner detection methods detect interest points in general, and in fact, the term "corner" and "interest point" are used more or less interchangably through the literature.1 As a consequence, if only corners are to be detected it is necessary to do a local analysis of detected interest points to determine which of these are real corners. Examples of edge detection that can be used with post-processing to detect corners are the Kirsch operator and the Frei-Chen masking set.2
"Corner", "interest point" and "feature" are used interchangeably in literature, confusing the issue. Specifically, there are several blob detectors that can be referred to as "interest point operators", but which are sometimes erroneously referred to as "corner detectors". Moreover, there exists a notion of ridge detection to capture the presence of elongated objects.
Corner detectors are not usually very robust and often require large redundancies introduced to prevent the effect of individual errors from dominating the recognition task.
One determination of the quality of a corner detector is its ability to detect the same corner in multiple similar images, under conditions of different lighting, translation, rotation and other transforms.
A simple approach to corner detection in images is using correlation, but this gets very computationally expensive and suboptimal. An alternative approach used frequently is based on a method proposed by Harris and Stephens (below), which in turn is an improvement of a method by Moravec.
The Moravec corner detection algorithm
This is one of the earliest corner detection algorithms and defines a corner to be a point with low self-similarity.3 The algorithm tests each pixel in the image to see if a corner is present, by considering how similar a patch centered on the pixel is to nearby, largely overlapping patches. The similarity is measured by taking the sum of squared differences (SSD) between the two patches. A lower number indicates more similarity.
If the pixel is in a region of uniform intensity, then the nearby patches will look similar. If the pixel is on an edge, then nearby patches in a direction perpendicular to the edge will look quite different, but nearby patches in a direction parallel to the edge will result only in a small change. If the pixel is on a feature with variation in all directions, then none of the nearby patches will look similar.
The corner strength is defined as the smallest SSD between the patch and its neighbors (horizontal, vertical and on the two diagonals). If this number is locally maximal, then a feature of interest is present.
As pointed out by Moravec, one of the main problems with this operator is that it is not isotropic: if an edge is present that is not in the direction of the neighbours, then the smallest SSD will be large and the edge will be incorrectly chosen as an interest point.
The Harris & Stephens / Plessey / Shi–Tomasi corner detection algorithm
Harris and Stephens4 improved upon Moravec's corner detector by considering the differential of the corner score with respect to direction directly, instead of using shifted patches. (This corner score is often referred to as autocorrelation, since the term is used in the paper in which this detector is described. However, the mathematics in the paper clearly indicate that the sum of squared differences is used.)
Without loss of generality, we will assume a grayscale 2-dimensional image is used. Let this image be given by 
 
 
 
 . Consider taking an image patch over the area 
 
 
 
  and shifting it by 
 
 
 
 . The weighted sum of squared differences (SSD) between these two patches, denoted 
 
 
 
 , is given by:



 
  can be approximated by a Taylor expansion. Let 
 
 
 
  and 
 
 
 
  be the partial derivatives of 
 
 
 
 , such that



This produces the approximation



which can be written in matrix form:



where A is the structure tensor,



This matrix is a Harris matrix, and angle brackets denote averaging (i.e. summation over 
 
 
 
 ). If a circular window (or circularly weighted window, such as a Gaussian) is used, then the response will be isotropic.
A corner (or in general an interest point) is characterized by a large variation of 
 
 
 
  in all directions of the vector 
 
 
 
 . By analyzing the eigenvalues of 
 
 
 
 
 , this characterization can be expressed in the following way
 
 
 
  should have two "large" eigenvalues for an interest point. Based on the magnitudes of the eigenvalues, the following inferences can be made based on this argument:

If 
 
 
 
  and 
 
 
 
  then this pixel 
 
 
 
  has no features of interest.
If 
 
 
 
 
  and 
 
 
 
  has some large positive value, then an edge is found.
If 
 
 
 
  and 
 
 
 
  have large positive values, then a corner is found.

Harris and Stephens note that exact computation of the eigenvalues is computationally expensive, since it requires the computation of a square root, and instead suggest the following function 
 
 
 
 , where 
 
 
 
 
  is a tunable sensitivity parameter:



Therefore, the algorithm does not have to actually compute the eigenvalue decomposition of the matrix 
 
 
 
  and instead it is sufficient to evaluate the determinant and trace of 
 
 
 
  to find corners, or rather interest points in general.
The Shi–Tomasi5 corner detector directly computes 
 
 
 
  because under certain assumptions, the corners are more stable for tracking. Note that this method is also sometimes referred to as the Kanade-Tomasi corner detector.
The value of 
 
 
 
  has to be determined empirically, and in the literature values in the range 0.04–0.15 have been reported as feasible.
One can avoid setting the parameter 
 
 
 
  by using Noble's6 corner measure 
 
 
 
  which amounts to the harmonic mean of the eigenvalues:



 
  being a small positive constant.
The covariance matrix for the corner position is 
 
 
 
 , i.e.



The Förstner corner detector
 In some cases, one may wish to compute the location of a corner with subpixel accuracy. To achieve an approximate solution, the Förstner7 algorithm solves for the point closest to all the tangent lines of the corner in a given window and is a least-square solution. The algorithm relies on the fact that for an ideal corner, tangent lines cross at a single point.
The equation of a tangent line 
 
 
 
  at pixel 
 
 
 
  is given by:



where 
 
 
 
  is the gradient vector of the image 
 
 
 
  at 
 
 
 
 .
The point 
 
 
 
  closest to all the tangent lines in the window 
 
 
 
 
  is:



The distance from 
 
 
 
  to the tangent lines 
 
 
 
  is weighted by the gradient magnitude, thus giving more importance to tangents passing through pixels with strong gradients.
Solving for 
 
 
 
 :



 
  are defined as:



Minimizing this equation can be done by differentiating with respect to 
 
 
 
  and setting it equal to 0:



Note that 
 
 
 
  is the structure tensor. For the equation to have a solution, 
 
 
 
  must be invertible, which implies that 
 
 
 
  must be full rank (rank 2). Thus, the solution



only exists where an actual corner exists in the window 
 
 
 
 .
A methodology for performing automatic scale selection for this corner localization method has been presented by Lindeberg89 by minimizing the normalized residual



over scales. Thereby, the method has the ability to automatically adapt the scale levels for computing the image gradients to the noise level in the image data, by choosing coarser scale levels for noisy image data and finer scale levels for near ideal corner-like structures.
Notes:



 
  can be viewed as a residual in the least-square solution computation: if 
 
 
 
 , then there was no error.


this algorithm can be modified to compute centers of circular features by changing tangent lines to normal lines.

The multi-scale Harris operator
The computation of the second moment matrix (sometimes also referred to as the structure tensor) 
 
 
 
  in the Harris operator, requires the computation of image derivatives

 
  in the image domain as well as the summation of non-linear combinations of these derivatives over local neighbourhoods. Since the computation of derivatives usually involves a stage of scale-space smoothing, an operational definition of the Harris operator requires two scale parameters: (i) a local scale for smoothing prior to the computation of image derivatives, and (ii) an integration scale for accumulating the non-linear operations on derivative operators into an integrated image descriptor.
With 
 
 
 
  denoting the original image intensity, let 
 
 
 
  denote the scale space representation of 
 
 
 
  obtained by convolution with a Gaussian kernel


 
  with local scale parameter 
 
 
 
 :


 
  and let 
 
 
 
  and 
 
 
 
  denote the partial derivatives of 
 
 
 
 . Moreover, introduce a Gaussian window function 
 
 
 
  with integration scale parameter 
 
 
 
 . Then, the multi-scale second-moment matrix 1011 can be defined as


 
  Then, we can compute eigenvalues of 
 
 
 
  in a similar way as the eigenvalues of 
 
 
 
  and define the multi-scale Harris corner measure as


 
 . Concerning the choice of the local scale parameter 
 
 
 
  and the integration scale parameter 
 
 
 
 , these scale parameters are usually coupled by a relative integration scale parameter 
 
 
 
  such that 
 
 
 
 , where 
 
 
 
  is usually chosen in the interval 
 
 
 
 . Thus, we can compute the multi-scale Harris corner measure 
 
 
 
  at any scale 
 
 
 
  in scale-space to obtain a multi-scale corner detector, which responds to corner structures of varying sizes in the image domain.
In practice, this multi-scale corner detector is often complemented by a scale selection step, where the scale-normalized Laplacian operator1213


 
  is computed at every scale in scale-space and scale adapted corner points with automatic scale selection (the "Harris-Laplace operator") are computed from the points that are simultaneously:14

spatial maxima of the multi-scale corner measure 
 
 






local maxima or minima over scales of the scale-normalized Laplacian operator15

 
 :




The level curve curvature approach
An earlier approach to corner detection is to detect points where the curvature of level curves and the gradient magnitude are simultaneously high.1617 A differential way to detect such points is by computing the rescaled level curve curvature (the product of the level curve curvature and the gradient magnitude raised to the power of three)


 
  and to detect positive maxima and negative minima of this differential expression at some scale 
 
 
 
  in the scale space representation

 
  of the original image.1819 A main problem when computing the rescaled level curve curvature entity at a single scale however, is that it may be sensitive to noise and to the choice of the scale level. A better method is to compute the 

 
 -normalized rescaled level curve curvature


 
  with 
 
 
 
  and to detect signed scale-space extrema of this expression, that are points and scales that are positive maxima and negative minima with respect to both space and scale


 
  in combination with a complementary localization step to handle the increase in localization error at coarser scales.202122 In this way, larger scale values will be associated with rounded corners of large spatial extent while smaller scale values will be associated with sharp corners with small spatial extent. This approach is the first corner detector with automatic scale selection (prior to the "Harris-Laplace operator" above) and has been used for tracking corners under large scale variations in the image domain23 and for matching corner responses to edges to compute structural image features for geon-based object recognition.24
LoG, DoG, and DoH feature detection
LoG2526 is an acronym standing for Laplacian of Gaussian, DoG27 is an acronym standing for difference of Gaussians (DoG is an approximation of LoG), and DoH is an acronym standing for determinant of the Hessian.28
These detectors are more completely described in blob detection, however the LoG and DoG blobs do not necessarily make highly selective features, since these operators may also respond to edges. To improve the corner detection ability of the DoG detector, the feature detector used in the SIFT29 system uses an additional post-processing stage, where the eigenvalues of the Hessian of the image at the detection scale are examined in a similar way as in the Harris operator. If the ratio of the eigenvalues is too high, then the local image is regarded as too edge-like, so the feature is rejected. The DoH operator on the other hand only responds when there are significant grey-level variations in two directions.3031
The scale selection properties of these and other scale-space interest point detectors are analyzed in detail in (Lindeberg 2013).32
Affine-adapted interest point operators
The interest points obtained from the multi-scale Harris operator with automatic scale selection are invariant to translations, rotations and uniform rescalings in the spatial domain. The images that constitute the input to a computer vision system are, however, also subject to perspective distortions. To obtain an interest point operator that is more robust to perspective transformations, a natural approach is to devise a feature detector that is invariant to affine transformations. In practice, affine invariant interest points can be obtained by applying affine shape adaptation where the shape of the smoothing kernel is iteratively warped to match the local image structure around the interest point or equivalently a local image patch is iteratively warped while the shape of the smoothing kernel remains rotationally symmetric.333435 Hence, besides the commonly used multi-scale Harris operator, affine shape adaptation can be applied to other corner detectors as listed in this article as well as to differential blob detectors such as the Laplacian/difference of Gaussian operator, the determinant of the Hessian36 and the Hessian–Laplace operator.
The Wang and Brady corner detection algorithm
The Wang and Brady37 detector considers the image to be a surface, and looks for places where there is large curvature along an image edge. In other words, the algorithm looks for places where the edge changes direction rapidly. The corner score, 
 
 
 
 , is given by:



where 
 
 
 
  determines how edge-phobic the detector is. The authors also note that smoothing (Gaussian is suggested) is required to reduce noise. In this case, the first term of 
 
 
 
  becomes the Laplacian (single-scale) blob detector.
Smoothing also causes displacement of corners, so the authors derive an expression for the displacement of a 90 degree corner, and apply this as a correction factor to the detected corners.
The SUSAN corner detector
SUSAN38 is an acronym standing for smallest univalue segment assimilating nucleus. This method is the subject of a 1994 UK patent which is no longer in force. {{ cite patent
| country = GB
| number = 2272285
| status = patent
| title = Determining the position of edges and corners in images
| pubdate = 1994-05-11
| gdate = 1994-05-11
| fdate = 1993-06-07
| inventor = list of inventors (free format)
| invent1 = Smith, Stephen Mark
| assign1 = Secr Defence
| class=G06T5/00
}}
For feature detection, SUSAN places a circular mask over the pixel to be tested (the nucleus). The region of the mask is 
 
 
 
 , and a pixel in this mask is represented by 
 
 
 
 . The nucleus is at 
 
 
 
 . Every pixel is compared to the nucleus using the comparison function:



where 
 
 
 
  determines the radius, 
 
 
 
  is the brightness of the pixel and the power of the exponent has been determined empirically. This function has the appearance of a smoothed top-hat or rectangular function. The area of the SUSAN is given by:



If 
 
 
 
  is the rectangular function, then 
 
 
 
  is the number of pixels in the mask which are within 
 
 
 
  of the nucleus. The response of the SUSAN operator is given by:



where 
 
 
 
  is named the `geometric threshold'. In other words the SUSAN operator only has a positive score if the area is small enough. The smallest SUSAN locally can be found using non-maximal suppression, and this is the complete SUSAN operator.
The value 
 
 
 
  determines how similar points have to be to the nucleus before they are considered to be part of the univalue segment. The value of 
 
 
 
  determines the minimum size of the univalue segment. If 
 
 
 
  is large enough, then this becomes an edge detector.
For corner detection, two further steps are used. Firstly, the centroid of the SUSAN is found. A proper corner will have the centroid far from the nucleus. The second step insists that all points on the line from the nucleus through the centroid out to the edge of the mask are in the SUSAN.
The Trajkovic and Hedley corner detector
In a manner similar to SUSAN, this detector39 directly tests whether a patch under a pixel is self-similar by examining nearby pixels. 
 
 
 
  is the pixel to be considered, and 
 
 
 
  is point on a circle 
 
 
 
  centered around 
 
 
 
 . The point 
 
 
 
  is the point opposite to 
 
 
 
  along the diameter.
The response function is defined as:



This will be large when there is no direction in which the centre pixel is similar to two nearby pixels along a diameter. 
 
 
 
  is a discretised circle (a Bresenham circle), so interpolation is used for intermediate diameters to give a more isotropic response. Since any computation gives an upper bound on the 
 
 
 
 , the horizontal and vertical directions are checked first to see if it is worth proceeding with the complete computation of 
 
 
 
 .
AST-based feature detectors
AST is an acronym standing for accelerated segment test. This test is a relaxed version of the SUSAN corner criterion. Instead of evaluating the circular disc only the pixels in a Bresenham circle of radius 
 
 
 
  around the candidate point are considered. If 
 
 
 
  contiguous pixels are all brighter than the nucleus by at least 
 
 
 
  or all darker than the nucleus by 
 
 
 
 , then the pixel under the nucleus is considered to be a feature. This test is reported to produce very stable features.40 The choice of the order in which the pixels are tested is a so-called Twenty Questions problem. Building short decision trees for this problem results in the most computationally efficient feature detectors available.
The first corner detection algorithm based on the AST is FAST (features from accelerated segment test).41 Although 
 
 
 
  can in principle take any value, FAST uses only a value of 3 (corresponding to a circle of 16 pixels circumference), and tests show that the best results are achieved with 
 
 
 
  being 9. This value of 
 
 
 
  is the lowest one at which edges are not detected. The order in which pixels are tested is determined by the ID3 algorithm from a training set of images. Confusingly, the name of the detector is somewhat similar to the name of the paper describing Trajkovic and Hedley's detector.
Automatic synthesis of detectors
Trujillo and Olague42 introduced a method by which genetic programming is used to automatically synthesize image operators that can detect interest points. The terminal and function sets contain primitive operations that are common in many previously proposed man-made designs. Fitness measures the stability of each operator through the repeatability rate, and promotes a uniform dispersion of detected points across the image plane. The performance of the evolved operators has been confirmed experimentally using training and testing sequences of progressively transformed images. Hence, the proposed GP algorithm is considered to be human-competitive for the problem of interest point detection.
Bibliography
Reference implementations
This section provides external links to reference implementations of some of the detectors described above. These reference implementations are provided by the authors of the paper in which the detector is first described. These may contain details not present or explicit in the papers describing the features.

DoG detection (as part of the SIFT system), Windows and x86 Linux executables
Harris-Laplace, static Linux executables. Also contains DoG and LoG detectors and affine adaptation for all detectors included.
FAST detector, C, C++, MATLAB source code and executables for various operating systems and architectures.
lip-vireo,[LoG, DoG, Harris-Laplacian, Hessian and Hessian-Laplacian],[SIFT, flip invariant SIFT, PCA-SIFT, PSIFT, Steerable Filters, SPIN][Linux, Windows and SunOS] executables.
SUSAN Low Level Image Processing, C source code.

See also

blob detection
affine shape adaptation
scale space
ridge detection
interest point detection
feature detection (computer vision)
image derivatives

External links


Brostow, "Corner Detection -- UCL Computer Science"

"
Category:Feature detection (computer vision)




Shapiro, Linda and George C. Stockman (2001). Computer Vision, p. 257. Prentice Books, Upper Saddle River. ISBN 0-13-030796-3.↩




↩
























Tony Lindeberg (2013) "Scale Selection Properties of Generalized Scale-Space Interest Point Detectors", Journal of Mathematical Imaging and Vision, Volume 46, Issue 2, pages 177-210.↩














