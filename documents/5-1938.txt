


Pseudorandom binary sequence




Pseudorandom binary sequence

 table.sourceCode, tr.sourceCode, td.lineNumbers, td.sourceCode {
   margin: 0; padding: 0; vertical-align: baseline; border: none; }
 <style>
 table.sourceCode { width: 100%; line-height: 100%; }
 td.lineNumbers { text-align: right; padding-right: 4px; padding-left: 4px; color: #aaaaaa; border-right: 1px solid #aaaaaa; }
 td.sourceCode { padding-left: 5px; }
 code > span.kw { color: #007020; font-weight: bold; } /* Keyword */
 code > span.dt { color: #902000; } /* DataType */
 code > span.dv { color: #40a070; } /* DecVal */
 code > span.bn { color: #40a070; } /* BaseN */
 code > span.fl { color: #40a070; } /* Float */
 code > span.ch { color: #4070a0; } /* Char */
 code > span.st { color: #4070a0; } /* String */
 code > span.co { color: #60a0b0; font-style: italic; } /* Comment */
 code > span.ot { color: #007020; } /* Other */
 code > span.al { color: #ff0000; font-weight: bold; } /* Alert */
 code > span.fu { color: #06287e; } /* Function */
 code > span.er { color: #ff0000; font-weight: bold; } /* Error */
 code > span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */
 code > span.cn { color: #880000; } /* Constant */
 code > span.sc { color: #4070a0; } /* SpecialChar */
 code > span.vs { color: #4070a0; } /* VerbatimString */
 code > span.ss { color: #bb6688; } /* SpecialString */
 code > span.im { } /* Import */
 code > span.va { color: #19177c; } /* Variable */
 code > span.cf { color: #007020; font-weight: bold; } /* ControlFlow */
 code > span.op { color: #666666; } /* Operator */
 code > span.bu { } /* BuiltIn */
 code > span.ex { } /* Extension */
 code > span.pp { color: #bc7a00; } /* Preprocessor */
 code > span.at { color: #7d9029; } /* Attribute */
 code > span.do { color: #ba2121; font-style: italic; } /* Documentation */
 code > span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */
 code > span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */
 code > span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */
   



A binary sequence (BS) is a sequence

 
  of 
 
 
 
  bits, i.e.


 
  for 
 
 
 
 .
A BS consists of 
 
 
 
  ones and 
 
 
 
  zeros.
A BS is a pseudo-random binary sequence (PRBS) if its autocorrelation function:



has only two values:



where



is called the duty cycle of the PRBS, similar to the duty cycle of a continuous time signal.
A PRBS is 'pseudorandom', because, although it is in fact deterministic, it seems to be random in a sense that the value of an 
 
 
 
  element is independent of the values of any of the other elements, similar to real random sequences.
A PRBS can be stretched to infinity by repeating it after 
 
 
 
  elements, this in contrast to most random sequences, such as sequences generated by radioactive decay or by white noise, that are 'infinite' by nature. The PRBS is more general than the maximum length sequence, which is a special pseudo-random binary sequence of N bits generated as the output of a linear shift register. A maximum length sequence always has a 1/2 duty cycle, and for a k-length register its number of elements is 
 
 
 
 . PRBS's are used in telecommunication, encryption, simulation, correlation technique and time-of-flight spectroscopy.
Practical implementation
Pseudorandom binary sequences can be generated using linear feedback shift registers.1
Some common sequence generating polynomials are
PRBS7 = 
 
 

PRBS15 = 
 
 

PRBS23 = 
 
 

PRBS31 = 
 
 

An example of generating a "PRBS-7" sequence can be expressed in C as
#include 
 #include 
 #include 
     
 int main(int argc, char* argv[]) {
     uint8_t start = 0x02;
     uint8_t a = start;
     int i;    
     for(i = 1;; i++) {
         int newbit = (((a >> 6) ^ (a >> 5)) & 1);
         a = ((a << 1) | newbit) & 0x7f;
         printf("%x\n", a);
         if (a == start) {
             printf("repetition period is %d\n", i);
             break;
         }
     }
 }
 
In this particular case, "PRBS-7" has a repetition period of 127 bits.
See also

Pseudorandom number generator
Gold code
Complementary sequences
Bit Error Rate Test
Pseudorandom noise

References
External links

http://www.scriptwell.net/correlation.htm 

"
Category:Pseudorandomness Category:Binary sequences



Paul H. Bardell, William H. McAnney, and Jacob Savir, "Built-In Test for VLSI: Pseudorandom Techniques", John Wiley & Sons, New York, 1987.


