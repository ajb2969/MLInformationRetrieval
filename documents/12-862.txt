   Boneh–Lynn–Shacham      Boneh–Lynn–Shacham   In cryptography , the Boneh–Lynn–Shacham ( BLS ) signature scheme allows a user to verify that a signer is authentic . The scheme uses a bilinear pairing for verification and signatures are group elements in some elliptic curve . Working in an elliptic curve provides defense against index calculus attacks against allowing shorter signatures than FDH signatures. Signatures are often referred to as short signatures , BLS short signatures , or simply BLS signatures . The signature scheme is provably secure (that is, the scheme is existentially unforgeable under adaptive chosen-message attacks ) assuming both the existence of random oracles and the intractability of the computational Diffie–Hellman problem . 1  Pairing functions  A gap group is a group in which the computational Diffie–Hellman problem is intractable but the decisional Diffie–Hellman problem can be efficiently solved. Non-degenerate, efficiently computable, bilinear pairings permit such groups.  Let    e  :    G  ×  G   →   G  T       normal-:  e   normal-→    G  G    subscript  G  T      e\colon G\times G\rightarrow G_{T}   be a non-degenerate, efficiently computable, bilinear pairing where   G   G   G   ,    G  T     subscript  G  T    G_{T}   are groups of prime order,   r   r   r   . Let   g   g   g   be a generator of   G   G   G   . Consider an instance of the CDH problem ,   g   g   g   ,    g  x     superscript  g  x    g^{x}   ,    g  y     superscript  g  y    g^{y}   . Intuitively, the pairing function   e   e   e   does not help us compute    g   x  y      superscript  g    x  y     g^{xy}   , the solution to the CDH problem. It is conjectured that this instance of the CDH problem is intractable. Given    g  z     superscript  g  z    g^{z}   , we may check to see if     g  z   =   g   x  y         superscript  g  z    superscript  g    x  y      g^{z}=g^{xy}   without knowledge of   x   x   x   ,   y   y   y   , and   z   z   z   , by testing whether     e   (   g  x   ,   g  y   )    =   e   (  g  ,   g  z   )          e    superscript  g  x    superscript  g  y       e   g   superscript  g  z       e(g^{x},g^{y})=e(g,g^{z})   holds.  By using the bilinear property    x  +  y  +  z      x  y  z    x+y+z   times, we see that if     e   (   g  x   ,   g  y   )    =   e    (  g  ,  g  )    x  y     =   e    (  g  ,  g  )   z    =   e   (  g  ,   g  z   )            e    superscript  g  x    superscript  g  y       e   superscript   g  g     x  y            e   superscript   g  g   z           e   g   superscript  g  z        e(g^{x},g^{y})=e(g,g)^{xy}=e(g,g)^{z}=e(g,g^{z})   , then since    G  T     subscript  G  T    G_{T}   is a prime order group,     x  y   =  z        x  y   z    xy=z   .  The scheme  A signature scheme consists of three functions, generate , sign , and verify  Key generation  The key generation algorithm selects a random integer   x   x   x   in the interval [0, r − 1]. The private key is   x   x   x   . The holder of the private key publishes the public key,    g  x     superscript  g  x    g^{x}   .  Signing  Given the private key   x   x   x   , and some message   m   m   m   , we compute the signature by hashing the bitstring   m   m   m   , as    h  =   H   (  m  )        h    H  m     h=H(m)   . We output the signature    σ  =   h  x       σ   superscript  h  x     \sigma=h^{x}   .  Verification  Given a signature   σ   σ   \sigma   and a public key    g  x     superscript  g  x    g^{x}   , we verify that     e   (  σ  ,  g  )    =   e   (   H   (  m  )    ,   g  x   )          e   σ  g      e     H  m    superscript  g  x       e(\sigma,g)=e(H(m),g^{x})   .  See also   Pairing-based cryptography   References  External links   Ben Lynn's PBC Library   "  Category:Digital signature schemes  Category:Pairing-based cryptography     ↩     