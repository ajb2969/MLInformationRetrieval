   Functional principal component analysis      Functional principal component analysis   Functional principal component analysis ( FPCA ) is a statistical method for investigating the dominant modes of variation of functional data . Using this method, a random function is represented in the eigenbasis, which is an orthonormal basis of the Hilbert space  L 2 that consists of the eigenfunctions of the autocovariance operator . FPCA represents functional data in the most parsimonious way, in the sense that when using a fixed number of basis functions , the eigenfunction basis explains more variation than any other basis expansion. FPCA can be applied for representing random functions, 1 or functional regression 2 and classification.  Formulation  For a square-integrable  stochastic process  X ( t ), t ∈ 𝒯, let       μ   (  t  )    =   E   (   X   (  t  )    )          μ  t     E    X  t      \mu(t)=\text{E}(X(t))   and        G   (  s  ,  t  )    =   Cov   (   X   (  s  )    ,   X   (  t  )    )    =    ∑   k  =  1   ∞     λ  k    φ  k    (  s  )    φ  k    (  t  )      ,          G   s  t      Cov     X  s     X  t            superscript   subscript     k  1         subscript  λ  k    subscript  φ  k   s   subscript  φ  k   t       G(s,t)=\text{Cov}(X(s),X(t))=\sum_{k=1}^{\infty}\lambda_{k}\varphi_{k}(s)%
 \varphi_{k}(t),   where λ 1 ≥ λ 2 ≥ ··· ≥ 0 are the eigenvalues and φ 1 , φ 2 , ... are the orthonormal eigenfunctions of the linear Hilbert–Schmidt operator       G  :      L  2    (  𝒯  )    →    L  2    (  𝒯  )     ,    G   (  f  )    =    ∫  𝒯    G   (  s  ,  t  )   f   (  s  )   d  s       .     normal-:  G   formulae-sequence   normal-→     superscript  L  2   𝒯      superscript  L  2   𝒯        G  f     subscript   𝒯     G   s  t   f  s  d  s        G:L^{2}(\mathcal{T})\rightarrow L^{2}(\mathcal{T}),\,G(f)=\int_{\mathcal{T}}G(%
 s,t)f(s)ds.     By the Karhunen–Loève theorem , one can express the centered process in the eigenbasis,         X   (  t  )    -   μ   (  t  )     =    ∑   k  =  1   ∞     ξ  k    φ  k    (  t  )      ,          X  t     μ  t      superscript   subscript     k  1         subscript  ξ  k    subscript  φ  k   t      X(t)-\mu(t)=\sum_{k=1}^{\infty}\xi_{k}\varphi_{k}(t),   where       ξ  k   =    ∫  𝒯     (    X   (  t  )    -   μ   (  t  )     )    φ  k    (  t  )   d  t         subscript  ξ  k     subscript   𝒯         X  t     μ  t     subscript  φ  k   t  d  t      \xi_{k}=\int_{\mathcal{T}}(X(t)-\mu(t))\varphi_{k}(t)dt   is the principal component associated with the k -th eigenfunction φ k , with the properties         E   (   ξ  k   )    =  0   ,    Var   (   ξ  k   )    =    λ  k   and E   (    ξ  k    ξ  l    )    =   0  for  k   ≠  l    .     formulae-sequence      E   subscript  ξ  k    0         Var   subscript  ξ  k       subscript  λ  k   and E     subscript  ξ  k    subscript  ξ  l            0  for  k        l      \text{E}(\xi_{k})=0,\text{Var}(\xi_{k})=\lambda_{k}\text{ and }\text{E}(\xi_{k%
 }\xi_{l})=0\text{ for }k\neq l.     The centered process is then equivalent to ξ 1 , ξ 2 , .... A common assumption is that X can be represented by only the first few eigenfunctions (after subtracting the mean function), i.e.        X   (  t  )    ≈    X  m    (  t  )    =    μ   (  t  )    +    ∑   k  =  1   m     ξ  k    φ  k    (  t  )       ,          X  t      subscript  X  m   t            μ  t     superscript   subscript     k  1    m      subscript  ξ  k    subscript  φ  k   t        X(t)\approx X_{m}(t)=\mu(t)+\sum_{k=1}^{m}\xi_{k}\varphi_{k}(t),   where        E   (    ∫  𝒯      (    X   (  t  )    -    X  m    (  t  )     )   2   d  t    )    =    ∑   j  >  m     λ  j    →   0  as  m   →  ∞   .          normal-E    subscript   𝒯      superscript      X  t      subscript  X  m   t    2   d  t       subscript     j  m     subscript  λ  j      normal-→      0  as  m     normal-→        \mathrm{E}\left(\int_{\mathcal{T}}\left(X(t)-X_{m}(t)\right)^{2}dt\right)=\sum%
 _{j>m}\lambda_{j}\rightarrow 0\text{ as }m\rightarrow\infty.     Interpretation of eigenfunctions  The first eigenfunction φ 1 depicts the dominant mode of variation of X .        φ  1   =      arg   max     ∥  φ  ∥   =  1     {   Var   (    ∫  𝒯     (    X   (  t  )    -   μ   (  t  )     )   φ   (  t  )   d  t    )    }     ,       subscript  φ  1         norm  φ   1     arg  max      Var    subscript   𝒯         X  t     μ  t    φ  t  d  t         \varphi_{1}=\underset{\|\mathbf{\varphi}\|=1}{\operatorname{arg\,max}}\left\{%
 \operatorname{Var}(\int_{\mathcal{T}}(X(t)-\mu(t))\varphi(t)dt)\right\},   where        ∥  φ  ∥   =    (    ∫  𝒯    φ    (  t  )   2   d  t    )    1  2     .       norm  φ    superscript    subscript   𝒯     φ   superscript  t  2   d  t      1  2      \|\mathbf{\varphi}\|=\left(\int_{\mathcal{T}}\varphi(t)^{2}dt\right)^{\frac{1}%
 {2}}.     The k -th eigenfunction φ k is the dominant mode of variation orthogonal to φ 1 , φ 2 , ... , φ k -1 ,        φ  k   =      arg   max       ∥  φ  ∥   =  1   ,    ⟨  φ  ,   φ  j   ⟩   =   0  for  j   =  1    ,   …  ,   k  -  1       {   Var   (    ∫  𝒯     (    X   (  t  )    -   μ   (  t  )     )   φ   (  t  )   d  t    )    }     ,       subscript  φ  k       formulae-sequence   formulae-sequence     norm  φ   1        φ   subscript  φ  j      0  for  j        1      normal-…    k  1       arg  max      Var    subscript   𝒯         X  t     μ  t    φ  t  d  t         \varphi_{k}=\underset{\|\mathbf{\varphi}\|=1,\langle\varphi,\varphi_{j}\rangle%
 =0\text{ for }j=1,\dots,k-1}{\operatorname{arg\,max}}\left\{\operatorname{Var}%
 (\int_{\mathcal{T}}(X(t)-\mu(t))\varphi(t)dt)\right\},   where        ⟨  φ  ,   φ  j   ⟩   =    ∫  𝒯    φ   (  t  )    φ  j    (  t  )   d  t     ,    for  j   =   1  ,  …  ,   k  -  1.        formulae-sequence     φ   subscript  φ  j      subscript   𝒯     φ  t   subscript  φ  j   t  d  t         for  j    1  normal-…    k  1.       \langle\varphi,\varphi_{j}\rangle=\int_{\mathcal{T}}\varphi(t)\varphi_{j}(t)dt%
 ,\text{ for }j=1,\dots,k-1.     Estimation  Let Y ij = X i ( t ij ) + ε ij be the observations made at locations (usually time points) t ij , where X i is the i -th realization of the smooth stochastic process that generates the data, and ε ij are identically and independently distributed normal random variable with mean 0 and variance σ 2 , j = 1, 2, ..., m i . To obtain an estimate of the mean function μ ( t ij ), if a dense sample on a regular grid is available, one may take the average at each location t ij :         μ  ^    (   t   i  j    )    =    1  n     ∑   i  =  1   n    Y   i  j       .         normal-^  μ    subscript  t    i  j         1  n     superscript   subscript     i  1    n    subscript  Y    i  j        \hat{\mu}(t_{ij})=\frac{1}{n}\sum_{i=1}^{n}Y_{ij}.   If the observations are sparse, one needs to smooth the data pooled from all observations to obtain the mean estimate, 3 using smoothing methods like local linear smoothing or spline smoothing .  Then the estimate of the covariance function     G  ^    (  s  ,  t  )        normal-^  G    s  t     \hat{G}(s,t)   is obtained by averaging (in the dense case) or smoothing (in the sparse case) the raw covariances          G  i    (   t   i  j    ,   t   i  l    )    =    (    Y   i  j    -    μ  ^    (   t   i  j    )     )    (    Y   i  l    -    μ  ^    (   t   i  l    )     )     ,    j  ≠  l   ,   i  =   1  ,  …  ,  n      .     formulae-sequence       subscript  G  i     subscript  t    i  j     subscript  t    i  l           subscript  Y    i  j       normal-^  μ    subscript  t    i  j         subscript  Y    i  l       normal-^  μ    subscript  t    i  l         formulae-sequence    j  l     i   1  normal-…  n       G_{i}(t_{ij},t_{il})=(Y_{ij}-\hat{\mu}(t_{ij}))(Y_{il}-\hat{\mu}(t_{il})),j%
 \neq l,i=1,\dots,n.     Note that the diagonal elements of G i should be removed because they contain measurement error. 4  In practice,     G  ^    (  s  ,  t  )        normal-^  G    s  t     \hat{G}(s,t)   is discretized to an equal-spaced dense grid, and the estimation of eigenvalues λ k and eigenvectors v k is carried out by numerical linear algebra. 5 The eigenfunction estimates     φ  ^   k     subscript   normal-^  φ   k    \hat{\varphi}_{k}   can then be obtained by interpolating the eigenvectors      v  k   ^   .     normal-^   subscript  v  k     \hat{v_{k}}.     The fitted covariance should be positive definite and symmetric and is then obtained as         G  ~    (  s  ,  t  )    =    ∑    λ  k   >  0       λ  ^   k     φ  ^   k    (  s  )     φ  ^   k    (  t  )      .         normal-~  G    s  t      subscript      subscript  λ  k   0       subscript   normal-^  λ   k    subscript   normal-^  φ   k   s   subscript   normal-^  φ   k   t      \tilde{G}(s,t)=\sum_{\lambda_{k}>0}\hat{\lambda}_{k}\hat{\varphi}_{k}(s)\hat{%
 \varphi}_{k}(t).     Let     V  ^    (  t  )        normal-^  V   t    \hat{V}(t)   be a smoothed version of the diagonal elements G i ( t ij , t ij ) of the raw covariance matrices. Then     V  ^    (  t  )        normal-^  V   t    \hat{V}(t)   is an estimate of ( G ( t , t ) + σ 2 ). An estimate of σ 2 is obtained by         σ  ^   2   =    2   |  𝒯  |      ∫  𝒯     (     V  ^    (  t  )    -    G  ~    (  t  ,  t  )     )   d  t      ,       superscript   normal-^  σ   2       2    𝒯      subscript   𝒯          normal-^  V   t      normal-~  G    t  t     d  t       \hat{\sigma}^{2}=\frac{2}{|\mathcal{T}|}\int_{\mathcal{T}}(\hat{V}(t)-\tilde{G%
 }(t,t))dt,   if       σ  ^   2   >  0   ;       superscript   normal-^  σ   2   0    \hat{\sigma}^{2}>0;   otherwise      σ  ^   2   =  0.       superscript   normal-^  σ   2   0.    \hat{\sigma}^{2}=0.     If the observations X ij , j =1, 2, ..., m i are dense in 𝒯, then the k -th FPC ξ k can be estimated by numerical integration , implementing         ξ  ^   k   =   ⟨   X  -   μ  ^    ,    φ  ^   k   ⟩    .       subscript   normal-^  ξ   k      X   normal-^  μ     subscript   normal-^  φ   k      \hat{\xi}_{k}=\langle X-\hat{\mu},\hat{\varphi}_{k}\rangle.     However, if the observations are sparse, this method will not work. Instead, one can use best linear unbiased predictors , 6 yielding         ξ  ^   k   =     λ  ^   k     φ  ^   k  T     Σ  ^    Y  i    -  1     (    Y  i   -   μ  ^    )     ,       subscript   normal-^  ξ   k      subscript   normal-^  λ   k    superscript   subscript   normal-^  φ   k   T    superscript   subscript   normal-^  normal-Σ    subscript  Y  i      1       subscript  Y  i    normal-^  μ       \hat{\xi}_{k}=\hat{\lambda}_{k}\hat{\varphi}_{k}^{T}\hat{\Sigma}_{Y_{i}}^{-1}(%
 Y_{i}-\hat{\mu}),   where        Σ  ^    Y  i    =    G  ~   +     σ  ^   2    𝐈   m  i           subscript   normal-^  normal-Σ    subscript  Y  i       normal-~  G      superscript   normal-^  σ   2    subscript  𝐈   subscript  m  i        \hat{\Sigma}_{Y_{i}}=\tilde{G}+\hat{\sigma}^{2}\mathbf{I}_{m_{i}}   , and    G  ~     normal-~  G    \tilde{G}   is evaluated at the grid points generated by t ij , j = 1, 2, ..., m i . The algorithm, PACE, has an available Matlab package. 7  Asymptotic convergence properties of these estimates have been investigated. 8 9 10  Applications  FPCA can be applied for displaying the modes of functional variation, 11 12 in scatterplots of FPCs against each other or of responses against FPCs, for modeling sparse longitudinal data , 13 or for functional regression and classification, e.g., functional linear regression. 14  Scree plots and other methods can be used to determine the number of included components.  Connection with principal component analysis  The following table shows a comparison of various elements of principal component analysis (PCA) and FPCA. The two methods are both used for dimensionality reduction . In implementations, FPCA uses a PCA step.  However, PCA and FPCA differ in some critical aspects. First, the order of multivariate data in PCA can be permuted , which has no effect on the analysis, but the order of functional data carries time or space information and cannot be reordered. Second, the spacing of observations in FPCA matters, while there is no spacing issue in PCA. Third, regular PCA does not work for high-dimensional data without regularization , while FPCA has a built-in regularization due to the smoothness of the functional data and the truncation to a finite number of included components.      Element   In PCA   In FPCA       Data       X  ∈   ℝ  p       X   superscript  ℝ  p     X\in\mathbb{R}^{p}          X  ∈    L  2    (  𝒯  )        X     superscript  L  2   𝒯     X\in L^{2}(\mathcal{T})        Dimension       p  <  ∞      p     p<\infty         ∞     \infty        Mean       μ  =   E   (  X  )        μ    E  X     \mu=\text{E}(X)           μ   (  t  )    =   E   (   X   (  t  )    )          μ  t     E    X  t      \mu(t)=\text{E}(X(t))        Covariance        Cov   (  X  )    =   Σ   p  ×  p          Cov  X    subscript  normal-Σ    p  p      \text{Cov}(X)=\Sigma_{p\times p}           Cov   (   X   (  s  )    ,   X   (  t  )    )    =   G   (  s  ,  t  )          Cov     X  s     X  t       G   s  t      \text{Cov}(X(s),X(t))=G(s,t)        Eigenvalues        λ  1   ,   λ  2   ,  …  ,   λ  p       subscript  λ  1    subscript  λ  2   normal-…   subscript  λ  p     \lambda_{1},\lambda_{2},\dots,\lambda_{p}           λ  1   ,   λ  2   ,  …      subscript  λ  1    subscript  λ  2   normal-…    \lambda_{1},\lambda_{2},\dots        Eigenvectors/Eigenfunctions        𝐯  1   ,   𝐯  2   ,  …  ,   𝐯  p       subscript  𝐯  1    subscript  𝐯  2   normal-…   subscript  𝐯  p     \mathbf{v}_{1},\mathbf{v}_{2},\dots,\mathbf{v}_{p}            φ  1    (  t  )    ,    φ  2    (  t  )    ,  …        subscript  φ  1   t      subscript  φ  2   t   normal-…    \varphi_{1}(t),\varphi_{2}(t),\dots        Inner Product        ⟨  𝐗  ,  𝐘  ⟩   =    ∑   k  =  1   p     X  k    Y  k          𝐗  𝐘     superscript   subscript     k  1    p      subscript  X  k    subscript  Y  k       \langle\mathbf{X},\mathbf{Y}\rangle=\sum_{k=1}^{p}X_{k}Y_{k}           ⟨  X  ,  Y  ⟩   =    ∫  𝒯    X   (  t  )   Y   (  t  )   d  t         X  Y     subscript   𝒯     X  t  Y  t  d  t      \langle X,Y\rangle=\int_{\mathcal{T}}X(t)Y(t)dt        Principal Components         z  k   =   ⟨   X  -  μ   ,   𝐯  𝐤   ⟩    ,   k  =   1  ,  2  ,  …  ,  p       formulae-sequence     subscript  z  k      X  μ    subscript  𝐯  𝐤       k   1  2  normal-…  p      z_{k}=\langle X-\mu,\mathbf{v_{k}}\rangle,k=1,2,\dots,p            ξ  k   =   ⟨   X  -  μ   ,   φ  k   ⟩    ,   k  =   1  ,  2  ,  …       formulae-sequence     subscript  ξ  k      X  μ    subscript  φ  k       k   1  2  normal-…      \xi_{k}=\langle X-\mu,\varphi_{k}\rangle,k=1,2,\dots        See also   Principal component analysis   Notes  References     "  Category:Statistical methods  Category:Non-parametric statistics     ↩  ↩  ↩  ↩  ↩   ↩   ↩  ↩   ↩       