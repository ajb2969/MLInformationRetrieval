   Behavior of coupled DEVS      Behavior of coupled DEVS   DEVS is closed under coupling  [Zeigper84 ] [ZPK00 ]. In other words, given a coupled DEVS model   N   N   N   , its behavior is described as an atomic DEVS model   M   M   M   . For a given coupled DEVS   N   N   N   , once we have an equivalent atomic DEVS   M   M   M   , behavior of   M   M   M   can be referred to behavior of atomic DEVS which is based on Timed Event System .  Similar to behavior of atomic DEVS , behavior of the Coupled DEVS class is described depending on definition of the total state set and its handling as follows.  == View1: Total States = States * Elapsed Times == Given a coupled DEVS model   X   X   X   , its behavior is described as an atomic DEVS model   Y   Y   Y     where       S  =    √ó   i  ‚àà  D     Q  i        S       i  D      subscript  Q  i      S=\underset{i\in D}{\times}Q_{i}   and     Q  i   =   {   (   s  i   ,   t   e  i    )   |     s  i   ‚àà   S  i    ,    t   e  i    ‚àà   (   ùïã  ‚à©   [  0  ,   t   a  i    (   s  i   )    ]    )     }        subscript  Q  i    conditional-set    subscript  s  i    subscript  t    e  i      formulae-sequence     subscript  s  i    subscript  S  i       subscript  t    e  i      ùïã   0    t   subscript  a  i    subscript  s  i           Q_{i}=\{(s_{i},t_{ei})|s_{i}\in S_{i},t_{ei}\in(\mathbb{T}\cap[0,ta_{i}(s_{i})%
 ])\}   are the input event set and the output event set, respectively.      i  ‚àà  D      i  D    i\in D   is the partial state set where    ùïã  =   [  0  ,  ‚àû  )       ùïã   0      \mathbb{T}=[0,\infty)   is the total state set of component     s  0   =    √ó   i  ‚àà  D     q   0  i          subscript  s  0        i  D      subscript  q    0  i       s_{0}=\underset{i\in D}{\times}q_{0i}   (Refer to View1 of Behavior of DEVS ), where     q   0  i    =   (   s   0  i    ,  0  )        subscript  q    0  i      subscript  s    0  i    0     q_{0i}=(s_{0i},0)   is the set of non-negative real numbers.      i  ‚àà  D      i  D    i\in D   is the initial state set where     t  a   :   S  ‚Üí   ùïã  ‚àû       normal-:    t  a    normal-‚Üí  S   superscript  ùïã       ta:S\rightarrow\mathbb{T}^{\infty}   is the total initial state of component     ùïã  ‚àû   =   [  0  ,  ‚àû  ]        superscript  ùïã     0      \mathbb{T}^{\infty}=[0,\infty]   .      s  =   (  ‚Ä¶  ,   (   s  i   ,   t   e  i    )   ,  ‚Ä¶  )       s   normal-‚Ä¶    subscript  s  i    subscript  t    e  i     normal-‚Ä¶     s=(\ldots,(s_{i},t_{ei}),\ldots)   is the time advance function, where     Œ¥   e  x  t    :    Q  √ó  X   ‚Üí  S      normal-:   subscript  Œ¥    e  x  t     normal-‚Üí    Q  X   S     \delta_{ext}:Q\times X\rightarrow S   is the set of non-negative real numbers plus infinity.Given    q  =   (  s  ,   t  e   )       q   s   subscript  t  e      q=(s,t_{e})   ,  ta(s)= \min\{ ta_i(si) - t_{ei}| i \in D\}.          s  =   (  ‚Ä¶  ,   (   s  i   ,   t   e  i    )   ,  ‚Ä¶  )    ,    t  e   ‚àà   (   ùïã  ‚à©   [  0  ,   t  a   (  s  )    ]    )       formulae-sequence    s   normal-‚Ä¶    subscript  s  i    subscript  t    e  i     normal-‚Ä¶       subscript  t  e     ùïã   0    t  a  s        s=(\ldots,(s_{i},t_{ei}),\ldots),t_{e}\in(\mathbb{T}\cap[0,ta(s)])   is the external state function. Given a total state    x  ‚àà  X      x  X    x\in X   where      Œ¥   e  x  t     (  q  ,  x  )    =   s  ‚Ä≤   =   (  ‚Ä¶  ,   (   s  i  ‚Ä≤   ,   t   e  i   ‚Ä≤   )   ,  ‚Ä¶  )            subscript  Œ¥    e  x  t     q  x     superscript  s  normal-‚Ä≤         normal-‚Ä¶    superscript   subscript  s  i   normal-‚Ä≤    superscript   subscript  t    e  i    normal-‚Ä≤    normal-‚Ä¶      \delta_{ext}(q,x)=s^{\prime}=(\ldots,(s_{i}^{\prime},t_{ei}^{\prime}),\ldots)   , and input event     (   s  i  ‚Ä≤   ,   t   e  i   ‚Ä≤   )   =   {      (    Œ¥   e  x  t     (   s  i   ,   t   e  i    ,   x  i   )    ,  0  )       if   (  x  ,   x  i   )    ‚àà   C   x  x          (   s  i   ,   t   e  i    )      otherwise  .             superscript   subscript  s  i   normal-‚Ä≤    superscript   subscript  t    e  i    normal-‚Ä≤     cases      subscript  Œ¥    e  x  t      subscript  s  i    subscript  t    e  i     subscript  x  i     0       if   x   subscript  x  i      subscript  C    x  x       subscript  s  i    subscript  t    e  i     otherwise     (s_{i}^{\prime},t_{ei}^{\prime})=\begin{cases}(\delta_{ext}(s_{i},t_{ei},x_{i}%
 ),0)&\text{if }(x,x_{i})\in C_{xx}\\
 (s_{i},t_{ei})&\text{otherwise}.\end{cases}   , the next state is given by      s  =   (  ‚Ä¶  ,   (   s  i   ,   t   e  i    )   ,  ‚Ä¶  )   ‚àà  S        s   normal-‚Ä¶    subscript  s  i    subscript  t    e  i     normal-‚Ä¶        S     s=(\ldots,(s_{i},t_{ei}),\ldots)\in S       where        I  M  M   (  s  )    =   {   i  ‚àà  D   |    t   a  i    (   s  i   )    =   t  a   (  s  )     }         I  M  M  s    conditional-set    i  D       t   subscript  a  i    subscript  s  i      t  a  s       IMM(s)=\{i\in D|ta_{i}(s_{i})=ta(s)\}      Given the partial state     i  *   ‚àà  D       superscript  i    D    i^{*}\in D   , let      i  *   =   S  e  l  e  c  t   (   I  M  M   (  s  )    )     .       superscript  i      S  e  l  e  c  t    I  M  M  s      i^{*}=Select(IMM(s)).   denote the set of imminent components . The firing component      Œ¥   i  n  t    :   S  ‚Üí  S      normal-:   subscript  Œ¥    i  n  t     normal-‚Üí  S  S     \delta_{int}:S\rightarrow S   which triggers the internal state transition and an output event is determined by       s  =   (  ‚Ä¶  ,   (   s  i   ,   t   e  i    )   ,  ‚Ä¶  )       s   normal-‚Ä¶    subscript  s  i    subscript  t    e  i     normal-‚Ä¶     s=(\ldots,(s_{i},t_{ei}),\ldots)             Œ¥   i  n  t     (  s  )    =   s  ‚Ä≤   =   (  ‚Ä¶  ,   (   s  i  ‚Ä≤   ,   t   e  i   ‚Ä≤   )   ,  ‚Ä¶  )            subscript  Œ¥    i  n  t    s    superscript  s  normal-‚Ä≤         normal-‚Ä¶    superscript   subscript  s  i   normal-‚Ä≤    superscript   subscript  t    e  i    normal-‚Ä≤    normal-‚Ä¶      \delta_{int}(s)=s^{\prime}=(\ldots,(s_{i}^{\prime},t_{ei}^{\prime}),\ldots)   is the internal state function. Given a partial state     (   s  i  ‚Ä≤   ,   t   e  i   ‚Ä≤   )   =   {      (    Œ¥   i  n  t     (   s  i   )    ,  0  )       if  i   =   i  *         (    Œ¥   e  x  t     (   s  i   ,   t   e  i    ,   x  i   )    ,  0  )       if   (    Œª   i  *     (   s   i  *    )    ,   x  i   )    ‚àà   C   y  x          (   s  i   ,   t   e  i    )      otherwise  .             superscript   subscript  s  i   normal-‚Ä≤    superscript   subscript  t    e  i    normal-‚Ä≤     cases      subscript  Œ¥    i  n  t     subscript  s  i    0       if  i    superscript  i         subscript  Œ¥    e  x  t      subscript  s  i    subscript  t    e  i     subscript  x  i     0       if      subscript  Œª   superscript  i      subscript  s   superscript  i       subscript  x  i      subscript  C    y  x       subscript  s  i    subscript  t    e  i     otherwise     (s_{i}^{\prime},t_{ei}^{\prime})=\begin{cases}(\delta_{int}(s_{i}),0)&\text{if%
  }i=i^{*}\\
 (\delta_{ext}(s_{i},t_{ei},x_{i}),0)&\text{if }(\lambda_{i^{*}}(s_{i^{*}}),x_{%
 i})\in C_{yx}\\
 (s_{i},t_{ei})&\text{otherwise}.\end{cases}   , the next state is given by      Œª  :   S  ‚Üí   Y  œï       normal-:  Œª   normal-‚Üí  S   superscript  Y  œï      \lambda:S\rightarrow Y^{\phi}       where       s  =   (  ‚Ä¶  ,   (   s  i   ,   t   e  i    )   ,  ‚Ä¶  )       s   normal-‚Ä¶    subscript  s  i    subscript  t    e  i     normal-‚Ä¶     s=(\ldots,(s_{i},t_{ei}),\ldots)          X   X   X   is the output function. Given a partial state   Y   Y   Y   ,  \lambda(s)=   \begin{cases} \phi &\text{if } \lambda_{i^*}(s_{i^*})=\phi \\ C_{yy}(\lambda_{i^*}(s_{i^*})) &\text{otherwise}. \end{cases}   == View2: Total States = States * Lifespan * Elapsed Times == Given a coupled DEVS model    S  =    √ó   i  ‚àà  D     Q  i        S       i  D      subscript  Q  i      S=\underset{i\in D}{\times}Q_{i}   , its behavior is described as an atomic DEVS model     Q  i   =   {   (   s  i   ,   t   s  i    ,   t   e  i    )   |     s  i   ‚àà   S  i    ,     t   s  i    ‚àà   ùïã  ‚àû    ,    t   e  i    ‚àà   (   ùïã  ‚à©   [  0  ,   t   s  i    ]    )      }        subscript  Q  i    conditional-set    subscript  s  i    subscript  t    s  i     subscript  t    e  i      formulae-sequence     subscript  s  i    subscript  S  i     formulae-sequence     subscript  t    s  i     superscript  ùïã        subscript  t    e  i      ùïã   0   subscript  t    s  i            Q_{i}=\{(s_{i},t_{si},t_{ei})|s_{i}\in S_{i},t_{si}\in\mathbb{T}^{\infty},t_{%
 ei}\in(\mathbb{T}\cap[0,t_{si}])\}     where       i  ‚àà  D      i  D    i\in D   and     s  0   =    √ó   i  ‚àà  D     q   0  i          subscript  s  0        i  D      subscript  q    0  i       s_{0}=\underset{i\in D}{\times}q_{0i}   are the input event set and the output event set, respectively.       q   0  i    =   (   s   0  i    ,   t   a  i    (   s   0  i    )    ,  0  )        subscript  q    0  i      subscript  s    0  i      t   subscript  a  i    subscript  s    0  i     0     q_{0i}=(s_{0i},ta_{i}(s_{0i}),0)   is the partial state set where    i  ‚àà  D      i  D    i\in D   is the total state set of component     t  a   :   S  ‚Üí   ùïã  ‚àû       normal-:    t  a    normal-‚Üí  S   superscript  ùïã       ta:S\rightarrow\mathbb{T}^{\infty}   (Refer to View2 of Behavior of DEVS ).      s  =   (  ‚Ä¶  ,   (   s  i   ,   t   s  i    ,   t   e  i    )   ,  ‚Ä¶  )       s   normal-‚Ä¶    subscript  s  i    subscript  t    s  i     subscript  t    e  i     normal-‚Ä¶     s=(\ldots,(s_{i},t_{si},t_{ei}),\ldots)   is the initial state set where     Œ¥   e  x  t    :    Q  √ó  X   ‚Üí   S  √ó   {  0  ,  1  }        normal-:   subscript  Œ¥    e  x  t     normal-‚Üí    Q  X     S   0  1       \delta_{ext}:Q\times X\rightarrow S\times\{0,1\}   is the total initial state of component    q  =   (  s  ,   t  s   ,   t  e   )       q   s   subscript  t  s    subscript  t  e      q=(s,t_{s},t_{e})   .         s  =   (  ‚Ä¶  ,   (   s  i   ,   t   s  i    ,   t   e  i    )   ,  ‚Ä¶  )    ,     t  s   ‚àà   ùïã  ‚àû    ,    t  e   ‚àà   (   ùïã  ‚à©   [  0  ,   t  s   ]    )        formulae-sequence    s   normal-‚Ä¶    subscript  s  i    subscript  t    s  i     subscript  t    e  i     normal-‚Ä¶     formulae-sequence     subscript  t  s    superscript  ùïã        subscript  t  e     ùïã   0   subscript  t  s         s=(\ldots,(s_{i},t_{si},t_{ei}),\ldots),t_{s}\in\mathbb{T}^{\infty},t_{e}\in(%
 \mathbb{T}\cap[0,t_{s}])   is the time advance function. Given    x  ‚àà  X      x  X    x\in X   ,  ta(s)= \min\{ t_{si} - t_{ei}| i \in D\}.            Œ¥   e  x  t     (  q  ,  x  )    =   (   (  ‚Ä¶  ,   (   s  i  ‚Ä≤   ,   t   s  i   ‚Ä≤   ,   t   e  i   ‚Ä≤   )   ,  ‚Ä¶  )   ,  b  )          subscript  Œ¥    e  x  t     q  x      normal-‚Ä¶    superscript   subscript  s  i   normal-‚Ä≤    superscript   subscript  t    s  i    normal-‚Ä≤    superscript   subscript  t    e  i    normal-‚Ä≤    normal-‚Ä¶   b     \delta_{ext}(q,x)=((\ldots,(s_{i}^{\prime},t_{si}^{\prime},t_{ei}^{\prime}),%
 \ldots),b)   is the external state function. Given a total state     (   s  i  ‚Ä≤   ,   t   s  i   ‚Ä≤   ,   t   e  i   ‚Ä≤   )   =   {      (   s  i  ‚Ä≤   ,   t   a  i    (   s  i  ‚Ä≤   )    ,  0  )        if   (  x  ,   x  i   )    ‚àà   C   x  x     ,     Œ¥   e  x  t     (   s  i   ,   t   s  i    ,   t   e  i    ,   x  i   )    =   (   s  i  ‚Ä≤   ,  1  )          (   s  i  ‚Ä≤   ,   t   s  i    ,   t   e  i    )        if   (  x  ,   x  i   )    ‚àà   C   x  x     ,     Œ¥   e  x  t     (   s  i   ,   t   s  i    ,   t   e  i    ,   x  i   )    =   (   s  i  ‚Ä≤   ,  0  )          (   s  i   ,   t   e  i    )     otherwise            superscript   subscript  s  i   normal-‚Ä≤    superscript   subscript  t    s  i    normal-‚Ä≤    superscript   subscript  t    e  i    normal-‚Ä≤     cases    superscript   subscript  s  i   normal-‚Ä≤     t   subscript  a  i    superscript   subscript  s  i   normal-‚Ä≤    0    formulae-sequence      if   x   subscript  x  i      subscript  C    x  x          subscript  Œ¥    e  x  t      subscript  s  i    subscript  t    s  i     subscript  t    e  i     subscript  x  i       superscript   subscript  s  i   normal-‚Ä≤   1       superscript   subscript  s  i   normal-‚Ä≤    subscript  t    s  i     subscript  t    e  i      formulae-sequence      if   x   subscript  x  i      subscript  C    x  x          subscript  Œ¥    e  x  t      subscript  s  i    subscript  t    s  i     subscript  t    e  i     subscript  x  i       superscript   subscript  s  i   normal-‚Ä≤   0       subscript  s  i    subscript  t    e  i     otherwise     (s_{i}^{\prime},t_{si}^{\prime},t_{ei}^{\prime})=\begin{cases}(s_{i}^{\prime},%
 ta_{i}(s_{i}^{\prime}),0)&\text{if }(x,x_{i})\in C_{xx},\delta_{ext}(s_{i},t_{%
 si},t_{ei},x_{i})=(s_{i}^{\prime},1)\\
 (s_{i}^{\prime},t_{si},t_{ei})&\text{if }(x,x_{i})\in C_{xx},\delta_{ext}(s_{i%
 },t_{si},t_{ei},x_{i})=(s_{i}^{\prime},0)\\
 (s_{i},t_{ei})&\text{otherwise}\end{cases}   where    b  =   {     1       if   ‚àÉ  i    ‚àà  D   :     (  x  ,   x  i   )   ‚àà   C   x  x     ,     Œ¥   e  x  t     (   s  i   ,   t   s  i    ,   t   e  i    ,   x  i   )    =   (   s  i  ‚Ä≤   ,  1  )          0     otherwise  .           b   cases  1   normal-:      if    i    D    formulae-sequence     x   subscript  x  i     subscript  C    x  x          subscript  Œ¥    e  x  t      subscript  s  i    subscript  t    s  i     subscript  t    e  i     subscript  x  i       superscript   subscript  s  i   normal-‚Ä≤   1      0  otherwise     b=\begin{cases}1&\text{if }\exists i\in D:(x,x_{i})\in C_{xx},\delta_{ext}(s_{%
 i},t_{si},t_{ei},x_{i})=(s_{i}^{\prime},1)\\
 0&\text{otherwise}.\end{cases}   , and input event    s  =   (  ‚Ä¶  ,   (   s  i   ,   t   s  i    ,   t   e  i    )   ,  ‚Ä¶  )   ‚àà  S        s   normal-‚Ä¶    subscript  s  i    subscript  t    s  i     subscript  t    e  i     normal-‚Ä¶        S     s=(\ldots,(s_{i},t_{si},t_{ei}),\ldots)\in S   , the next state is given by       I  M  M   (  s  )    =   {   i  ‚àà  D   |     t   s  i    -   t   e  i     =   t  a   (  s  )     }         I  M  M  s    conditional-set    i  D        subscript  t    s  i     subscript  t    e  i       t  a  s       IMM(s)=\{i\in D|t_{si}-t_{ei}=ta(s)\}       where        i  *   ‚àà  D       superscript  i    D    i^{*}\in D      and         i  *   =   S  e  l  e  c  t   (   I  M  M   (  s  )    )     .       superscript  i      S  e  l  e  c  t    I  M  M  s      i^{*}=Select(IMM(s)).      Given the partial state     Œ¥   i  n  t    :   S  ‚Üí  S      normal-:   subscript  Œ¥    i  n  t     normal-‚Üí  S  S     \delta_{int}:S\rightarrow S   , let    s  =   (  ‚Ä¶  ,   (   s  i   ,   t   s  i    ,   t   e  i    )   ,  ‚Ä¶  )       s   normal-‚Ä¶    subscript  s  i    subscript  t    s  i     subscript  t    e  i     normal-‚Ä¶     s=(\ldots,(s_{i},t_{si},t_{ei}),\ldots)   denote the set of imminent components . The firing component       Œ¥   i  n  t     (  s  )    =   s  ‚Ä≤   =   (  ‚Ä¶  ,   (   s  i  ‚Ä≤   ,   t   s  i   ‚Ä≤   ,   t   e  i   ‚Ä≤   )   ,  ‚Ä¶  )            subscript  Œ¥    i  n  t    s    superscript  s  normal-‚Ä≤         normal-‚Ä¶    superscript   subscript  s  i   normal-‚Ä≤    superscript   subscript  t    s  i    normal-‚Ä≤    superscript   subscript  t    e  i    normal-‚Ä≤    normal-‚Ä¶      \delta_{int}(s)=s^{\prime}=(\ldots,(s_{i}^{\prime},t_{si}^{\prime},t_{ei}^{%
 \prime}),\ldots)   which triggers the internal state transition and an output event is determined by        (   s  i  ‚Ä≤   ,   t   s  i   ‚Ä≤   ,   t   e  i   ‚Ä≤   )   =   {      (   s  i  ‚Ä≤   ,   t   a  i    (   s  i  ‚Ä≤   )    ,  0  )         if  i   =   i  *    ,     Œ¥   i  n  t     (   s  i   )    =   s  i  ‚Ä≤     ,        (   s  i  ‚Ä≤   ,   t   a  i    (   s  i  ‚Ä≤   )    ,  0  )        if   (    Œª   i  *     (   s   i  *    )    ,   x  i   )    ‚àà   C   y  x     ,     Œ¥   e  x  t     (   s  i   ,   t   s  i    ,   t   e  i    ,   x  i   )    =   (   s  ‚Ä≤   ,  1  )          (   s  i  ‚Ä≤   ,   t   s  i    ,   t   e  i    )        if   (    Œª   i  *     (   s   i  *    )    ,   x  i   )    ‚àà   C   y  x     ,     Œ¥   e  x  t     (   s  i   ,   t   s  i    ,   t   e  i    ,   x  i   )    =   (   s  ‚Ä≤   ,  0  )          (   s  i   ,   t   s  i    ,   t   e  i    )      otherwise  .             superscript   subscript  s  i   normal-‚Ä≤    superscript   subscript  t    s  i    normal-‚Ä≤    superscript   subscript  t    e  i    normal-‚Ä≤     cases    superscript   subscript  s  i   normal-‚Ä≤     t   subscript  a  i    superscript   subscript  s  i   normal-‚Ä≤    0    formulae-sequence      if  i    superscript  i          subscript  Œ¥    i  n  t     subscript  s  i     superscript   subscript  s  i   normal-‚Ä≤       superscript   subscript  s  i   normal-‚Ä≤     t   subscript  a  i    superscript   subscript  s  i   normal-‚Ä≤    0    formulae-sequence      if      subscript  Œª   superscript  i      subscript  s   superscript  i       subscript  x  i      subscript  C    y  x          subscript  Œ¥    e  x  t      subscript  s  i    subscript  t    s  i     subscript  t    e  i     subscript  x  i       superscript  s  normal-‚Ä≤   1       superscript   subscript  s  i   normal-‚Ä≤    subscript  t    s  i     subscript  t    e  i      formulae-sequence      if      subscript  Œª   superscript  i      subscript  s   superscript  i       subscript  x  i      subscript  C    y  x          subscript  Œ¥    e  x  t      subscript  s  i    subscript  t    s  i     subscript  t    e  i     subscript  x  i       superscript  s  normal-‚Ä≤   0       subscript  s  i    subscript  t    s  i     subscript  t    e  i     otherwise     (s_{i}^{\prime},t_{si}^{\prime},t_{ei}^{\prime})=\begin{cases}(s_{i}^{\prime},%
 ta_{i}(s_{i}^{\prime}),0)&\text{if }i=i^{*},\delta_{int}(s_{i})=s_{i}^{\prime}%
 ,\\
 (s_{i}^{\prime},ta_{i}(s_{i}^{\prime}),0)&\text{if }(\lambda_{i^{*}}(s_{i^{*}}%
 ),x_{i})\in C_{yx},\delta_{ext}(s_{i},t_{si},t_{ei},x_{i})=(s^{\prime},1)\\
 (s_{i}^{\prime},t_{si},t_{ei})&\text{if }(\lambda_{i^{*}}(s_{i^{*}}),x_{i})\in
 C%
 _{yx},\delta_{ext}(s_{i},t_{si},t_{ei},x_{i})=(s^{\prime},0)\\
 (s_{i},t_{si},t_{ei})&\text{otherwise}.\end{cases}           Œª  :   S  ‚Üí   Y  œï       normal-:  Œª   normal-‚Üí  S   superscript  Y  œï      \lambda:S\rightarrow Y^{\phi}   is the internal state function. Given a partial state    s  =   (  ‚Ä¶  ,   (   s  i   ,   t   s  i    ,   t   e  i    )   ,  ‚Ä¶  )       s   normal-‚Ä¶    subscript  s  i    subscript  t    s  i     subscript  t    e  i     normal-‚Ä¶     s=(\ldots,(s_{i},t_{si},t_{ei}),\ldots)   , the next state is given by       |  D  |   >  0        D   0    |D|>0       where       q  =   (  s  ,   t  e   )   ‚àà  Q        q   s   subscript  t  e         Q     q=(s,t_{e})\in Q           s  =   (  ‚Ä¶  ,   (   s  i   ,   t   e  i    )   ,  ‚Ä¶  )       s   normal-‚Ä¶    subscript  s  i    subscript  t    e  i     normal-‚Ä¶     s=(\ldots,(s_{i},t_{ei}),\ldots)   is the output function. Given a partial state   œâ   œâ   \omega   ,  \lambda(s)=   \begin{cases} \phi &\text{if } \lambda_{i^*}(s_{i^*})=\phi \\ C_{yy}(\lambda_{i^*}(s_{i^*})) &\text{otherwise}. \end{cases}   Time Passage  Since in a coupled DEVS model with non-empty sub-components, i.e.,    œâ  =   œµ   [  t  ,   t  +   d  t    ]        œâ   subscript  œµ   t    t    d  t        \omega=\epsilon_{[t,t+dt]}   , the number of clocks which trace their elapsed times are multiple, so time passage of the model is noticeable.   For View1   Given a total state      Œî   (  q  ,  œâ  )    =   (   (  ‚Ä¶  ,   (   s  i   ,    t   e  i    +   d  t    )   ,  ‚Ä¶  )   ,    t  e   +   d  t    )    .        normal-Œî   q  œâ      normal-‚Ä¶    subscript  s  i      subscript  t    e  i      d  t     normal-‚Ä¶      subscript  t  e     d  t       \Delta(q,\omega)=((\ldots,(s_{i},t_{ei}+dt),\ldots),t_{e}+dt).   where    q  =   (  s  ,   t  s   ,   t  e   )   ‚àà  Q        q   s   subscript  t  s    subscript  t  e         Q     q=(s,t_{s},t_{e})\in Q     If unit event segment     s  =   (  ‚Ä¶  ,   (   s  i   ,   t   s  i    ,   t   e  i    )   ,  ‚Ä¶  )       s   normal-‚Ä¶    subscript  s  i    subscript  t    s  i     subscript  t    e  i     normal-‚Ä¶     s=(\ldots,(s_{i},t_{si},t_{ei}),\ldots)   is the null event segment , i.e.   œâ   œâ   \omega   , the state trajectory in terms of Timed Event System is       œâ  =   œµ   [  t  ,   t  +   d  t    ]        œâ   subscript  œµ   t    t    d  t        \omega=\epsilon_{[t,t+dt]}       For View2   Given a total state      Œî   (  q  ,  œâ  )    =   (   (  ‚Ä¶  ,   (   s  i   ,   t   s  i    ,    t   e  i    +   d  t    )   ,  ‚Ä¶  )   ,   t  s   ,    t  e   +   d  t    )    .        normal-Œî   q  œâ      normal-‚Ä¶    subscript  s  i    subscript  t    s  i       subscript  t    e  i      d  t     normal-‚Ä¶    subscript  t  s      subscript  t  e     d  t       \Delta(q,\omega)=((\ldots,(s_{i},t_{si},t_{ei}+dt),\ldots),t_{s},t_{e}+dt).   where    S  e  l  e  c  t   (   I  M  M   (  s  )    )       S  e  l  e  c  t    I  M  M  s     Select(IMM(s))     If unit event segment  $\omega$ is the null event segment , i.e. $\omega=\epsilon_{[t, t+dt]}$ , the state trajectory in terms of Timed Event System is   $\Delta(q, \omega)=((\ldots,(s_i,t_{si}, t_{ei}+dt),\ldots),  t_{s}, t_e+dt).$   Remarks   The behavior of a couple DEVS network whose all sub-components are deterministic DEVS models can be non-deterministic if $Select(IMM(s))$ is non-deterministic .   See also   DEVS    Behavior of Atomic DEVS    Simulation Algorithms for Coupled DEVS    Simulation Algorithms for Atomic DEVS   References   [Zeigler84]  [ZKP00]   "   Category:Automata theory  Category:Formal specification languages   