   Local pixel grouping      Local pixel grouping   In image Noise reduction , local pixel grouping is the algorithm to remove noise from images using principal component analysis (PCA).  Image denoising  Sensors such as CCD, CMOS or ultrasonic probe may encapsulate noise signal. Noise reduction is commonly used to improve quality of the image. However, techniques such as smoothing filters and many other algorithms may lose local structure of image while denoising the image. 1 More over, efficiency is also taken into consideration.  Principal component analysis  PCA was invented in 1901 by Karl Pearson , 2 to transform original dataset into linearly uncorrelated PCA domain. PCA works in the way that principal components with larger possible variance are preserved while discarding low variance components.  Image denoising by principal component analysis with local pixel grouping(LPG-PCA) was developed by Lei et. in 2010. 3 It is based on the assumption that the energy of a signal will concentrate on a small subset of the PCA transformed dataset, while the energy of noise will evenly spread over the whole dataset. Assume original image is denoted by   I   I   I   and noise is denoted by   v   v   v   , then the measured image will be     I  v   =   I  +  v        subscript  I  v     I  v     I_{v}=I+v   . In order to denoising    I  v     subscript  I  v    I_{v}   , first a train dataset    X  v     subscript  X  v    X_{v}   must be constructed using local pixel group. Using this    X  v     subscript  X  v    X_{v}   and apply PCA the noise in the image can be reduced.  Construct local pixel group  For each pixel    p  x      p  x    px   in the image, select a    K  ×  K      K  K    K\times K   window centered at    p  x      p  x    px   denoted by       x  =    [    x  1   …   x  m    ]   T    ,   m  =   K  2       formulae-sequence    x   superscript   delimited-[]     subscript  x  1   normal-…   subscript  x  m     normal-T      m   superscript  K  2      x=[x_{1}...x_{m}]^{\rm T},m=K^{2}   and a training window centered at    p  x      p  x    px   . The training window is      L  ×  L   ,  L   >  K         L  L   L   K    L\times L,L>K   . Take the pixels in each possible    K  ×  K      K  K    K\times K   block within the    L  ×  L      L  L    L\times L   training block yields     (    L  -  K   +  1   )   2     superscript      L  K   1   2    (L-K+1)^{2}   samples      x  i   →   v     superscript   normal-→   subscript  x  i    normal-v    \overrightarrow{x_{i}}^{\rm v}   . If the distance between a sample and the center window      x  0   →   v     superscript   normal-→   subscript  x  0    normal-v    \overrightarrow{x_{0}}^{\rm v}   is smaller than some threshold, then accept the sample. So the train dataset    X  v     subscript  X  v    X_{v}   is acquired by put all the accepted sample together as column vectors into a matrix.  Denoising using local pixel group  First step of this part is centralize    X  v     subscript  X  v    X_{v}   and     X  v   ¯     normal-¯   subscript  X  v     \overline{X_{v}}   is obtained. By computing the covariance matrix of     X  v   ¯     normal-¯   subscript  X  v     \overline{X_{v}}   denoted by    Ω   x  ¯      subscript  normal-Ω   normal-¯  x     \Omega_{\overline{x}}   , the PCA transformation matrix    P   x  ¯      subscript  P   normal-¯  x     P_{\overline{x}}   can be obtained. Apply    P   x  ¯      subscript  P   normal-¯  x     P_{\overline{x}}   to     X  v   ¯     normal-¯   subscript  X  v     \overline{X_{v}}   we have        Y  v   ¯   =    P   x  ¯      X  v   ¯         normal-¯   subscript  Y  v       subscript  P   normal-¯  x     normal-¯   subscript  X  v       \overline{Y_{v}}=P_{\overline{x}}\overline{X_{v}}   The covariance matrix of     Y  v   ¯     normal-¯   subscript  Y  v     \overline{Y_{v}}   can also be calculated by       Ω    y  v   ¯    =    1  n      Y  v   ¯       Y  v   ¯   T         subscript  normal-Ω   normal-¯   subscript  y  v         1  n    normal-¯   subscript  Y  v     superscript   normal-¯   subscript  Y  v    normal-T      \Omega_{\overline{y_{v}}}=\frac{1}{n}\overline{Y_{v}}\ \overline{Y_{v}}^{\rm T}   Shrink the coefficient of    Ω    y  ¯   v      subscript  normal-Ω   subscript   normal-¯  y   v     \Omega_{\overline{y}_{v}}   by          Y  ¯   →   ^   k   =     w  k       Y  ¯   →   v  k         subscript   normal-^   normal-→   normal-¯  Y     k      subscript  w  k    superscript   subscript   normal-→   normal-¯  Y    v   k      \hat{\overrightarrow{\overline{Y}}}_{k}=w_{k}\ \overrightarrow{\overline{Y}}_{%
 v}^{k}          w  k   =     Ω   y  ¯     (  k  ,  k  )       Ω   y  ¯     (  k  ,  k  )    +    Ω   v  y     (  k  ,  k  )           subscript  w  k        subscript  normal-Ω   normal-¯  y     k  k         subscript  normal-Ω   normal-¯  y     k  k       subscript  normal-Ω   subscript  v  y     k  k        w_{k}=\frac{\Omega_{\overline{y}}(k,k)}{\Omega_{\overline{y}}(k,k)+\Omega_{v_{%
 y}}(k,k)}   and transform back to     X  ¯   ^     normal-^   normal-¯  X     \hat{\overline{X}}   , the noise in that pixel is reduced. Apply this to all the pixels in the image and the denoised image can be obtained. Experiments by Lei show that LGP-PCA can effectively preserve the image fine structures while smoothing noise. The solution is competitive compared with other algorithms such as Block-matching algorithm .  References  External links   Lei's homepage and matlab code of LPG-PCA   "  Category:2010 introductions  Category:Image noise reduction techniques     ↩  ↩  ↩     