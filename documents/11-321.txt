   Balance puzzle      Balance puzzle   A balance puzzle is one of a number of logic puzzles based on the balancing of similar-looking items—often coins—to determine which holds a different value within a limited number of uses of the balance scales. These differ from puzzles that assign weights to items, in that only the relative mass of these items is relevant.  Premise  A well-known example has nine (or fewer) items, say coins (or balls), that are identical in weight save for one, which in this example is lighter than the others—a counterfeit (an oddball). The difference is only perceptible by weighing them on scale —but only the coins themselves can be weighed. Is it possible to isolate the counterfeit coin with only two weighings?  Solution  To find a solution, we first consider the maximum number of items from which one can find the lighter one in just one weighing. The maximum number possible is three. To find the lighter one we can compare any two coins, leaving the third out. If the two coins tested weigh the same, then the lighter coin must be one of those not on the balance. Otherwise, it is the one indicated as lighter by the balance.  Now, imagine the nine coins in three stacks of three coins each. In one move we can find which of the three stacks is lighter (i.e. the one containing the lighter coin). It then takes only one more move to identify the light coin from within that lighter stack. So in two weighings we can find a single light coin from a set of      3   ×   3    =  9        3  3   9    \scriptstyle 3\,\times\,3\;=\;9   .  By extension, it would take only three weighings to find the odd light coin among 27 coins, and four weighings to find it from 81 coins.  The twelve-coin problem  A more complex version has twelve coins, at least eleven of which are identical. If one that is different, we don't known whether it is heavier or lighter than the others. This time the balance may be used three times to determine if there is a unique coin—and if there is, to isolate it and determine its weight relative to the others. (This puzzle and its solution first appeared in an article in 1945. 1 ) The problem has a simpler variant with three coins in two weighings, and a more complex variant with 39 coins in four weighings.  Solution  This problem has more than one solution. One is easily scalable to a higher number of coins by using base-three numbering: labeling each coin with a different number of three digits in base three, and positioning at the n-th weightings all the coins that are labeled with the n-th digit identical to the label of the plate (with three plates, one on each side of the scale and one off the scale). Other step-by-step procedures are similar to the following. It is less straightforward for this problem, and the second and third weightings depend on what has happened previously, although that need not be the case (see below).   Four coins are put on each side. There are two possibilities:    1. One side is heavier than the other. If this is the case, remove three coins from the heavier side, move three coins from the lighter side to the heavier side, and place three coins that were not weighed the first time on the lighter side. (Remember which coins are which.) There are three possibilities:     1.a) The same side that was heavier the first time is still heavier. This means that either the coin that stayed there is heavier or that the coin that stayed on the lighter side is lighter. Balancing one of these against one of the other ten coins reveals which of these is true, thus solving the puzzle.       1.b) The side that was heavier the first time is lighter the second time. This means that one of the three coins that went from the lighter side to the heavier side is the light coin. For the third attempt, weigh two of these coins against each other: if one is lighter, it is the unique coin; if they balance, the third coin is the light one.       1.c) Both sides are even. This means that one of the three coins that was removed from the heavier side is the heavy coin. For the third attempt, weigh two of these coins against each other: if one is heavier, it is the unique coin; if they balance, the third coin is the heavy one.      2. Both sides are even. If this is the case, all eight coins are identical and can be set aside. Take the four remaining coins and place three on one side of the balance. Place 3 of the 8 identical coins on the other side. There are three possibilities:     2.a) The three remaining coins are lighter. In this case you now know that one of those three coins is the odd one out and that it is lighter. Take two of those three coins and weigh them against each other. If the balance tips then the lighter coin is the odd one out. If the two coins balance then the third coin not on the balance is the odd one out and it is lighter.       2.b) The three remaining coins are heavier. In this case you now know that one of those three coins is the odd one out and that it is heavier. Take two of those three coins and weigh them against each other. If the balance tips then the heavier coin is the odd one out. If the two coins balance then the third coin not on the balance is the odd one out and it is heavier.       2.c) The three remaining coins balance. In this case you just need to weigh the remaining coin against any of the other 11 coins and this tells you whether it is heavier, lighter or the same.     With some outside the box thinking, such as assuming that there are authentic (genuine) coins at hand, a solution may be found quicker. In fact if there is one authentic coin for reference then the suspect coins can be thirteen. Number the coins from 1 to 13 and the authentic coin number 0 and perform these weighings in any order:   0, 1, 4, 5, 6 against 7, 10, 11, 12, 13  0, 2, 4, 10, 11 against 5, 8, 9, 12, 13  0, 3, 8, 10, 12 against 6, 7, 9, 11, 13   If the scales are only off balance once, then it must be one of the coins 1, 2, 3—which only appear in one weighing. If there is never balance then it must be one of the coins 10–13 that appear in all weighings. Picking out the one counterfeit coin corresponding to each of the 27 outcomes is always possible (13 coins one either too heavy or too light is 26 possibilities) except when all weighings are balanced, in which case there is no counterfeit coin (or its weight is correct). If coins 0 and 13 are deleted from these weighings they give one generic solution to the 12-coin problem.  If two coins are counterfeit, this procedure, in general, does not pick either of these, but rather some authentic coin. For instance, if both coins 1 and 2 are counterfeit, either coin 4 or 5 is wrongly picked.  In a relaxed variation of this puzzle, one only needs to find the counterfeit coin without necessarily being able to tell its weight relative to the others. In this case, clearly any solution that previously weighed every coin at some point can be adapted to handle one extra coin. This coin is never put on the scales, but if all weighings are balanced it is picked as the counterfeit coin. It is not possible to do any better, since any coin that is put on the scales at some point and picked as the counterfeit coin can then always be assigned weight relative to the others.  Generalizations  The generalization of this problem is described in 2  Let    ℝ  n     superscript  ℝ  n    \mathbb{R}^{n}   be the   n   n   n   -dimensional Euclidean space ,    [   e  1   ,   e  2   ]      superscript  normal-e  1    superscript  normal-e  2     [\mathrm{e}^{1},\mathrm{e}^{2}]   be the inner product of vectors     e  1     superscript  normal-e  1    \mathrm{e}^{1}   and    e  2     superscript  normal-e  2    \mathrm{e}^{2}   from     ℝ  n   ,     superscript  ℝ  n    \mathbb{R}^{n},   For vectors    e  =   (   e  1   ,  …  ,   e  n   )   ∈   ℝ  n         normal-e    subscript  e  1   normal-…   subscript  e  n          superscript  ℝ  n      \mathrm{e}=(e_{1},\dots,e_{n})\in\mathbb{R}^{n}   and subsets     E  =   {   e  j   }   ⊆   ℝ  n    ,        E    superscript  normal-e  j          superscript  ℝ  n      E=\{\mathrm{e}^{j}\}\subseteq\mathbb{R}^{n},   the operations     (  ⋅  )   *     superscript  normal-⋅     (\cdot)^{*}   and     (  ⋅  )   +     superscript  normal-⋅     (\cdot)^{+}   are defined, respectively, as     e  *   =    (   s  i  g  n   (   e  i   )    )   i        superscript  normal-e     subscript    s  i  g  n   subscript  e  i    i     \mathrm{e}^{*}=(sign(e_{i}))_{i}   ;     E  *   =   {    (   e  j   )   *   }        superscript  E      superscript   superscript  normal-e  j        E^{*}=\{(\mathrm{e}^{j})^{*}\}   ,     e  +   =    (   |   s  i  g  n   (   e  i   )    |   )   i        superscript  normal-e     subscript      s  i  g  n   subscript  e  i     i     \mathrm{e}^{+}=(|sign(e_{i})|)_{i}   ,      E  +   =   {    (   e  j   )   +   }    .       superscript  E      superscript   superscript  normal-e  j        E^{+}=\{(\mathrm{e}^{j})^{+}\}.   By    I  n     superscript  I  n    I^{n}   we shall denote the discrete [−1; 1]-cube in    ℝ  n     superscript  ℝ  n    \mathbb{R}^{n}   ; i.e., the set of all sequences of length   n   n   n   over the alphabet    I  =   {   -  1   ,  0  ,  1  }       I     1   0  1     I=\{-1,0,1\}   The set     I  t  n   =   {   x  ∈   I  n    |    w   (  x  )    ≤  t   }   ⊆   I  n          subscript   superscript  I  n   t    conditional-set    normal-x   superscript  I  n        w  normal-x   t          superscript  I  n      I^{n}_{t}=\{\mathrm{x}\in I^{n}|w(\mathrm{x})\leq t\}\subseteq I^{n}   is the discrete ball of radius   t   t   t   (in the Hamming metric     w   (  )       w     w()   ) with centre at the point   0.   0.   \mathrm{0}.   Relative weights of   n   n   n   objects are given by a vector     x  =   (   x  1   ,  …  ,   x  n   )   ∈   I  n    ,        normal-x    subscript  x  1   normal-…   subscript  x  n          superscript  I  n      \mathrm{x}=(x_{1},\dots,x_{n})\in I^{n},   which defines the configurations of weights of the objects: the   i   i   i   th object has standard weight if      x  i   =  0   ;       subscript  x  i   0    x_{i}=0;   the weight of the   i   i   i   th object is greater (smaller) by a constant (unknown) value if     x  i   =  1       subscript  x  i   1    x_{i}=1   (respectively,     x  i   =   -  1        subscript  x  i     1     x_{i}=-1   ). The vector    x  +     superscript  normal-x     \mathrm{x}^{+}   characterizes the types of objects: the standard type, the non-standard type (i.e., configurations of types), and it does not contain information about relative weights of non-standard objects.  A weighing (a check) is given by a vector     h  ∈   I  n    ;      normal-h   superscript  I  n     \mathrm{h}\in I^{n};   the result of a weighing for a situation    x  ∈   I  n       normal-x   superscript  I  n     \mathrm{x}\in I^{n}   is      s   (  x  ;  h  )    =   s  i  g  n   (   [  x  ;  h  ]   )     .        s   normal-x  normal-h      s  i  g  n   normal-x  normal-h      s(\mathrm{x};\mathrm{h})=sign([\mathrm{x};\mathrm{h}]).   The weighing given by a vector    h  =   (   h  1   ,  …  ,   h  n   )       normal-h    subscript  h  1   normal-…   subscript  h  n      \mathrm{h}=(h_{1},\dots,h_{n})   has the following interpretation: for a given check the   i   i   i   th object participates in the weighing if     h  i   ≠  0       subscript  h  i   0    h_{i}\neq 0   ; it is put on the left balance pan if     h  i   <  0       subscript  h  i   0    h_{i}<0   and is put on the right pan if     h  i   >  0.       subscript  h  i   0.    h_{i}>0.   For each weighing   h   normal-h   \mathrm{h}   , both pans should contain the same number of objects: if on some pan the number of objects is smaller than as it should be, then it receives some     r   (  h  )    =   [  h  ,   1  …  1   ]         r  h    h    1  normal-…  1      r(h)=[h,1\dots 1]   reference objects. The result of a weighing    s   (  x  ;  h  )       s   normal-x  normal-h     s(\mathrm{x};\mathrm{h})   describes the following cases: the balance if     s   (  x  ;  h  )    =  0        s   normal-x  normal-h    0    s(\mathrm{x};\mathrm{h})=0   , the left pan outweights the right one if     s   (  x  ;  h  )    =   -  1         s   normal-x  normal-h      1     s(\mathrm{x};\mathrm{h})=-1   , and the right pan outweights the left one if     s   (  x  ;  h  )    =  1.        s   normal-x  normal-h    1.    s(\mathrm{x};\mathrm{h})=1.   The incompleteness of initial information about the distribution of weights of a group of objects is characterized by the set of admissible distributions of weights of objects     Z  ⊆   I  n    ,      Z   superscript  I  n     Z\subseteq I^{n},   which is also called the set of admissible situations, the elements of    z  ∈  Z      z  Z    z\in Z   are called admissible situations.  Each weighing h induces the partition of the set    I  n     superscript  I  n    I^{n}   by the plane ( hyperplane )     [  x  ;  h  ]   =  0       normal-x  normal-h   0    [\mathrm{x};\mathrm{h}]=0   into three parts    W   (  s  |  I  ;  h  )   =   {  x  ∈  I  |  s   (  x  ;  h  )   =  s  }      fragments  W   fragments  normal-(  s  normal-|  I  normal-;  h  normal-)     fragments  normal-{  x   I  normal-|  s   fragments  normal-(  x  normal-;  h  normal-)    s  normal-}     W(s|I;\mathrm{h})=\{\mathrm{x}\in I|s(\mathrm{x};\mathrm{h})=s\}   ,     s  ∈  I   ,      s  I    s\in I,   and defines the corresponding partition of the set    Z  =  W   (  0  |  Z  ,  h  )   +  W   (  1  |  Z  ,  h  )   +  W   (  -  1  |  Z  ,  h  )   ,     fragments  Z   W   fragments  normal-(  0  normal-|  Z  normal-,  h  normal-)    W   fragments  normal-(  1  normal-|  Z  normal-,  h  normal-)    W   fragments  normal-(   1  normal-|  Z  normal-,  h  normal-)   normal-,    Z=W(0|Z,\mathrm{h})+W(1|Z,\mathrm{h})+W(-1|Z,\mathrm{h}),   where    W   (  s  |  Z  ,  h  )   =  W   (  s  |  I  ,  h  )   ∩  Z  .     fragments  W   fragments  normal-(  s  normal-|  Z  normal-,  h  normal-)    W   fragments  normal-(  s  normal-|  I  normal-,  h  normal-)    Z  normal-.    W(s|Z,\mathrm{h})=W(s|I,\mathrm{h})\cap Z.     Definition 1 . A weighing algorithm (WA)   𝒜   𝒜   \mathcal{A}   of length   m   m   m   is a sequence    𝒜  =  <   A  1   ,  …  ,   A  m   >  ,     fragments  A     subscript  normal-A  1   normal-,  normal-…  normal-,   subscript  normal-A  m    normal-,    \mathcal{A}=<\mathrm{A}_{1},\dots,\mathrm{A}_{m}>,   where     A  j   :    I   j  -  1    →   I  n       normal-:   subscript  normal-A  j    normal-→   superscript  I    j  1     superscript  I  n      \mathrm{A}_{j}:I^{j-1}\to I^{n}   is the function determining the check       h  j   =    A  j    (   s   j  -  1    )     ;    h  j   ∈   I  n     ,     formulae-sequence     superscript  normal-h  j      subscript  normal-A  j    superscript  s    j  1         superscript  normal-h  j    superscript  I  n      \mathrm{h}^{j}=\mathrm{A}_{j}(s^{j-1});\mathrm{h}^{j}\in I^{n},   at each   j   j   j   th step,     j  =   1  ,  2  ,  …  ,  m    ,      j   1  2  normal-…  m     j=1,2,\dots,m,   of the algorithm from the results of     s   j  -  1    =   (   s  1   ,  …  ,   s   j  -  1    )   ∈   I   j  -  1           superscript  normal-s    j  1      subscript  s  1   normal-…   subscript  s    j  1           superscript  I    j  1       \mathrm{s}^{j-1}=(s_{1},\dots,s_{j-1})\in I^{j-1}   weighings at the previous steps (     h  1   =    A  1    (  )         superscript  normal-h  1      subscript  normal-A  1       \mathrm{h}^{1}=\mathrm{A}_{1}()   is a given initial check).  Let    S   (  Z  ,  𝒜  )       S   Z  𝒜     S(Z,\mathcal{A})   be the set of all    (  Z  ,  𝒜  )     Z  𝒜    (Z,\mathcal{A})   -syndromes and    W   (  s  |  𝒜  )   ⊆  I     fragments  W   fragments  normal-(  s  normal-|  A  normal-)    I    W(s|\mathcal{A})\subseteq I   be the set of situations with the same syndrome   s   s   s   ; i.e.,    W   (  s  |  𝒜  )   =   {  z  ∈   I  m   |  s   (  z  |  𝒜  )   =  s  }      fragments  W   fragments  normal-(  s  normal-|  A  normal-)     fragments  normal-{  z    superscript  I  m   normal-|  s   fragments  normal-(  z  normal-|  A  normal-)    s  normal-}     W(s|\mathcal{A})=\{\mathrm{z}\in I^{m}|s(z|\mathcal{A})=s\}   ;    W   (  s  |  Z  ;  𝒜  )   =  W   (  s  |  𝒜  )   ∩  Z  .     fragments  W   fragments  normal-(  s  normal-|  Z  normal-;  A  normal-)    W   fragments  normal-(  s  normal-|  A  normal-)    Z  normal-.    W(s|Z;\mathcal{A})=W(s|\mathcal{A})\cap Z.     Definition 2 . A WA   𝒜   𝒜   \mathcal{A}   is said to: a) identify the situations in a set   Z   Z   Z   if the condition    |  W   (  s  |  Z  ,  𝒜  |  =  1      fragments  normal-|  W   fragments  normal-(  s  normal-|  Z  normal-,  A  normal-|   1     |W(s|Z,\mathcal{A}|=1   is satisfied for all     s  ∈   S   (   Z  𝒜   )     ;      s    S    Z  𝒜      s\in S(Z\mathcal{A});   b) identify the types of objects in a set   Z   Z   Z   if the condition    |   W  +    (  s  |  Z  𝒜  )   |  =  1     fragments  normal-|   superscript  W     fragments  normal-(  s  normal-|  Z  A  normal-)   normal-|   1    |W^{+}(s|Z\mathcal{A})|=1   is satisfied for all     s  ∈   S   (   Z  𝒜   )     .      s    S    Z  𝒜      s\in S(Z\mathcal{A}).     It is proofed in 3 that for so-called suitable sets   Z   Z   Z   an algorithm of identification the types identifies also the situations in    Z  .    Z   Z.     The perfect algorithms with parameters   n   n   n   = 11,   m   m   m   = 5,   t   t   t   = 2 are constructed in, 4 which correspond to the parameters of the perfect ternary Golay code (Virtakallio-Golay code). A static algorithm (weighing code) with such parameters does not exist.  References  In literature  Niobe, the protagonist of Piers Anthony 's novel  With a Tangled Skein , must solve the twelve-coin variation of this puzzle to find her son in Hell : Satan has disguised the son to look identical to eleven other demons, and he is heavier or lighter depending on whether he is cursed to lie or able to speak truthfully. The solution in the book follows the given example 1.c.  External links   A playable example of the first puzzle  A playable example of the second puzzle  Two-pan balance and generalized counterfeit coin problem  A software implementation that solves the problem for arbitrary number of items and measurements written in Python   "  Category:Logic puzzles  Category:Algorithms     Grossman, Howard (1945). Scripta Mathematica  XI . ↩  ↩       