   Polyharmonic spline      Polyharmonic spline   Polyharmonic splines are used for function approximation and data interpolation . They are very useful for interpolation of scattered data in many dimensions. A special case are thin plate splines . 1 2  Definition        y   (  𝐱  )    =     ∑   i  =  1   N      w  i    ϕ   (   ||   𝐱  -   𝐜  i    ||   )     +     𝐯  T     [     1      𝐱     ]           y  𝐱       superscript   subscript     i  1    N      subscript  w  i   ϕ   norm    𝐱   subscript  𝐜  i          superscript  𝐯  T     1    𝐱        y(\mathbf{x})\,=\,\sum_{i=1}^{N}w_{i}\,\phi(||\mathbf{x}-\mathbf{c}_{i}||)+%
 \mathbf{v}^{T}\,\begin{bmatrix}1\\
 \mathbf{x}\end{bmatrix}      where  (Figure)  Polyharmonic basis functions        𝐱  =    [   x  1   ,   x  2   ,  ⋯  ,   x   n  x    ]   T       𝐱   superscript    subscript  x  1    subscript  x  2   normal-⋯   subscript  x    n  x     T     \mathbf{x}=[x_{1},x_{2},\cdots,x_{nx}]^{T}   is a real-valued vector of nx independent variables,       𝐜  i   =    [   c   1  ,  i    ,   c   2  ,  i    ,  ⋯  ,   c    n  x   ,  i    ]   T        subscript  𝐜  i    superscript    subscript  c   1  i     subscript  c   2  i    normal-⋯   subscript  c     n  x   i     T     \mathbf{c}_{i}=[c_{1,i},c_{2,i},\cdots,c_{nx,i}]^{T}   are N vectors of the same size as   𝐱   𝐱   \mathbf{x}   (often called centers) that the interpolated curve shall pass      𝐰  =    [   w  1   ,   w  2   ,  ⋯  ,   w  N   ]   T       𝐰   superscript    subscript  w  1    subscript  w  2   normal-⋯   subscript  w  N    T     \mathbf{w}=[w_{1},w_{2},\cdots,w_{N}]^{T}   are the N weights of the basis functions.      𝐯  =    [   v  1   ,   v  2   ,  ⋯  ,   v    n  x   +  1    ]   T       𝐯   superscript    subscript  v  1    subscript  v  2   normal-⋯   subscript  v      n  x   1     T     \mathbf{v}=[v_{1},v_{2},\cdots,v_{nx+1}]^{T}   are the nx+1 weights of the polynomial.  The linear polynomial with the weighting factors   𝐯   𝐯   \mathbf{v}   improves the interpolation close to the "boundary" and especially the extrapolation "outside" of the centers    𝐜  i     subscript  𝐜  i    \mathbf{c}_{i}   . If this is not desired, this term can also be removed (see also figure below).   The basis functions of polyharmonic splines are radial basis functions of the form:           ϕ   (  r  )    =   {      r  k        with  k   =   1  ,  3  ,  5  ,  …    ,         r  k    ln   (  r  )         with  k   =   2  ,  4  ,  6  ,  …              r  =    ||   𝐱  -   𝐜  i    ||   2   =       (   𝐱  -   𝐜  i    )   T     (   𝐱  -   𝐜  i    )                ϕ  r    cases   superscript  r  k       with  k    1  3  5  normal-…       superscript  r  k     r        with  k    2  4  6  normal-…            r   subscript   norm    𝐱   subscript  𝐜  i     2             superscript    𝐱   subscript  𝐜  i    T     𝐱   subscript  𝐜  i           \begin{matrix}\phi(r)=\begin{cases}r^{k}&\mbox{with }k=1,3,5,\dots,\\
 r^{k}\ln(r)&\mbox{with }k=2,4,6,\dots\end{cases}\\
 r=||\mathbf{x}-\mathbf{c}_{i}||_{2}=\sqrt{(\mathbf{x}-\mathbf{c}_{i})^{T}\,(%
 \mathbf{x}-\mathbf{c}_{i})}\end{matrix}      Other values of exponent k are not useful (such as     ϕ   (  r  )    =   r  2         ϕ  r    superscript  r  2     \phi(r)=r^{2}   ), because a solution of the interpolation problem might no longer exist. To avoid problems at r=0 (since ln(0) = -∞), the polyharmonic splines with the natural logarithm might be implemented as:        ϕ   (  r  )    =   {       r   k  -  1     ln   (   r  r   )         for  r   <  1         r  k    ln   (  r  )         for  r   ≥  1             ϕ  r    cases     superscript  r    k  1       superscript  r  r         for  r   1      superscript  r  k     r        for  r   1      \phi(r)=\begin{cases}r^{k-1}\ln(r^{r})&\mbox{for }r<1\\
 r^{k}\ln(r)&\mbox{for }r\geq 1\end{cases}      The weights    w  i     subscript  w  i    w_{i}   and    v  j     subscript  v  j    v_{j}   are determined such that the function passes through   N   N   N   given points    (   𝐜  i   ,   y  i   )      subscript  𝐜  i    subscript  y  i     (\mathbf{c}_{i},y_{i})   (i=1,2,...,N) and fulfill the     n  x   +  1        n  x   1    nx+1   orthogonality conditions:       0  =   ∑   i  =  1   N    w  i   ,  0  =   ∑   i  =  1   N     w  i      c   j  ,  i      (  j  =  1  ,  2  ,  …  ,  n  x  )      fragments  0    superscript   subscript     i  1    N    subscript  w  i   normal-,  0    superscript   subscript     i  1    N    subscript  w  i    subscript  c   j  i     fragments  normal-(  j   1  normal-,  2  normal-,  normal-…  normal-,  n  x  normal-)     0=\sum_{i=1}^{N}w_{i},\;\;0=\sum_{i=1}^{N}w_{i}\,c_{j,i}\;\;\;(j=1,2,...,nx)      To compute the weights, a symmetric, linear system of equations has to be solved:           [     𝐀     𝐕  T       𝐕    𝟎     ]      [     𝐰      𝐯     ]     =   [     𝐲      𝟎     ]            𝐀   superscript  𝐕  T     𝐕  0      𝐰    𝐯       𝐲    0      \begin{bmatrix}\mathbf{A}&\mathbf{V}^{T}\\
 \mathbf{V}&\mathbf{0}\end{bmatrix}\;\begin{bmatrix}\mathbf{w}\\
 \mathbf{v}\end{bmatrix}\;=\;\begin{bmatrix}\mathbf{y}\\
 \mathbf{0}\end{bmatrix}\;\;\;\;      where         A   i  ,  j    =   ϕ   (   ||    𝐜  i   -   𝐜  j    ||   )     ,    𝐕  =   [     1    1    ⋯    1       𝐜  1      𝐜  2     ⋯     𝐜  N      ]    ,   𝐲  =    [   y  1   ,   y  2   ,  ⋯  ,   y  N   ]   T        formulae-sequence     subscript  A   i  j      ϕ   norm     subscript  𝐜  i    subscript  𝐜  j        formulae-sequence    𝐕    1  1  normal-⋯  1     subscript  𝐜  1    subscript  𝐜  2   normal-⋯   subscript  𝐜  N        𝐲   superscript    subscript  y  1    subscript  y  2   normal-⋯   subscript  y  N    T       A_{i,j}=\phi(||\mathbf{c}_{i}-\mathbf{c}_{j}||),\;\;\;\mathbf{V}=\begin{%
 bmatrix}1&1&\cdots&1\\
 \mathbf{c}_{1}&\mathbf{c}_{2}&\cdots&\mathbf{c}_{N}\end{bmatrix},\;\;\;\mathbf%
 {y}=[y_{1},y_{2},\cdots,y_{N}]^{T}      Under very mild conditions (essentially, that at least nx+1 points are not in a subspace; e.g. for nx=2 that at least 3 points are not on a straight line), the system matrix of the linear system of equations is nonsingular and therefore a unique solution of the equation system exists.  Once the weights are determined, interpolation requires to just evaluate the top most formula for the provided   𝐱   𝐱   \mathbf{x}   .  Many practical details to implement and use polyharmonic splines are given in the book of Fasshauer. 3 In Iske 4 polyharmonic splines are treated as special cases of other multiresolution methods in scattered data modelling.  Examples  The next figure shows the interpolation through four points (marked by "circles") using different types of polyharmonic splines. The "curvature" of the interpolated curves grows with the order of the spline and the extrapolation at the left boundary (x 2) which gives a good interpolation as well. Finally, the figure includes also the non-polyharmonic spline phi = r 2 to demonstrate, that this radial basis function is not able to pass through the predefined points (the linear equation has no solution and is solved in a least squares sense).  (Figure)  Interpolation with different polyharmonic splines that shall pass the 4 predefined points marked by a circle (the interpolation with phi = r 2 is not useful, since the linear equation system of the interpolation problem has no solution; it is solved in a least squares sense, but then does not pass the centers)   The next figure shows the same interpolation as in the first figure, with the only exception that the points to be interpolated are scaled by a factor of 100 (and the case phi = r 2 is no longer included). Since phi = (scale*r) k = (scale k )*r k , the factor (scale k ) can be extracted from matrix A of the linear equation system and therefore the solution is not influenced by the scaling. This is different for the logarithmic form of the spline, although the scaling has not much influence. This analysis is reflected in the figure, where the interpolation shows not much differences. Note, for other radial basis functions, such as phi = exp(-k*r 2 ) with k=1, the interpolation is no longer reasonable and it would be necessary to adapt k.  (Figure)  The same interpolation as in the first figure, but the points to be interpolated are scaled by 100   The next figure shows the same interpolation as in the first figure, with the only exception that the polynomial term of the function is not taken into account (and the case phi = r 2 is no longer included). As can be seen from the figure, the extrapolation for x e^{-k\cdot r^2} needs to be tuned, so that k is selected according to the underlying grid of the independent variables. If this grid is non-uniform, a proper selection of k to achieve a good interpolation result is difficult or impossible.  Main disadvantages are:   To determine the weights, a linear system of equations must be solved, which is non-sparse . The solution of a non-sparse linear system becomes no longer practical if the dimension n is larger as about 1000 (since the storage requirements are O(n 2 ) and the number of operations to solve the linear system is O(n 3 ). For example n=10000 requires about 100 Mbyte of storage and 1000 Gflops of operations).    To perform the interpolation of M data points requires operations in the order of O(M*N). In many applications, like image processing, M is much larger than N, and if both numbers are large, this is no longer practical.   Recently, methods have been developed to overcome the aforementioned difficulties. For example Beatson et al. 5 present a method to interpolate polyharmonic splines at one point in 3 dimensions in O(log(N)) instead of O(N).  See also   Inverse distance weighting  Radial basis function  Subdivision surface (emerging alternative to spline-based surfaces)  Spline  Thin plate spline (a special case of a polyharmonic spline)   References  "  Category:Splines  Category:Interpolation  Category:Multivariate interpolation     R.L. Harder and R.N. Desmarais: Interpolation using surface splines . Journal of Aircraft, 1972, Issue 2, pp. 189-191 ↩  J. Duchon: Splines minimizing rotation-invariant semi-norms in Sobolev spaces. Constructive Theory of Functions of Several Variables, W. Schempp and K. Zeller (eds), Springer, Berlin, pp.85-100 ↩  G.F. Fasshauer G.F.: Meshfree Approximation Methods with MATLAB . World Scientific Publishing Company, 2007, ISPN-10: 9812706348 ↩  A. Iske: Multiresolution Methods in Scattered Data Modelling , Lecture Notes in Computational Science and Engineering, 2004, Vol. 37, ISBN 3-540-20479-2, Springer-Verlag, Heidelberg. ↩  R.K. Beatson, M.J.D. Powell, and A.M. Tan A.M.: Fast evaluation of polyharmonic splines in three dimensions . IMA Journal of Numerical Analysis, 2007, 27, pp. 427-450. ↩     