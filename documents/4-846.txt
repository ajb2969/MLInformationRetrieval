   Rotation matrix      Rotation matrix   In linear algebra , a rotation matrix is a matrix that is used to perform a rotation in Euclidean space . For example the matrix      R  =   [      cos  θ      -   sin  θ         sin  θ      cos  θ      ]       R      θ       θ        θ     θ       R=\begin{bmatrix}\cos\theta&-\sin\theta\\
 \sin\theta&\cos\theta\\
 \end{bmatrix}     rotates points in the xy - Cartesian plane counter-clockwise through an angle   θ   θ   θ   about the origin of the Cartesian coordinate system . To perform the rotation using a rotation matrix   R   R   R   , the position of each point must be represented by a column vector  v , containing the coordinates of the point. A rotated vector is obtained by using the matrix multiplication    R   R   R    v .  Rotation matrices also provide a means of numerically representing an arbitrary rotation of the axes about the origin, without appealing to angular specification. These coordinate rotations are a natural way to express the orientation of a camera, or the attitude of a spacecraft, relative to a reference axes-set. Once an observational platform's local X-Y-Z axes are expressed numerically as three direction vectors in world coordinates, they together comprise the columns of the rotation matrix   R   R   R   (world → platform) that transforms directions (expressed in world coordinates) into equivalent directions expressed in platform-local coordinates.  The examples in this article apply to active rotations of vectors  counter-clockwise in a right-handed coordinate system by pre-multiplication . If any one of these is changed (e.g. rotating axes instead of vectors, i.e. a passive transformation ), then the inverse of the example matrix should be used, which coincides precisely with its transpose .  Since matrix multiplication has no effect on the zero vector (the coordinates of the origin), rotation matrices can only be used to describe rotations about the origin of the coordinate system. Rotation matrices provide an algebraic description of such rotations, and are used extensively for computations in geometry , physics , and computer graphics .  Rotation matrices are square matrices , with real entries. More specifically, they can be characterized as orthogonal matrices with determinant 1; that is, a square matrix   R   R   R   is a rotation matrix if  R −1 }} and     d  e  t  R   =  1        d  e  t  R   1    detR=1   .  In some literature, the term rotation is generalized to include improper rotations , characterized by orthogonal matrices with determinant −1 (instead of +1). These combine proper rotations with reflections (which invert orientation ). In other cases, where reflections are not being considered, the label proper may be dropped. This convention is followed in this article.  The set of all orthogonal matrices of size   n   n   n   with determinant +1 forms a group known as the special orthogonal group     S  O   (  n  )       S  O  n    SO(n)   . The most important special case is that of the rotation group SO(3) . The set of all orthogonal matrices of size   n   n   n   with determinant +1 or -1 forms the (general) orthogonal group     O   (  n  )       O  n    O(n)   .  In two dimensions  (Figure)  A counterclockwise rotation of a vector through angle   θ   θ   θ   . The vector is initially aligned with the   x   x   x   -axis.   In two dimensions, every rotation matrix has the following form,       R   (  θ  )    =   [      cos  θ      -   sin  θ         sin  θ      cos  θ      ]         R  θ       θ       θ        θ     θ       R(\theta)=\begin{bmatrix}\cos\theta&-\sin\theta\\
 \sin\theta&\cos\theta\\
 \end{bmatrix}   .  This rotates column vectors by means of the following matrix multiplication ,       [      x  ′        y  ′      ]   =    [      cos  θ      -   sin  θ         sin  θ      cos  θ      ]    [     x      y     ]           superscript  x  normal-′      superscript  y  normal-′           θ       θ        θ     θ       x    y       \begin{bmatrix}x^{\prime}\\
 y^{\prime}\\
 \end{bmatrix}=\begin{bmatrix}\cos\theta&-\sin\theta\\
 \sin\theta&\cos\theta\\
 \end{bmatrix}\begin{bmatrix}x\\
 y\\
 \end{bmatrix}   .  So the coordinates ( x',y ') of the point ( x,y ) after rotation are       x  ′   =    x   cos  θ    -   y   sin   θ           superscript  x  normal-′       x    θ      y    θ       x^{\prime}=x\cos\theta-y\sin\theta\,   ,       y  ′   =    x   sin  θ    +   y   cos   θ           superscript  y  normal-′       x    θ      y    θ       y^{\prime}=x\sin\theta+y\cos\theta\,   .  The direction of vector rotation is counterclockwise if   θ   θ   θ   is positive (e.g. 90°), and clockwise if   θ   θ   θ   is negative (e.g. −90°). Thus the clockwise rotation matrix is found as       R   (   -  θ   )    =    [      cos  θ      sin  θ        -   sin  θ       cos  θ      ]          R    θ        θ     θ         θ      θ       R(-\theta)=\begin{bmatrix}\cos\theta&\sin\theta\\
 -\sin\theta&\cos\theta\\
 \end{bmatrix}\,   .  Note that the two-dimensional case is the only non-trivial (i.e. not ) case where the rotation matrices group is commutative, so that it does not matter in which order multiple rotations are performed. An alternative convention uses rotating axes, 1 and the above matrices also represent a rotation of the axes clockwise through an angle   θ   θ   θ   .  Non-standard orientation of the coordinate system  If a standard right-handed  Cartesian coordinate system is used, with the  to the right and the  up, the rotation    R   (  θ  )       R  θ    R(θ)   is counterclockwise. If a left-handed Cartesian coordinate system is used, with   x   x   x   directed to the right but   y   y   y   directed down,    R   (  θ  )       R  θ    R(θ)   is clockwise. Such non-standard orientations are rarely used in mathematics but are common in 2D computer graphics , which often have the origin in the top left corner and the  down the screen or page. 2  See below for other alternative conventions which may change the sense of the rotation produced by a rotation matrix.  Common rotations  Particularly useful are the matrices for 90°, 180°, and 270° rotations,       R   (   90  ∘   )        =   [     0     -  1       1    0     ]       (90° counterclockwise rotation)  ,        R   (   180  ∘   )        =   [      -  1     0      0     -  1      ]       (180° rotation in either direction – a half-turn)  ,        R   (   270  ∘   )        =   [     0    1       -  1     0     ]       (270° counter-clockwise rotation, the same as a 90° clockwise rotation)  .           R   superscript  90       absent    0    1     1  0     (90° counterclockwise rotation)      R   superscript  180       absent      1   0    0    1      (180° rotation in either direction – a half-turn)      R   superscript  270       absent    0  1      1   0     (270° counter-clockwise rotation, the same as a 90° clockwise rotation)     \begin{aligned}\displaystyle R(90^{\circ})&\displaystyle=\begin{bmatrix}0&-1\\
 1&0\\
 \end{bmatrix}&\displaystyle\text{(90° counterclockwise rotation)},\\
 \displaystyle R(180^{\circ})&\displaystyle=\begin{bmatrix}-1&0\\
 0&-1\\
 \end{bmatrix}&\displaystyle\text{(180° rotation in either direction – a half-%
 turn)},\\
 \displaystyle R(270^{\circ})&\displaystyle=\begin{bmatrix}0&1\\
 -1&0\\
 \end{bmatrix}&\displaystyle\text{(270° counter-clockwise rotation, the same as%
  a 90° clockwise rotation)}.\end{aligned}     In three dimensions  Basic rotations  A basic rotation (also called elemental rotation) is a rotation about one of the axes of a Coordinate system. The following three basic rotation matrices rotate vectors by an angle θ about the x , y , or z axis, in three dimensions, using the right hand rule —which codifies their alternating signs. ( The same matrices can also represent a clockwise rotation of the axes 3 )       R  x    (  θ  )        subscript  R  x   θ    \displaystyle R_{x}(\theta)     For column vectors , each of these basic vector rotations appears counter-clockwise when the axis about which they occur points toward the observer, the coordinate system is right-handed, and the angle   θ   θ   θ   is positive. , for instance, would rotate toward the  a vector aligned with the , as can easily be checked by operating with on the vector    (  1  ,  0  ,  0  )     1  0  0    (1,0,0)   :        R  z    (   90  ∘   )    [     1      0      0     ]    =    [      cos   90  ∘       -   sin   90  ∘       0       sin   90  ∘       cos   90  ∘      0      0    0    1     ]    [     1      0      0     ]    =    [     0     -  1     0      1    0    0      0    0    1     ]    [     1      0      0     ]    =   [     0      1      0     ]            subscript  R  z    superscript  90      1    0    0            superscript  90          superscript  90      0       superscript  90        superscript  90     0    0  0  1      1    0    0              0    1   0    1  0  0    0  0  1      1    0    0            0    1    0       R_{z}(90^{\circ})\begin{bmatrix}1\\
 0\\
 0\\
 \end{bmatrix}=\begin{bmatrix}\cos 90^{\circ}&-\sin 90^{\circ}&0\\
 \sin 90^{\circ}&\cos 90^{\circ}&0\\
 0&0&1\\
 \end{bmatrix}\begin{bmatrix}1\\
 0\\
 0\\
 \end{bmatrix}=\begin{bmatrix}0&-1&0\\
 1&0&0\\
 0&0&1\\
 \end{bmatrix}\begin{bmatrix}1\\
 0\\
 0\\
 \end{bmatrix}=\begin{bmatrix}0\\
 1\\
 0\\
 \end{bmatrix}     This is similar to the rotation produced by the above mentioned  rotation matrix. See below for alternative conventions which may apparently or actually invert the sense of the rotation produced by these matrices.  General rotations  Other rotation matrices can be obtained from these three using matrix multiplication . For example, the product      R  =    R  z    (  α  )    R  y    (  β  )    R  x    (  γ  )        R     subscript  R  z   α   subscript  R  y   β   subscript  R  x   γ     R=R_{z}(\alpha)\,R_{y}(\beta)\,R_{x}(\gamma)\,\!   represents a rotation whose yaw, pitch, and roll angles are    α  ,  β     α  β    α,β   and   γ   γ   γ   , respectively. More formally, it is an intrinsic rotation whose Tait-Bryan angles are    α  ,  β  ,  γ     α  β  γ    α,β,γ   , about axes    z  ,  y  ,  x     z  y  x    z,y,x   respectively. Similarly, the product      R  =    R  y    (  γ  )    R  x    (  β  )    R  y    (  α  )        R     subscript  R  y   γ   subscript  R  x   β   subscript  R  y   α     R=R_{y}(\gamma)\,R_{x}(\beta)\,R_{y}(\alpha)\,\!   represents an extrinsic rotation whose Euler angles are    α  ,  β  ,  γ     α  β  γ    α,β,γ   about axes    y  ,  x  ,  y     y  x  y    y,x,y   .  These matrices produce the desired effect only if they are used to pre-multiply column vectors (see Ambiguities for more details).  Conversion from and to axis-angle  Every rotation in three dimensions is defined by its axis — a direction that is left fixed by the rotation — and its angle — the amount of rotation about that axis ( Euler rotation theorem ).  There are several methods to compute an axis and an angle from a rotation matrix (see also axis-angle ). Here, we only describe the method based on the computation of the eigenvectors and eigenvalues of the rotation matrix. It is also possible to use the trace of the rotation matrix.  Determining the axis  (Figure)  A rotation R around axis u can be decomposed using 3 endomorphisms P , (I − P) , and Q (click to enlarge).   Given a    3  ×  3      3  normal-×  3    3×3   rotation matrix   R   R   R   , a vector   𝐮   𝐮   \mathbf{u}   parallel to the rotation axis must satisfy        R  𝐮   =   𝐮    ,        R  u   u    R\textbf{u}=\textbf{u}~{},   since the rotation of   𝐮   𝐮   \mathbf{u}   around the rotation axis must result in   𝐮   𝐮   \mathbf{u}   . The equation above may be solved for   𝐮   𝐮   \mathbf{u}   which is unique up to a scalar factor unless    R  =  I      R  I    R=I   .  Further, the equation may be rewritten         R  𝐮   =    I  𝐮   ⇒       (   R  -  I   )   𝐮   =   0     ,     formulae-sequence      R  u      I  u   normal-⇒          R  I   u   0     R\textbf{u}=I\textbf{u}\quad\Rightarrow\quad(R-I)\textbf{u}=0~{},   which shows that   𝐮   𝐮   \mathbf{u}   lies in the null space of    R  −  I      R  normal-−  I    R−I   .  Viewed in another way,   𝐮   𝐮   \mathbf{u}   is an eigenvector of   R   R   R   corresponding to the eigenvalue     λ  =  1      λ  1    λ=1   . Every rotation matrix must have this eigenvalue, the other two eigenvalues being complex conjugates of each other. It follows that a general rotation matrix in three dimensions has, up to a multiplicative constant, only one real eigenvector.  Determining the angle  To find the angle of a rotation, once the axis of the rotation is known, select a vector   𝐯   𝐯   \mathbf{v}   perpendicular to the axis. Then the angle of the rotation is the angle between   𝐯   𝐯   \mathbf{v}   and    R  𝐯      R  𝐯    R\mathbf{v}   .  A more direct method, however, is to simply calculate the trace , i.e., the sum of the diagonal elements of the rotation matrix. Care should be taken to select the right sign for the angle   θ   θ   θ   to match the chosen axis:        Tr   (  R  )    =   1  +   2   cos   θ       .       Tr  R     1    2    θ       \operatorname{Tr}(R)=1+2\cos\theta~{}.     Rotation matrix from axis and angle  For some applications, it is helpful to be able to make a rotation with a given axis. Given a unit vector  u = ( u x , u y , u z ), where u x 2 + u y 2 + u z 2 = 1, the matrix for a rotation by an angle of θ about an axis in the direction of u is 4       R  =   [       cos  θ   +    u  x  2    (   1  -   cos  θ    )          u  x    u  y    (   1  -   cos  θ    )    -    u  z    sin  θ          u  x    u  z    (   1  -   cos  θ    )    +    u  y    sin  θ            u  y    u  x    (   1  -   cos  θ    )    +    u  z    sin  θ         cos  θ   +    u  y  2    (   1  -   cos  θ    )          u  y    u  z    (   1  -   cos  θ    )    -    u  x    sin  θ            u  z    u  x    (   1  -   cos  θ    )    -    u  y    sin  θ          u  z    u  y    (   1  -   cos  θ    )    +    u  x    sin  θ         cos  θ   +    u  z  2    (   1  -   cos  θ    )        ]    .      R        θ      superscript   subscript  u  x   2     1    θ           subscript  u  x    subscript  u  y     1    θ        subscript  u  z     θ          subscript  u  x    subscript  u  z     1    θ        subscript  u  y     θ            subscript  u  y    subscript  u  x     1    θ        subscript  u  z     θ         θ      superscript   subscript  u  y   2     1    θ           subscript  u  y    subscript  u  z     1    θ        subscript  u  x     θ            subscript  u  z    subscript  u  x     1    θ        subscript  u  y     θ          subscript  u  z    subscript  u  y     1    θ        subscript  u  x     θ         θ      superscript   subscript  u  z   2     1    θ          R=\begin{bmatrix}\cos\theta+u_{x}^{2}\left(1-\cos\theta\right)&u_{x}u_{y}\left%
 (1-\cos\theta\right)-u_{z}\sin\theta&u_{x}u_{z}\left(1-\cos\theta\right)+u_{y}%
 \sin\theta\\
 u_{y}u_{x}\left(1-\cos\theta\right)+u_{z}\sin\theta&\cos\theta+u_{y}^{2}\left(%
 1-\cos\theta\right)&u_{y}u_{z}\left(1-\cos\theta\right)-u_{x}\sin\theta\\
 u_{z}u_{x}\left(1-\cos\theta\right)-u_{y}\sin\theta&u_{z}u_{y}\left(1-\cos%
 \theta\right)+u_{x}\sin\theta&\cos\theta+u_{z}^{2}\left(1-\cos\theta\right)%
 \end{bmatrix}.   This can be written more concisely as       R  =    cos   θ  𝐈    +    sin  θ     [  𝐮  ]   ×    +     (   1  -   cos  θ    )   𝐮   ⊗   𝐮      ,      R        θ  𝐈        θ    subscript   delimited-[]  𝐮       tensor-product      1    θ    𝐮   𝐮      R=\cos\theta\mathbf{I}+\sin\theta[\mathbf{u}]_{\times}+(1-\cos\theta)\mathbf{u%
 }\otimes\mathbf{u}~{},   where     [  𝐮  ]   ×     subscript   delimited-[]  𝐮      [\mathbf{u}]_{\times}   is the cross product matrix of u ,   ⊗   tensor-product   \otimes   is the tensor product and I is the Identity matrix . This is a matrix form of Rodrigues' rotation formula , (or the equivalent, differently parameterized Euler–Rodrigues formula ) with 5         𝐮  ⊗  𝐮   =   [      u  x  2       u  x    u  y        u  x    u  z          u  x    u  y       u  y  2       u  y    u  z          u  x    u  z        u  y    u  z       u  z  2      ]    ,     [  𝐮  ]   ×   =   [     0     -   u  z       u  y        u  z     0     -   u  x         -   u  y       u  x     0     ]     .     formulae-sequence     tensor-product  𝐮  𝐮      superscript   subscript  u  x   2      subscript  u  x    subscript  u  y       subscript  u  x    subscript  u  z         subscript  u  x    subscript  u  y     superscript   subscript  u  y   2      subscript  u  y    subscript  u  z         subscript  u  x    subscript  u  z       subscript  u  y    subscript  u  z     superscript   subscript  u  z   2         subscript   delimited-[]  𝐮       0     subscript  u  z     subscript  u  y      subscript  u  z   0     subscript  u  x         subscript  u  y     subscript  u  x   0       \mathbf{u}\otimes\mathbf{u}=\begin{bmatrix}u_{x}^{2}&u_{x}u_{y}&u_{x}u_{z}\\
 u_{x}u_{y}&u_{y}^{2}&u_{y}u_{z}\\
 u_{x}u_{z}&u_{y}u_{z}&u_{z}^{2}\end{bmatrix},\qquad[\mathbf{u}]_{\times}=%
 \begin{bmatrix}0&-u_{z}&u_{y}\\
 u_{z}&0&-u_{x}\\
 -u_{y}&u_{x}&0\end{bmatrix}.     If the 3D space is right-handed, this rotation will be counterclockwise when u points towards the observer ( Right-hand rule ). Rotations in the counterclockwise (anticlockwise) direction are considered positive rotations.  Note the striking merely apparent differences to the equivalent Lie-algebraic formulation below, #Exponential map .  Properties of a rotation matrix  For any rotation matrix R acting on ,  :*     R  T   =   R   -  1         superscript  R  T    superscript  R    1      R^{T}=R^{-1}   (The rotation is an orthogonal matrix ) It follows that:  :*     det  R   =   ±  1         R    plus-or-minus  1     \det R=\pm 1   A rotation is termed proper if     det  R   =  1        R   1    \det R=1   and improper if     det  R   =   -  1         R     1     \det R=-1   . For even dimensions (n even), the eigenvalues of a rotation matrix occur as pairs of complex conjugates which are roots of unity and may be written    e   ±   i   θ  k        superscript  e   plus-or-minus    i   subscript  θ  k       e^{\pm i\theta_{k}}   . Therefore, there may be no set of vectors which are unaffected by the rotation, and thus no axis of rotation. If there are any real eigenvalues, they will equal unity and will occur in pairs, and the axis of rotation will be an even dimensional subspace of the whole space. For odd dimensions, there will be an odd number of such eigenvalues, with at least one eigenvalue being unity, and the axis of rotation will be an odd dimensional subspace of the whole space.  For example, in 2-space (n=2), there are either two complex eigenvalues or two real eigenvalues equal to unity. In the case of the two unit eigenvalues, the rotation is a null rotation, but otherwise, there is no axis of rotation. In 3-space (n=3), there will be an axis of rotation (a 1-D manifold, or a line through the origin) or the rotation will be null. In 4-space (n=4), there may be no axes of rotation, or there may be a 2 dimensional axis, a plane through the origin, called the "axis plane". As always, when all eigenvalues are unity, the rotation is a null rotation.  The trace of a rotation matrix will be equal to the sum of its eigenvalues. For n=2 the two eigenvalues are    e   ±   i  θ       superscript  e   plus-or-minus    i  θ      e^{\pm i\theta}   and the trace will be    2   cos   (  θ  )        2    θ     2\cos(\theta)   where   θ   θ   \theta   is the rotation angle about the origin. For n=3 the three eigenvalues are 1 and    e   ±   i  θ       superscript  e   plus-or-minus    i  θ      e^{\pm i\theta}   where   θ   θ   \theta   is the rotation angle about the axis-line. The trace will be    1  +   2   cos   (  θ  )         1    2    θ      1+2\cos(\theta)   . For n=4, the four eigenvalues are of the form    e   ±   i  θ       superscript  e   plus-or-minus    i  θ      e^{\pm i\theta}   and    e   ±   i  ϕ       superscript  e   plus-or-minus    i  ϕ      e^{\pm i\phi}   and the trace will be    2   (    cos   (  θ  )    +   cos   (  ϕ  )     )       2      θ     ϕ      2(\cos(\theta)+\cos(\phi))   . If one of the angles, say   θ   θ   \theta   , is equal to zero, then the rotation will be a "simple" rotation, with two unit eigenvalues and the other angle (   ϕ   ϕ   \phi   ) will be the angle of rotation about the axis-plane spanned by the two eigenvectors with eigenvalues of unity. Otherwise, there will be no axis-plane of rotation. If    θ  =  ϕ      θ  ϕ    \theta=\phi   (an "isoclinic" rotation), the eigenvalues will be    e   ±   i  θ       superscript  e   plus-or-minus    i  θ      e^{\pm i\theta}   repeated twice, and every vector from the origin will be rotated through the angle   θ   θ   \theta   . The trace will be    4   cos   (  θ  )        4    θ     4\cos(\theta)   .  Examples   The 2×2 rotation matrix         Q  =   [     0    1       -  1     0     ]       Q    0  1      1   0      Q=\begin{bmatrix}0&1\\
 -1&0\end{bmatrix}       corresponds to a 90° planar rotation.    The transpose of the 2×2 matrix         M  =   [     0.936    0.352      0.352     -  0.936      ]       M    0.936  0.352    0.352    0.936       M=\begin{bmatrix}0.936&0.352\\
 0.352&-0.936\end{bmatrix}       is its inverse, but since its determinant is −1, this is not a rotation matrix; it is a reflection across the line 11 y = 2 x .    The 3×3 rotation matrix         Q  =   [     1    0    0      0      3   2      1  2       0     -   1  2        3   2      ]       Q    1  0  0    0      3   2     1  2     0      1  2        3   2       Q=\begin{bmatrix}1&0&0\\
 0&\frac{\sqrt{3}}{2}&\frac{1}{2}\\
 0&-\frac{1}{2}&\frac{\sqrt{3}}{2}\end{bmatrix}       corresponds to a −30° rotation around the x axis in three-dimensional space.    The 3×3 rotation matrix         Q  =   [     0.36    0.48     -  0.8        -  0.8     0.60    0      0.48    0.64    0.60     ]       Q    0.36  0.48    0.8       0.8   0.60  0    0.48  0.64  0.60      Q=\begin{bmatrix}0.36&0.48&-0.8\\
 -0.8&0.60&0\\
 0.48&0.64&0.60\end{bmatrix}       corresponds to a rotation of approximately −74° around the axis (− 1 ⁄ 3 , 2 ⁄ 3 , 2 ⁄ 3 ) in three-dimensional space.    The 3×3 permutation matrix         P  =   [     0    0    1      1    0    0      0    1    0     ]       P    0  0  1    1  0  0    0  1  0      P=\begin{bmatrix}0&0&1\\
 1&0&0\\
 0&1&0\end{bmatrix}       is a rotation matrix, as is the matrix of any even permutation , and rotates through 120° about the axis x = y = z .    The 3×3 matrix         M  =   [     3     -  4     1      5    3     -  7        -  9     2    6     ]       M    3    4   1    5  3    7       9   2  6      M=\begin{bmatrix}3&-4&1\\
 5&3&-7\\
 -9&2&6\end{bmatrix}       has determinant +1, but its transpose is not its inverse, so it is not a rotation matrix.    The 4×3 matrix         M  =   [     0.5     -  0.1     0.7      0.1    0.5     -  0.5        -  0.7     0.5    0.5       -  0.5      -  0.7      -  0.1      ]       M    0.5    0.1   0.7    0.1  0.5    0.5       0.7   0.5  0.5      0.5     0.7     0.1       M=\begin{bmatrix}0.5&-0.1&0.7\\
 0.1&0.5&-0.5\\
 -0.7&0.5&0.5\\
 -0.5&-0.7&-0.1\end{bmatrix}       is not square, and so cannot be a rotation matrix; yet M T M yields a 3×3 identity matrix (the columns are orthonormal).    The 4×4 matrix         Q  =   [      -  1     0    0    0      0     -  1     0    0      0    0     -  1     0      0    0    0     -  1      ]       Q      1   0  0  0    0    1   0  0    0  0    1   0    0  0  0    1       Q=\begin{bmatrix}-1&0&0&0\\
 0&-1&0&0\\
 0&0&-1&0\\
 0&0&0&-1\end{bmatrix}       describes an isoclinic rotation , a rotation through equal angles (180°) through two orthogonal planes.    The 5×5 rotation matrix         Q  =   [     0     -  1     0    0    0      1    0    0    0    0      0    0     -  1     0    0      0    0    0     -  1     0      0    0    0    0    1     ]       Q    0    1   0  0  0    1  0  0  0  0    0  0    1   0  0    0  0  0    1   0    0  0  0  0  1      Q=\begin{bmatrix}0&-1&0&0&0\\
 1&0&0&0&0\\
 0&0&-1&0&0\\
 0&0&0&-1&0\\
 0&0&0&0&1\end{bmatrix}       rotates vectors in the plane of the first two coordinate axes 90°, rotates vectors in the plane of the next two axes 180°, and leaves the last coordinate axis unmoved.   Geometry  In Euclidean geometry , a rotation is an example of an isometry , a transformation that moves points without changing the distances between them. Rotations are distinguished from other isometries by two additional properties: they leave (at least) one point fixed, and they leave "handedness" unchanged. By contrast, a translation moves every point, a reflection exchanges left- and right-handed ordering, and a glide reflection does both.  A rotation that does not leave "handedness" unchanged is an improper rotation or a rotoinversion.  If a fixed point is taken as the origin of a Cartesian coordinate system , then every point can be given coordinates as a displacement from the origin. Thus one may work with the vector space of displacements instead of the points themselves. Now suppose are the coordinates of the vector   𝐩   𝐩   \mathbf{p}   from the origin,   O   O   O   , to point   P   P   P   . Choose an orthonormal basis for our coordinates; then the squared distance to   P   P   P   , by Pythagoras , is          d  2    (  O  ,  P  )    =    ∥  𝕡  ∥   2   =    ∑   r  =  1   n    p  r  2             superscript  d  2    O  P     superscript   norm  𝕡   2          superscript   subscript     r  1    n    superscript   subscript  p  r   2       d^{2}(O,P)=\|\mathbb{p}\|^{2}=\sum_{r=1}^{n}p_{r}^{2}        which can be computed using the matrix multiplication         ∥  𝕡  ∥   2   =    [       p  1   ⋯   p  n       ]    [      p  1       ⋮       p  n      ]    =    𝕡  T   𝕡    .         superscript   norm  𝕡   2          subscript  p  1   normal-⋯   subscript  p  n         subscript  p  1     normal-⋮     subscript  p  n              superscript  𝕡  T   𝕡      \|\mathbb{p}\|^{2}=\begin{bmatrix}p_{1}\cdots p_{n}\end{bmatrix}\begin{bmatrix%
 }p_{1}\\
 \vdots\\
 p_{n}\end{bmatrix}=\mathbb{p}^{T}\mathbb{p}.     A geometric rotation transforms lines to lines, and preserves ratios of distances between points. From these properties it can be shown that a rotation is a linear transformation of the vectors, and thus can be written in matrix form,    Q  𝐩      Q  𝐩    Q\mathbf{p}   . The fact that a rotation preserves, not just ratios, but distances themselves, is stated as         𝕡  T   𝕡   =     (   Q  𝕡   )   T    (   Q  𝕡   )     ,         superscript  𝕡  T   𝕡      superscript    Q  𝕡   T     Q  𝕡      \mathbb{p}^{T}\mathbb{p}=(Q\mathbb{p})^{T}(Q\mathbb{p}),\,\!   or       𝕡  T   I  𝕡       superscript  𝕡  T   I  𝕡    \displaystyle\mathbb{p}^{T}I\mathbb{p}   Because this equation holds for all vectors,   𝐩   𝐩   \mathbf{p}   , one concludes that every rotation matrix,   Q   Q   Q   , satisfies the orthogonality condition ,         Q  T   Q   =  I   .         superscript  Q  T   Q   I    Q^{T}Q=I.\,\!   Rotations preserve handedness because they cannot change the ordering of the axes, which implies the special matrix condition,       det  Q   =   +  1.         Q     1.     \det Q=+1.\,\!   Equally important, it can be shown that any matrix satisfying these two conditions acts as a rotation.  Multiplication  The inverse of a rotation matrix is its transpose, which is also a rotation matrix:        (   Q  T   )   T    (   Q  T   )        superscript   superscript  Q  T   T    superscript  Q  T     \displaystyle(Q^{T})^{T}(Q^{T})   The product of two rotation matrices is a rotation matrix:        (    Q  1    Q  2    )   T    (    Q  1    Q  2    )        superscript     subscript  Q  1    subscript  Q  2    T      subscript  Q  1    subscript  Q  2      \displaystyle(Q_{1}Q_{2})^{T}(Q_{1}Q_{2})   For   n   n   n   greater than   2   2   2   , multiplication of    n  ×  n      n  normal-×  n    n×n   rotation matrices is not commutative.      Q  1     subscript  Q  1    \displaystyle Q_{1}   Noting that any identity matrix is a rotation matrix, and that matrix multiplication is associative , we may summarize all these properties by saying that the    n  ×  n      n  normal-×  n    n×n   rotation matrices form a group , which for    n  >    2       n    normal-  2     n> 2   is non-abelian , called a special orthogonal group , and denoted by , or , the group of    n  ×  n      n  normal-×  n    n×n   rotation matrices is isomorphic to the group of rotations in an  space. This means that multiplication of rotation matrices corresponds to composition of rotations, applied in left-to-right order of their corresponding matrices.  Ambiguities  The interpretation of a rotation matrix can be subject to many ambiguities.  In most cases the effect of the ambiguity is equivalent to the effect of a rotation matrix inversion (for these orthogonal matrices equivalently matrix transpose ).   Alias or alibi (passive or active) transformation  The coordinates of a point   P   P   P   may change due to either a rotation of the coordinate system    C  S      C  S    CS   ( alias ), or a rotation of the point   P   P   P   ( alibi ). In the latter case, the rotation of   P   P   P   also produces a rotation of the vector   𝐯   𝐯   \mathbf{v}   representing   P   P   P   . In other words, either   P   P   P   and   𝐯   𝐯   \mathbf{v}   are fixed while    C  S      C  S    CS   rotates (alias), or    C  S      C  S    CS   is fixed while   P   P   P   and   𝐯   𝐯   \mathbf{v}   rotate (alibi). Any given rotation can be legitimately described both ways, as vectors and coordinate systems actually rotate with respect to each other, about the same axis but in opposite directions. Throughout this article, we chose the alibi approach to describe rotations. For instance, :    R(\theta) = \begin{bmatrix} \cos \theta & -\sin \theta \\ \sin \theta & \cos \theta \\ \end{bmatrix}   represents a counterclockwise rotation of a vector   𝐯   𝐯   \mathbf{v}   by an angle   θ   θ   θ   , or a rotation of    C  S      C  S    CS   by the same angle but in the opposite direction (i.e. clockwise). Alibi and alias transformations are also known as active and passive transformations , respectively.  Pre-multiplication or post-multiplication  The same point   P   P   P   can be represented either by a column vector    𝐯   𝐯   \mathbf{v}   or a row vector    𝐰   𝐰   \mathbf{w}   . Rotation matrices can either pre-multiply column vectors    (   R  𝐯   )      R  𝐯    (R\mathbf{v})   , or post-multiply row vectors    (   𝐰  R   )      𝐰  R    (\mathbf{w}R)   . However,    R  𝐯      R  𝐯    R\mathbf{v}   produces a rotation in the opposite direction with respect to    𝐰  R      𝐰  R    \mathbf{w}R   . Throughout this article, rotations produced on column vectors are described by means of a pre-multiplication. To obtain exactly the same rotation (i.e. the same final coordinates of point   P   P   P   ), the row vector must be post-multiplied by the transpose of R ( w R T ).  Right- or left-handed coordinates  The matrix and the vector can be represented with respect to a right-handed or left-handed coordinate system. Throughout the article, we assumed a right-handed orientation, unless otherwise specified.  Vectors or forms  The vector space has a dual space of linear forms , and the matrix can act on either vectors or forms.   Decompositions  Independent planes  Consider the 3×3 rotation matrix       Q  =   [     0.36    0.48     -  0.8        -  0.8     0.60    0      0.48    0.64    0.60     ]    .      Q    0.36  0.48    0.8       0.8   0.60  0    0.48  0.64  0.60      Q=\begin{bmatrix}0.36&0.48&-0.8\\
 -0.8&0.60&0\\
 0.48&0.64&0.60\end{bmatrix}.   If Q acts in a certain direction, v , purely as a scaling by a factor λ, then we have        Q  𝕧   =   λ  𝕧    ,        Q  𝕧     λ  𝕧     Q\mathbb{v}=\lambda\mathbb{v},\,\!   so that       𝟘  =    (    λ  I   -  Q   )   𝕧    .      0        λ  I   Q   𝕧     \mathbb{0}=(\lambda I-Q)\mathbb{v}.\,\!   Thus λ is a root of the characteristic polynomial for Q ,     0   0   \displaystyle 0   Two features are noteworthy. First, one of the roots (or eigenvalues ) is 1, which tells us that some direction is unaffected by the matrix. For rotations in three dimensions, this is the axis of the rotation (a concept that has no meaning in any other dimension). Second, the other two roots are a pair of complex conjugates, whose product is 1 (the constant term of the quadratic), and whose sum is 2 cos θ (the negated linear term). This factorization is of interest for 3×3 rotation matrices because the same thing occurs for all of them. (As special cases, for a null rotation the "complex conjugates" are both 1, and for a 180° rotation they are both −1.) Furthermore, a similar factorization holds for any n × n rotation matrix. If the dimension, n , is odd, there will be a "dangling" eigenvalue of 1; and for any dimension the rest of the polynomial factors into quadratic terms like the one here (with the two special cases noted). We are guaranteed that the characteristic polynomial will have degree n and thus n eigenvalues. And since a rotation matrix commutes with its transpose, it is a normal matrix , so can be diagonalized. We conclude that every rotation matrix, when expressed in a suitable coordinate system, partitions into independent rotations of two-dimensional subspaces, at most n ⁄ 2 of them.  The sum of the entries on the main diagonal of a matrix is called the trace ; it does not change if we reorient the coordinate system, and always equals the sum of the eigenvalues. This has the convenient implication for 2×2 and 3×3 rotation matrices that the trace reveals the angle of rotation , θ, in the two-dimensional (sub-)space. For a 2×2 matrix the trace is 2 cos(θ), and for a 3×3 matrix it is 1+2 cos(θ). In the three-dimensional case, the subspace consists of all vectors perpendicular to the rotation axis (the invariant direction, with eigenvalue 1). Thus we can extract from any 3×3 rotation matrix a rotation axis and an angle, and these completely determine the rotation.  Sequential angles  The constraints on a 2×2 rotation matrix imply that it must have the form      Q  =   [     a     -  b       b    a     ]       Q    a    b     b  a      Q=\begin{bmatrix}a&-b\\
 b&a\end{bmatrix}   with a 2 + b 2 = 1. Therefore we may set a = cos θ and b = sin θ, for some angle θ. To solve for θ it is not enough to look at a alone or b alone; we must consider both together to place the angle in the correct quadrant , using a two-argument arctangent function.  Now consider the first column of a 3×3 rotation matrix,       [     a      b      c     ]   .      a    b    c     \begin{bmatrix}a\\
 b\\
 c\end{bmatrix}.   Although a 2 + b 2 will probably not equal 1, but some value r 2 \begin{bmatrix}r\\0\\c\end{bmatrix} ,  zeroing b . This acts on the subspace spanned by the x and y axes. We can then repeat the process for the xz subspace to zero c . Acting on the full matrix, these two rotations produce the schematic form         Q   x  z     Q   x  y    Q   =   [     1    0    0      0    ∗    ∗      0    ∗    ∗     ]    .         subscript  Q    x  z     subscript  Q    x  y    Q     1  0  0    0  normal-∗  normal-∗    0  normal-∗  normal-∗      Q_{xz}Q_{xy}Q=\begin{bmatrix}1&0&0\\
 0&\ast&\ast\\
 0&\ast&\ast\end{bmatrix}.   Shifting attention to the second column, a Givens rotation of the yz subspace can now zero the z value. This brings the full matrix to the form         Q   y  z     Q   x  z     Q   x  y    Q   =   [     1    0    0      0    1    0      0    0    1     ]    ,         subscript  Q    y  z     subscript  Q    x  z     subscript  Q    x  y    Q     1  0  0    0  1  0    0  0  1      Q_{yz}Q_{xz}Q_{xy}Q=\begin{bmatrix}1&0&0\\
 0&1&0\\
 0&0&1\end{bmatrix},   which is an identity matrix. Thus we have decomposed Q as       Q  =    Q   x  y    -  1     Q   x  z    -  1     Q   y  z    -  1      .      Q     superscript   subscript  Q    x  y      1     superscript   subscript  Q    x  z      1     superscript   subscript  Q    y  z      1       Q=Q_{xy}^{-1}Q_{xz}^{-1}Q_{yz}^{-1}.     An n × n rotation matrix will have ( n −1)+( n −2)+⋯+2+1, or        ∑   k  =  1    n  -  1    k   =    n   (   n  -  1   )    2         superscript   subscript     k  1      n  1    k       n    n  1    2     \sum_{k=1}^{n-1}k=\frac{n(n-1)}{2}\,\!   entries below the diagonal to zero. We can zero them by extending the same idea of stepping through the columns with a series of rotations in a fixed sequence of planes. We conclude that the set of n × n rotation matrices, each of which has n 2 entries, can be parameterized by n ( n −1)/2 angles.      xzx w   xzy w   xyx w   xyz w     yxy w   yxz w   yzy w   yzx w     zyz w   zyx w   zxz w   zxy w     xzx b   yzx b   xyx b   zyx b     yxy b   zxy b   yzy b   xzy b     zyz b   xyz b   zxz b   yxz b     In three dimensions this restates in matrix form an observation made by Euler , so mathematicians call the ordered sequence of three angles Euler angles . However, the situation is somewhat more complicated than we have so far indicated. Despite the small dimension, we actually have considerable freedom in the sequence of axis pairs we use; and we also have some freedom in the choice of angles. Thus we find many different conventions employed when three-dimensional rotations are parameterized for physics, or medicine, or chemistry, or other disciplines. When we include the option of world axes or body axes, 24 different sequences are possible. And while some disciplines call any sequence Euler angles, others give different names (Euler, Cardano, Tait-Bryan, Roll-pitch-yaw ) to different sequences.  One reason for the large number of options is that, as noted previously, rotations in three dimensions (and higher) do not commute. If we reverse a given sequence of rotations, we get a different outcome. This also implies that we cannot compose two rotations by adding their corresponding angles. Thus Euler angles are not vectors , despite a similarity in appearance as a triple of numbers.  Nested dimensions  A 3×3 rotation matrix like       Q   3  ×  3    =   [      cos  θ      sin  θ       \color   C  a  d  e  t  B  l  u  e  0        -   sin  θ       cos  θ       \color   C  a  d  e  t  B  l  u  e  0         \color   C  a  d  e  t  B  l  u  e  0       \color   C  a  d  e  t  B  l  u  e  0       \color   C  a  d  e  t  B  l  u  e  1      ]        subscript  Q    3  3        θ     θ     \color  C  a  d  e  t  B  l  u  e  0         θ      θ     \color  C  a  d  e  t  B  l  u  e  0       \color  C  a  d  e  t  B  l  u  e  0     \color  C  a  d  e  t  B  l  u  e  0     \color  C  a  d  e  t  B  l  u  e  1       Q_{3\times 3}=\begin{bmatrix}\cos\theta&\sin\theta&{\color{CadetBlue}0}\\
 -\sin\theta&\cos\theta&{\color{CadetBlue}0}\\
 {\color{CadetBlue}0}&{\color{CadetBlue}0}&{\color{CadetBlue}1}\end{bmatrix}   suggests a 2×2 rotation matrix,        Q   2  ×  2    =   [      cos  θ      sin  θ        -   sin  θ       cos  θ      ]    ,       subscript  Q    2  2        θ     θ         θ      θ       Q_{2\times 2}=\begin{bmatrix}\cos\theta&\sin\theta\\
 -\sin\theta&\cos\theta\end{bmatrix},   is embedded in the upper left corner:        Q   3  ×  3    =   [      Q   2  ×  2      𝟘       𝟘  T     1     ]    .       subscript  Q    3  3     delimited-[]     subscript  Q    2  2    0     superscript  0  T   1       Q_{3\times 3}=\left[\begin{matrix}Q_{2\times 2}&\mathbb{0}\\
 \mathbb{0}^{T}&1\end{matrix}\right].   This is no illusion; not just one, but many, copies of n -dimensional rotations are found within ( n +1)-dimensional rotations, as subgroups . Each embedding leaves one direction fixed, which in the case of 3×3 matrices is the rotation axis. For example, we have         Q  𝕩    (  θ  )    =   [     1    0    0      0     cos  θ      sin  θ       0     -   sin  θ       cos  θ      ]    ,         subscript  Q  𝕩   θ     1  0  0    0    θ     θ     0      θ      θ       Q_{\mathbb{x}}(\theta)=\begin{bmatrix}1&0&0\\
 0&\cos\theta&\sin\theta\\
 0&-\sin\theta&\cos\theta\end{bmatrix},            Q  𝕪    (  θ  )    =   [      cos  θ     0     -   sin  θ        0    1    0       sin  θ     0     cos  θ      ]    ,         subscript  Q  𝕪   θ       θ   0      θ      0  1  0      θ   0    θ       Q_{\mathbb{y}}(\theta)=\begin{bmatrix}\cos\theta&0&-\sin\theta\\
 0&1&0\\
 \sin\theta&0&\cos\theta\end{bmatrix},            Q  𝕫    (  θ  )    =   [      cos  θ      sin  θ     0       -   sin  θ       cos  θ     0      0    0    1     ]    ,         subscript  Q  𝕫   θ       θ     θ   0        θ      θ   0    0  0  1      Q_{\mathbb{z}}(\theta)=\begin{bmatrix}\cos\theta&\sin\theta&0\\
 -\sin\theta&\cos\theta&0\\
 0&0&1\end{bmatrix},   fixing the x axis, the y axis, and the z axis, respectively. The rotation axis need not be a coordinate axis; if u = ( x , y , z ) is a unit vector in the desired direction, then       Q  𝕦    (  θ  )        subscript  Q  𝕦   θ    \displaystyle Q_{\mathbb{u}}(\theta)   where c θ = cos θ, s θ = sin θ, is a rotation by angle θ leaving axis u fixed.  A direction in ( n +1)-dimensional space will be a unit magnitude vector, which we may consider a point on a generalized sphere, S n . Thus it is natural to describe the rotation group SO( n +1) as combining SO( n ) and S n . A suitable formalism is the fiber bundle ,        S  O   (  n  )    ↪   S  O   (   n  +  1   )    →   S  n    ,       normal-↪    S  O  n     S  O    n  1      normal-→     superscript  S  n      SO(n)\hookrightarrow SO(n+1)\to S^{n},\,\!   where for every direction in the "base space", S n , the "fiber" over it in the "total space", SO( n +1), is a copy of the "fiber space", SO( n ), namely the rotations that keep that direction fixed.  Thus we can build an n × n rotation matrix by starting with a 2×2 matrix, aiming its fixed axis on S 2 (the ordinary sphere in three-dimensional space), aiming the resulting rotation on S 3 , and so on up through S n −1 . A point on S n can be selected using n numbers, so we again have n ( n −1)/2 numbers to describe any n × n rotation matrix.  In fact, we can view the sequential angle decomposition, discussed previously, as reversing this process. The composition of n −1 Givens rotations brings the first column (and row) to (1,0,…,0), so that the remainder of the matrix is a rotation matrix of dimension one less, embedded so as to leave (1,0,…,0) fixed.  Skew parameters via Cayley's formula  When an n × n rotation matrix Q , does not include a −1 eigenvalue, thus none of the planar rotations which it comprises are 180° rotations, then Q + I is an invertible matrix . Most rotation matrices fit this description, and for them it can be shown that ( Q − I )( Q + I ) −1 is a skew-symmetric matrix , A . Thus A T = − A ; and since the diagonal is necessarily zero, and since the upper triangle determines the lower one, A contains n ( n −1)/2 independent numbers.  Conveniently, I − A is invertible whenever A is skew-symmetric; thus we can recover the original matrix using the Cayley transform ,       A  ↦    (   I  +  A   )     (   I  -  A   )    -  1      ,     maps-to  A      I  A    superscript    I  A     1       A\mapsto(I+A)(I-A)^{-1},\,\!   which maps any skew-symmetric matrix A to a rotation matrix. In fact, aside from the noted exceptions, we can produce any rotation matrix in this way. Although in practical applications we can hardly afford to ignore 180° rotations, the Cayley transform is still a potentially useful tool, giving a parameterization of most rotation matrices without trigonometric functions.  In three dimensions, for example, we have       [     0     -  z      y  ;       z    0     -  x        -  y      x  ;     0     ]   ↦      maps-to    0    z   y    z  0    x       y   x  0    absent    \displaystyle\begin{bmatrix}0&-z&y\\
 z&0&-x\\
 -y&x&0\end{bmatrix}\mapsto   If we condense the skew entries into a vector, ( x , y , z ), then we produce a 90° rotation around the x axis for (1,0,0), around the y axis for (0,1,0), and around the z axis for (0,0,1). The 180° rotations are just out of reach; for, in the limit as x goes to infinity, ( x ,0,0) does approach a 180° rotation around the x axis, and similarly for other directions.  Decomposition into shears  For the 2D case, a rotation matrix can be decomposed into three shear matrices ():         R   (  θ  )        =    [     1     -   tan   (   θ  /  2   )         0    1     ]    [     1    0       sin  θ     1     ]    [     1     -   tan   (   θ  /  2   )         0    1     ]             R  θ     absent      1        θ  2       0  1      1  0      θ   1      1        θ  2       0  1         \begin{aligned}\displaystyle R(\theta)&\displaystyle{}=\begin{bmatrix}1&-\tan(%
 \theta/2)\\
 0&1\end{bmatrix}\begin{bmatrix}1&0\\
 \sin\theta&1\end{bmatrix}\begin{bmatrix}1&-\tan(\theta/2)\\
 0&1\end{bmatrix}\end{aligned}     This is useful, for instance, in computer graphics, since shears can be implemented with fewer multiplication instructions than rotating a bitmap directly. On modern computers, this may not matter, but it can be relevant for very old or low-end microprocessors.  Group theory  Lie group  The    n  ×  n      n  normal-×  n    n×n   rotation matrices for each   n   n   n   form a group , the special orthogonal group , SO( n ). This algebraic structure is coupled with a the topological structure inherited from in such a way that the operations of multiplication and taking the inverse are analytic functions of the matrix entries. Thus SO( n ) is for each   n   n   n   a Lie group. It is compact and connected , but not simply connected . It is also semi-simple group , in fact simple group with the exception    S  O   (  4  )       S  O  4    SO(4)   . 6 The relevance of this is that all theorems and all machinery from the theory of analytic manifolds (analytic manifolds are in particular smooth manifolds ) apply and the well-developed representation theory of compact semi-simple groups is ready for use.  Lie algebra  The Lie algebra    𝐬𝐨   (  n  )       𝐬𝐨  n    \mathbf{so}(n)   of    S  O   (  n  )       S  O  n    SO(n)   is given by        𝔰  𝔬   (  n  )    =   𝔬   (  n  )    =   {   X  ∈    M  n    (  ℝ  )     |   X  =   -   X  T     }    ,          𝔰  𝔬  n     𝔬  n         conditional-set    X     subscript  M  n   ℝ      X     superscript  X  T         \mathfrak{so}(n)=\mathfrak{o}(n)=\left\{X\in M_{n}(\mathbb{R})|X=-X^{T}\right\},   and is the space of skew-symmetric matrices of dimension   n   n   n   , see classical group , where    𝐨   (  n  )       𝐨  n    \mathbf{o}(n)   is the Lie algebra of    O   (  n  )       O  n    O(n)   , the orthogonal group . For reference, the most common basis for    𝐬𝐨   (  3  )       𝐬𝐨  3    \mathbf{so}(3)   is         L  𝕩   =   [     0    0    0      0    0     -  1       0    1    0     ]    ,     L  𝕪   =   [     0    0    1      0    0    0       -  1     0    0     ]    ,    L  𝕫   =   [     0     -  1     0      1    0    0      0    0    0     ]      .     formulae-sequence     subscript  L  𝕩    delimited-[]    0  0  0    0  0    1     0  1  0       formulae-sequence     subscript  L  𝕪    delimited-[]    0  0  1    0  0  0      1   0  0         subscript  L  𝕫    delimited-[]    0    1   0    1  0  0    0  0  0         L_{\mathbb{x}}=\left[\begin{smallmatrix}0&0&0\\
 0&0&-1\\
 0&1&0\end{smallmatrix}\right],\quad L_{\mathbb{y}}=\left[\begin{smallmatrix}0&%
 0&1\\
 0&0&0\\
 -1&0&0\end{smallmatrix}\right],\quad L_{\mathbb{z}}=\left[\begin{smallmatrix}0%
 &-1&0\\
 1&0&0\\
 0&0&0\end{smallmatrix}\right].   More details about the  case can be found in Lie algebra SO(3) .  Exponential map  Connecting the Lie algebra to the Lie group is the exponential map , which is defined using the standard matrix exponential series for 7 For any skew-symmetric matrix    A   A   A   , exp(   A   A   A   ) is always a rotation matrix. 8  An important practical example is the    3  ×  3      3  normal-×  3    3×3   case. In rotation group SO(3) , it is shown that one can identify every    A  ∈  𝐬𝐨   (  3  )       A  normal-∈  𝐬𝐨  3    A∈\mathbf{so}(3)   with an Euler vector    ω  =   θ  𝐮       ω    θ  𝐮     \mathbf{ω}=θ\mathbf{u}   , where    𝐮  =   (  x  ,  y  ,  z  )       𝐮   x  y  z     \mathbf{u}=(x,y,z)   is a unit magnitude vector.  By the properties of the identification ,   𝐮   𝐮   \mathbf{u}   is in the null space of   A   A   A   . Thus,   𝐮   𝐮   \mathbf{u}   is left invariant by    e  x  p   (  A  )       e  x  p  A    exp(A)   and is hence a rotation axis.  Using Rodrigues' rotation formula on matrix form with    θ  =    θ  /  2   +   θ  /  2        θ      θ  2     θ  2      θ={θ}/{2}+{θ}/{2}   , together with standard double angle formulae one obtains,      exp   (  A  )       A    \displaystyle\exp(A)     where    c  =    c  o  s  θ   /  2       c      c  o  s  θ   2     c=cos{θ}/{2}   ,    s  =    s  i  n  θ   /  2       s      s  i  n  θ   2     s=sin{θ}/{2}   .  This is the matrix for a rotation around axis   𝐮   𝐮   \mathbf{u}   by the angle   θ   θ   θ   in half-angle form. For full detail, see exponential map SO(3) .  Baker–Campbell–Hausdorff formula  The BCH formula provides an explicit expression for log( e X e Y )}} in terms of a series expansion of nested commutators of   X   X   X   and   Y   Y   Y   . 9 This general expansion unfolds as 10       Z  =   C   (  X  ,  Y  )    =     X  +  Y  +     1  2     [  X  ,  Y  ]    +     1  12     [  X  ,   [  X  ,  Y  ]   ]     -     1  12     [  Y  ,   [  X  ,  Y  ]   ]     +   ⋯     .        Z    C   X  Y               X  Y      1  2    X  Y        1  12    X   X  Y          1  12    Y   X  Y      normal-⋯      Z=C(X,Y)=X+Y+\tfrac{1}{2}[X,Y]+\tfrac{1}{12}[X,[X,Y]]-\tfrac{1}{12}[Y,[X,Y]]+%
 \cdots~{}.     In the    3  ×  3      3  normal-×  3    3×3   case, the general infinite expansion has a compact form, 11       Z  =    α  X   +   β  Y   +   γ   [  X  ,  Y  ]      ,      Z      α  X     β  Y     γ   X  Y       Z=\alpha X+\beta Y+\gamma[X,Y],   for suitable trigonometric function coefficients, detailed in the Baker–Campbell–Hausdorff formula for SO(3) .  As a group identity, the above holds for all faithful representations , including the doublet (spinor representation), which is simpler. The same explicit formula thus follows straightforwardly through Pauli matrices; see the 2×2 derivation for SU(2) . For the general    n  ×  n      n  normal-×  n    n×n   case, one might use Ref. 12  Spin group  The Lie group of    n  ×  n      n  normal-×  n    n×n   rotation matrices,    S  O   (  n  )       S  O  n    SO(n)   , is not simply connected , so Lie theory tells us it is a homomorphic image of a universal covering group . Often the covering group, which in this case is called the spin group denoted by    S  p  i  n   (  n  )       S  p  i  n  n    Spin(n)   , is simpler and more natural to work with. 13  In the case of planar rotations, SO(2) is topologically a circle , S 1 . Its universal covering group, Spin(2), is isomorphic to the real line , R , under addition. Whenever angles of arbitrary magnitude are used one is taking advantage of the convenience of the universal cover. Every    2  ×  2      2  normal-×  2    2×2   rotation matrix is produced by a countable infinity of angles, separated by integer multiples of 2π. Correspondingly, the fundamental group of    S  O   (  2  )       S  O  2    SO(2)   is isomorphic to the integers, Z .  In the case of spatial rotations, SO(3) is topologically equivalent to three-dimensional real projective space , . Its universal covering group,    S  p  i  n   (  3  )       S  p  i  n  3    Spin(3)   , is isomorphic to the , . Every    3  ×  3      3  normal-×  3    3×3   rotation matrix is produced by two opposite points on the sphere. Correspondingly, the fundamental group of SO(3) is isomorphic to the two-element group, .  We can also describe    S  p  i  n   (  3  )       S  p  i  n  3    Spin(3)   as isomorphic to quaternions of unit norm under multiplication, or to certain    4  ×  4      4  normal-×  4    4×4   real matrices, or to    2  ×  2      2  normal-×  2    2×2   complex special unitary matrices , namely    S  U   (  2  )       S  U  2    SU(2)   . The covering maps for the first and the last case are given by       ℍ  ⊃   {   q  ∈  ℍ   :    ||  q  ||   =  1   }   ∋   w  +   𝕚  x   +   𝕛  y   +   𝕜  z    ↦   [      1  -   2   y  2    -   2   z  2         2  x  y   -   2  z  w        2  x  z   +   2  y  w          2  x  y   +   2  z  w       1  -   2   x  2    -   2   z  2         2  y  z   -   2  x  w          2  x  z   -   2  y  w        2  y  z   +   2  x  w       1  -   2   x  2    -   2   y  2        ]   ∈   S  O   (  3  )     ,       superset-of  ℍ   conditional-set    q  ℍ      norm  q   1      contains      w    𝕚  x     𝕛  y     𝕜  z      maps-to     delimited-[]      1    2   superscript  y  2      2   superscript  z  2         2  x  y     2  z  w        2  x  z     2  y  w          2  x  y     2  z  w      1    2   superscript  x  2      2   superscript  z  2         2  y  z     2  x  w          2  x  z     2  y  w        2  y  z     2  x  w      1    2   superscript  x  2      2   superscript  y  2               S  O  3      \mathbb{H}\supset\{q\in\mathbb{H}:||q||=1\}\ni w+\mathbb{i}x+\mathbb{j}y+%
 \mathbb{k}z\mapsto\left[\begin{smallmatrix}1-2y^{2}-2z^{2}&2xy-2zw&2xz+2yw\\
 2xy+2zw&1-2x^{2}-2z^{2}&2yz-2xw\\
 2xz-2yw&2yz+2xw&1-2x^{2}-2y^{2}\end{smallmatrix}\right]\in SO(3),   and        SU   (  2  )    ∋   [     α    β       -   β  ¯       α  ¯      ]   ↦   [       1  2    (      α  2   -   β  2    +    α  2   ¯    -    β  2   ¯    )        i  2    (     -   α  2    -   β  2    +    α  2   ¯   +    β  2   ¯    )        -   α  β    -    α  ¯    β  ¯           i  2    (     α  2   -   β  2   -    α  2   ¯    +    β  2   ¯    )        i  2    (    α  2   +   β  2   +    α  2   ¯   +    β  2   ¯    )       -   i   (    +   α  β    -    α  ¯    β  ¯     )           α   β  ¯    +    α  ¯   β       i   (    -   α   β  ¯     +    α  ¯   β    )        α   α  ¯    -   β   β  ¯        ]   ∈   S  O   (  3  )     .       contains    SU  2    delimited-[]    α  β       normal-¯  β     normal-¯  α        maps-to     delimited-[]        1  2          superscript  α  2    superscript  β  2     normal-¯   superscript  α  2      normal-¯   superscript  β  2          i  2          superscript  α  2     superscript  β  2     normal-¯   superscript  α  2     normal-¯   superscript  β  2            α  β       normal-¯  α    normal-¯  β           i  2        superscript  α  2    superscript  β  2    normal-¯   superscript  α  2      normal-¯   superscript  β  2          i  2      superscript  α  2    superscript  β  2    normal-¯   superscript  α  2     normal-¯   superscript  β  2          i        α  β       normal-¯  α    normal-¯  β             α   normal-¯  β       normal-¯  α   β      i        α   normal-¯  β        normal-¯  α   β         α   normal-¯  α      β   normal-¯  β               S  O  3      \mathrm{SU}(2)\ni\left[\begin{smallmatrix}\alpha&\beta\\
 -\overline{\beta}&\overline{\alpha}\end{smallmatrix}\right]\mapsto\left[\begin%
 {smallmatrix}\frac{1}{2}(\alpha^{2}-\beta^{2}+\overline{\alpha^{2}}-\overline{%
 \beta^{2}})&\frac{i}{2}(-\alpha^{2}-\beta^{2}+\overline{\alpha^{2}}+\overline{%
 \beta^{2}})&-\alpha\beta-\overline{\alpha}\overline{\beta}\\
 \frac{i}{2}(\alpha^{2}-\beta^{2}-\overline{\alpha^{2}}+\overline{\beta^{2}})&%
 \frac{i}{2}(\alpha^{2}+\beta^{2}+\overline{\alpha^{2}}+\overline{\beta^{2}})&-%
 i(+\alpha\beta-\overline{\alpha}\overline{\beta})\\
 \alpha\overline{\beta}+\overline{\alpha}\beta&i(-\alpha\overline{\beta}+%
 \overline{\alpha}\beta)&\alpha\overline{\alpha}-\beta\overline{\beta}\end{%
 smallmatrix}\right]\in SO(3).     For a detailed account of the  and the quaternionic covering, see spin group SO(3) .  Many features of these cases are the same for higher dimensions. The coverings are all two-to-one, with    S  O   (  n  )       S  O  n    SO(n)   ,    n  >  2      n  2    n>2   , having fundamental group . The natural setting for these groups is within a Clifford algebra . One type of action of the rotations is produced by a kind of "sandwich", denoted by . More importantly in applications to physics, the corresponding spin representation of the Lie algebra sits inside the Clifford algebra. It can be exponentiated in the usual way to give rise to a  representation, a k a projective representation of the rotation group. This is the case with    S  O   (  3  )       S  O  3    SO(3)   and    S  U   (  2  )       S  U  2    SU(2)   , where the  representation can be viewed as an "inverse" of the covering map. By properties of covering maps, the inverse can be chosen ono-to-one as a local section, but not globally.  Infinitesimal rotations  The matrices in the Lie algebra are not themselves rotations; the skew-symmetric matrices are derivatives, proportional differences of rotations. An actual "differential rotation", or infinitesimal rotation matrix has the form       I  +    A   d   θ     ,      I    A  d  θ     I+A\,d\theta~{},   where    d  θ      d  θ    dθ   is vanishingly small and    A  ∈  S  O   (  n  )       A  normal-∈  S  O  n    A∈SO(n)   , for instance with  L x }} ,        d   L  x    =   [     1    0    0      0    1     -   d  θ        0     d  θ     1     ]    .        d   subscript  L  x     delimited-[]    1  0  0    0  1      d  θ      0    d  θ   1       dL_{x}=\left[\begin{smallmatrix}1&0&0\\
 0&1&-d\theta\\
 0&d\theta&1\end{smallmatrix}\right].     The computation rules are as usual except that infinitesimals of second order are routinely dropped. With these rules, these matrices do not satisfy all the same properties as ordinary finite rotation matrices under the usual treatment of infinitesimals. 14 It turns out that the order in which infinitesimal rotations are applied is irrelevant . To see this exemplified, consult infinitesimal rotations SO(3) .  Conversions  We have seen the existence of several decompositions that apply in any dimension, namely independent planes, sequential angles, and nested dimensions. In all these cases we can either decompose a matrix or construct one. We have also given special attention to 3×3 rotation matrices, and these warrant further attention, in both directions .  Quaternion  Given the unit quaternion    𝐪  =   w  +   x  𝐢   +   y  𝐣   +   z  𝐤        𝐪    w    x  𝐢     y  𝐣     z  𝐤      \mathbf{q}=w+x\mathbf{i}+y\mathbf{j}+z\mathbf{k}   , the equivalent left-handed (Post-Multiplied) 3×3 rotation matrix is       Q  =   [      1  -   2   y  2    -   2   z  2         2  x  y   -   2  z  w        2  x  z   +   2  y  w          2  x  y   +   2  z  w       1  -   2   x  2    -   2   z  2         2  y  z   -   2  x  w          2  x  z   -   2  y  w        2  y  z   +   2  x  w       1  -   2   x  2    -   2   y  2        ]    .      Q      1    2   superscript  y  2      2   superscript  z  2         2  x  y     2  z  w        2  x  z     2  y  w          2  x  y     2  z  w      1    2   superscript  x  2      2   superscript  z  2         2  y  z     2  x  w          2  x  z     2  y  w        2  y  z     2  x  w      1    2   superscript  x  2      2   superscript  y  2         Q=\begin{bmatrix}1-2y^{2}-2z^{2}&2xy-2zw&2xz+2yw\\
 2xy+2zw&1-2x^{2}-2z^{2}&2yz-2xw\\
 2xz-2yw&2yz+2xw&1-2x^{2}-2y^{2}\end{bmatrix}.   Now every quaternion component appears multiplied by two in a term of degree two, and if all such terms are zero what's left is an identity matrix. This leads to an efficient, robust conversion from any quaternion – whether unit or non-unit – to a 3×3 rotation matrix.  n = w * w + x * x + y * y + z * z  s = if n == 0 then 0 else 2 / n  wx = s * w * x, wy = s * w * y, wz = s * w * z  xx = s * x * x, xy = s * x * y, xz = s * x * z  yy = s * y * y, yz = s * y * z, zz = s * z * z   [ 1 - (yy + zz)         xy - wz          xz + wy  ]  [      xy + wz     1 - (xx + zz)         yz - wx  ]  [      xz - wy          yz + wx     1 - (xx + yy) ]   Freed from the demand for a unit quaternion, we find that nonzero quaternions act as homogeneous coordinates for 3×3 rotation matrices. The Cayley transform, discussed earlier, is obtained by scaling the quaternion so that its w component is 1. For a 180° rotation around any axis, w will be zero, which explains the Cayley limitation.  The sum of the entries along the main diagonal (the trace ), plus one, equals 4−4( x 2 + y 2 + z 2 ), which is 4 w 2 . Thus we can write the trace itself as 2 w 2 +2 w 2 −1; and from the previous version of the matrix we see that the diagonal entries themselves have the same form: 2 x 2 +2 w 2 −1, 2 y 2 +2 w 2 −1, and 2 z 2 +2 w 2 −1. So we can easily compare the magnitudes of all four quaternion components using the matrix diagonal. We can, in fact, obtain all four magnitudes using sums and square roots, and choose consistent signs using the skew-symmetric part of the off-diagonal entries.  t = Q xx +Q yy +Q zz (trace of Q)  r = sqrt (1+t)  w = 0.5*r  x = copysign(0.5*sqrt(1+Q xx -Q yy -Q zz ), Q zy -Q yz )  y = copysign(0.5*sqrt(1-Q xx +Q yy -Q zz ), Q xz -Q zx )  z = copysign(0.5*sqrt(1-Q xx -Q yy +Q zz ), Q yx -Q xy )  where copysign( x , y ) is x with the sign of y :        copysign   (  x  ,  y  )    =    sign   (  y  )     |  x  |     .       copysign  x  y     sign  y     x      \operatorname{copysign}(x,y)=\operatorname{sign}(y)\;|x|.   Alternatively, use a single square root and division  t = Q xx +Q yy +Q zz  r = sqrt(1+t)  s = 0.5/r  w = 0.5*r  x = (Q zy -Q yz )*s  y = (Q xz -Q zx )*s  z = (Q yx -Q xy )*s  This is numerically stable so long as the trace, t , is not negative; otherwise, we risk dividing by (nearly) zero. In that case, suppose Q xx is the largest diagonal entry, so x will have the largest magnitude (the other cases are similar); then the following is safe.  t = Q xx +Q yy +Q zz  r = sqrt(1+Q xx -Q yy -Q zz )  s = 0.5/r  w = (Q zy -Q yz )*s  x = 0.5*r  y = (Q xy +Q yx )*s  z = (Q zx +Q xz )*s  If the matrix contains significant error, such as accumulated numerical error, we may construct a symmetric 4×4 matrix,       K  =    1  3    [       Q   x  x    -   Q   y  y    -   Q   z  z         Q   y  x    +   Q   x  y         Q   z  x    +   Q   x  z         Q   y  z    -   Q   z  y           Q   y  x    +   Q   x  y         Q   y  y    -   Q   x  x    -   Q   z  z         Q   z  y    +   Q   y  z         Q   z  x    -   Q   x  z           Q   z  x    +   Q   x  z         Q   z  y    +   Q   y  z         Q   z  z    -   Q   x  x    -   Q   y  y         Q   x  y    -   Q   y  x           Q   y  z    -   Q   z  y         Q   z  x    -   Q   x  z         Q   x  y    -   Q   y  x         Q   x  x    +   Q   y  y    +   Q   z  z        ]     ,      K      1  3        subscript  Q    x  x     subscript  Q    y  y     subscript  Q    z  z        subscript  Q    y  x     subscript  Q    x  y        subscript  Q    z  x     subscript  Q    x  z        subscript  Q    y  z     subscript  Q    z  y          subscript  Q    y  x     subscript  Q    x  y        subscript  Q    y  y     subscript  Q    x  x     subscript  Q    z  z        subscript  Q    z  y     subscript  Q    y  z        subscript  Q    z  x     subscript  Q    x  z          subscript  Q    z  x     subscript  Q    x  z        subscript  Q    z  y     subscript  Q    y  z        subscript  Q    z  z     subscript  Q    x  x     subscript  Q    y  y        subscript  Q    x  y     subscript  Q    y  x          subscript  Q    y  z     subscript  Q    z  y        subscript  Q    z  x     subscript  Q    x  z        subscript  Q    x  y     subscript  Q    y  x        subscript  Q    x  x     subscript  Q    y  y     subscript  Q    z  z          K=\frac{1}{3}\begin{bmatrix}Q_{xx}-Q_{yy}-Q_{zz}&Q_{yx}+Q_{xy}&Q_{zx}+Q_{xz}&Q%
 _{yz}-Q_{zy}\\
 Q_{yx}+Q_{xy}&Q_{yy}-Q_{xx}-Q_{zz}&Q_{zy}+Q_{yz}&Q_{zx}-Q_{xz}\\
 Q_{zx}+Q_{xz}&Q_{zy}+Q_{yz}&Q_{zz}-Q_{xx}-Q_{yy}&Q_{xy}-Q_{yx}\\
 Q_{yz}-Q_{zy}&Q_{zx}-Q_{xz}&Q_{xy}-Q_{yx}&Q_{xx}+Q_{yy}+Q_{zz}\end{bmatrix},   and find the eigenvector , ( x , y , z , w ), of its largest magnitude eigenvalue. (If Q is truly a rotation matrix, that value will be 1.) The quaternion so obtained will correspond to the rotation matrix closest to the given matrix.  Polar decomposition  If the n × n matrix M is non-singular, its columns are linearly independent vectors; thus the Gram–Schmidt process can adjust them to be an orthonormal basis. Stated in terms of numerical linear algebra , we convert M to an orthogonal matrix, Q , using QR decomposition . However, we often prefer a Q "closest" to M , which this method does not accomplish. For that, the tool we want is the polar decomposition (; ).  To measure closeness, we may use any matrix norm invariant under orthogonal transformations. A convenient choice is the Frobenius norm , || Q − M || F , squared, which is the sum of the squares of the element differences. Writing this in terms of the trace , Tr, our goal is,   Find Q minimizing Tr( ( Q − M ) T ( Q − M ) ), subject to Q T Q = I .   Though written in matrix terms, the objective function is just a quadratic polynomial. We can minimize it in the usual way, by finding where its derivative is zero. For a 3×3 matrix, the orthogonality constraint implies six scalar equalities that the entries of Q must satisfy. To incorporate the constraint(s), we may employ a standard technique, Lagrange multipliers , assembled as a symmetric matrix, Y . Thus our method is:   Differentiate Tr( ( Q − M ) T ( Q − M ) + ( Q T Q − I ) Y ) with respect to (the entries of) Q , and equate to zero.    Consider a 2×2 example. Including constraints, we seek to minimize        (    Q   x  x    -   M   x  x     )   2   +    (    Q   x  y    -   M   x  y     )   2        superscript     subscript  Q    x  x     subscript  M    x  x     2    superscript     subscript  Q    x  y     subscript  M    x  y     2     \displaystyle\scriptstyle{(Q_{xx}-M_{xx})^{2}+(Q_{xy}-M_{xy})^{2}}   Taking the derivative with respect to Q xx , Q xy , Q yx , Q yy in turn, we assemble a matrix.      2   [        Q   x  x    -   M   x  x     +    Q   x  x     Y   x  x     +    Q   x  y     Y   x  y           Q   x  y    -   M   x  y     +    Q   x  x     Y   x  y     +    Q   x  y     Y   y  y             Q   y  x    -   M   y  x     +    Q   y  x     Y   x  x     +    Q   y  y     Y   x  y           Q   y  y    -   M   y  y     +    Q   y  x     Y   x  y     +    Q   y  y     Y   y  y         ]       2         subscript  Q    x  x     subscript  M    x  x        subscript  Q    x  x     subscript  Y    x  x        subscript  Q    x  y     subscript  Y    x  y           subscript  Q    x  y     subscript  M    x  y        subscript  Q    x  x     subscript  Y    x  y        subscript  Q    x  y     subscript  Y    y  y             subscript  Q    y  x     subscript  M    y  x        subscript  Q    y  x     subscript  Y    x  x        subscript  Q    y  y     subscript  Y    x  y           subscript  Q    y  y     subscript  M    y  y        subscript  Q    y  x     subscript  Y    x  y        subscript  Q    y  y     subscript  Y    y  y          \scriptstyle{2\begin{bmatrix}\scriptstyle{Q_{xx}-M_{xx}+Q_{xx}Y_{xx}+Q_{xy}Y_{%
 xy}}&\scriptstyle{Q_{xy}-M_{xy}+Q_{xx}Y_{xy}+Q_{xy}Y_{yy}}\\
 \scriptstyle{Q_{yx}-M_{yx}+Q_{yx}Y_{xx}+Q_{yy}Y_{xy}}&\scriptstyle{Q_{yy}-M_{%
 yy}+Q_{yx}Y_{xy}+Q_{yy}Y_{yy}}\end{bmatrix}}      In general, we obtain the equation       0  =    2   (   Q  -  M   )    +   2  Q  Y     ,      0      2    Q  M      2  Q  Y      0=2(Q-M)+2QY,\,\!   so that       M  =   Q   (   I  +  Y   )    =   Q  S    ,        M    Q    I  Y           Q  S      M=Q(I+Y)=QS,\,\!   where Q is orthogonal and S is symmetric. To ensure a minimum, the Y matrix (and hence S ) must be positive definite. Linear algebra calls QS the polar decomposition of M , with S the positive square root of S 2 = M T M .       S  2   =     (    Q  T   M   )   T    (    Q  T   M   )    =    M  T   Q   Q  T   M   =    M  T   M          superscript  S  2      superscript     superscript  Q  T   M   T      superscript  Q  T   M            superscript  M  T   Q   superscript  Q  T   M           superscript  M  T   M      S^{2}=(Q^{T}M)^{T}(Q^{T}M)=M^{T}QQ^{T}M=M^{T}M\,\!   When M is non-singular , the Q and S factors of the polar decomposition are uniquely determined. However, the determinant of S is positive because S is positive definite, so Q inherits the sign of the determinant of M . That is, Q is only guaranteed to be orthogonal, not a rotation matrix. This is unavoidable; an M with negative determinant has no uniquely defined closest rotation matrix.  Axis and angle  To efficiently construct a rotation matrix Q from an angle θ and a unit axis u , we can take advantage of symmetry and skew-symmetry within the entries. If x , y , and z are the components of the unit vector representing the axis, and     c   c   \displaystyle c     then       Q   (  θ  )    =   [       x  x  C   +  c       x  y  C   -   z  s        x  z  C   +   y  s          y  x  C   +   z  s        y  y  C   +  c       y  z  C   -   x  s          z  x  C   -   y  s        z  y  C   +   x  s        z  z  C   +  c      ]         Q  θ         x  x  C   c       x  y  C     z  s        x  z  C     y  s          y  x  C     z  s        y  y  C   c       y  z  C     x  s          z  x  C     y  s        z  y  C     x  s        z  z  C   c       Q(\theta)=\begin{bmatrix}xxC+c&xyC-zs&xzC+ys\\
 yxC+zs&yyC+c&yzC-xs\\
 zxC-ys&zyC+xs&zzC+c\end{bmatrix}     Determining an axis and angle, like determining a quaternion, is only possible up to sign; that is, ( u ,θ) and (− u ,−θ) correspond to the same rotation matrix, just like q and − q . As well, axis-angle extraction presents additional difficulties. The angle can be restricted to be from 0° to 180°, but angles are formally ambiguous by multiples of 360°. When the angle is zero, the axis is undefined. When the angle is 180°, the matrix becomes symmetric, which has implications in extracting the axis. Near multiples of 180°, care is needed to avoid numerical problems: in extracting the angle, a two-argument arctangent with [[atan2]](sin θ,cos θ) equal to θ avoids the insensitivity of arccosine; and in computing the axis magnitude in order to force unit magnitude, a brute-force approach can lose accuracy through underflow .  A partial approach is as follows:     x   x   \displaystyle x     The x , y , and z components of the axis would then be divided by r . A fully robust approach will use different code when t , the trace of the matrix Q , is negative, as with quaternion extraction. When r is zero because the angle is zero, an axis must be provided from some source other than the matrix.  Euler angles  Complexity of conversion escalates with Euler angles (used here in the broad sense). The first difficulty is to establish which of the twenty-four variations of Cartesian axis order we will use. Suppose the three angles are θ 1 , θ 2 , θ 3 ; physics and chemistry may interpret these as        Q   (   θ  1   ,   θ  2   ,   θ  3   )    =    Q  𝕩    (   θ  1   )    Q  𝕪    (   θ  2   )    Q  𝕫    (   θ  3   )     ,        Q    subscript  θ  1    subscript  θ  2    subscript  θ  3        subscript  Q  𝕩    subscript  θ  1    subscript  Q  𝕪    subscript  θ  2    subscript  Q  𝕫    subscript  θ  3      Q(\theta_{1},\theta_{2},\theta_{3})=Q_{\mathbb{x}}(\theta_{1})Q_{\mathbb{y}}(%
 \theta_{2})Q_{\mathbb{z}}(\theta_{3}),\,\!     while aircraft dynamics may use        Q   (   θ  1   ,   θ  2   ,   θ  3   )    =    Q  𝕫    (   θ  3   )    Q  𝕪    (   θ  2   )    Q  𝕩    (   θ  1   )     .        Q    subscript  θ  1    subscript  θ  2    subscript  θ  3        subscript  Q  𝕫    subscript  θ  3    subscript  Q  𝕪    subscript  θ  2    subscript  Q  𝕩    subscript  θ  1      Q(\theta_{1},\theta_{2},\theta_{3})=Q_{\mathbb{z}}(\theta_{3})Q_{\mathbb{y}}(%
 \theta_{2})Q_{\mathbb{x}}(\theta_{1}).\,\!   One systematic approach begins with choosing the right-most axis. Among all permutations of ( x , y , z ), only two place that axis first; one is an even permutation and the other odd. Choosing parity thus establishes the middle axis. That leaves two choices for the left-most axis, either duplicating the first or not. These three choices gives us 3×2×2 = 12 variations; we double that to 24 by choosing static or rotating axes.  This is enough to construct a matrix from angles, but triples differing in many ways can give the same rotation matrix. For example, suppose we use the zyz convention above; then we have the following equivalent pairs:        (90°,   45°,   −105°)   ≡   (−270°,   −315°,   255°)    multiples of 360°     (72°,   0°,   0°)   ≡   (40°,   0°,   32°)    singular alignment     (45°,   60°,   −30°)   ≡   (−135°,   −60°,   150°)    bistable flip       Angles for any order can be found using a concise common routine (; ).  The problem of singular alignment, the mathematical analog of physical gimbal lock , occurs when the middle rotation aligns the axes of the first and last rotations. It afflicts every axis order at either even or odd multiples of 90°. These singularities are not characteristic of the rotation matrix as such, and only occur with the usage of Euler angles.  The singularities are avoided when considering and manipulating the rotation matrix as orthonormal row vectors (in 3D applications often named 'right'-vector, 'up'-vector and 'out'-vector) instead of as angles. The singularities are also avoided when working with quaternions.  Uniform random rotation matrices  We sometimes need to generate a uniformly distributed random rotation matrix. It seems intuitively clear in two dimensions that this means the rotation angle is uniformly distributed between 0 and 2π. That intuition is correct, but does not carry over to higher dimensions. For example, if we decompose 3×3 rotation matrices in axis-angle form, the angle should not be uniformly distributed; the probability that (the magnitude of) the angle is at most θ should be 1 ⁄ π (θ − sin θ), for 0 ≤ θ ≤ π.  Since SO( n ) is a connected and locally compact Lie group, we have a simple standard criterion for uniformity, namely that the distribution be unchanged when composed with any arbitrary rotation (a Lie group "translation"). This definition corresponds to what is called Haar measure .  show how to use the Cayley transform to generate and test matrices according to this criterion.  We can also generate a uniform distribution in any dimension using the subgroup algorithm of . This recursively exploits the nested dimensions group structure of SO( n ), as follows. Generate a uniform angle and construct a 2×2 rotation matrix. To step from n to n +1, generate a vector v uniformly distributed on the n- sphere, S n , embed the n × n matrix in the next larger size with last column (0,…,0,1), and rotate the larger matrix so the last column becomes v .  As usual, we have special alternatives for the 3×3 case. Each of these methods begins with three independent random scalars uniformly distributed on the unit interval.  takes advantage of the odd dimension to change a Householder reflection to a rotation by negation, and uses that to aim the axis of a uniform planar rotation.  Another method uses unit quaternions. Multiplication of rotation matrices is homomorphic to multiplication of quaternions, and multiplication by a unit quaternion rotates the unit sphere. Since the homomorphism is a local isometry , we immediately conclude that to produce a uniform distribution on SO(3) we may use a uniform distribution on S 3 .  Euler angles can also be used, though not with each angle uniformly distributed (; ).  For the axis-angle form, the axis is uniformly distributed over the unit sphere of directions, S 2 , while the angle has the non-uniform distribution over [0,π] noted previously .  See also   Euler–Rodrigues formula  Euler's rotation theorem  Rodrigues' rotation formula  Orthogonal matrix  Plane of rotation  Axis–angle representation  Rotation group SO(3)    Rotation formalisms in three dimensions  Rotation operator (vector space)  Transformation matrix  Yaw-pitch-roll system  Kabsch algorithm  Isometry  Rotations in 4-dimensional Euclidean space   Remarks  Notes  References         reprinted as article 52 in {{Citation   | last=Cayley  | first=Arthur  | author-link=Arthur Cayley  | year=1889  | title=The collected mathematical papers of Arthur Cayley  | publisher= Cambridge  University  Press  | volume=I (1841–1853)  | pages=332–336  | isbn=  | url= http://www.hti.umich.edu/cgi/t/text/pageviewer-idx?c=umhistmath;cc=umhistmath;rgn=full%20text;idno=ABS3153.0001.001;didno=ABS3153.0001.001;view=image;seq=00000349  }}        ( GTM 222)                  (Also NASA-CR-53568 .)   ( GTM 102)    External links    Rotation matrices at Mathworld  Math Awareness Month 2000 interactive demo (requires Java )  Rotation Matrices at MathPages   A parametrization of SOn(R) by generalized Euler Angles  Rotation about any point   "  Category:Transformation (function)  Category:Matrices  Category:Mathematical physics     ↩  ↩  Note that if instead of rotating vectors, it is the reference frame that is being rotated, the signs on the sin   θ   θ   θ   terms will be reversed. If reference frame A is rotated anti-clockwise about the origin through an angle   θ   θ   θ   to create reference frame B, then R_x (with the signs flipped) will transform a vector described in reference frame A coordinates to reference frame B coordinates. ↩  ↩  Note     𝐮  ⊗  𝐮   =     (    [  𝐮  ]   ×   )   2   -  𝐈        tensor-product  𝐮  𝐮      superscript   subscript   delimited-[]  𝐮     2   𝐈     \mathbf{u}\otimes\mathbf{u}=([\mathbf{u}]_{\times})^{2}-{\mathbf{I}}   , so that, in Rodrigues' notation, equivalently,     𝐑  =   𝐈  +    (   sin  θ   )     [  𝐮  ]   ×    +    (   1  -   cos  θ    )      (    [  𝐮  ]   ×   )   2       .      𝐑    𝐈      θ    subscript   delimited-[]  𝐮          1    θ     superscript   subscript   delimited-[]  𝐮     2       \mathbf{R}=\mathbf{I}+(\sin\theta)[\mathbf{u}]_{\times}+(1-\cos\theta)([%
 \mathbf{u}]_{\times})^{2}~{}.    ↩  ; ↩  ↩  Note that this exponential map of skew-symmetric matrices to rotation matrices is quite different from the Cayley transform discussed earlier, differing to 3rd order,       e   2  A    -    I  +  A    I  -  A     =    -    2  3    A  3     +   O   (   A  4   )      .         superscript  e    2  A        I  A     I  A             2  3    superscript  A  3       normal-O   superscript  A  4       e^{2A}-\frac{I+A}{I-A}=-\frac{2}{3}A^{3}+\mathrm{O}(A^{4})~{}.    Conversely, a skew-symmetric matrix    A   A   A   specifying a rotation matrix through the Cayley map specifies the same rotation matrix through the map    e  x  p   (   2  a  r  c  t  a  n  h  A   )       e  x  p    2  a  r  c  t  a  n  h  A     exp(2arctanhA)   . ↩  ; ↩  For a detailed derivation, see Derivative of the exponential map . Issues of convergence of this series to the right element of the Lie algebra are here swept under the carpet. Convergence is guaranteed when    e  x  p      e  x  p    exp     ↩  ↩  ; ↩  ↩     