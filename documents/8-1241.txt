   Extended finite-state machine      Extended finite-state machine   In a conventional finite state machine , the transition is associated with a set of input Boolean conditions and a set of output Boolean functions. In an extended finite state machine (EFSM) model , the transition can be expressed by an “ if statement ” consisting of a set of trigger conditions . If trigger conditions are all satisfied, the transition is fired, bringing the machine from the current state to the next state and performing the specified data operations .  Definition  An EFSM is defined 1 as a 7-tuple    M  =   (  I  ,  O  ,  S  ,  D  ,  F  ,  U  ,  T  )       M   I  O  S  D  F  U  T     M=(I,O,S,D,F,U,T)   where   S is a set of symbolic states,  I is a set of input symbols,  O is a set of output symbols,  D is an n-dimensional linear space      D  1   ×  …  ×   D  n        subscript  D  1   normal-…   subscript  D  n     D_{1}\times\ldots\times D_{n}   ,  F is a set of enabling functions      f  i   :   D  →   {  0  ,  1  }       normal-:   subscript  f  i    normal-→  D   0  1      f_{i}:D\rightarrow\{0,1\}   ,  U is a set of update functions      u  i   :   D  →  D      normal-:   subscript  u  i    normal-→  D  D     u_{i}:D\rightarrow D   ,  T is a transition relation,    T  :    S  ×  F  ×  I   →   S  ×  U  ×  O       normal-:  T   normal-→    S  F  I     S  U  O      T:S\times F\times I\rightarrow S\times U\times O      Structure  EFSM Architecture: An EFSM model consists of the following three major combinational blocks (and a few registers).   FSM-block: A conventional finite state machine realizing the state transition graphs of the EFSM model.    A-block: an arithmetic block for performing the data operation associated with each transition. The operation of this block is regulated by the output signals of the FSM block.    E-block: A block for evaluating the trigger conditions associated with each transition. The input signals to this block are the data variables, while the output is a set of binary signals taken for input by the FSM-block. Information about redundant computation is extracted by analyzing the interactions among the three basic blocks. Using this information, certain input operands of the arithmetic block and evaluation block can be frozen through input gating under specific run time conditions to reduce the unnecessary switching in the design. At the architecture level, if each trigger evaluation & data operation is regarded as an atomic action, then the EFSM implies an almost lowest-power implementation.   The cycle behavior of an EFSM can be divided into three steps:   In E-block, evaluate all trigger conditions.  In FSM-block, compute the next state & the signals controlling A-block.   See also  Abstract state machine Extended finite state machines  References    "  Category:Models of computation  Category:Formal methods  Category:Theory of computation     ↩     