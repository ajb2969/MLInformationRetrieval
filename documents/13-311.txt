   Anisotropic diffusion      Anisotropic diffusion  In [[image processing]] and [[computer vision]], '''anisotropic diffusion''', also called '''Perona–Malik diffusion''', is a technique aiming at reducing [[image noise]] without removing significant parts of the image content, typically edges, lines or other details that are important for the interpretation of the image. 1 2 3  Anisotropic diffusion resembles the process that creates a scale  space , where an image generates a parameterized family of successively more and more blurred images based on a diffusion  process .  Each of the resulting images in this family are given as a convolution between the image and a 2D isotropic  Gaussian  filter , where the width of the filter increases with the parameter.  This diffusion process is a linear and space-invariant transformation of the original image.  Anisotropic diffusion is a generalization of this diffusion process: it produces a family of parameterized images, but each resulting image is a combination between the original image and a filter that depends on the local content of the original image.  As a consequence, anisotropic diffusion is a non-linear and space-variant transformation of the original image.  In its original formulation, presented by Perona and Malik in 1987, 4 the space-variant filter is in fact isotropic but depends on the image content such that it approximates an impulse function close to edges and other structures that should be preserved in the image over the different levels of the resulting scale space . This formulation was referred to as anisotropic diffusion by Perona and Malik even though the locally adapted filter is isotropic, but it has also been referred to as inhomogeneous and nonlinear diffusion 5 or Perona-Malik diffusion 6 by other authors. A more general formulation allows the locally adapted filter to be truly anisotropic close to linear structures such as edges or lines: it has an orientation given by the structure such that it is elongated along the structure and narrow across. Such methods are referred to as shape-adapted smoothing 7 8 or coherence enhancing diffusion . 9 As a consequence, the resulting images preserve linear structures while at the same time smoothing is made along these structures. Both these cases can be described by a generalization of the usual diffusion equation where the diffusion coefficient, instead of being a constant scalar, is a function of image position and assumes a matrix (or tensor ) value (see structure tensor ).  Although the resulting family of images can be described as a combination between the original image and space-variant filters, the locally adapted filter and its combination with the image do not have to be realized in practice. Anisotropic diffusion is normally implemented by means of an approximation of the generalized diffusion equation: each new image in the family is computed by applying this equation to the previous image. Consequently, anisotropic diffusion is an iterative process where a relatively simple set of computation are used to compute each successive image in the family and this process is continued until a sufficient degree of smoothing is obtained.  Formal definition  Formally, let    Ω  ⊂   ℝ  2       normal-Ω   superscript  ℝ  2     \Omega\subset\mathbb{R}^{2}   denote a subset of the plane and     I   (  ⋅  ,  t  )    :   Ω  →  ℝ      normal-:    I   normal-⋅  t     normal-→  normal-Ω  ℝ     I(\cdot,t):\Omega\rightarrow\mathbb{R}   be a family of gray scale images, then anisotropic diffusion is defined as        ∂  I    ∂  t    =   div   (   c   (  x  ,  y  ,  t  )    ∇  I    )    =     ∇  c   ⋅   ∇  I    +   c   (  x  ,  y  ,  t  )   Δ  I              I     t      div    c   x  y  t    normal-∇  I             normal-⋅   normal-∇  c    normal-∇  I      c   x  y  t   normal-Δ  I       \frac{\partial I}{\partial t}=\mathrm{div}\left(c(x,y,t)\nabla I\right)=\nabla
 c%
 \cdot\nabla I+c(x,y,t)\Delta I   where   Δ   normal-Δ   \Delta   denotes the Laplacian ,   ∇   normal-∇   \nabla   denotes the gradient ,    div   (  …  )       div  normal-…    \mathrm{div}(\dots)   is the divergence operator and    c   (  x  ,  y  ,  t  )       c   x  y  t     c(x,y,t)   is the diffusion coefficient.    c   (  x  ,  y  ,  t  )       c   x  y  t     c(x,y,t)   controls the rate of diffusion and is usually chosen as a function of the image gradient so as to preserve edges in the image. Pietro Perona and Jitendra Malik pioneered the idea of anisotropic diffusion in 1990 and proposed two functions for the diffusion coefficient:       c   (   ∥   ∇  I   ∥   )    =   e   -    (    ∥   ∇  I   ∥   /  K   )   2           c   norm   normal-∇  I      superscript  e     superscript     norm   normal-∇  I    K   2       c\left(\|\nabla I\|\right)=e^{-\left(\|\nabla I\|/K\right)^{2}}   and       c   (   ∥   ∇  I   ∥   )    =   1   1  +    (    ∥   ∇  I   ∥   K   )   2           c   norm   normal-∇  I       1    1   superscript     norm   normal-∇  I    K   2       c\left(\|\nabla I\|\right)=\frac{1}{1+\left(\frac{\|\nabla I\|}{K}\right)^{2}}   the constant K controls the sensitivity to edges and is usually chosen experimentally or as a function of the noise in the image.  Motivation  Let   M   M   M   denote the manifold of smooth images, then the diffusion equations presented above can be interpreted as the gradient descent equations for the minimization of the energy functional    E  :   M  →  ℝ      normal-:  E   normal-→  M  ℝ     E:M\rightarrow\mathbb{R}   defined by       E   [  I  ]    =    1  2     ∫  Ω    g   (    ∥    ∇  I    (  x  )    ∥   2   )   d  x           E   delimited-[]  I        1  2     subscript   normal-Ω     g   superscript   norm     normal-∇  I   x    2   d  x       E[I]=\frac{1}{2}\int_{\Omega}g\left(\|\nabla I(x)\|^{2}\right)\,dx   where    g  :   ℝ  →  ℝ      normal-:  g   normal-→  ℝ  ℝ     g:\mathbb{R}\rightarrow\mathbb{R}   is a real-valued function which we will see is intimately related to the diffusion coefficient. Then for any compactly supported infinitely differentiable test function   h   h   h   , we have          d   d  t     |    t  =  0    E   [   I  +   t  h    ]        evaluated-at    d    d  t      t  0    E   delimited-[]    I    t  h       \displaystyle\left.\frac{d}{dt}\right|_{t=0}E[I+th]     where the last line follow from multidimensional integration by parts. Letting    ∇   E  I      normal-∇   subscript  E  I     \nabla E_{I}   denote the gradient of E with respect to the     L  2    (  Ω  ,  ℝ  )        superscript  L  2    normal-Ω  ℝ     L^{2}(\Omega,\mathbb{R})    inner product evaluated at I, this gives       ∇   E  I    =   -   div   (    g  ′    (    ∥    ∇  I    (  x  )    ∥   2   )    ∇  I    )          normal-∇   subscript  E  I        div     superscript  g  normal-′    superscript   norm     normal-∇  I   x    2    normal-∇  I        \nabla E_{I}=-\mathrm{div}(g^{\prime}\left(\|\nabla I(x)\|^{2}\right)\nabla I)     Therefore, the gradient descent equations on the functional E are given by        ∂  I    ∂  t    =   -   ∇   E  I     =   div   (    g  ′    (    ∥    ∇  I    (  x  )    ∥   2   )    ∇  I    )              I     t       normal-∇   subscript  E  I            div     superscript  g  normal-′    superscript   norm     normal-∇  I   x    2    normal-∇  I        \frac{\partial I}{\partial t}=-\nabla E_{I}=\mathrm{div}(g^{\prime}\left(\|%
 \nabla I(x)\|^{2}\right)\nabla I)   Thus by letting    c  =   g  ′       c   superscript  g  normal-′     c=g^{\prime}   we obtain the anisotropic diffusion equations.  Regularization  Modified Perona-Malik model 10 (that is also known as regularization of P-M equation) will be discussed in this section. In this approach, the unknown is convolved with a Gaussian inside the non-linearity to obtain the modified Perona-Malik equation        ∂  I    ∂  t    =   div   (   c   (   |    D   G  σ    *  I   |   )    ∇  I    )            I     t      div    c        D   subscript  G  σ    I     normal-∇  I       \frac{\partial I}{\partial t}=\mathrm{div}\left(c(|DG_{\sigma}*I|)\nabla I\right)   Where     G  σ   =   C   σ   -   (   1  /  2   )     e  x  p   (   -      |  x  |   2   /  4   σ    )         subscript  G  σ     C   superscript  σ      1  2     e  x  p         superscript    x   2   4   σ       G_{\sigma}=C{\sigma}^{-\left(1/2\right)}exp\left(-|x|^{2}/4{\sigma}\right)   .  The well-posedness of the equation can be achieved by regularization but it also introduce blurring effect, which is the main drawback of regularization. A prior knowledge of noise level is required as the choice of regularization parameter depends on it.  Applications  Anisotropic diffusion can be used to remove noise from digital images without blurring edges. With a constant diffusion coefficient, the anisotropic diffusion equations reduce to the heat equation which is equivalent to Gaussian blurring. This is ideal for removing noise but also indiscriminately blurs edges too. When the diffusion coefficient is chosen as an edge seeking function, such as in Perona and Malik, the resulting equations encourage diffusion (hence smoothing) within regions and prohibit it across strong edges. Hence the edges can be preserved while removing noise from the image.  Along the same lines as noise removal, anisotropic diffusion can be used in edge detection algorithms. By running the diffusion with an edge seeking diffusion coefficient for a certain number of iterations, the image can be evolved towards a piecewise constant image with the boundaries between the constant components being detected as edges.  See also   Bilateral filter  Edge detection  Edge-preserving smoothing  Heat equation  Image noise  Noise reduction  Scale space  Total variation denoising   References  External links   Mathematica PeronaMalikFilter function.  IDL nonlinear anisotropic diffusion package(edge enhancing and coherence enhancing): 1   "  Category:Image processing  Category:Image noise reduction techniques                  