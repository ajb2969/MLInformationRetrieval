   Color-coding      Color-coding   In computer science and graph theory , the method of color-coding 1 2 efficiently finds   k   k   k   -vertex simple paths ,   k   k   k   -vertex cycles , and other small subgraphs within a given graph using probabilistic algorithms , which can then be derandomized and turned into deterministic algorithms . This method shows that many subcases of the subgraph isomorphism problem (an NP-complete problem) can in fact be solved in polynomial time .  The theory and analysis of the color-coding method was proposed in 1994 by Noga Alon , Raphael Yuster , and Uri Zwick .  Results  The following results can be obtained through the method of color-coding:   For every fixed constant   k   k   k   , if a graph    G  =   (  V  ,  E  )       G   V  E     G=(V,E)   contains a simple cycle of size   k   k   k   , then such cycle can be found in:  O(    V  ω     superscript  V  ω    V^{\omega}   ) expected time, or  O(     V  ω    log  V        superscript  V  ω     V     V^{\omega}\log V   ) worst-case time, where   ω   ω   ω   is the exponent of matrix multiplication . 3     For every fixed constant   k   k   k   , and every graph    G  =   (  V  ,  E  )       G   V  E     G=(V,E)   that is in any nontrivial minor-closed graph family (e.g., a planar graph ), if   G   G   G   contains a simple cycle of size   k   k   k   , then such cycle can be found in:      O   (  V  )       O  V    O(V)   expected time, or      O   (   V  l  o  g  V   )       O    V  l  o  g  V     O(VlogV)   worst-case time.     If a graph    G  =   (  V  ,  E  )       G   V  E     G=(V,E)   contains a subgraph isomorphic to a bounded treewidth graph which has    O   (   l  o  g  V   )       O    l  o  g  V     O(logV)   vertices, then such a subgraph can be found in polynomial time .   The method  To solve the problem of finding a subgraph    H  =   (   V  H   ,   E  H   )       H    subscript  V  H    subscript  E  H      H=(V_{H},E_{H})   in a given graph    G  =   (  V  ,  E  )       G   V  E     G=(V,E)   , where   H   H   H   can be a path, a cycle, or any bounded treewidth graph where     |   V  H   |   =   O   (   log  V   )           subscript  V  H      O    V      |V_{H}|=O(\log V)   , the method of color-coding begins by randomly coloring each vertex of   G   G   G   with    k  =   |   V  H   |       k     subscript  V  H      k=|V_{H}|   colors, and then tries to find a colorful copy of   H   H   H   in colored   G   G   G   . Here, a graph is colorful if every vertex in it is colored with a distinct color. This method works by repeating (1) random coloring a graph and (2) finding colorful copy of the target subgraph, and eventually the target subgraph can be found if the process is repeated a sufficient number of times.  Suppose   H   H   H   becomes colorful with some non-zero probability   p   p   p   . It immediately follows that if the random coloring is repeated    1  p      1  p    \frac{1}{p}   times, then   H   H   H   is expected to become colorful once. Note that though   p   p   p   is small, it is shown that if     |   V  H   |   =   O   (   log  V   )           subscript  V  H      O    V      |V_{H}|=O(\log V)   ,   p   p   p   is only polynomially small. Suppose again there exists an algorithm such that, given a graph   G   G   G   and a coloring which maps each vertex of   G   G   G   to one of the   k   k   k   colors, it finds a copy of colorful   H   H   H   , if one exists, within some runtime    O   (  r  )       O  r    O(r)   . Then the expected time to find a copy of   H   H   H   in   G   G   G   , if one exists, is    O   (   r  p   )       O    r  p     O(\tfrac{r}{p})   .  Sometimes it is also desirable to use a more restricted version of colorfulness. For example, in the context of finding cycles in planar graphs , it is possible to develop an algorithm that finds well-colored cycles. Here, a cycle is well-colored if its vertices are colored by consecutive colors.  Example  An example would be finding a simple cycle of length   k   k   k   in graph    G  =   (  V  ,  E  )       G   V  E     G=(V,E)   .  By applying random coloring method, each simple cycle has a probability of      k  !   /   k  k    >   e   -  k            k    superscript  k  k     superscript  e    k      k!/k^{k}>e^{-k}   to become colorful, since there are    k  k     superscript  k  k    k^{k}   ways of coloring the   k   k   k   vertices on the path, among which there are    k  !      k    k!   colorful occurrences. Then an algorithm (described below) of runtime    O   (   V  ω   )       O   superscript  V  ω     O(V^{\omega})   can be adopted to find colorful cycles in the randomly colored graph   G   G   G   . Therefore, it takes      e  k   ⋅  O    (   V  ω   )        normal-⋅   superscript  e  k   O    superscript  V  ω     e^{k}\cdot O(V^{\omega})   overall time to find a simple cycle of length   k   k   k   in   G   G   G   .  The colorful cycle-finding algorithm works by first finding all pairs of vertices in   V   V   V   that are connected by a simple path of length    k  −  1      k  normal-−  1    k−1   , and then checking whether the two vertices in each pair are connected. Given a coloring function  to color graph   G   G   G   , enumerate all partitions of the color set  into two subsets of size    k  /  2      k  2    k/2   each. Note that   V   V   V   can be divided into and accordingly, and let and denote the subgraphs induced by and respectively. Then, recursively find colorful paths of length     k  /  2   -  1        k  2   1    k/2-1   in each of and . Suppose the boolean matrix and represent the connectivity of each pair of vertices in and by a colorful path, respectively, and let   B   B   B   be the matrix describing the adjacency relations between vertices of and those of , the boolean product     A  1   B   A  2        subscript  A  1   B   subscript  A  2     A_{1}BA_{2}   gives all pairs of vertices in   V   V   V   that are connected by a colorful path of length    k  −  1      k  normal-−  1    k−1   . Thus, the recursive relation of matrix multiplications is     t   (  k  )    ≤     2  k   ⋅  t    (   k  /  2   )          t  k      normal-⋅   superscript  2  k   t     k  2      t(k)\leq 2^{k}\cdot t(k/2)   , which yields a runtime of      2   O   (  k  )     ⋅   V  ω    ∈   O   (   V  ω   )         normal-⋅   superscript  2    O  k     superscript  V  ω      O   superscript  V  ω      2^{O(k)}\cdot V^{\omega}\in O(V^{\omega})   . Although this algorithm finds only the end points of the colorful path, another algorithm by Alon and Naor 4 that finds colorful paths themselves can be incorporated into it.  Derandomization  The derandomization of color-coding involves enumerating possible colorings of a graph   G   G   G   , such that the randomness of coloring   G   G   G   is no longer required. For the target subgraph   H   H   H   in   G   G   G   to be discoverable, the enumeration has to include at least one instance where the   H   H   H   is colorful. To achieve this, enumerating a   k   k   k   -perfect family   F   F   F   of hash functions from  to  is sufficient. By definition,   F   F   F   is   k   k   k   -perfect if for every subset   S   S   S   of  where     |  S  |   =  k        S   k    |S|=k   , there exists a hash function   h   h   h   in   F   F   F   such that  is perfect . In other words, there must exist a hash function in   F   F   F   that colors any given   k   k   k   vertices with   k   k   k   distinct colors.  There are several approaches to construct such a   k   k   k   -perfect hash family:   The best explicit construction is by Moni Naor , Leonard J. Schulman , and Aravind Srinivasan , 5 where a family of size     e  k    k   O   (   log  k   )      log   |  V  |         superscript  e  k    superscript  k    O    k         V      e^{k}k^{O(\log k)}\log|V|   can be obtained. This construction does not require the target subgraph to exist in the original subgraph finding problem.  Another explicit construction by Jeanette P. Schmidt and Alan Siegel 6 yields a family of size     2   O   (  k  )       log  2    |  V  |         superscript  2    O  k      superscript   2     V      2^{O(k)}\log^{2}|V|   .  Another construction that appears in the original paper of Noga Alon et al. 7 can be obtained by first building a   k   k   k   -perfect family that maps  to  followed by building another   k   k   k   -perfect family that maps  to  In the first step, it is possible to construct such a family with    2  n  l  o  g  k      2  n  l  o  g  k    2nlogk   random bits that are almost    2  l  o  g  k      2  l  o  g  k    2logk   -wise independent, 8 9 and the sample space needed for generating those random bits can be as small as     k   O   (  1  )      log   |  V  |         superscript  k    O  1        V      k^{O(1)}\log|V|   . In the second step, it has been shown by Jeanette P. Schmidt and Alan Siegel 10 that the size of such   k   k   k   -perfect family can be    2   O   (  k  )       superscript  2    O  k     2^{O(k)}   . Consequently, by composing the   k   k   k   -perfect families from both steps, a   k   k   k   -perfect family of size     2   O   (  k  )      log   |  V  |         superscript  2    O  k        V      2^{O(k)}\log|V|   that maps from  to  can be obtained.   In the case of derandomizing well-coloring, where each vertex on the subgraph is colored consecutively, a   k   k   k   -perfect family of hash functions from  to  is needed. A sufficient   k   k   k   -perfect family which maps from  to  can be constructed in a way similar to the approach 3 above (the first step). In particular, it is done by using    n  k  l  o  g  k      n  k  l  o  g  k    nklogk   random bits that are almost    k  l  o  g  k      k  l  o  g  k    klogk   independent, and the size of the resulting   k   k   k   -perfect family will be     k   O   (  k  )      log   |  V  |         superscript  k    O  k        V      k^{O(k)}\log|V|   .  The derandomization of color-coding method can be easily parallelized, yielding efficient NC algorithms.  Applications  Recently, color-coding has attracted much attention in the field of bioinformatics. One example is the detection of signaling pathways in protein-protein interaction (PPI) networks. Another example is to discover and to count the number of motifs in PPI networks. Studying both signaling pathways and motifs allows a deeper understanding of the similarities and differences of many biological functions, processes, and structures among organisms.  Due to the huge amount of gene data that can be collected, searching for pathways or motifs can be highly time consuming. However, by exploiting the color-coding method, the motifs or signaling pathways with    k  =   O   (   log  n   )        k    O    n      k=O(\log n)   vertices in a network   G   G   G   with   n   n   n   vertices can be found very efficiently in polynomial time. Thus, this enables us to explore more complex or larger structures in PPI networks. More details can be found in. 11 12  References  "  Category:Graph algorithms     Alon, N., Yuster, R., and Zwick, U. 1994. Color-coding: a new method for finding simple paths, cycles and other small subgraphs within large graphs. In Proceedings of the Twenty-Sixth Annual ACM Symposium on theory of Computing (Montreal, Quebec, Canada, May 23–25, 1994). STOC '94. ACM, New York, NY, 326–335. DOI= http://doi.acm.org/10.1145/195058.195179 ↩  Alon, N., Yuster, R., and Zwick, U. 1995. Color-coding. J. ACM 42, 4 (Jul. 1995), 844–856. DOI= http://doi.acm.org/10.1145/210332.210337 ↩  Coppersmith–Winograd Algorithm ↩  Alon, N. and Naor, M. 1994 Derandomization, Witnesses for Boolean Matrix Multiplication and Construction of Perfect Hash Functions. Technical Report. UMI Order Number: CS94-11., Weizmann Science Press of Israel. ↩  Naor, M., Schulman, L. J., and Srinivasan, A. 1995. Splitters and near-optimal derandomization. In Proceedings of the 36th Annual Symposium on Foundations of Computer Science (October 23–25, 1995). FOCS. IEEE Computer Society, Washington, DC, 182. ↩  Schmidt, J. P. and Siegel, A. 1990. The spatial complexity of oblivious k-probe Hash functions. SIAM J. Comput. 19, 5 (Sep. 1990), 775-786. DOI= http://dx.doi.org/10.1137/0219054 ↩   Naor, J. and Naor, M. 1990. Small-bias probability spaces: efficient constructions and applications. In Proceedings of the Twenty-Second Annual ACM Symposium on theory of Computing (Baltimore, Maryland, United States, May 13–17, 1990). H. Ortiz, Ed. STOC '90. ACM, New York, NY, 213-223. DOI= http://doi.acm.org/10.1145/100216.100244 ↩  Alon, N., Goldreich, O., Hastad, J., and Peralta, R. 1990. Simple construction of almost k-wise independent random variables. In Proceedings of the 31st Annual Symposium on Foundations of Computer Science (October 22–24, 1990). SFCS. IEEE Computer Society, Washington, DC, 544-553 vol.2. DOI= http://dx.doi.org/10.1109/FSCS.1990.89575 ↩   Alon, N., Dao, P., Hajirasouliha, I., Hormozdiari, F., and Sahinalp, S. C. 2008. Biomolecular network motif counting and discovery by color coding. Bioinformatics 24, 13 (Jul. 2008), i241-i249. DOI= http://dx.doi.org/10.1093/bioinformatics/btn163 ↩  Hüffner, F., Wernicke, S., and Zichner, T. 2008. Algorithm Engineering for Color-Coding with Applications to Signaling Pathway Detection. Algorithmica 52, 2 (Aug. 2008), 114-132. DOI= http://dx.doi.org/10.1007/s00453-007-9008-7 ↩     