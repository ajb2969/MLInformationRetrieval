   Completeness (logic)      Completeness (logic)   In mathematical logic and metalogic , a formal system is called complete with respect to a particular property if every formula having the property can be derived using that system, i.e. is one of its theorems ; otherwise the system is said to be incomplete . The term "complete" is also used without qualification, with differing meanings depending on the context, mostly referring to the property of semantical validity . Intuitively, a system is called complete in this particular sense, if it can derive every formula that is true. Kurt Gödel , Leon Henkin , and Emil Leon Post all published proofs of completeness. (See History of the Church–Turing thesis .)  Other properties related to completeness  The property converse to completeness is called soundness , or consistency : a system is sound with respect to a property (mostly semantical validity) if each of its theorems has that property.  Forms of completeness  Expressive completeness  A formal language is expressively complete if it can express the subject matter for which it is intended.  Functional completeness  A set of logical connectives associated with a formal system is functionally complete if it can express all propositional functions .  Semantic completeness  Semantic completeness is the converse of soundness for formal systems. A formal system is complete with respect to tautologousness or "semantically complete" when all its tautologies are theorems , whereas a formal system is "sound" when all theorems are tautologies (that is, they are semantically valid formulas: formulas that are true under every interpretation of the language of the system that is consistent with the rules of the system). That is,         ⊧  𝒮    φ   →   ⊢  𝒮   φ  .     fragments   subscript  models  𝒮   φ  normal-→   subscript  proves  𝒮   φ  normal-.    \models_{\mathcal{S}}\varphi\ \to\ \vdash_{\mathcal{S}}\varphi.    1      Strong completeness  A formal system   𝒮   𝒮   \mathcal{S}   is strongly complete or complete in the strong sense if for every set of premises Γ, any formula that semantically follows from Γ is derivable from Γ. That is:        Γ   ⊧  𝒮    φ   →  Γ   ⊢  𝒮   φ  .     fragments  Γ   subscript  models  𝒮   φ  normal-→  Γ   subscript  proves  𝒮   φ  normal-.    \Gamma\models_{\mathcal{S}}\varphi\ \to\ \Gamma\vdash_{\mathcal{S}}\varphi.        Refutation completeness  A formal system   𝒮   𝒮   \mathcal{S}   is refutation-complete if it is able to derive false from every unsatisfiable set of formulas. That is,        Γ   ⊧  𝒮   ⊥  →  Γ   ⊢  𝒮   ⊥  .     fragments  Γ   subscript  models  𝒮   bottom  normal-→  Γ   subscript  proves  𝒮   bottom  normal-.    \Gamma\models_{\mathcal{S}}\bot\to\ \Gamma\vdash_{\mathcal{S}}\bot.    2      Every strongly complete system is also refutation-complete. Intuitively, strong completeness means that, given a formula set   Γ   normal-Γ   \Gamma   , it is possible to compute every semantical consequence   φ   φ   \varphi   of   Γ   normal-Γ   \Gamma   , while refutation-completeness means that, given a formula set   Γ   normal-Γ   \Gamma   and a formula   φ   φ   \varphi   , it is possible to check whether   φ   φ   \varphi   is a semantical consequence of   Γ   normal-Γ   \Gamma   .  Examples of refutation-complete systems include: SLD resolution on Horn clauses , superposition on equational clausal first-order logic, Robinson's resolution on clause sets. 3 The latter is not strongly complete: e.g.     {  a  }   ⊧   a  ∨  b      models   a     a  b     \{a\}\models a\lor b   holds even in the propositional subset of first-order logic, but    a  ∨  b      a  b    a\lor b   cannot be derived from    {  a  }     a    \{a\}   by resolution. However,     {  a  ,   ¬   (   a  ∨  b   )    }   ⊢  ⊥     proves   a      a  b     bottom    \{a,\lnot(a\lor b)\}\vdash\bot   can be derived.  Syntactical completeness  A formal system   𝒮   𝒮   \mathcal{S}   is syntactically complete or deductively complete or maximally complete if for each sentence (closed formula) φ of the language of the system either φ or ¬φ is a theorem of   𝒮   𝒮   \mathcal{S}   . This is also called negation completeness . In another sense, a formal system is syntactically complete if and only if no unprovable sentence can be added to it without introducing an inconsistency. Truth-functional propositional logic and first-order predicate logic are semantically complete, but not syntactically complete (for example, the propositional logic statement consisting of a single propositional variable A is not a theorem, and neither is its negation, but these are not tautologies). Gödel's incompleteness theorem shows that any recursive system that is sufficiently powerful, such as Peano arithmetic , cannot be both consistent and syntactically complete.  References  "  Category:Mathematical logic  Category:Metalogic  Category:Model theory  Category:Proof theory     Hunter, Geoffrey, Metalogic: An Introduction to the Metatheory of Standard First-Order Logic, University of California Pres, 1971 ↩  Here: sect. 2.2.3.1, p.33 ↩  Here: sect. 9.7, p.286 ↩     