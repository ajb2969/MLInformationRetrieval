


Type inhabitation




Type inhabitation

In type theory, a branch of mathematical logic, in a given typed calculus, the type inhabitation problem for this calculus is the following problem:1 given a type 
 
 
 
  and a typing environment

 
 , does there exist a 
 
 
 
 -term M such that 
 
 
 
 
 ? With an empty type environment, such an M is said to be an inhabitant of 
 
 
 
 .
Relationship to logic
In the case of simply typed lambda calculus, a type has an inhabitant if and only if its corresponding proposition is a tautology of minimal implicative logic. Similarly, a System F type has an inhabitant if and only if its corresponding proposition is a tautology of second-order logic.
Formal properties
For most typed calculi, the type inhabitation problem is very hard. Richard Statman proved that for simply typed lambda calculus the type inhabitation problem is PSPACE-complete. For other calculi, like System F, the problem is even undecidable.
See also

Curry–Howard isomorphism

References
"
Category:Lambda calculus Category:Type theory



↩




