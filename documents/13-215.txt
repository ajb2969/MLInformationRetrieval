   SPIKE algorithm      SPIKE algorithm   The SPIKE algorithm is a hybrid parallel solver for banded  linear systems developed by Eric Polizzi and Ahmed Sameh .  Overview  The SPIKE algorithm deals with a linear system  F }} , where is a banded    n  ×  n      n  n    n\times n   matrix of bandwidth much less than   n   n   n   , and is an    n  ×  s      n  s    n\times s   matrix containing   s   s   s   right-hand sides. It is divided into a preprocessing stage and a postprocessing stage.  Preprocessing stage  In the preprocessing stage, the linear system  F }} is partitioned into a block tridiagonal form         [      𝑨  1      𝑩  1        𝑪  2      𝑨  2      𝑩  2          ⋱    ⋱    ⋱             𝑪   p  -  1       𝑨   p  -  1       𝑩   p  -  1                  𝑪  p      𝑨  p      ]    [      𝑿  1        𝑿  2       ⋮       𝑿   p  -  1         𝑿  p      ]    =   [      𝑭  1        𝑭  2       ⋮       𝑭   p  -  1         𝑭  p      ]    .           subscript  𝑨  1    subscript  𝑩  1      subscript  𝑪  2    subscript  𝑨  2    subscript  𝑩  2     absent  normal-⋱  normal-⋱  normal-⋱    absent  absent   subscript  𝑪    p  1     subscript  𝑨    p  1     subscript  𝑩    p  1      absent  absent  absent   subscript  𝑪  p    subscript  𝑨  p        subscript  𝑿  1      subscript  𝑿  2     normal-⋮     subscript  𝑿    p  1       subscript  𝑿  p         subscript  𝑭  1      subscript  𝑭  2     normal-⋮     subscript  𝑭    p  1       subscript  𝑭  p       \begin{bmatrix}\boldsymbol{A}_{1}&\boldsymbol{B}_{1}\\
 \boldsymbol{C}_{2}&\boldsymbol{A}_{2}&\boldsymbol{B}_{2}\\
 &\ddots&\ddots&\ddots\\
 &&\boldsymbol{C}_{p-1}&\boldsymbol{A}_{p-1}&\boldsymbol{B}_{p-1}\\
 &&&\boldsymbol{C}_{p}&\boldsymbol{A}_{p}\end{bmatrix}\begin{bmatrix}%
 \boldsymbol{X}_{1}\\
 \boldsymbol{X}_{2}\\
 \vdots\\
 \boldsymbol{X}_{p-1}\\
 \boldsymbol{X}_{p}\end{bmatrix}=\begin{bmatrix}\boldsymbol{F}_{1}\\
 \boldsymbol{F}_{2}\\
 \vdots\\
 \boldsymbol{F}_{p-1}\\
 \boldsymbol{F}_{p}\end{bmatrix}.     Assume, for the time being, that the diagonal blocks ( 1,…, p }} with ) are nonsingular . Define a block diagonal matrix   diag( A 1 ,…, A p )}} ,   then is also nonsingular. Left-multiplying to both sides of the system gives         \begin{bmatrix} \boldsymbol{I} & \boldsymbol{V}_1\\ \boldsymbol{W}_2 & \boldsymbol{I} & \boldsymbol{V}_2\\ & \ddots & \ddots & \ddots\\ & & \boldsymbol{W}_{p-1} & \boldsymbol{I} & \boldsymbol{V}_{p-1}\\ & & & \boldsymbol{W}_p & \boldsymbol{I} \end{bmatrix} \begin{bmatrix} \boldsymbol{X}_1\\ \boldsymbol{X}_2\\ \vdots\\ \boldsymbol{X}_{p-1}\\ \boldsymbol{X}_p \end{bmatrix} = \begin{bmatrix} \boldsymbol{G}_1\\ \boldsymbol{G}_2\\ \vdots\\ \boldsymbol{G}_{p-1}\\ \boldsymbol{G}_p \end{bmatrix},  which is to be solved in the postprocessing stage. Left-multiplication by is equivalent to solving   p   p   p   systems of the form   [ B j  C j  F j ]}}    (omitting and for    j  =  1      j  1    j=1   , and and for    j  =  p      j  p    j=p   ), which can be carried out in parallel.  Due to the banded nature of , only a few leftmost columns of each and a few rightmost columns of each can be nonzero. These columns are called the spikes .  Postprocessing stage  Without loss of generality , assume that each spike contains exactly   m   m   m   columns (   m   m   m   is much less than   n   n   n   ) (pad the spike with columns of zeroes if necessary). Partition the spikes in all and into      [      𝑽  j   (  t  )         𝑽  j  ′        𝑽  j   (  b  )       ]       superscript   subscript  𝑽  j   t      superscript   subscript  𝑽  j   normal-′      superscript   subscript  𝑽  j   b      \begin{bmatrix}\boldsymbol{V}_{j}^{(t)}\\
 \boldsymbol{V}_{j}^{\prime}\\
 \boldsymbol{V}_{j}^{(b)}\end{bmatrix}   and    [      𝑾  j   (  t  )         𝑾  j  ′        𝑾  j   (  b  )       ]       superscript   subscript  𝑾  j   t      superscript   subscript  𝑾  j   normal-′      superscript   subscript  𝑾  j   b      \begin{bmatrix}\boldsymbol{W}_{j}^{(t)}\\
 \boldsymbol{W}_{j}^{\prime}\\
 \boldsymbol{W}_{j}^{(b)}\\
 \end{bmatrix}     where , , and are of dimensions    m  ×  m      m  m    m\times m   . Partition similarly all and into      [      𝑿  j   (  t  )         𝑿  j  ′        𝑿  j   (  b  )       ]       superscript   subscript  𝑿  j   t      superscript   subscript  𝑿  j   normal-′      superscript   subscript  𝑿  j   b      \begin{bmatrix}\boldsymbol{X}_{j}^{(t)}\\
 \boldsymbol{X}_{j}^{\prime}\\
 \boldsymbol{X}_{j}^{(b)}\end{bmatrix}   and     [      𝑮  j   (  t  )         𝑮  j  ′        𝑮  j   (  b  )       ]   .       superscript   subscript  𝑮  j   t      superscript   subscript  𝑮  j   normal-′      superscript   subscript  𝑮  j   b      \begin{bmatrix}\boldsymbol{G}_{j}^{(t)}\\
 \boldsymbol{G}_{j}^{\prime}\\
 \boldsymbol{G}_{j}^{(b)}\\
 \end{bmatrix}.     Notice that the system produced by the preprocessing stage can be reduced to a block pentadiagonal system of much smaller size (recall that   m   m   m   is much less than   n   n   n   )        [      𝑰  m     𝟎     𝑽  1   (  t  )        𝟎     𝑰  m      𝑽  1   (  b  )      𝟎      𝟎     𝑾  2   (  t  )       𝑰  m     𝟎     𝑽  2   (  t  )            𝑾  2   (  b  )      𝟎     𝑰  m      𝑽  2   (  b  )      𝟎            ⋱    ⋱    ⋱    ⋱    ⋱               𝟎     𝑾   p  -  1    (  t  )       𝑰  m     𝟎     𝑽   p  -  1    (  t  )                     𝑾   p  -  1    (  b  )      𝟎     𝑰  m      𝑽   p  -  1    (  b  )      𝟎                     𝟎     𝑾  p   (  t  )       𝑰  m     𝟎                         𝑾  p   (  b  )      𝟎     𝑰  m      ]    [      𝑿  1   (  t  )         𝑿  1   (  b  )         𝑿  2   (  t  )         𝑿  2   (  b  )        ⋮       𝑿   p  -  1    (  t  )         𝑿   p  -  1    (  b  )         𝑿  p   (  t  )         𝑿  p   (  b  )       ]    =    [      𝑮  1   (  t  )         𝑮  1   (  b  )         𝑮  2   (  t  )         𝑮  2   (  b  )        ⋮       𝑮   p  -  1    (  t  )         𝑮   p  -  1    (  b  )         𝑮  p   (  t  )         𝑮  p   (  b  )       ]   ,            subscript  𝑰  m   0   superscript   subscript  𝑽  1   t     0   subscript  𝑰  m    superscript   subscript  𝑽  1   b   0    0   superscript   subscript  𝑾  2   t    subscript  𝑰  m   0   superscript   subscript  𝑽  2   t     absent   superscript   subscript  𝑾  2   b   0   subscript  𝑰  m    superscript   subscript  𝑽  2   b   0    absent  absent  normal-⋱  normal-⋱  normal-⋱  normal-⋱  normal-⋱    absent  absent  absent  0   superscript   subscript  𝑾    p  1    t    subscript  𝑰  m   0   superscript   subscript  𝑽    p  1    t     absent  absent  absent  absent   superscript   subscript  𝑾    p  1    b   0   subscript  𝑰  m    superscript   subscript  𝑽    p  1    b   0    absent  absent  absent  absent  absent  0   superscript   subscript  𝑾  p   t    subscript  𝑰  m   0    absent  absent  absent  absent  absent  absent   superscript   subscript  𝑾  p   b   0   subscript  𝑰  m        superscript   subscript  𝑿  1   t      superscript   subscript  𝑿  1   b      superscript   subscript  𝑿  2   t      superscript   subscript  𝑿  2   b     normal-⋮     superscript   subscript  𝑿    p  1    t      superscript   subscript  𝑿    p  1    b      superscript   subscript  𝑿  p   t      superscript   subscript  𝑿  p   b           superscript   subscript  𝑮  1   t      superscript   subscript  𝑮  1   b      superscript   subscript  𝑮  2   t      superscript   subscript  𝑮  2   b     normal-⋮     superscript   subscript  𝑮    p  1    t      superscript   subscript  𝑮    p  1    b      superscript   subscript  𝑮  p   t      superscript   subscript  𝑮  p   b     ,     \begin{bmatrix}\boldsymbol{I}_{m}&\boldsymbol{0}&\boldsymbol{V}_{1}^{(t)}\\
 \boldsymbol{0}&\boldsymbol{I}_{m}&\boldsymbol{V}_{1}^{(b)}&\boldsymbol{0}\\
 \boldsymbol{0}&\boldsymbol{W}_{2}^{(t)}&\boldsymbol{I}_{m}&\boldsymbol{0}&%
 \boldsymbol{V}_{2}^{(t)}\\
 &\boldsymbol{W}_{2}^{(b)}&\boldsymbol{0}&\boldsymbol{I}_{m}&\boldsymbol{V}_{2}%
 ^{(b)}&\boldsymbol{0}\\
 &&\ddots&\ddots&\ddots&\ddots&\ddots\\
 &&&\boldsymbol{0}&\boldsymbol{W}_{p-1}^{(t)}&\boldsymbol{I}_{m}&\boldsymbol{0}%
 &\boldsymbol{V}_{p-1}^{(t)}\\
 &&&&\boldsymbol{W}_{p-1}^{(b)}&\boldsymbol{0}&\boldsymbol{I}_{m}&\boldsymbol{V%
 }_{p-1}^{(b)}&\boldsymbol{0}\\
 &&&&&\boldsymbol{0}&\boldsymbol{W}_{p}^{(t)}&\boldsymbol{I}_{m}&\boldsymbol{0}%
 \\
 &&&&&&\boldsymbol{W}_{p}^{(b)}&\boldsymbol{0}&\boldsymbol{I}_{m}\end{bmatrix}%
 \begin{bmatrix}\boldsymbol{X}_{1}^{(t)}\\
 \boldsymbol{X}_{1}^{(b)}\\
 \boldsymbol{X}_{2}^{(t)}\\
 \boldsymbol{X}_{2}^{(b)}\\
 \vdots\\
 \boldsymbol{X}_{p-1}^{(t)}\\
 \boldsymbol{X}_{p-1}^{(b)}\\
 \boldsymbol{X}_{p}^{(t)}\\
 \boldsymbol{X}_{p}^{(b)}\end{bmatrix}=\begin{bmatrix}\boldsymbol{G}_{1}^{(t)}%
 \\
 \boldsymbol{G}_{1}^{(b)}\\
 \boldsymbol{G}_{2}^{(t)}\\
 \boldsymbol{G}_{2}^{(b)}\\
 \vdots\\
 \boldsymbol{G}_{p-1}^{(t)}\\
 \boldsymbol{G}_{p-1}^{(b)}\\
 \boldsymbol{G}_{p}^{(t)}\\
 \boldsymbol{G}_{p}^{(b)}\end{bmatrix}\text{,}     which we call the reduced system and denote by  G̃ }} .  Once all and are found, all can be recovered with perfect parallelism via      {       𝑿  1  ′   =    𝑮  1  ′   -    𝑽  1  ′    𝑿  2   (  t  )    ,            𝑿  j  ′   =    𝑮  j  ′   -    𝑽  j  ′    𝑿   j  +  1    (  t  )     -    𝑾  j  ′    𝑿   j  -  1    (  b  )    ,        j  =   2  ,  …  ,   p  -   1  ,            𝑿  p  ′   =    𝑮  p  ′   -    𝑾  p    𝑿   p  -  1    (  b  )    .            cases     superscript   subscript  𝑿  1   normal-′      superscript   subscript  𝑮  1   normal-′      superscript   subscript  𝑽  1   normal-′    superscript   subscript  𝑿  2   t   ,     otherwise     superscript   subscript  𝑿  j   normal-′      superscript   subscript  𝑮  j   normal-′      superscript   subscript  𝑽  j   normal-′    superscript   subscript  𝑿    j  1    t       superscript   subscript  𝑾  j   normal-′    superscript   subscript  𝑿    j  1    b   ,       j   2  normal-…    p    1  ,         superscript   subscript  𝑿  p   normal-′      superscript   subscript  𝑮  p   normal-′      subscript  𝑾  p    superscript   subscript  𝑿    p  1    b   .     otherwise    \begin{cases}\boldsymbol{X}_{1}^{\prime}=\boldsymbol{G}_{1}^{\prime}-%
 \boldsymbol{V}_{1}^{\prime}\boldsymbol{X}_{2}^{(t)}\text{,}\\
 \boldsymbol{X}_{j}^{\prime}=\boldsymbol{G}_{j}^{\prime}-\boldsymbol{V}_{j}^{%
 \prime}\boldsymbol{X}_{j+1}^{(t)}-\boldsymbol{W}_{j}^{\prime}\boldsymbol{X}_{j%
 -1}^{(b)}\text{,}&j=2,\ldots,p-1\text{,}\\
 \boldsymbol{X}_{p}^{\prime}=\boldsymbol{G}_{p}^{\prime}-\boldsymbol{W}_{p}%
 \boldsymbol{X}_{p-1}^{(b)}\text{.}\end{cases}     SPIKE as a polyalgorithmic banded linear system solver  Despite being logically divided into two stages, computationally, the SPIKE algorithm comprises three stages:   factorizing the diagonal blocks,  computing the spikes,  solving the reduced system.   Each of these stages can be accomplished in several ways, allowing a multitude of variants. Two notable variants are the recursive SPIKE algorithm for non- diagonally-dominant cases and the truncated SPIKE algorithm for diagonally-dominant cases. Depending on the variant, a system can be solved either exactly or approximately. In the latter case, SPIKE is used as a preconditioner for iterative schemes like Krylov subspace methods and iterative refinement .  Recursive SPIKE  Preprocessing stage  The first step of the preprocessing stage is to factorize the diagonal blocks . For numerical stability, one can use LAPACK 's XGBTRF routines to LU factorize them with partial pivoting. Alternatively, one can also factorize them without partial pivoting but with a "diagonal boosting" strategy. The latter method tackles the issue of singular diagonal blocks.  In concrete terms, the diagonal boosting strategy is as follows. Let denote a configurable "machine zero". In each step of LU factorization, we require that the pivot satisfy the condition   .   If the pivot does not satisfy the condition, it is then boosted by      pivot  =   {      pivot  +   ϵ    ∥   𝑨  j   ∥   1         if  pivot   ≥   0  ,         pivot  -   ϵ    ∥   𝑨  j   ∥   1         if  pivot   <  0           pivot   cases    pivot    ϵ   subscript   norm   subscript  𝑨  j    1         if  pivot     0  ,      pivot    ϵ   subscript   norm   subscript  𝑨  j    1         if  pivot   0      \mathrm{pivot}=\begin{cases}\mathrm{pivot}+\epsilon\lVert\boldsymbol{A}_{j}%
 \rVert_{1}&\text{if }\mathrm{pivot}\geq 0\text{,}\\
 \mathrm{pivot}-\epsilon\lVert\boldsymbol{A}_{j}\rVert_{1}&\text{if }\mathrm{%
 pivot}<0\end{cases}     where is a positive parameter depending on the machine's unit roundoff , and the factorization continues with the boosted pivot. This can be achieved by modified versions of ScaLAPACK 's XDBTRF routines. After the diagonal blocks are factorized, the spikes are computed and passed on to the postprocessing stage.  Postprocessing stage  The two-partition case  In the two-partition case, i.e., when 2}} , the reduced system  G̃ }} has the form        [      𝑰  m     𝟎     𝑽  1   (  t  )        𝟎     𝑰  m      𝑽  1   (  b  )      𝟎      𝟎     𝑾  2   (  t  )       𝑰  m     𝟎          𝑾  2   (  b  )      𝟎     𝑰  m      ]    [      𝑿  1   (  t  )         𝑿  1   (  b  )         𝑿  2   (  t  )         𝑿  2   (  b  )       ]    =    [      𝑮  1   (  t  )         𝑮  1   (  b  )         𝑮  2   (  t  )         𝑮  2   (  b  )       ]   .            subscript  𝑰  m   0   superscript   subscript  𝑽  1   t     0   subscript  𝑰  m    superscript   subscript  𝑽  1   b   0    0   superscript   subscript  𝑾  2   t    subscript  𝑰  m   0    absent   superscript   subscript  𝑾  2   b   0   subscript  𝑰  m        superscript   subscript  𝑿  1   t      superscript   subscript  𝑿  1   b      superscript   subscript  𝑿  2   t      superscript   subscript  𝑿  2   b           superscript   subscript  𝑮  1   t      superscript   subscript  𝑮  1   b      superscript   subscript  𝑮  2   t      superscript   subscript  𝑮  2   b     .     \begin{bmatrix}\boldsymbol{I}_{m}&\boldsymbol{0}&\boldsymbol{V}_{1}^{(t)}\\
 \boldsymbol{0}&\boldsymbol{I}_{m}&\boldsymbol{V}_{1}^{(b)}&\boldsymbol{0}\\
 \boldsymbol{0}&\boldsymbol{W}_{2}^{(t)}&\boldsymbol{I}_{m}&\boldsymbol{0}\\
 &\boldsymbol{W}_{2}^{(b)}&\boldsymbol{0}&\boldsymbol{I}_{m}\end{bmatrix}\begin%
 {bmatrix}\boldsymbol{X}_{1}^{(t)}\\
 \boldsymbol{X}_{1}^{(b)}\\
 \boldsymbol{X}_{2}^{(t)}\\
 \boldsymbol{X}_{2}^{(b)}\end{bmatrix}=\begin{bmatrix}\boldsymbol{G}_{1}^{(t)}%
 \\
 \boldsymbol{G}_{1}^{(b)}\\
 \boldsymbol{G}_{2}^{(t)}\\
 \boldsymbol{G}_{2}^{(b)}\end{bmatrix}\text{.}     An even smaller system can be extracted from the center:        [      𝑰  m      𝑽  1   (  b  )         𝑾  2   (  t  )       𝑰  m      ]    [      𝑿  1   (  b  )         𝑿  2   (  t  )       ]    =    [      𝑮  1   (  b  )         𝑮  2   (  t  )       ]   ,            subscript  𝑰  m    superscript   subscript  𝑽  1   b      superscript   subscript  𝑾  2   t    subscript  𝑰  m        superscript   subscript  𝑿  1   b      superscript   subscript  𝑿  2   t           superscript   subscript  𝑮  1   b      superscript   subscript  𝑮  2   t     ,     \begin{bmatrix}\boldsymbol{I}_{m}&\boldsymbol{V}_{1}^{(b)}\\
 \boldsymbol{W}_{2}^{(t)}&\boldsymbol{I}_{m}\end{bmatrix}\begin{bmatrix}%
 \boldsymbol{X}_{1}^{(b)}\\
 \boldsymbol{X}_{2}^{(t)}\end{bmatrix}=\begin{bmatrix}\boldsymbol{G}_{1}^{(b)}%
 \\
 \boldsymbol{G}_{2}^{(t)}\end{bmatrix}\text{,}     which can be solved using the block LU factorization       [      𝑰  m      𝑽  1   (  b  )         𝑾  2   (  t  )       𝑰  m      ]   =    [      𝑰  m        𝑾  2   (  t  )       𝑰  m      ]    [      𝑰  m      𝑽  1   (  b  )             𝑰  m   -    𝑾  2   (  t  )     𝑽  1   (  b  )         ]   .          subscript  𝑰  m    superscript   subscript  𝑽  1   b      superscript   subscript  𝑾  2   t    subscript  𝑰  m          subscript  𝑰  m      superscript   subscript  𝑾  2   t    subscript  𝑰  m        subscript  𝑰  m    superscript   subscript  𝑽  1   b     absent     subscript  𝑰  m      superscript   subscript  𝑾  2   t    superscript   subscript  𝑽  1   b       .     \begin{bmatrix}\boldsymbol{I}_{m}&\boldsymbol{V}_{1}^{(b)}\\
 \boldsymbol{W}_{2}^{(t)}&\boldsymbol{I}_{m}\end{bmatrix}=\begin{bmatrix}%
 \boldsymbol{I}_{m}\\
 \boldsymbol{W}_{2}^{(t)}&\boldsymbol{I}_{m}\end{bmatrix}\begin{bmatrix}%
 \boldsymbol{I}_{m}&\boldsymbol{V}_{1}^{(b)}\\
 &\boldsymbol{I}_{m}-\boldsymbol{W}_{2}^{(t)}\boldsymbol{V}_{1}^{(b)}\end{%
 bmatrix}\text{.}     Once and are found, and can be computed via   − }} ,  − }} .   The multiple-partition case  Assume that is a power of two, i.e., 2 d }} . Consider a block diagonal matrix   diag(,…,)}}    where        𝑫  ~   k   [  1  ]    =   [      𝑰  m     𝟎     𝑽    2  k   -  1    (  t  )        𝟎     𝑰  m      𝑽    2  k   -  1    (  b  )      𝟎      𝟎     𝑾   2  k    (  t  )       𝑰  m     𝟎          𝑾   2  k    (  b  )      𝟎     𝑰  m      ]        superscript   subscript   bold-~  𝑫   k    delimited-[]  1       subscript  𝑰  m   0   superscript   subscript  𝑽      2  k   1    t     0   subscript  𝑰  m    superscript   subscript  𝑽      2  k   1    b   0    0   superscript   subscript  𝑾    2  k    t    subscript  𝑰  m   0    absent   superscript   subscript  𝑾    2  k    b   0   subscript  𝑰  m       \boldsymbol{\tilde{D}}_{k}^{[1]}=\begin{bmatrix}\boldsymbol{I}_{m}&\boldsymbol%
 {0}&\boldsymbol{V}_{2k-1}^{(t)}\\
 \boldsymbol{0}&\boldsymbol{I}_{m}&\boldsymbol{V}_{2k-1}^{(b)}&\boldsymbol{0}\\
 \boldsymbol{0}&\boldsymbol{W}_{2k}^{(t)}&\boldsymbol{I}_{m}&\boldsymbol{0}\\
 &\boldsymbol{W}_{2k}^{(b)}&\boldsymbol{0}&\boldsymbol{I}_{m}\end{bmatrix}     for 1,…, p /2}} . Notice that essentially consists of diagonal blocks of order extracted from . Now we factorize as    D̃ 1 S̃ 2 }} .   The new matrix has the form       [      𝑰   3  m      𝟎     𝑽  1    [  2  ]    (  t  )         𝟎     𝑰  m      𝑽  1    [  2  ]    (  b  )       𝟎      𝟎     𝑾  2    [  2  ]    (  t  )        𝑰  m     𝟎     𝑽  2    [  2  ]    (  t  )             𝑾  2    [  2  ]    (  b  )       𝟎     𝑰   3  m       𝑽  2    [  2  ]    (  b  )       𝟎            ⋱    ⋱    ⋱    ⋱    ⋱               𝟎     𝑾    p  /  2   -  1     [  2  ]    (  t  )        𝑰   3  m      𝟎     𝑽    p  /  2   -  1     [  2  ]    (  t  )                      𝑾    p  /  2   -  1     [  2  ]    (  b  )       𝟎     𝑰  m      𝑽    p  /  2   -  1     [  2  ]    (  b  )       𝟎                     𝟎     𝑾   p  /  2     [  2  ]    (  t  )        𝑰  m     𝟎                         𝑾   p  /  2     [  2  ]    (  b  )       𝟎     𝑰   3  m       ]   .         subscript  𝑰    3  m    0   superscript   subscript  𝑽  1      delimited-[]  2   t      0   subscript  𝑰  m    superscript   subscript  𝑽  1      delimited-[]  2   b    0    0   superscript   subscript  𝑾  2      delimited-[]  2   t     subscript  𝑰  m   0   superscript   subscript  𝑽  2      delimited-[]  2   t      absent   superscript   subscript  𝑾  2      delimited-[]  2   b    0   subscript  𝑰    3  m     superscript   subscript  𝑽  2      delimited-[]  2   b    0    absent  absent  normal-⋱  normal-⋱  normal-⋱  normal-⋱  normal-⋱    absent  absent  absent  0   superscript   subscript  𝑾      p  2   1       delimited-[]  2   t     subscript  𝑰    3  m    0   superscript   subscript  𝑽      p  2   1       delimited-[]  2   t      absent  absent  absent  absent   superscript   subscript  𝑾      p  2   1       delimited-[]  2   b    0   subscript  𝑰  m    superscript   subscript  𝑽      p  2   1       delimited-[]  2   b    0    absent  absent  absent  absent  absent  0   superscript   subscript  𝑾    p  2       delimited-[]  2   t     subscript  𝑰  m   0    absent  absent  absent  absent  absent  absent   superscript   subscript  𝑾    p  2       delimited-[]  2   b    0   subscript  𝑰    3  m      .    \begin{bmatrix}\boldsymbol{I}_{3m}&\boldsymbol{0}&\boldsymbol{V}_{1}^{[2](t)}%
 \\
 \boldsymbol{0}&\boldsymbol{I}_{m}&\boldsymbol{V}_{1}^{[2](b)}&\boldsymbol{0}\\
 \boldsymbol{0}&\boldsymbol{W}_{2}^{[2](t)}&\boldsymbol{I}_{m}&\boldsymbol{0}&%
 \boldsymbol{V}_{2}^{[2](t)}\\
 &\boldsymbol{W}_{2}^{[2](b)}&\boldsymbol{0}&\boldsymbol{I}_{3m}&\boldsymbol{V}%
 _{2}^{[2](b)}&\boldsymbol{0}\\
 &&\ddots&\ddots&\ddots&\ddots&\ddots\\
 &&&\boldsymbol{0}&\boldsymbol{W}_{p/2-1}^{[2](t)}&\boldsymbol{I}_{3m}&%
 \boldsymbol{0}&\boldsymbol{V}_{p/2-1}^{[2](t)}\\
 &&&&\boldsymbol{W}_{p/2-1}^{[2](b)}&\boldsymbol{0}&\boldsymbol{I}_{m}&%
 \boldsymbol{V}_{p/2-1}^{[2](b)}&\boldsymbol{0}\\
 &&&&&\boldsymbol{0}&\boldsymbol{W}_{p/2}^{[2](t)}&\boldsymbol{I}_{m}&%
 \boldsymbol{0}\\
 &&&&&&\boldsymbol{W}_{p/2}^{[2](b)}&\boldsymbol{0}&\boldsymbol{I}_{3m}\end{%
 bmatrix}\text{.}     Its structure is very similar to that of , only differing in the number of spikes and their height (their width stays the same at ). Thus, a similar factorization step can be performed on to produce    D̃ 2 S̃ 3 }}    and    D̃ 1 D̃ 2 S̃ 3 }} .   Such factorization steps can be performed recursively. After steps, we obtain the factorization    D̃ 1 ⋯ D̃ d −1 S̃ d }} ,   where has only two spikes. The reduced system will then be solved via   ⋯ G̃ }} .   The block LU factorization technique in the two-partition case can be used to handle the solving steps involving , …, and for they essentially solve multiple independent systems of generalized two-partition forms.  Generalization to cases where is not a power of two is almost trivial.  Truncated SPIKE  When is diagonally-dominant, in the reduced system        [      𝑰  m     𝟎     𝑽  1   (  t  )        𝟎     𝑰  m      𝑽  1   (  b  )      𝟎      𝟎     𝑾  2   (  t  )       𝑰  m     𝟎     𝑽  2   (  t  )            𝑾  2   (  b  )      𝟎     𝑰  m      𝑽  2   (  b  )      𝟎            ⋱    ⋱    ⋱    ⋱    ⋱               𝟎     𝑾   p  -  1    (  t  )       𝑰  m     𝟎     𝑽   p  -  1    (  t  )                     𝑾   p  -  1    (  b  )      𝟎     𝑰  m      𝑽   p  -  1    (  b  )      𝟎                     𝟎     𝑾  p   (  t  )       𝑰  m     𝟎                         𝑾  p   (  b  )      𝟎     𝑰  m      ]    [      𝑿  1   (  t  )         𝑿  1   (  b  )         𝑿  2   (  t  )         𝑿  2   (  b  )        ⋮       𝑿   p  -  1    (  t  )         𝑿   p  -  1    (  b  )         𝑿  p   (  t  )         𝑿  p   (  b  )       ]    =    [      𝑮  1   (  t  )         𝑮  1   (  b  )         𝑮  2   (  t  )         𝑮  2   (  b  )        ⋮       𝑮   p  -  1    (  t  )         𝑮   p  -  1    (  b  )         𝑮  p   (  t  )         𝑮  p   (  b  )       ]   ,            subscript  𝑰  m   0   superscript   subscript  𝑽  1   t     0   subscript  𝑰  m    superscript   subscript  𝑽  1   b   0    0   superscript   subscript  𝑾  2   t    subscript  𝑰  m   0   superscript   subscript  𝑽  2   t     absent   superscript   subscript  𝑾  2   b   0   subscript  𝑰  m    superscript   subscript  𝑽  2   b   0    absent  absent  normal-⋱  normal-⋱  normal-⋱  normal-⋱  normal-⋱    absent  absent  absent  0   superscript   subscript  𝑾    p  1    t    subscript  𝑰  m   0   superscript   subscript  𝑽    p  1    t     absent  absent  absent  absent   superscript   subscript  𝑾    p  1    b   0   subscript  𝑰  m    superscript   subscript  𝑽    p  1    b   0    absent  absent  absent  absent  absent  0   superscript   subscript  𝑾  p   t    subscript  𝑰  m   0    absent  absent  absent  absent  absent  absent   superscript   subscript  𝑾  p   b   0   subscript  𝑰  m        superscript   subscript  𝑿  1   t      superscript   subscript  𝑿  1   b      superscript   subscript  𝑿  2   t      superscript   subscript  𝑿  2   b     normal-⋮     superscript   subscript  𝑿    p  1    t      superscript   subscript  𝑿    p  1    b      superscript   subscript  𝑿  p   t      superscript   subscript  𝑿  p   b           superscript   subscript  𝑮  1   t      superscript   subscript  𝑮  1   b      superscript   subscript  𝑮  2   t      superscript   subscript  𝑮  2   b     normal-⋮     superscript   subscript  𝑮    p  1    t      superscript   subscript  𝑮    p  1    b      superscript   subscript  𝑮  p   t      superscript   subscript  𝑮  p   b     ,     \begin{bmatrix}\boldsymbol{I}_{m}&\boldsymbol{0}&\boldsymbol{V}_{1}^{(t)}\\
 \boldsymbol{0}&\boldsymbol{I}_{m}&\boldsymbol{V}_{1}^{(b)}&\boldsymbol{0}\\
 \boldsymbol{0}&\boldsymbol{W}_{2}^{(t)}&\boldsymbol{I}_{m}&\boldsymbol{0}&%
 \boldsymbol{V}_{2}^{(t)}\\
 &\boldsymbol{W}_{2}^{(b)}&\boldsymbol{0}&\boldsymbol{I}_{m}&\boldsymbol{V}_{2}%
 ^{(b)}&\boldsymbol{0}\\
 &&\ddots&\ddots&\ddots&\ddots&\ddots\\
 &&&\boldsymbol{0}&\boldsymbol{W}_{p-1}^{(t)}&\boldsymbol{I}_{m}&\boldsymbol{0}%
 &\boldsymbol{V}_{p-1}^{(t)}\\
 &&&&\boldsymbol{W}_{p-1}^{(b)}&\boldsymbol{0}&\boldsymbol{I}_{m}&\boldsymbol{V%
 }_{p-1}^{(b)}&\boldsymbol{0}\\
 &&&&&\boldsymbol{0}&\boldsymbol{W}_{p}^{(t)}&\boldsymbol{I}_{m}&\boldsymbol{0}%
 \\
 &&&&&&\boldsymbol{W}_{p}^{(b)}&\boldsymbol{0}&\boldsymbol{I}_{m}\end{bmatrix}%
 \begin{bmatrix}\boldsymbol{X}_{1}^{(t)}\\
 \boldsymbol{X}_{1}^{(b)}\\
 \boldsymbol{X}_{2}^{(t)}\\
 \boldsymbol{X}_{2}^{(b)}\\
 \vdots\\
 \boldsymbol{X}_{p-1}^{(t)}\\
 \boldsymbol{X}_{p-1}^{(b)}\\
 \boldsymbol{X}_{p}^{(t)}\\
 \boldsymbol{X}_{p}^{(b)}\end{bmatrix}=\begin{bmatrix}\boldsymbol{G}_{1}^{(t)}%
 \\
 \boldsymbol{G}_{1}^{(b)}\\
 \boldsymbol{G}_{2}^{(t)}\\
 \boldsymbol{G}_{2}^{(b)}\\
 \vdots\\
 \boldsymbol{G}_{p-1}^{(t)}\\
 \boldsymbol{G}_{p-1}^{(b)}\\
 \boldsymbol{G}_{p}^{(t)}\\
 \boldsymbol{G}_{p}^{(b)}\end{bmatrix}\text{,}     the blocks and are often negligible. With them omitted, the reduced system becomes block diagonal        [      𝑰  m           𝑰  m      𝑽  1   (  b  )            𝑾  2   (  t  )       𝑰  m                 𝑰  m      𝑽  2   (  b  )                 ⋱    ⋱    ⋱                   𝑾   p  -  1    (  t  )       𝑰  m                          𝑰  m      𝑽   p  -  1    (  b  )                           𝑾  p   (  t  )       𝑰  m                                𝑰  m      ]    [      𝑿  1   (  t  )         𝑿  1   (  b  )         𝑿  2   (  t  )         𝑿  2   (  b  )        ⋮       𝑿   p  -  1    (  t  )         𝑿   p  -  1    (  b  )         𝑿  p   (  t  )         𝑿  p   (  b  )       ]    =   [      𝑮  1   (  t  )         𝑮  1   (  b  )         𝑮  2   (  t  )         𝑮  2   (  b  )        ⋮       𝑮   p  -  1    (  t  )         𝑮   p  -  1    (  b  )         𝑮  p   (  t  )         𝑮  p   (  b  )       ]            subscript  𝑰  m     absent   subscript  𝑰  m    superscript   subscript  𝑽  1   b     absent   superscript   subscript  𝑾  2   t    subscript  𝑰  m     absent  absent  absent   subscript  𝑰  m    superscript   subscript  𝑽  2   b     absent  absent  absent  normal-⋱  normal-⋱  normal-⋱    absent  absent  absent  absent   superscript   subscript  𝑾    p  1    t    subscript  𝑰  m     absent  absent  absent  absent  absent  absent   subscript  𝑰  m    superscript   subscript  𝑽    p  1    b     absent  absent  absent  absent  absent  absent   superscript   subscript  𝑾  p   t    subscript  𝑰  m     absent  absent  absent  absent  absent  absent  absent  absent   subscript  𝑰  m        superscript   subscript  𝑿  1   t      superscript   subscript  𝑿  1   b      superscript   subscript  𝑿  2   t      superscript   subscript  𝑿  2   b     normal-⋮     superscript   subscript  𝑿    p  1    t      superscript   subscript  𝑿    p  1    b      superscript   subscript  𝑿  p   t      superscript   subscript  𝑿  p   b         superscript   subscript  𝑮  1   t      superscript   subscript  𝑮  1   b      superscript   subscript  𝑮  2   t      superscript   subscript  𝑮  2   b     normal-⋮     superscript   subscript  𝑮    p  1    t      superscript   subscript  𝑮    p  1    b      superscript   subscript  𝑮  p   t      superscript   subscript  𝑮  p   b       \begin{bmatrix}\boldsymbol{I}_{m}\\
 &\boldsymbol{I}_{m}&\boldsymbol{V}_{1}^{(b)}\\
 &\boldsymbol{W}_{2}^{(t)}&\boldsymbol{I}_{m}\\
 &&&\boldsymbol{I}_{m}&\boldsymbol{V}_{2}^{(b)}\\
 &&&\ddots&\ddots&\ddots\\
 &&&&\boldsymbol{W}_{p-1}^{(t)}&\boldsymbol{I}_{m}\\
 &&&&&&\boldsymbol{I}_{m}&\boldsymbol{V}_{p-1}^{(b)}\\
 &&&&&&\boldsymbol{W}_{p}^{(t)}&\boldsymbol{I}_{m}\\
 &&&&&&&&\boldsymbol{I}_{m}\end{bmatrix}\begin{bmatrix}\boldsymbol{X}_{1}^{(t)}%
 \\
 \boldsymbol{X}_{1}^{(b)}\\
 \boldsymbol{X}_{2}^{(t)}\\
 \boldsymbol{X}_{2}^{(b)}\\
 \vdots\\
 \boldsymbol{X}_{p-1}^{(t)}\\
 \boldsymbol{X}_{p-1}^{(b)}\\
 \boldsymbol{X}_{p}^{(t)}\\
 \boldsymbol{X}_{p}^{(b)}\end{bmatrix}=\begin{bmatrix}\boldsymbol{G}_{1}^{(t)}%
 \\
 \boldsymbol{G}_{1}^{(b)}\\
 \boldsymbol{G}_{2}^{(t)}\\
 \boldsymbol{G}_{2}^{(b)}\\
 \vdots\\
 \boldsymbol{G}_{p-1}^{(t)}\\
 \boldsymbol{G}_{p-1}^{(b)}\\
 \boldsymbol{G}_{p}^{(t)}\\
 \boldsymbol{G}_{p}^{(b)}\end{bmatrix}     and can be easily solved in parallel.  The truncated SPIKE algorithm can be wrapped inside some outer iterative scheme (e.g., BiCGSTAB or iterative refinement ) to improve the accuracy of the solution.  SPIKE as a preconditioner  The SPIKE algorithm can also function as a preconditioner for iterative methods for solving linear systems. To solve a linear system  b }} using a SPIKE-preconditioned iterative solver, one extracts center bands from to form a banded preconditioner and solves linear systems involving in each iteration with the SPIKE algorithm.  In order for the preconditioner to be effective, row and/or column permutation is usually necessary to move “heavy” elements of close to the diagonal so that they are covered by the preconditioner. This can be accomplished by computing the weighted spectral reordering of .  The SPIKE algorithm can be generalized by not restricting the preconditioner to be strictly banded. In particular, the diagonal block in each partition can be a general matrix and thus handled by a direct general linear system solver rather than a banded solver. This enhances the preconditioner, and hence allows better chance of convergence and reduces the number of iterations.  Implementations  Intel offers an implementation of the SPIKE algorithm under the name Intel Adaptive Spike-Based Solver .  References           "  Category:Numerical linear algebra   