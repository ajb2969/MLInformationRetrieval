   Geometric programming      Geometric programming   A geometric program ( GP ) is an optimization problem of the form   Minimize      f   0    (  x  )        subscript  f  0   x    \ f_{0}(x)   subject to        f  i    (  x  )    ≤  1   ,   i  =   1  ,  …  ,  m       formulae-sequence       subscript  f  i   x   1     i   1  normal-…  m      f_{i}(x)\leq 1,\quad i=1,\dots,m            h  i    (  x  )    =  1   ,   i  =   1  ,  …  ,  p       formulae-sequence       subscript  h  i   x   1     i   1  normal-…  p      h_{i}(x)=1,\quad i=1,\dots,p      where     f  0   ,  …  ,   f  m       subscript  f  0   normal-…   subscript  f  m     f_{0},\dots,f_{m}   are posynomials and     h  1   ,  …  ,   h  p       subscript  h  1   normal-…   subscript  h  p     h_{1},\dots,h_{p}   are monomials.   In the context of geometric programming (unlike all other disciplines), a monomial is defined as a function    f  :    ℝ    +  +   n   →  ℝ      normal-:  f   normal-→   superscript   subscript  ℝ    absent     n   ℝ     f:\mathbb{R}_{++}^{n}\to\mathbb{R}   defined as       f   (  x  )    =   c   x  1   a  1     x  2   a  2    ⋯   x  n   a  n           f  x     c   superscript   subscript  x  1    subscript  a  1     superscript   subscript  x  2    subscript  a  2    normal-⋯   superscript   subscript  x  n    subscript  a  n       f(x)=cx_{1}^{a_{1}}x_{2}^{a_{2}}\cdots x_{n}^{a_{n}}     where    c  >  0      c  0    c>0   and     a  i   ∈  ℝ       subscript  a  i   ℝ    a_{i}\in\mathbb{R}   .  GPs have numerous application, such as components sizing in IC design 1 and parameter estimation via logistic regression in statistics. The maximum likelihood estimator in logistic regression is a GP.  Convex form  Geometric programs are not (in general) convex optimization problems, but they can be transformed to convex problems by a change of variables and a transformation of the objective and constraint functions. In particular, defining     y  i   =   log   (   x  i   )         subscript  y  i      subscript  x  i      y_{i}=\log(x_{i})   , the monomial     f   (  x  )    =   c   x  1   a  1    ⋯   x  n   a  n     ↦   e     a  T   y   +  b            f  x     c   superscript   subscript  x  1    subscript  a  1    normal-⋯   superscript   subscript  x  n    subscript  a  n       maps-to     superscript  e       superscript  a  T   y   b       f(x)=cx_{1}^{a_{1}}\cdots x_{n}^{a_{n}}\mapsto e^{a^{T}y+b}   , where    b  =   log   (  c  )        b    c     b=\log(c)   . Similarly, if   f   f   f   is the posynomial       f   (  x  )    =    ∑   k  =  1   K     c  k    x  1   a   1  k     ⋯   x  n   a   n  k             f  x     superscript   subscript     k  1    K      subscript  c  k    superscript   subscript  x  1    subscript  a    1  k     normal-⋯   superscript   subscript  x  n    subscript  a    n  k         f(x)=\sum_{k=1}^{K}c_{k}x_{1}^{a_{1k}}\cdots x_{n}^{a_{nk}}     then     f   (  x  )    =    ∑   k  =  1   K    e     a  k  T   y   +   b  k            f  x     superscript   subscript     k  1    K    superscript  e       superscript   subscript  a  k   T   y    subscript  b  k        f(x)=\sum_{k=1}^{K}e^{a_{k}^{T}y+b_{k}}   , where     a  k   =   (   a   1  k    ,  …  ,   a   n  k    )        subscript  a  k     subscript  a    1  k    normal-…   subscript  a    n  k       a_{k}=(a_{1k},\dots,a_{nk})   and     b  k   =   log   (   c  k   )         subscript  b  k      subscript  c  k      b_{k}=\log(c_{k})   . After the change of variables, a posynomial becomes a sum of exponentials of affine functions.  See also   Signomial   Footnotes  References     External links   S. Boyd, S. J. Kim, L. Vandenberghe, and A. Hassibi, A Tutorial on Geometric Programming  S. Boyd, S. J. Kim, D. Patil, and M. Horowitz Digital Circuit Optimization via Geometric Programming   "  Category:Mathematical optimization     http://www.stanford.edu/~boyd/papers/opamp.html ↩     