   Yao's principle      Yao's principle   In computational complexity theory , Yao's principle or Yao's minimax principle states that the expected cost of a randomized algorithm on the worst case input, is no better than a worst-case random probability distribution of the deterministic algorithm which performs best for that distribution. Thus, to establish a lower bound on the performance of randomized algorithms, it suffices to find an appropriate distribution of difficult inputs, and to prove that no deterministic algorithm can perform well against that distribution. This principle is named after Andrew Yao , who first proposed it.  Yao's principle may be interpreted in game theoretic terms, via a two-player zero sum game in which one player, Alice , selects a deterministic algorithm, the other player, Bob, selects an input, and the payoff is the cost of the selected algorithm on the selected input. Any randomized algorithm R may be interpreted as a randomized choice among deterministic algorithms, and thus as a strategy for Alice. By von Neumann's  minimax theorem , Bob has a randomized strategy that performs at least as well against R as it does against the best pure strategy Alice might choose; that is, Bob's strategy defines a distribution on the inputs such that the expected cost of R on that distribution (and therefore also the worst case expected cost of R ) is no better than the expected cost of any single deterministic algorithm against the same distribution.  Statement  Let us state the principle for Las Vegas randomized algorithms, i.e., distributions over deterministic algorithms that are correct on every input but have varying costs. It is straightforward to adapt the principle to Monte Carlo algorithms, i.e., distributions over deterministic algorithms that have bounded costs but can be incorrect on some inputs.  Consider a problem over the inputs   𝒳   𝒳   \mathcal{X}   , and let   𝒜   𝒜   \mathcal{A}   be the set of all possible deterministic algorithms that correctly solve the problem. For any algorithm    a  ∈  𝒜      a  𝒜    a\in\mathcal{A}   and input    x  ∈  𝒳      x  𝒳    x\in\mathcal{X}   , let     c   (  a  ,  x  )    ≥  0        c   a  x    0    c(a,x)\geq 0   be the cost of algorithm   a   a   a   run on input   x   x   x   .  Let   p   p   p   be a probability distributions over the algorithms   𝒜   𝒜   \mathcal{A}   , and let   A   A   A   denote a random algorithm chosen according to   p   p   p   . Let   q   q   q   be a probability distribution over the inputs   𝒳   𝒳   \mathcal{X}   , and let   X   X   X   denote a random input chosen according to   q   q   q   . Then,         max   x  ∈  𝒳     𝔼   [   c   (  A  ,  x  )    ]    ≥     min   a  ∈  𝒜     𝔼   [   c   (  a  ,  X  )    ]             x  𝒳     𝔼   delimited-[]    c   A  x           a  𝒜     𝔼   delimited-[]    c   a  X        \underset{x\in\mathcal{X}}{\max}\ \mathbb{E}[c(A,x)]\geq\underset{a\in\mathcal%
 {A}}{\min}\ \mathbb{E}[c(a,X)]   ,  i.e., the worst-case expected cost of the randomized algorithm is at least the cost of the best deterministic algorithm against input distribution   q   q   q   .  Proof  Let    C  =     max   x  ∈  𝒳     𝔼   [   c   (  A  ,  x  )    ]        C       x  𝒳     𝔼   delimited-[]    c   A  x        C=\underset{x\in\mathcal{X}}{\max}\ \mathbb{E}[c(A,x)]   . For every input   x   x   x   , we have      ∑  a     p  a   c   (  a  ,  x  )     ≤  C        subscript   a      subscript  p  a   c   a  x     C    \sum_{a}p_{a}c(a,x)\leq C   . Therefore,      ∑  x     q  x     ∑  a     p  a   c   (  a  ,  x  )       ≤  C        subscript   x      subscript  q  x     subscript   a      subscript  p  a   c   a  x       C    \sum_{x}q_{x}\sum_{a}p_{a}c(a,x)\leq C   . Using Fubini's theorem , since all terms are non-negative we can switch the order of summation, giving      ∑  a     p  a     ∑  x     q  x   c   (  a  ,  x  )       ≤  C        subscript   a      subscript  p  a     subscript   x      subscript  q  x   c   a  x       C    \sum_{a}p_{a}\sum_{x}q_{x}c(a,x)\leq C   . By the Pigeonhole principle , there must exist an algorithm   a   a   a   so that      ∑  x     q  x   c   (  a  ,  x  )     ≤  C        subscript   x      subscript  q  x   c   a  x     C    \sum_{x}q_{x}c(a,x)\leq C   , concluding the proof.  As mentioned above, this theorem can also be seen as a very special case of the Minimax theorem .  References     External links     "  Category:Computational complexity theory  Category:Randomness   