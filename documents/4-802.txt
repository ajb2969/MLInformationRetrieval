   Forgetful functor      Forgetful functor   In mathematics , in the area of category theory , a forgetful functor (also known as a stripping functor ) 'forgets' or drops some or all of the input's structure or properties 'before' mapping to the output. For an algebraic  structure of a given signature , this may be expressed by curtailing the signature: the new signature is an edited form of the old one. If the signature is left as an empty list , the functor is simply to take the underlying set of a structure. Because many structures in mathematics consist of a set with an additional added structure, a forgetful functor that maps to the underlying set is the most common case.  Introduction  As examples, there are several forgetful functors from the category of commutative rings . A ( unital ) ring , described in the language of universal algebra , is an ordered tuple ( R ,+,*, a ,0,1) satisfying certain axioms, where "+" and "*" are binary functions on the set R , a is a unary operation corresponding to additive inverse, and 0 and 1 are nullary operations giving the identities of the two binary operations. Deleting the 1 gives a forgetful functor to the category of rings without unit; it simply "forgets" the unit. Deleting "*" and 1 yields a functor to the category of abelian groups , which assigns to each ring R the underlying additive abelian group of R . To each morphism of rings is assigned the same function considered merely as a morphism of addition between the underlying groups. Deleting all the operations gives the functor to the underlying set R .  It is beneficial to distinguish between forgetful functors that "forget structure" versus those that "forget properties". For example, in the above example of commutative rings, in addition to those functors that delete some of the operations, there are functors that forget some of the axioms. There is a functor from the category CRing to Ring that forgets the axiom of commutativity, but keeps all the operations. Occasionally the object may include extra sets not defined strictly in terms of the underlying set (in this case, which part to consider the underlying set is a matter of taste, though this is rarely ambiguous in practice). For these objects, there are forgetful functors that forget the extra sets that are more general.  Most common objects studied in mathematics are constructed as underlying sets along with extra sets of structure on those sets (operations on the underlying set, privileged subsets of the underlying set, etc.) which may satisfy some axioms. For these objects, a commonly considered forgetful functor is as follows. Let   𝒞   𝒞   \mathcal{C}   be any category based on sets , e.g. groups - sets of elements - or topological spaces - sets of 'points'. As usual, write    Ob   (  𝒞  )      Ob  𝒞    \operatorname{Ob}(\mathcal{C})   for the objects of   𝒞   𝒞   \mathcal{C}   and write    Fl   (  𝒞  )      Fl  𝒞    \operatorname{Fl}(\mathcal{C})   for the morphisms of the same. Consider the rule:     A   A   A   in      Ob   (  𝒞  )    ,  A   ↦   |  A  |   =        maps-to    Ob  𝒞   A     A        absent     \operatorname{Ob}(\mathcal{C}),\quad A\mapsto|A|=   the underlying set of    A  ,    A   A,        u   u   u   in      Fl   (  𝒞  )    ,  u   ↦   |  u  |   =        maps-to    Fl  𝒞   u     u        absent     \operatorname{Fl}(\mathcal{C}),\quad u\mapsto|u|=   the morphism,   u   u   u   , as a map of sets. The functor    |  ⋅  |     fragments  normal-|  normal-⋅  normal-|    |\cdot|   is then the forgetful functor from   𝒞   𝒞   \mathcal{C}   to   𝐒𝐞𝐭   𝐒𝐞𝐭   \mathbf{Set}   , the category of sets .  Forgetful functors are almost always faithful . Concrete categories have forgetful functors to the category of sets—indeed they may be defined as those categories that admit a faithful functor to that category.  Forgetful functors that only forget axioms are always fully faithful; every morphism that respects the structure between objects that satisfy the axioms automatically also respects the axioms. Forgetful functors that forget structures need not be full; some morphisms don't respect the structure. These functors are still faithful though; distinct morphisms that do respect the structure are still distinct when the structure is forgotten. Functors that forget the extra sets need not be faithful; distinct morphisms respecting the structure of those extra sets may be indistinguishable on the underlying set.  In the language of formal logic, a functor of the first kind removes axioms. The second kind removes predicates. The third kind remove types.  An example of the first kind is the forgetful functor Ab → Grp . One of the second kind is the forgetful functor Ab → Set . A functor of the third kind is the functor Mod → Ab , where Mod is the fibred category of all modules over arbitrary rings. To see this, just choose a ring homomorphism between the underlying rings that does not change the ring action. Under the forgetful functor, this morphism yields the identity. Note that an object in Mod is a tuple, which includes a ring and an abelian group, so which to forget is a matter of taste.  Left Adjoint: Free  Forgetful functors tend to have left adjoints , which are ' free ' constructions. For example:   free module : the forgetful functor from    𝐌𝐨𝐝   (  R  )       𝐌𝐨𝐝  R    \mathbf{Mod}(R)   (the category of   R   R   R   - module ) to   𝐒𝐞𝐭   𝐒𝐞𝐭   \mathbf{Set}   has left adjoint    Free  R     subscript  Free  R    \operatorname{Free}_{R}   , with    X  ↦    Free  R    (  X  )       maps-to  X    subscript  Free  R   X     X\mapsto\operatorname{Free}_{R}(X)   , the free   R   R   R   -module with basis    X   X   X   .  free group  free lattice  tensor algebra  free category , adjoint to the forgetful functor from categories to quivers   For a more extensive list, see (Mac Lane 1997).  As this is a fundamental example of adjoints, we spell it out: adjointness means that given a set X and an object (say, an R -module) M , maps of sets     X  →  M     normal-→  X  M    X\to M   correspond to maps of modules      Free  R    (  X  )    →  M     normal-→    subscript  Free  R   X   M    \operatorname{Free}_{R}(X)\to M   : every map of sets yields a map of modules, and every map of modules comes from a map of sets.  In the case of vector spaces, this is summarized as: "A map between vector spaces is determined by where it sends a basis, and a basis can be mapped to anything."  Symbolically:         Hom   𝐌𝐨𝐝  R     (    Free  R    (  X  )    ,  M  )    =    Hom  𝐒𝐞𝐭    (  X  ,   Forget   (  M  )    )     .        subscript  Hom   subscript  𝐌𝐨𝐝  R      subscript  Free  R   X   M     subscript  Hom  𝐒𝐞𝐭   X   Forget  M      \operatorname{Hom}_{\mathbf{Mod}_{R}}(\operatorname{Free}_{R}(X),M)=%
 \operatorname{Hom}_{\mathbf{Set}}(X,\operatorname{Forget}(M)).     The unit of the free-forget adjunction is the "inclusion of a basis"    X  →    Free  R    (  X  )       normal-→  X    subscript  Free  R   X     X\to\operatorname{Free}_{R}(X)   .  Fld , the category of fields, furnishes an example of a forgetful functor with no adjoint. There is no field satisfying a free universal property for a given set.  References   Mac Lane, Saunders . Categories for the Working Mathematician , Graduate Texts in Mathematics 5, Springer-Verlag, Berlin, Heidelberg, New York, 1997. ISBN 0-387-98403-8    "  Category:Functors   