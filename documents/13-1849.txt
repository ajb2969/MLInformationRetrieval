   Kronecker sum of discrete Laplacians      Kronecker sum of discrete Laplacians  table.sourceCode, tr.sourceCode, td.lineNumbers, td.sourceCode {
   margin: 0; padding: 0; vertical-align: baseline; border: none; }
 <style>
 table.sourceCode { width: 100%; line-height: 100%; }
 td.lineNumbers { text-align: right; padding-right: 4px; padding-left: 4px; color: #aaaaaa; border-right: 1px solid #aaaaaa; }
 td.sourceCode { padding-left: 5px; }
 code > span.kw { color: #007020; font-weight: bold; } /* Keyword */
 code > span.dt { color: #902000; } /* DataType */
 code > span.dv { color: #40a070; } /* DecVal */
 code > span.bn { color: #40a070; } /* BaseN */
 code > span.fl { color: #40a070; } /* Float */
 code > span.ch { color: #4070a0; } /* Char */
 code > span.st { color: #4070a0; } /* String */
 code > span.co { color: #60a0b0; font-style: italic; } /* Comment */
 code > span.ot { color: #007020; } /* Other */
 code > span.al { color: #ff0000; font-weight: bold; } /* Alert */
 code > span.fu { color: #06287e; } /* Function */
 code > span.er { color: #ff0000; font-weight: bold; } /* Error */
 code > span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */
 code > span.cn { color: #880000; } /* Constant */
 code > span.sc { color: #4070a0; } /* SpecialChar */
 code > span.vs { color: #4070a0; } /* VerbatimString */
 code > span.ss { color: #bb6688; } /* SpecialString */
 code > span.im { } /* Import */
 code > span.va { color: #19177c; } /* Variable */
 code > span.cf { color: #007020; font-weight: bold; } /* ControlFlow */
 code > span.op { color: #666666; } /* Operator */
 code > span.bu { } /* BuiltIn */
 code > span.ex { } /* Extension */
 code > span.pp { color: #bc7a00; } /* Preprocessor */
 code > span.at { color: #7d9029; } /* Attribute */
 code > span.do { color: #ba2121; font-style: italic; } /* Documentation */
 code > span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */
 code > span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */
 code > span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */     In mathematics, the Kronecker sum of discrete Laplacians , named after Leopold Kronecker , is a discrete version of the separation of variables for the continuous Laplacian in a rectangular cuboid domain.  General form of the Kronecker sum of discrete Laplacians  In a general situation of the separation of variables in the discrete case, the multidimensional discrete Laplacian is a Kronecker sum of 1D discrete Laplacians.  Example: 2D discrete Laplacian on a regular grid with the homogeneous Dirichlet boundary condition  Mathematically, using the Kronecker sum :       L  =    𝐃  𝐱𝐱   ⊕   𝐃  𝐲𝐲    =     𝐃  𝐱𝐱   ⊗  𝐈   +   𝐈  ⊗   𝐃  𝐲𝐲      ,        L   direct-sum   subscript  𝐃  𝐱𝐱    subscript  𝐃  𝐲𝐲            tensor-product   subscript  𝐃  𝐱𝐱   𝐈    tensor-product  𝐈   subscript  𝐃  𝐲𝐲        L=\mathbf{D_{xx}}\oplus\mathbf{D_{yy}}=\mathbf{D_{xx}}\otimes\mathbf{I}+%
 \mathbf{I}\otimes\mathbf{D_{yy}},\,     where    𝐃  𝐱𝐱     subscript  𝐃  𝐱𝐱    \mathbf{D_{xx}}   and    𝐃  𝐲𝐲     subscript  𝐃  𝐲𝐲    \mathbf{D_{yy}}   are 1D discrete Laplacians in the x - and y -directions, correspondingly, and   𝐈   𝐈   \mathbf{I}   are the identities of appropriate sizes. Both    𝐃  𝐱𝐱     subscript  𝐃  𝐱𝐱    \mathbf{D_{xx}}   and    𝐃  𝐲𝐲     subscript  𝐃  𝐲𝐲    \mathbf{D_{yy}}   must correspond to the case of the homogeneous Dirichlet boundary condition at end points of the x - and y -intervals, in order to generate the 2D discrete Laplacian L corresponding to the homogeneous Dirichlet boundary condition everywhere on the boundary of the rectangular domain.  Here is a sample OCTAVE / MATLAB code to compute L on the regular 10×15 2D grid:  nx = 10 ; % number of grid points in the x-direction; ny = 15 ; % number of grid points in the y-direction; ex = ones(nx, 1 );
 Dxx = spdiags([ex - 2 *ex ex], [- 1  0  1 ], nx, nx); %1D discrete Laplacian in the x-direction ; ey = ones(ny, 1 );
 Dyy = spdiags([ey, - 2 *ey ey], [- 1  0  1 ], ny, ny); %1D discrete Laplacian in the y-direction ; L = kron(Dyy, speye(nx)) + kron(speye(ny), Dxx) ;  Eigenvalues and eigenvectors of multidimensional discrete Laplacian on a regular grid  Knowing all eigenvalues and eigenvectors of the factors, all eigenvalues and eigenvectors of the Kronecker product can be explicitly calculated . Based on this, eigenvalues and eigenvectors of the Kronecker sum can also be explicitly calculated.  The eigenvalues and eigenvectors of the standard central difference approximation of the second derivative on an interval for traditional combinations of boundary conditions at the interval end points are well known . Combining these expressions with the formulas of eigenvalues and eigenvectors for the Kronecker sum , one can easily obtain the required answer.  Example: 3D discrete Laplacian on a regular grid with the homogeneous Dirichlet boundary condition       L  =     𝐃  𝐱𝐱   ⊗  𝐈  ⊗  𝐈   +   𝐈  ⊗   𝐃  𝐲𝐲   ⊗  𝐈   +   𝐈  ⊗  𝐈  ⊗   𝐃  𝐳𝐳      ,      L     tensor-product   subscript  𝐃  𝐱𝐱   𝐈  𝐈    tensor-product  𝐈   subscript  𝐃  𝐲𝐲   𝐈    tensor-product  𝐈  𝐈   subscript  𝐃  𝐳𝐳       L=\mathbf{D_{xx}}\otimes\mathbf{I}\otimes\mathbf{I}+\mathbf{I}\otimes\mathbf{D%
 _{yy}}\otimes\mathbf{I}+\mathbf{I}\otimes\mathbf{I}\otimes\mathbf{D_{zz}},\,     where     𝐃  𝐱𝐱   ,   𝐃  𝐲𝐲       subscript  𝐃  𝐱𝐱    subscript  𝐃  𝐲𝐲     \mathbf{D_{xx}},\,\mathbf{D_{yy}}   and    𝐃  𝐳𝐳     subscript  𝐃  𝐳𝐳    \mathbf{D_{zz}}   are 1D discrete Laplacians in every of the 3 directions, and   𝐈   𝐈   \mathbf{I}   are the identities of appropriate sizes. Each 1D discrete Laplacian must correspond to the case of the homogeneous Dirichlet boundary condition , in order to generate the 3D discrete Laplacian L corresponding to the homogeneous Dirichlet boundary condition everywhere on the boundary. The eigenvalues are       λ    j  x   ,   j  y   ,   j  z     =  -   4   h  x  2    sin    (    π   j  x     2   (    n  x   +  1   )     )   2   -   4   h  y  2    sin    (    π   j  y     2   (    n  y   +  1   )     )   2   -   4   h  z  2    sin    (    π   j  z     2   (    n  z   +  1   )     )   2      fragments   subscript  λ     j  x     j  y     j  z         4   superscript   subscript  h  x   2      superscript   fragments  normal-(      π   subscript  j  x      2     subscript  n  x   1     normal-)   2      4   superscript   subscript  h  y   2      superscript   fragments  normal-(      π   subscript  j  y      2     subscript  n  y   1     normal-)   2      4   superscript   subscript  h  z   2      superscript   fragments  normal-(      π   subscript  j  z      2     subscript  n  z   1     normal-)   2     \lambda_{jx,jy,jz}=-\frac{4}{h_{x}^{2}}\sin\left(\frac{\pi j_{x}}{2(n_{x}+1)}%
 \right)^{2}-\frac{4}{h_{y}^{2}}\sin\left(\frac{\pi j_{y}}{2(n_{y}+1)}\right)^{%
 2}-\frac{4}{h_{z}^{2}}\sin\left(\frac{\pi j_{z}}{2(n_{z}+1)}\right)^{2}     where       j  x   =   1  ,  …  ,   n  x     ,     j  y   =   1  ,  …  ,   n  y     ,    j  z   =   1  ,  …  ,   n  z       ,     formulae-sequence     subscript  j  x    1  normal-…   subscript  n  x      formulae-sequence     subscript  j  y    1  normal-…   subscript  n  y        subscript  j  z    1  normal-…   subscript  n  z        j_{x}=1,\ldots,n_{x},\,j_{y}=1,\ldots,n_{y},\,j_{z}=1,\ldots,n_{z},\,   , and the corresponding eigenvectors are       v    i  x   ,   i  y   ,   i  z   ,   j  x   ,   j  y   ,   j  z     =     2    n  x   +  1      sin   (     i  x    j  x   π     n  x   +  1    )      2    n  y   +  1      sin   (     i  y    j  y   π     n  y   +  1    )      2    n  z   +  1      sin   (     i  z    j  z   π     n  z   +  1    )          subscript  v     i  x     i  y     i  z     j  x     j  y     j  z           2     subscript  n  x   1            subscript  i  x    subscript  j  x   π      subscript  n  x   1         2     subscript  n  y   1            subscript  i  y    subscript  j  y   π      subscript  n  y   1         2     subscript  n  z   1            subscript  i  z    subscript  j  z   π      subscript  n  z   1        v_{ix,iy,iz,jx,jy,jz}=\sqrt{\frac{2}{n_{x}+1}}\sin\left(\frac{i_{x}j_{x}\pi}{n%
 _{x}+1}\right)\sqrt{\frac{2}{n_{y}+1}}\sin\left(\frac{i_{y}j_{y}\pi}{n_{y}+1}%
 \right)\sqrt{\frac{2}{n_{z}+1}}\sin\left(\frac{i_{z}j_{z}\pi}{n_{z}+1}\right)     where the multi-index     j  x   ,   j  y   ,   j  z        j  x     j  y     j  z     {jx,jy,jz}   pairs the eigenvalues and the eigenvectors, while the multi-index     i  x   ,   i  y   ,   i  z        i  x     i  y     i  z     {ix,iy,iz}   determines the location of the value of every eigenvector at the regular grid . The boundary points, where the homogeneous Dirichlet boundary condition are imposed, are just outside of the grid.  Available software  An OCTAVE / MATLAB code http://www.mathworks.com/matlabcentral/fileexchange/27279-laplacian-in-1d-2d-or-3d is available under a BSD License , which computes the sparse matrix of the 1, 2D, and 3D negative Laplacians on a rectangular grid for combinations of Dirichlet, Neumann, and Periodic boundary conditions using Kronecker sums of discrete 1D Laplacians. The code also provides the exact eigenvalues and eigenvectors using the explicit formulas given above.  "  Category:Operator theory  Category:Matrix theory  Category:Numerical differential equations  Category:Finite differences  Category:Articles with example MATLAB/Octave code  