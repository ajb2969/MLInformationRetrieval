   Givens rotation      Givens rotation   In numerical linear algebra , a Givens rotation is a rotation in the plane spanned by two coordinates axes. Givens rotations are named after Wallace Givens , who introduced them to numerical analysts in the 1950s while he was working at Argonne National Laboratory .  Matrix representation  A Givens rotation is represented by a matrix of the form       G   (  i  ,  j  ,  Œ∏  )    =   [     1    ‚ãØ    0    ‚ãØ    0    ‚ãØ    0      ‚ãÆ    ‚ã±    ‚ãÆ       ‚ãÆ       ‚ãÆ      0    ‚ãØ    c    ‚ãØ     -  s     ‚ãØ    0      ‚ãÆ       ‚ãÆ    ‚ã±    ‚ãÆ       ‚ãÆ      0    ‚ãØ    s    ‚ãØ    c    ‚ãØ    0      ‚ãÆ       ‚ãÆ       ‚ãÆ    ‚ã±    ‚ãÆ      0    ‚ãØ    0    ‚ãØ    0    ‚ãØ    1     ]         G   i  j  Œ∏      1  normal-‚ãØ  0  normal-‚ãØ  0  normal-‚ãØ  0    normal-‚ãÆ  normal-‚ã±  normal-‚ãÆ  absent  normal-‚ãÆ  absent  normal-‚ãÆ    0  normal-‚ãØ  c  normal-‚ãØ    s   normal-‚ãØ  0    normal-‚ãÆ  absent  normal-‚ãÆ  normal-‚ã±  normal-‚ãÆ  absent  normal-‚ãÆ    0  normal-‚ãØ  s  normal-‚ãØ  c  normal-‚ãØ  0    normal-‚ãÆ  absent  normal-‚ãÆ  absent  normal-‚ãÆ  normal-‚ã±  normal-‚ãÆ    0  normal-‚ãØ  0  normal-‚ãØ  0  normal-‚ãØ  1      G(i,j,\theta)=\begin{bmatrix}1&\cdots&0&\cdots&0&\cdots&0\\
 \vdots&\ddots&\vdots&&\vdots&&\vdots\\
 0&\cdots&c&\cdots&-s&\cdots&0\\
 \vdots&&\vdots&\ddots&\vdots&&\vdots\\
 0&\cdots&s&\cdots&c&\cdots&0\\
 \vdots&&\vdots&&\vdots&\ddots&\vdots\\
 0&\cdots&0&\cdots&0&\cdots&1\end{bmatrix}     where     c  =   c  o  s  Œ∏       c    c  o  s  Œ∏     c=cosŒ∏   and    s  =   s  i  n  Œ∏       s    s  i  n  Œ∏     s=sinŒ∏    appear at the intersections   i   i   i   th and   j   j   j   th rows and columns. That is, the non-zero elements of Givens matrix are given by:      g    k   k      subscript  g    k  k     \displaystyle g_{k\,k}   (sign of sine switches for    j  >  i      j  i    j>i   )  The product    G   (  i  ,  j  ,  Œ∏  )   ùê±      G   i  j  Œ∏   ùê±    G(i,j,Œ∏)\mathbf{x}   represents a counterclockwise rotation of the vector    ùê±   ùê±   \mathbf{x}   in the    (  i  ,  j  )     i  j    (i,j)   plane of   Œ∏   Œ∏   Œ∏   radians, hence the name Givens rotation.  The main use of Givens rotations in numerical linear algebra is to introduce zeros in vectors or matrices. This effect can, for example, be employed for computing the QR decomposition of a matrix. One advantage over Householder transformations is that they can easily be parallelised, and another is that often for very sparse matrices they have a lower operation count.  Stable calculation  When a Givens rotation matrix,    G   (  i  ,  j  ,  Œ∏  )       G   i  j  Œ∏     G(i,j,Œ∏)   , multiplies another matrix,   A   A   A   , from the left,    G   A      G  normal-  A    G‚ÄâA   , only rows   i   i   i   and   j   j   j   of   A   A   A   are affected. Thus we restrict attention to the following problem. Given   a   a   a   and   b   b   b   , find    c  =   c  o  s  Œ∏       c    c  o  s  Œ∏     c=cosŒ∏   and    s  =   s  i  n  Œ∏       s    s  i  n  Œ∏     s=sinŒ∏   such that         [     c     -  s       s    c     ]    [     a      b     ]    =   [     r      0     ]    .          c    s     s  c      a    b       r    0      \begin{bmatrix}c&-s\\
 s&c\end{bmatrix}\begin{bmatrix}a\\
 b\end{bmatrix}=\begin{bmatrix}r\\
 0\end{bmatrix}.   Explicit calculation of   Œ∏   Œ∏   Œ∏   is rarely necessary or desirable. Instead we directly seek   c   c   c   ,   s   s   s   , and   r   r   r   . An obvious solution would be     r   r   \displaystyle r     However, the computation for   r   r   r   may overflow or underflow. An alternative formulation avoiding this problem  is implemented as the hypot function in many programming languages .  Furthermore, as  discovered in improving LAPACK , a previously overlooked numerical consideration is continuity. To achieve this, we require   r   r   r   to be positive.  if¬†(b¬†=¬†0)¬†then¬†{c¬†‚Üê¬†copysign(1,a);¬†s¬†‚Üê¬†0;¬†r¬†‚Üê¬†abs(a)}  else¬†if¬†(a¬†=¬†0)¬†then¬†{c¬†‚Üê¬†0;¬†s¬†‚Üê¬†-copysign(1,b);¬†r¬†‚Üê¬†abs(b)}  else¬†if¬†(abs(b)¬†>¬†abs(a))¬†then  t¬†‚Üê¬†a/b  u¬†‚Üê¬†copysign(sqrt(1+t*t),b)  s¬†‚Üê¬†-1/u  c¬†‚Üê¬†-s*t  r¬†‚Üê¬†b*u  else  t¬†‚Üê¬†b/a  u¬†‚Üê¬†copysign(sqrt(1+t*t),a)  c¬†‚Üê¬†1/u  s¬†‚Üê¬†-c*t  r¬†‚Üê¬†a*u  This is written in terms of the IEEE 754  copysign(x,y) function, which provides a safe and cheap way to copy the sign of y to x . If that is not available,     |  x  |   ‚ãÖ  s  g  n   (  y  )         x   normal-‚ãÖ  s  g  n  y    |x|‚ãÖsgn(y)   , using the abs and sgn functions, is an alternative.  Triangularization  Given the following  Matrix, perform two iterations of the Givens rotation to bring the matrix to an upper triangular matrix in order to compute the QR decomposition .      A  =   [     6    5    0      5    1    4      0    4    3     ]       A    6  5  0    5  1  4    0  4  3      A=\begin{bmatrix}6&5&0\\
 5&1&4\\
 0&4&3\\
 \end{bmatrix}     In order to form the desired matrix, we must zero elements  and . We first select element  to zero. Using a rotation matrix of:       G  1   =   [     c     -  s     0      s    c    0      0    0    1     ]        subscript  G  1     c    s   0    s  c  0    0  0  1      G_{1}=\begin{bmatrix}c&-s&0\\
 s&c&0\\
 0&0&1\\
 \end{bmatrix}     We have the following matrix multiplication:       [     c     -  s     0      s    c    0      0    0    1     ]    [     6    5    0      5    1    4      0    4    3     ]         c    s   0    s  c  0    0  0  1      6  5  0    5  1  4    0  4  3      \begin{bmatrix}c&-s&0\\
 s&c&0\\
 0&0&1\\
 \end{bmatrix}\begin{bmatrix}6&5&0\\
 5&1&4\\
 0&4&3\\
 \end{bmatrix}   Where:     r   r   \displaystyle r     Plugging in these values for   c   c   c   and   s   s   s   and performing the matrix multiplication above yields a new   A   A   A   of:      A  =   [     7.8102    4.4813    2.5607      0     -  2.4327     3.0729      0    4    3     ]       A    7.8102  4.4813  2.5607    0    2.4327   3.0729    0  4  3      A=\begin{bmatrix}7.8102&4.4813&2.5607\\
 0&-2.4327&3.0729\\
 0&4&3\\
 \end{bmatrix}     We now want to zero element  to finish off the process. Using the same idea as before, we have a rotation matrix of:       G  2   =   [     1    0    0      0    c     -  s       0    s    c     ]        subscript  G  2     1  0  0    0  c    s     0  s  c      G_{2}=\begin{bmatrix}1&0&0\\
 0&c&-s\\
 0&s&c\\
 \end{bmatrix}     We are presented with the following matrix multiplication:       [     1    0    0      0    c     -  s       0    s    c     ]    [     7.8102    4.4813    2.5607      0     -  2.4327     3.0729      0    4    3     ]         1  0  0    0  c    s     0  s  c      7.8102  4.4813  2.5607    0    2.4327   3.0729    0  4  3      \begin{bmatrix}1&0&0\\
 0&c&-s\\
 0&s&c\\
 \end{bmatrix}\begin{bmatrix}7.8102&4.4813&2.5607\\
 0&-2.4327&3.0729\\
 0&4&3\\
 \end{bmatrix}     Where:     r   r   \displaystyle r   Plugging in these values for   c   c   c   and   s   s   s   and performing the multiplications gives us a new matrix of:      R  =   [     7.8102    4.4813    2.5607      0    4.6817    0.9664      0    0     -  4.1843      ]       R    7.8102  4.4813  2.5607    0  4.6817  0.9664    0  0    4.1843       R=\begin{bmatrix}7.8102&4.4813&2.5607\\
 0&4.6817&0.9664\\
 0&0&-4.1843\\
 \end{bmatrix}     This new matrix R is the upper triangular matrix needed to perform an iteration of the QR decomposition .   Q   Q   Q   is now formed using the transpose of the rotation matrices in the following manner:      Q  =     G  1  T     G  2  T        Q     superscript   subscript  G  1   T    superscript   subscript  G  2   T      Q=G_{1}^{T}\,G_{2}^{T}     Performing this matrix multiplication yields:      Q  =   [     0.7682    0.3327    0.5470      0.6402     -  0.3992      -  0.6564       0    0.8544     -  0.5196      ]       Q    0.7682  0.3327  0.5470    0.6402    0.3992     0.6564     0  0.8544    0.5196       Q=\begin{bmatrix}0.7682&0.3327&0.5470\\
 0.6402&-0.3992&-0.6564\\
 0&0.8544&-0.5196\\
 \end{bmatrix}     This completes two iterations of the Givens Rotation and calculating the QR decomposition can now be done.  Givens rotations in Clifford Algebras  In Clifford algebras and its child structures like geometric algebra rotations are represented by bivectors . Givens rotations are represented by the external product of the basis vectors. Given any pair of basis vectors     e  i   ,   e  j       subscript  e  i    subscript  e  j     e_{i},e_{j}   Givens rotations bivectors are:       B   i  j    =    e  i   ‚àß   e  j         subscript  B    i  j       subscript  e  i    subscript  e  j      B_{ij}=e_{i}\wedge e_{j}     Their action on any vector is written:      v  =    e   -    (   Œ∏  /  2   )    (    e  i   ‚àß   e  j    )      u   e    (   Œ∏  /  2   )    (    e  i   ‚àß   e  j    )          v     superscript  e        Œ∏  2      subscript  e  i    subscript  e  j       u   superscript  e      Œ∏  2      subscript  e  i    subscript  e  j         v=e^{-(\theta/2)(e_{i}\wedge e_{j})}ue^{(\theta/2)(e_{i}\wedge e_{j})}     where:       e    (   Œ∏  /  2   )    (    e  i   ‚àß   e  j    )     =     cos   (   Œ∏  /  2   )    +    sin   (   Œ∏  /  2   )     e  i     ‚àß   e  j         superscript  e      Œ∏  2      subscript  e  i    subscript  e  j              Œ∏  2          Œ∏  2     subscript  e  i      subscript  e  j      e^{(\theta/2)(e_{i}\wedge e_{j})}=\cos(\theta/2)+\sin(\theta/2)e_{i}\wedge e_{j}     Dimension 3  There are three Givens rotations in dimension 3:        R  X    (  Œ∏  )    =   [     1    0    0      0     cos  Œ∏      -   sin  Œ∏        0     sin  Œ∏      cos  Œ∏      ]          subscript  R  X   Œ∏     1  0  0    0    Œ∏       Œ∏      0    Œ∏     Œ∏       \displaystyle R_{X}(\theta)=\begin{bmatrix}1&0&0\\
 0&\cos\theta&-\sin\theta\\
 0&\sin\theta&\cos\theta\end{bmatrix}     Note: The     R  Y    (  Œ∏  )        subscript  R  Y   Œ∏    R_{Y}(\theta)   matrix immediately below is not a Givens rotation. The     R  Y    (  Œ∏  )        subscript  R  Y   Œ∏    R_{Y}(\theta)   matrix immediately below respects the right-hand rule ... and is this usual matrix one sees in Computer Graphics; however, a Givens rotation is simply a matrix as defined in the Matrix representation section above and does not necessarily respect the right-hand rule. This section should be considered suspect.        R  Y    (  Œ∏  )    =   [      cos  Œ∏     0     sin  Œ∏       0    1    0       -   sin  Œ∏      0     cos  Œ∏      ]          subscript  R  Y   Œ∏       Œ∏   0    Œ∏     0  1  0        Œ∏    0    Œ∏       \displaystyle R_{Y}(\theta)=\begin{bmatrix}\cos\theta&0&\sin\theta\\
 0&1&0\\
 -\sin\theta&0&\cos\theta\end{bmatrix}     Note: The actual Givens rotation matrix for     R  Y    (  Œ∏  )        subscript  R  Y   Œ∏    R_{Y}(\theta)   would be:        R  Y    (  Œ∏  )    =   [      cos  Œ∏     0     -   sin  Œ∏        0    1    0       sin  Œ∏     0     cos  Œ∏      ]          subscript  R  Y   Œ∏       Œ∏   0      Œ∏      0  1  0      Œ∏   0    Œ∏       \displaystyle R_{Y}(\theta)=\begin{bmatrix}\cos\theta&0&-\sin\theta\\
 0&1&0\\
 \sin\theta&0&\cos\theta\end{bmatrix}           R  Z    (  Œ∏  )    =   [      cos  Œ∏      -   sin  Œ∏      0       sin  Œ∏      cos  Œ∏     0      0    0    1     ]          subscript  R  Z   Œ∏       Œ∏       Œ∏    0      Œ∏     Œ∏   0    0  0  1      \displaystyle R_{Z}(\theta)=\begin{bmatrix}\cos\theta&-\sin\theta&0\\
 \sin\theta&\cos\theta&0\\
 0&0&1\end{bmatrix}     Given that they are endomorphisms they can be composed with each other as many times as desired, keeping in mind that    g  ‚àò  f  ‚â†  f  ‚àò  g      g  normal-‚àò  f  normal-‚â†  f  normal-‚àò  g    g‚àòf‚â†f‚àòg   .  These three Givens rotations composed can generate any rotation matrix. This means that they can transform the standard basis of the space to any other frame in the space.  When rotations are performed in the right order, the values of the rotation angles of the final frame will be equal to the Euler angles of the final frame in the corresponding convention. For example, an operator     R  =    R  Y    (   Œ∏  3   )     .    R  X    (   Œ∏  2   )    .    R  Z    (   Œ∏  1   )       formulae-sequence    R     subscript  R  Y    subscript  Œ∏  3        subscript  R  X    subscript  Œ∏  2       subscript  R  Z    subscript  Œ∏  1      R=R_{Y}(\theta_{3}).R_{X}(\theta_{2}).R_{Z}(\theta_{1})   transforms the basis of the space into a frame with angles roll, pitch and yaw     Y  P  R   =   (   Œ∏  3   ,   Œ∏  2   ,   Œ∏  1   )         Y  P  R     subscript  Œ∏  3    subscript  Œ∏  2    subscript  Œ∏  1      YPR=(\theta_{3},\theta_{2},\theta_{1})   in the Tait‚ÄìBryan convention  z - x - y (convention in which the line of nodes is perpendicular to z and Y axes, also named Y - X‚Ä≤ - Z‚Ä≥ ).  For the same reason, any rotation matrix in 3D can be decomposed in a product of three of these rotation operators .  The meaning of the composition of two Givens rotations    g  ‚àò  f      g  normal-‚àò  f    g‚àòf   is an operator that transforms vectors first by   f   f   f   and then by   g   g   g   , being   f   f   f   and   g   g   g   rotations about one axis of basis of the space. This is similar to the extrinsic rotation equivalence for Euler angles.  Table of composed rotations  The following table shows the three Givens rotations equivalent to the different Euler angles conventions using extrinsic composition (composition of rotations about the basis axes) of active rotations and the right-handed rule for the positive sign of the angles.  The notation has been simplified in such a way that means and means . The subindexes of the angles are the order in which they are applied using extrinsic composition (1 for intrinsic rotation, 2 for nutation, 3 for precession)  As rotations are applied just in the opposite order of the Euler angles table of rotations , this table is the same but swapping indexes 1 and 3 in the angles associated with the corresponding entry. An entry like zxy means to apply first the y rotation, then x , and finally z , in the basis axes.  All the compositions assume the right hand convention for the matrices that are multiplied, yielding the following results.        xzx       [      c  2      -    c  1    s  2         s  1    s  2          c  3    s  2         c  3    c  2    c  1    -    s  3    s  1         -    c  2    c  3    s  1     -    c  1    s  3           s  2    s  3         c  3    s  1    +    c  1    c  2    s  3          c  3    c  1    -    c  2    s  3    s  1        ]       subscript  c  2        subscript  c  1    subscript  s  2        subscript  s  1    subscript  s  2         subscript  c  3    subscript  s  2         subscript  c  3    subscript  c  2    subscript  c  1       subscript  s  3    subscript  s  1            subscript  c  2    subscript  c  3    subscript  s  1        subscript  c  1    subscript  s  3          subscript  s  2    subscript  s  3         subscript  c  3    subscript  s  1       subscript  c  1    subscript  c  2    subscript  s  3          subscript  c  3    subscript  c  1       subscript  c  2    subscript  s  3    subscript  s  1        \begin{bmatrix}c_{2}&-c_{1}s_{2}&s_{1}s_{2}\\
 c_{3}s_{2}&c_{3}c_{2}c_{1}-s_{3}s_{1}&-c_{2}c_{3}s_{1}-c_{1}s_{3}\\
 s_{2}s_{3}&c_{3}s_{1}+c_{1}c_{2}s_{3}&c_{3}c_{1}-c_{2}s_{3}s_{1}\end{bmatrix}      xzy       [       c  2    c  3        -    c  3    s  2    c  1     +    s  3    s  1          c  3    s  2    s  1    +    s  3    c  1          s  2       c  1    c  2       -    c  2    s  1          -    s  3    c  2          s  3    s  2    c  1    +    c  3    s  1         -    s  3    s  2    s  1     +    c  3    c  1        ]         subscript  c  2    subscript  c  3           subscript  c  3    subscript  s  2    subscript  c  1        subscript  s  3    subscript  s  1          subscript  c  3    subscript  s  2    subscript  s  1       subscript  s  3    subscript  c  1        subscript  s  2      subscript  c  1    subscript  c  2         subscript  c  2    subscript  s  1            subscript  s  3    subscript  c  2          subscript  s  3    subscript  s  2    subscript  c  1       subscript  c  3    subscript  s  1            subscript  s  3    subscript  s  2    subscript  s  1        subscript  c  3    subscript  c  1        \begin{bmatrix}c_{2}c_{3}&-c_{3}s_{2}c_{1}+s_{3}s_{1}&c_{3}s_{2}s_{1}+s_{3}c_{%
 1}\\
 s_{2}&c_{1}c_{2}&-c_{2}s_{1}\\
 -s_{3}c_{2}&s_{3}s_{2}c_{1}+c_{3}s_{1}&-s_{3}s_{2}s_{1}+c_{3}c_{1}\end{bmatrix}          xyx       [      c  2       s  1    s  2        c  1    s  2          s  2    s  3         c  3    c  1    -    c  2    s  3    s  1         -    c  3    s  1     -    c  1    c  2    s  3          -    c  3    s  2          c  3    c  2    s  1    +    c  1    s  3          c  3    c  2    c  1    -    s  3    s  1        ]       subscript  c  2      subscript  s  1    subscript  s  2       subscript  c  1    subscript  s  2         subscript  s  2    subscript  s  3         subscript  c  3    subscript  c  1       subscript  c  2    subscript  s  3    subscript  s  1            subscript  c  3    subscript  s  1        subscript  c  1    subscript  c  2    subscript  s  3            subscript  c  3    subscript  s  2          subscript  c  3    subscript  c  2    subscript  s  1       subscript  c  1    subscript  s  3          subscript  c  3    subscript  c  2    subscript  c  1       subscript  s  3    subscript  s  1        \begin{bmatrix}c_{2}&s_{1}s_{2}&c_{1}s_{2}\\
 s_{2}s_{3}&c_{3}c_{1}-c_{2}s_{3}s_{1}&-c_{3}s_{1}-c_{1}c_{2}s_{3}\\
 -c_{3}s_{2}&c_{3}c_{2}s_{1}+c_{1}s_{3}&c_{3}c_{2}c_{1}-s_{3}s_{1}\end{bmatrix}      xyz       [       c  3    c  2        -    s  3    c  1     +    c  3    s  2    s  1          s  3    s  1    +    c  3    s  2    c  1           s  3    c  2         c  3    c  1    +    s  3    s  2    s  1         -    c  3    s  1     +    s  3    s  2    c  1          -   s  2        c  2    s  1        c  2    c  1       ]         subscript  c  3    subscript  c  2           subscript  s  3    subscript  c  1        subscript  c  3    subscript  s  2    subscript  s  1          subscript  s  3    subscript  s  1       subscript  c  3    subscript  s  2    subscript  c  1          subscript  s  3    subscript  c  2         subscript  c  3    subscript  c  1       subscript  s  3    subscript  s  2    subscript  s  1            subscript  c  3    subscript  s  1        subscript  s  3    subscript  s  2    subscript  c  1          subscript  s  2       subscript  c  2    subscript  s  1       subscript  c  2    subscript  c  1       \begin{bmatrix}c_{3}c_{2}&-s_{3}c_{1}+c_{3}s_{2}s_{1}&s_{3}s_{1}+c_{3}s_{2}c_{%
 1}\\
 s_{3}c_{2}&c_{3}c_{1}+s_{3}s_{2}s_{1}&-c_{3}s_{1}+s_{3}s_{2}c_{1}\\
 -s_{2}&c_{2}s_{1}&c_{2}c_{1}\end{bmatrix}        yxy       [        c  3    c  1    -    c  2    s  3    s  1         s  2    s  3         c  3    s  1    +    s  3    c  2    c  1           s  1    s  2       c  2      -    c  1    s  2           -    c  2    c  3    s  1     -    c  1    s  3         c  3    s  2         c  3    c  2    c  1    -    s  3    s  1        ]           subscript  c  3    subscript  c  1       subscript  c  2    subscript  s  3    subscript  s  1        subscript  s  2    subscript  s  3         subscript  c  3    subscript  s  1       subscript  s  3    subscript  c  2    subscript  c  1          subscript  s  1    subscript  s  2     subscript  c  2        subscript  c  1    subscript  s  2              subscript  c  2    subscript  c  3    subscript  s  1        subscript  c  1    subscript  s  3        subscript  c  3    subscript  s  2         subscript  c  3    subscript  c  2    subscript  c  1       subscript  s  3    subscript  s  1        \begin{bmatrix}c_{3}c_{1}-c_{2}s_{3}s_{1}&s_{2}s_{3}&c_{3}s_{1}+s_{3}c_{2}c_{1%
 }\\
 s_{1}s_{2}&c_{2}&-c_{1}s_{2}\\
 -c_{2}c_{3}s_{1}-c_{1}s_{3}&c_{3}s_{2}&c_{3}c_{2}c_{1}-s_{3}s_{1}\end{bmatrix}      yxz       [        c  3    c  1    -    s  3    s  2    s  1        -    s  3    c  2          c  3    s  1    +    s  3    s  2    c  1            s  3    c  1    +    c  3    s  2    s  1         c  3    c  2         s  3    s  1    -    c  3    s  2    c  1          -    c  2    s  1        s  2       c  2    c  1       ]           subscript  c  3    subscript  c  1       subscript  s  3    subscript  s  2    subscript  s  1          subscript  s  3    subscript  c  2          subscript  c  3    subscript  s  1       subscript  s  3    subscript  s  2    subscript  c  1            subscript  s  3    subscript  c  1       subscript  c  3    subscript  s  2    subscript  s  1        subscript  c  3    subscript  c  2         subscript  s  3    subscript  s  1       subscript  c  3    subscript  s  2    subscript  c  1            subscript  c  2    subscript  s  1      subscript  s  2      subscript  c  2    subscript  c  1       \begin{bmatrix}c_{3}c_{1}-s_{3}s_{2}s_{1}&-s_{3}c_{2}&c_{3}s_{1}+s_{3}s_{2}c_{%
 1}\\
 s_{3}c_{1}+c_{3}s_{2}s_{1}&c_{3}c_{2}&s_{3}s_{1}-c_{3}s_{2}c_{1}\\
 -c_{2}s_{1}&s_{2}&c_{2}c_{1}\end{bmatrix}        yxy       [        c  3    c  2    c  1    -    s  3    s  1        -    c  3    s  2          c  2    c  3    s  1    +    c  1    s  3           c  1    s  2       c  2       s  1    s  2          -    c  3    s  1     -    c  1    c  2    s  3         s  2    s  3         c  3    c  1    -    c  2    s  3    s  1        ]           subscript  c  3    subscript  c  2    subscript  c  1       subscript  s  3    subscript  s  1          subscript  c  3    subscript  s  2          subscript  c  2    subscript  c  3    subscript  s  1       subscript  c  1    subscript  s  3          subscript  c  1    subscript  s  2     subscript  c  2      subscript  s  1    subscript  s  2             subscript  c  3    subscript  s  1        subscript  c  1    subscript  c  2    subscript  s  3        subscript  s  2    subscript  s  3         subscript  c  3    subscript  c  1       subscript  c  2    subscript  s  3    subscript  s  1        \begin{bmatrix}c_{3}c_{2}c_{1}-s_{3}s_{1}&-c_{3}s_{2}&c_{2}c_{3}s_{1}+c_{1}s_{%
 3}\\
 c_{1}s_{2}&c_{2}&s_{1}s_{2}\\
 -c_{3}s_{1}-c_{1}c_{2}s_{3}&s_{2}s_{3}&c_{3}c_{1}-c_{2}s_{3}s_{1}\end{bmatrix}      yzx       [       c  2    c  1       -   s  2        c  2    s  1           c  3    s  2    c  1    +    s  3    s  1         c  3    c  2         c  3    s  2    s  1    -    s  3    c  1            s  3    s  2    c  1    -    c  3    s  1         s  3    c  2         s  3    s  2    s  1    +    c  3    c  1        ]         subscript  c  2    subscript  c  1       subscript  s  2       subscript  c  2    subscript  s  1           subscript  c  3    subscript  s  2    subscript  c  1       subscript  s  3    subscript  s  1        subscript  c  3    subscript  c  2         subscript  c  3    subscript  s  2    subscript  s  1       subscript  s  3    subscript  c  1            subscript  s  3    subscript  s  2    subscript  c  1       subscript  c  3    subscript  s  1        subscript  s  3    subscript  c  2         subscript  s  3    subscript  s  2    subscript  s  1       subscript  c  3    subscript  c  1        \begin{bmatrix}c_{2}c_{1}&-s_{2}&c_{2}s_{1}\\
 c_{3}s_{2}c_{1}+s_{3}s_{1}&c_{3}c_{2}&c_{3}s_{2}s_{1}-s_{3}c_{1}\\
 s_{3}s_{2}c_{1}-c_{3}s_{1}&s_{3}c_{2}&s_{3}s_{2}s_{1}+c_{3}c_{1}\end{bmatrix}        zyz       [        c  3    c  2    c  1    -    s  3    s  1         -    c  2    s  1    c  3     -    c  1    s  3         c  3    s  2           c  3    s  1    +    c  1    c  2    s  3          c  3    c  1    -    c  2    s  3    s  1         s  2    s  3         -    c  1    s  2         s  1    s  2       c  2      ]           subscript  c  3    subscript  c  2    subscript  c  1       subscript  s  3    subscript  s  1            subscript  c  2    subscript  s  1    subscript  c  3        subscript  c  1    subscript  s  3        subscript  c  3    subscript  s  2           subscript  c  3    subscript  s  1       subscript  c  1    subscript  c  2    subscript  s  3          subscript  c  3    subscript  c  1       subscript  c  2    subscript  s  3    subscript  s  1        subscript  s  2    subscript  s  3           subscript  c  1    subscript  s  2        subscript  s  1    subscript  s  2     subscript  c  2      \begin{bmatrix}c_{3}c_{2}c_{1}-s_{3}s_{1}&-c_{2}s_{1}c_{3}-c_{1}s_{3}&c_{3}s_{%
 2}\\
 c_{3}s_{1}+c_{1}c_{2}s_{3}&c_{3}c_{1}-c_{2}s_{3}s_{1}&s_{2}s_{3}\\
 -c_{1}s_{2}&s_{1}s_{2}&c_{2}\end{bmatrix}      zyx       [       c  2    c  1       -    c  2    s  1        s  2          s  3    s  2    c  1    +    c  3    s  1         -    s  3    s  2    s  1     +    c  3    c  1        -    s  3    c  2           -    c  3    s  2    c  1     +    s  3    s  1          c  3    s  2    s  1    +    s  3    c  1         c  3    c  2       ]         subscript  c  2    subscript  c  1         subscript  c  2    subscript  s  1      subscript  s  2          subscript  s  3    subscript  s  2    subscript  c  1       subscript  c  3    subscript  s  1            subscript  s  3    subscript  s  2    subscript  s  1        subscript  c  3    subscript  c  1          subscript  s  3    subscript  c  2              subscript  c  3    subscript  s  2    subscript  c  1        subscript  s  3    subscript  s  1          subscript  c  3    subscript  s  2    subscript  s  1       subscript  s  3    subscript  c  1        subscript  c  3    subscript  c  2       \begin{bmatrix}c_{2}c_{1}&-c_{2}s_{1}&s_{2}\\
 s_{3}s_{2}c_{1}+c_{3}s_{1}&-s_{3}s_{2}s_{1}+c_{3}c_{1}&-s_{3}c_{2}\\
 -c_{3}s_{2}c_{1}+s_{3}s_{1}&c_{3}s_{2}s_{1}+s_{3}c_{1}&c_{3}c_{2}\end{bmatrix}        zxz       [        c  3    c  1    -    c  2    s  1    s  3         -    c  3    s  1     -    c  1    c  2    s  3         s  2    s  3           c  2    c  3    s  1    +    c  1    s  3          c  3    c  2    c  1    -    s  3    s  1        -    c  3    s  2           s  1    s  2        c  1    s  2       c  2      ]           subscript  c  3    subscript  c  1       subscript  c  2    subscript  s  1    subscript  s  3            subscript  c  3    subscript  s  1        subscript  c  1    subscript  c  2    subscript  s  3        subscript  s  2    subscript  s  3           subscript  c  2    subscript  c  3    subscript  s  1       subscript  c  1    subscript  s  3          subscript  c  3    subscript  c  2    subscript  c  1       subscript  s  3    subscript  s  1          subscript  c  3    subscript  s  2          subscript  s  1    subscript  s  2       subscript  c  1    subscript  s  2     subscript  c  2      \begin{bmatrix}c_{3}c_{1}-c_{2}s_{1}s_{3}&-c_{3}s_{1}-c_{1}c_{2}s_{3}&s_{2}s_{%
 3}\\
 c_{2}c_{3}s_{1}+c_{1}s_{3}&c_{3}c_{2}c_{1}-s_{3}s_{1}&-c_{3}s_{2}\\
 s_{1}s_{2}&c_{1}s_{2}&c_{2}\end{bmatrix}      zxy       [        c  3    c  1    +    s  3    s  2    s  1         -    c  3    s  1     +    s  3    s  2    c  1         s  3    c  2          c  2    s  1        c  2    c  1       -   s  2          -    s  3    c  1     +    c  3    s  2    s  1          s  3    s  1    +    c  3    s  2    c  1         c  3    c  2       ]           subscript  c  3    subscript  c  1       subscript  s  3    subscript  s  2    subscript  s  1            subscript  c  3    subscript  s  1        subscript  s  3    subscript  s  2    subscript  c  1        subscript  s  3    subscript  c  2         subscript  c  2    subscript  s  1       subscript  c  2    subscript  c  1       subscript  s  2             subscript  s  3    subscript  c  1        subscript  c  3    subscript  s  2    subscript  s  1          subscript  s  3    subscript  s  1       subscript  c  3    subscript  s  2    subscript  c  1        subscript  c  3    subscript  c  2       \begin{bmatrix}c_{3}c_{1}+s_{3}s_{2}s_{1}&-c_{3}s_{1}+s_{3}s_{2}c_{1}&s_{3}c_{%
 2}\\
 c_{2}s_{1}&c_{2}c_{1}&-s_{2}\\
 -s_{3}c_{1}+c_{3}s_{2}s_{1}&s_{3}s_{1}+c_{3}s_{2}c_{1}&c_{3}c_{2}\end{bmatrix}          See also   Jacobi rotation  Plane of rotation  Householder transformation  Davenport rotations   References    . LAPACK Working Note 150, University of Tennessee, UT-CS-00-454, December 4, 2000.  D. Bindel, J. Demmel, W. Kahan, O. Marques. (2001) On Computing Givens rotations reliably and efficiently . LAPACK Working Note 148, University of Tennessee, UT-CS-00-449, January 31, 2001.    .    "  Category:Numerical linear algebra  Category:Matrices  Category:Rotation in three dimensions   