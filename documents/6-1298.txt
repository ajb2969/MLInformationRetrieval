   Schwartz‚ÄìZippel lemma      Schwartz‚ÄìZippel lemma   In mathematics, the Schwartz‚ÄìZippel lemma is a tool commonly used in probabilistic polynomial identity testing, i.e. in the problem of determining whether a given multivariate polynomial is the 0-polynomial (or identically equal to 0). It was discovered independently by Jack Schwartz , 1  Richard Zippel , 2 and Richard DeMillo and Richard J. Lipton . 3 The finite field version of this bound was proved by √òystein Ore in 1922. 4  Statement of the lemma  The input to the problem is an n -variable polynomial over a field  F . It can occur in the following forms:   Algebraic form:   For example, is        (     x  1   +   3   x  2     -   x  3    )    (     3   x  1    +   x  4    -  1   )   ‚ãØ   (    x  7   -   x  2    )    ‚â°    0   ?              subscript  x  1     3   subscript  x  2      subscript  x  3          3   subscript  x  1     subscript  x  4    1   normal-‚ãØ     subscript  x  7    subscript  x  2       0  normal-?     (x_{1}+3x_{2}-x_{3})(3x_{1}+x_{4}-1)\cdots(x_{7}-x_{2})\equiv 0\ ?     To solve this, we can multiply it out and check that all the coefficients are¬†0. However, this takes exponential time . In general, a polynomial can be algebraically represented by an arithmetic formula or circuit .   Determinant of a matrix with polynomial entries: Let       p   (   x  1   ,   x  2   ,  ‚Ä¶  ,   x  n   )       p    subscript  x  1    subscript  x  2   normal-‚Ä¶   subscript  x  n      p(x_{1},x_{2},\ldots,x_{n})\,     be the determinant of the polynomial matrix .  Currently, there is no known sub-exponential time algorithm that can solve this problem deterministically. However, there are randomized polynomial algorithms for testing polynomial identities. Their analysis usually requires a bound on the probability that a non-zero polynomial will have roots at randomly selected test points. The Schwartz‚ÄìZippel lemma provides this as follows:  Theorem 1 (Schwartz, Zippel). Let      P  ‚àà   F   [   x  1   ,   x  2   ,  ‚Ä¶  ,   x  n   ]        P    F    subscript  x  1    subscript  x  2   normal-‚Ä¶   subscript  x  n       P\in F[x_{1},x_{2},\ldots,x_{n}]     be a non-zero polynomial of total degree d¬†‚â•¬†0 over a field ,¬†F. Let S be a finite subset of F and let r 1 ,¬†r 2 ,¬†...,¬†r n be selected at random independently and uniformly from¬†S. Then        Pr   [    P   (   r  1   ,   r  2   ,  ‚Ä¶  ,   r  n   )    =  0   ]    ‚â§   d   |  S  |     .       Pr      P    subscript  r  1    subscript  r  2   normal-‚Ä¶   subscript  r  n     0      d    S      \Pr[P(r_{1},r_{2},\ldots,r_{n})=0]\leq\frac{d}{|S|}.\,     In the single variable case, this follows directly from the fact that a polynomial of degree  d can have no more than d roots. It seems logical, then, to think that a similar statement would hold for multivariable polynomials. This is, in fact, the case.  Proof. The proof is by mathematical induction on n . For n =¬†1, as was mentioned before, P can have at most d roots. This gives us the base case. Now, assume that the theorem holds for all polynomials in n ‚àí¬†1 variables. We can then consider P to be a polynomial in x 1 by writing it as        P   (   x  1   ,  ‚Ä¶  ,   x  n   )    =    ‚àë   i  =  0   d     x  1  i    P  i    (   x  2   ,  ‚Ä¶  ,   x  n   )      .        P    subscript  x  1   normal-‚Ä¶   subscript  x  n       superscript   subscript     i  0    d      superscript   subscript  x  1   i    subscript  P  i     subscript  x  2   normal-‚Ä¶   subscript  x  n        P(x_{1},\dots,x_{n})=\sum_{i=0}^{d}x_{1}^{i}P_{i}(x_{2},\dots,x_{n}).     Since   P   P   P   is not identically 0, there is some   i   i   i   such that    P  i     subscript  P  i    P_{i}   is not identically 0. Take the largest such   i   i   i   . Then     deg   P  i    ‚â§   d  -  i        degree   subscript  P  i      d  i     \deg P_{i}\leq d-i   , since the degree of     x  1  i    P  i        superscript   subscript  x  1   i    subscript  P  i     x_{1}^{i}P_{i}   is at most d.  Now we randomly pick     r  2   ,  ‚Ä¶  ,   r  n       subscript  r  2   normal-‚Ä¶   subscript  r  n     r_{2},\dots,r_{n}   from   S   S   S   . By the induction hypothesis,      Pr   [     P  i    (   r  2   ,  ‚Ä¶  ,   r  n   )    =  0   ]    ‚â§    d  -  i    |  S  |     .       Pr       subscript  P  i     subscript  r  2   normal-‚Ä¶   subscript  r  n     0        d  i     S      \Pr[P_{i}(r_{2},\ldots,r_{n})=0]\leq\frac{d-i}{|S|}.   If      P  i    (   r  2   ,  ‚Ä¶  ,   r  n   )    ‚â†  0         subscript  P  i     subscript  r  2   normal-‚Ä¶   subscript  r  n     0    P_{i}(r_{2},\ldots,r_{n})\neq 0   , then    P   (   x  1   ,   r  2   ,  ‚Ä¶  ,   r  n   )       P    subscript  x  1    subscript  r  2   normal-‚Ä¶   subscript  r  n      P(x_{1},r_{2},\ldots,r_{n})   is of degree   i   i   i   so          Pr   [    P   (   r  1   ,   r  2   ,  ‚Ä¶  ,   r  n   )    =  0   |     P  i    (   r  2   ,  ‚Ä¶  ,   r  n   )    ‚â†  0   ]    ‚â§   i   |  S  |     .       Pr      P    subscript  r  1    subscript  r  2   normal-‚Ä¶   subscript  r  n     0        subscript  P  i     subscript  r  2   normal-‚Ä¶   subscript  r  n     0      i    S      \Pr[P(r_{1},r_{2},\ldots,r_{n})=0|P_{i}(r_{2},\ldots,r_{n})\neq 0]\leq\frac{i}%
 {|S|}.        If we denote the event     P   (   r  1   ,   r  2   ,  ‚Ä¶  ,   r  n   )    =  0        P    subscript  r  1    subscript  r  2   normal-‚Ä¶   subscript  r  n     0    P(r_{1},r_{2},\ldots,r_{n})=0   by   A   A   A   , the event      P  i    (   r  2   ,  ‚Ä¶  ,   r  n   )    =  0         subscript  P  i     subscript  r  2   normal-‚Ä¶   subscript  r  n     0    P_{i}(r_{2},\ldots,r_{n})=0   by   B   B   B   , and the complement of   B   B   B   by    B  c     superscript  B  c    B^{c}   , we have          Pr   [  A  ]      Pr  A    \Pr[A]           =    Pr   [   A  ‚à©  B   ]    +   Pr   [   A  ‚à©   B  c    ]         absent     Pr    A  B     Pr    A   superscript  B  c        =\Pr[A\cap B]+\Pr[A\cap B^{c}]              =     Pr   [  B  ]     Pr   [  A  |  B  ]     +    Pr   [   B  c   ]     Pr   [  A  |   B  c   ]          absent       Pr  B    Pr  A  B       Pr   superscript  B  c     Pr  A   superscript  B  c        =\Pr[B]\Pr[A|B]+\Pr[B^{c}]\Pr[A|B^{c}]              ‚â§    Pr   [  B  ]    +   Pr   [  A  |   B  c   ]         absent     Pr  B    Pr  A   superscript  B  c       \leq\Pr[B]+\Pr[A|B^{c}]               ‚â§     d  -  i    |  S  |    +   i   |  S  |     =   d   |  S  |     .        absent        d  i     S      i    S            d    S       \leq\frac{d-i}{|S|}+\frac{i}{|S|}=\frac{d}{|S|}.        Applications  The importance of the Schwartz‚ÄìZippel Theorem and Testing Polynomial Identities follows from algorithms which are obtained to problems that can be reduced to the problem of polynomial identity testing.  Comparison of two polynomials  Given a pair of polynomials     p  1    (  x  )        subscript  p  1   x    p_{1}(x)   and     p  2    (  x  )        subscript  p  2   x    p_{2}(x)   , is          p  1    (  x  )    ‚â°    p  2    (  x  )           subscript  p  1   x      subscript  p  2   x     p_{1}(x)\equiv p_{2}(x)   ?     This problem can be solved by reducing it to the problem of polynomial identity testing. It is equivalent to checking if         [     p  1    (  x  )    -    p  2    (  x  )     ]   ‚â°  0.       delimited-[]       subscript  p  1   x      subscript  p  2   x     0.    [p_{1}(x)-p_{2}(x)]\equiv 0.        Hence if we can determine that          p   (  x  )    ‚â°  0   ,        p  x   0    p(x)\equiv 0,        where          p   (  x  )    =     p  1    (  x  )    -    p  2    (  x  )      ,        p  x        subscript  p  1   x      subscript  p  2   x      p(x)=p_{1}(x)\;-\;p_{2}(x),        then we can determine whether the two polynomials are equivalent.  Comparison of polynomials has applications for branching programs (also called binary decision diagrams ). A read-once branching program can be represented by a multilinear polynomial which computes (over any field) on {0,1}-inputs the same Boolean function as the branching program, and two branching programs compute the same function if and only if the corresponding polynomials are equal. Thus, identity of Boolean functions computed by read-once branching programs can be reduced to polynomial identity testing.  Comparison of two polynomials (and therefore testing polynomial identities) also has applications in 2D-compression, where the problem of finding the equality of two 2D-texts A and B is reduced to the problem of comparing equality of two polynomials     p  A    (  x  ,  y  )        subscript  p  A    x  y     p_{A}(x,y)   and     p  B    (  x  ,  y  )        subscript  p  B    x  y     p_{B}(x,y)   .  Primality testing  Given    n  ‚àà   ‚Ñ§  +       n   superscript  ‚Ñ§      n\in\mathbb{Z^{+}}   , is   n   n   n   a prime number ?  A simple randomized algorithm developed by Manindra Agrawal and Somenath Biswas can determine probabilistically whether   n   n   n   is prime and uses polynomial identity testing to do so.  They propose that all prime numbers n (and only prime numbers) satisfy the following polynomial identity:           (   1  +  z   )   n   =   1  +    z  n    (    mod   n   )      .       superscript    1  z   n     1     superscript  z  n     mod  n       (1+z)^{n}=1+z^{n}(\mbox{mod}\;n).        This is a consequence of the Frobenius endomorphism .  Let           ùí´  n    (  z  )    =     (   1  +  z   )   n   -  1  -   z  n     .         subscript  ùí´  n   z      superscript    1  z   n   1   superscript  z  n      \mathcal{P}_{n}(z)=(1+z)^{n}-1-z^{n}.\,        Then      ùí´  n    (  z  )    =    0    (    mod   n   )           subscript  ùí´  n   z     0    mod  n      \mathcal{P}_{n}(z)=0\;(\mbox{mod}\;n)    iff n is prime . The proof can be found in [4]. However, since this polynomial has degree   n   n   n   , and since   n   n   n   may or may not be a prime, the Schwartz‚ÄìZippel method would not work. Agrawal and Biswas use a more sophisticated technique, which divides    ùí´  n     subscript  ùí´  n    \mathcal{P}_{n}   by a random monic polynomial of small degree.  Prime numbers are used in a number of applications such as hash table sizing, pseudorandom number generators and in key generation for cryptography . Therefore finding very large prime numbers (on the order of (at least)     10  350   ‚âà   2  1024        superscript  10  350    superscript  2  1024     10^{350}\approx 2^{1024}   ) becomes very important and efficient primality testing algorithms are required.  Perfect matching  Let    G  =   (  V  ,  E  )       G   V  E     G=(V,E)   be a graph of   n   normal-n   \mathrm{n}   vertices where   n   normal-n   \mathrm{n}   is even. Does   G   normal-G   \mathrm{G}   contain a perfect matching ?  Theorem 2 : A Tutte matrix determinant is not a   0   0   \mathrm{0}   -polynomial if and only if there exists a perfect matching.  A subset   D   normal-D   \mathrm{D}   of   E   normal-E   \mathrm{E}   is called a matching if each vertex in   V   normal-V   \mathrm{V}   is incident with at most one edge in   D   normal-D   \mathrm{D}   . A matching is perfect if each vertex in   V   normal-V   \mathrm{V}   has exactly one edge that is incident to it in   D   normal-D   \mathrm{D}   . Create a Tutte matrix    A   normal-A   \mathrm{A}   in the following way:        A  =   [      a  11      a  12     ‚ãØ     a   1  n         a  21      a  22     ‚ãØ     a   2  n        ‚ãÆ    ‚ãÆ    ‚ã±    ‚ãÆ       a   n  1       a   n  2      ‚Ä¶     a  ùëõùëõ      ]       A     subscript  a  11    subscript  a  12   normal-‚ãØ   subscript  a    1  n       subscript  a  21    subscript  a  22   normal-‚ãØ   subscript  a    2  n      normal-‚ãÆ  normal-‚ãÆ  normal-‚ã±  normal-‚ãÆ     subscript  a    n  1     subscript  a    n  2    normal-‚Ä¶   subscript  a  ùëõùëõ       A=\begin{bmatrix}a_{11}&a_{12}&\cdots&a_{1\mathit{n}}\\
 a_{21}&a_{22}&\cdots&a_{2\mathit{n}}\\
 \vdots&\vdots&\ddots&\vdots\\
 a_{\mathit{n}1}&a_{\mathit{n}2}&\ldots&a_{\mathit{nn}}\end{bmatrix}        where    a_{ij} = \begin{cases} x_{ij}\;\;\mbox{if}\;(i,j) \in E \mbox{ and } i j\\     0\;\;\;\;\mbox{otherwise}. \end{cases}  The Tutte matrix determinant (in the variables x ij , i  a ="" (as="" )="" \mathrm{G}  contains a perfect matching. There exists a deterministic black-box algorithm for graphs with polynomially bounded permanents (Grigoriev & Karpinski 1987). 5  In the special case of a balanced bipartite graph on    n  =   m  +  m       n    m  m     n=m+m   vertices this matrix takes the form of a block matrix        A  =   (     0    X       -   X  t      0     )       A    0  X       superscript  X  t    0      A=\begin{pmatrix}0&X\\
 -X^{t}&0\end{pmatrix}        if the first m rows (resp. columns) are indexed with the first subset of the bipartition and the last m rows with the complementary subset. In this case the pfaffian coincides with the usual determinant of the m √ó m matrix X (up to sign). Here X is the Edmonds matrix .  Notes  References      Moshkovitz, Dana (2010). An Alternative Proof of The Schwartz-Zippel Lemma.          External links   The Curious History of the Schwartz‚ÄìZippel Lemma , by Richard J. Lipton   "  Category:Polynomials  Category:Computer algebra  Category:Lemmas  Category:Mathematical theorems in theoretical computer science     ‚Ü©  ‚Ü©  ‚Ü©  √ñ. Ore, √úber h√∂here Kongruenzen. Norsk Mat. Forenings Skrifter Ser. I (1922), no. 7, 15 pages. ‚Ü©  ‚Ü©     