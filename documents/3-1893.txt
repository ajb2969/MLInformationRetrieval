


Expression (mathematics)




Expression (mathematics)

In mathematics, an expression (or mathematical expression) is a finite combination of symbols that is well-formed according to rules that depend on the context. Mathematical symbols can designate numbers (constants), variables, operations, functions, punctuation, grouping, and other aspects of logical syntax.
Examples
The use of expressions ranges from the simple:












 
 
    (linear polynomial)
 







 
    (quadratic polynomial)
 







 
    (rational expression)
 



to the complex:








Forms
Mathematical expressions include arithmetic expressions, polynomials, algebraic expressions, closed-form expressions, and analytical expressions. The table below highlights some similarities and differences between these different types.
Syntax versus semantics
Syntax
Being an expression is a syntactic concept.
An expression must be well-formed; i.e., the operators must have the correct number of inputs, in the correct places. Strings of symbols that violate the rules of syntax are not well-formed and are not valid mathematical expressions.
For example, in the usual notation of arithmetic, the expression 2 + 3 is well formed, but the expression * 2 + is not. Similarly,



would not be considered a mathematical expression but only a meaningless jumble.
Semantics
Semantics is the study of meaning. Formal semantics is about attaching meaning to expressions.
In algebra, an expression may be used to designate a value, which might depend on values assigned to variables occurring in the expression. The determination of this value depends on the semantics attached to the symbols of the expression. These semantic rules may declare that certain expressions do not designate any value (for instance when they involve division by 0); such expressions are said to have an undefined value, but they are well-formed expressions nonetheless. In general the meaning of expressions is not limited to designating values; for instance, an expression might designate a condition, or an equation that is to be solved, or it can be viewed as an object in its own right that can be manipulated according to certain rules. Certain expressions that designate a value simultaneously express a condition that is assumed to hold, for instance those involving the operator 
 
 
 
 
  to designate an internal direct sum.
Formal languages and lambda calculus
Formal languages are concerned by how expressions are constructed. They form a key element of formal systems.
In the 1930s, Alonzo Church and Stephen Kleene have formalized expressions and their evaluation by introducing lambda calculus.
The equivalence of two expressions in the lambda calculus is undecidable. This is also the case for the expressions representing real numbers, which are built from the integers by using the arithmetical operations, the logarithm and the exponential (Richardson's theorem).
Variables
Many mathematical expressions include variables. Any variable can be classified as being either a free variable or a bound variable.
For a given combination of values for the free variables, an expression may be evaluated, although for some combinations of values of the free variables, the value of the expression may be undefined. Thus an expression represents a function whose inputs are the value assigned the free variables and whose output is the resulting value of the expression.
For example, the expression



evaluated for x = 10, y = 5, will give 2; but it is undefined for y = 0.
The evaluation of an expression is dependent on the definition of the mathematical operators and on the system of values that is its context.
Two expressions are said to be equivalent if, for each combination of values for the free variables, they have the same output, i.e., they represent the same function. Example:
The expression


 
  has free variable x, bound variable n, constants 1, 2, and 3, two occurrences of an implicit multiplication operator, and a summation operator. The expression is equivalent to the simpler expression 12x. The value for x = 3 is 36.
See also

Algebraic closure
Algebraic expression
Analytical expression
Computer algebra#Expressions
Closed-form expression
Combinator
Defined and undefined
Equation
Expression (programming)
Formula
Formal grammar
Functional programming
Logical expression
Term (mathematics)

Notes
References

Redden, John. Elementary Algebra. Flat World Knowledge, 2011.

bg:Израз pl:Wyrażenie algebraiczne"
Category:Abstract algebra Category:Evaluation Category:Logical expressions


