   Digital biquad filter      Digital biquad filter   In signal processing , a digital biquad filter is a second-order recursive  linear filter , containing two poles and two zeros . "Biquad" is an abbreviation of " biquadratic ", which refers to the fact that in the Z domain , its transfer function is the ratio of two quadratic functions :        H    (  z  )    =     b  0   +    b  1    z   -  1     +    b  2    z   -  2        a  0   +    a  1    z   -  1     +    a  2    z   -  2             H  z        subscript  b  0      subscript  b  1    superscript  z    1        subscript  b  2    superscript  z    2         subscript  a  0      subscript  a  1    superscript  z    1        subscript  a  2    superscript  z    2         \ H(z)=\frac{b_{0}+b_{1}z^{-1}+b_{2}z^{-2}}{a_{0}+a_{1}z^{-1}+a_{2}z^{-2}}     The coefficients are often normalized such that a 0 = 1:        H    (  z  )    =     b  0   +    b  1    z   -  1     +    b  2    z   -  2       1  +    a  1    z   -  1     +    a  2    z   -  2             H  z        subscript  b  0      subscript  b  1    superscript  z    1        subscript  b  2    superscript  z    2        1     subscript  a  1    superscript  z    1        subscript  a  2    superscript  z    2         \ H(z)=\frac{b_{0}+b_{1}z^{-1}+b_{2}z^{-2}}{1+a_{1}z^{-1}+a_{2}z^{-2}}     High-order IIR filters can be highly sensitive to quantization of their coefficients, and can easily become unstable . This is much less of a problem with first and second-order filters; therefore, higher-order filters are typically implemented as serially-cascaded biquad sections (and a first-order filter if necessary). The two poles of the biquad filter must be inside the unit circle for it to be stable. In general, this is true for all filters i.e. all poles must be inside the unit circle for the filter to be stable.  Implementation  Direct form 1  The most straightforward implementation is the direct form 1, which has the following difference equation :        y    [  n  ]    =    1   a  0     (      b  0   x   [  n  ]    +    b  1   x   [   n  -  1   ]    +    b  2   x   [   n  -  2   ]     -    a  1   y   [   n  -  1   ]    -    a  2   y   [   n  -  2   ]     )          y   delimited-[]  n        1   subscript  a  0           subscript  b  0   x   delimited-[]  n       subscript  b  1   x   delimited-[]    n  1        subscript  b  2   x   delimited-[]    n  2         subscript  a  1   y   delimited-[]    n  1        subscript  a  2   y   delimited-[]    n  2         \ y[n]=\frac{1}{a_{0}}\left(b_{0}x[n]+b_{1}x[n-1]+b_{2}x[n-2]-a_{1}y[n-1]-a_{2%
 }y[n-2]\right)     or, if normalized:        y    [  n  ]    =      b  0   x   [  n  ]    +    b  1   x   [   n  -  1   ]    +    b  2   x   [   n  -  2   ]     -    a  1   y   [   n  -  1   ]    -    a  2   y   [   n  -  2   ]           y   delimited-[]  n           subscript  b  0   x   delimited-[]  n       subscript  b  1   x   delimited-[]    n  1        subscript  b  2   x   delimited-[]    n  2         subscript  a  1   y   delimited-[]    n  1        subscript  a  2   y   delimited-[]    n  2        \ y[n]=b_{0}x[n]+b_{1}x[n-1]+b_{2}x[n-2]-a_{1}y[n-1]-a_{2}y[n-2]     Here the    b  0     subscript  b  0    b_{0}   ,    b  1     subscript  b  1    b_{1}   and    b  2     subscript  b  2    b_{2}   coefficients determine zeros, and    a  1     subscript  a  1    a_{1}   ,    a  2     subscript  a  2    a_{2}   determine the position of the poles.  Flow graph of biquad filter in direct form 1:  (Figure)   Direct form 2  The direct form 1 implementation requires four delay registers. An equivalent circuit is the direct form 2 implementation, which requires only two delay registers:  (Figure)   The direct form 2 implementation is called the canonical form, because it uses the minimal amount of delays, adders and multipliers, yielding in the same transfer function as the direct form 1 implementation. The difference equations for DF2 are:         y    [  n  ]    =     b  0   w   [  n  ]    +    b  1   w   [   n  -  1   ]    +    b  2   w   [   n  -  2   ]      ,        y   delimited-[]  n         subscript  b  0   w   delimited-[]  n       subscript  b  1   w   delimited-[]    n  1        subscript  b  2   w   delimited-[]    n  2        \ y[n]=b_{0}w[n]+b_{1}w[n-1]+b_{2}w[n-2],     where         w    [  n  ]    =    x   [  n  ]    -    a  1   w   [   n  -  1   ]    -    a  2   w   [   n  -  2   ]      .        w   delimited-[]  n        x   delimited-[]  n       subscript  a  1   w   delimited-[]    n  1        subscript  a  2   w   delimited-[]    n  2        \ w[n]=x[n]-a_{1}w[n-1]-a_{2}w[n-2].     Transposed direct forms  (Figure)  Transposed direct form biquadratic section   See: https://ccrma.stanford.edu/~jos/fp/Transposed_Direct_Forms.html  References   Sen M. Kuo, Bob H. Lee, Wenshun Tian: Real-Time Digital Signal Processing: Implementations and Applications, 2nd Edition , Wiley & Sons Ltd, 2006 (E-book)  Cookbook formulae for audio EQ biquad filter coefficients  Biquad filter  JOS BiQuad section   See also   Biquad filter  Digital filter   "  Category:Linear filters  Category:Audio engineering  Category:Filter theory   