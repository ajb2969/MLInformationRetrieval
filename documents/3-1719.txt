


Association rule learning




Association rule learning

Association rule learning is a popular and well researched method for discovering interesting relations between variables in large databases. It is intended to identify strong rules discovered in databases using different measures of interestingness.1 Based on the concept of strong rules, Rakesh Agrawal et al.2 introduced association rules for discovering regularities between products in large-scale transaction data recorded by point-of-sale (POS) systems in supermarkets. For example, the rule 
 
 
 
  found in the sales data of a supermarket would indicate that if a customer buys onions and potatoes together, they are likely to also buy hamburger meat. Such information can be used as the basis for decisions about marketing activities such as, e.g., promotional pricing or product placements. In addition to the above example from market basket analysis association rules are employed today in many application areas including Web usage mining, intrusion detection, Continuous production, and bioinformatics. In contrast with sequence mining, association rule learning typically does not consider the order of items either within a transaction or across transactions.
Definition




Example database with 5 transactions and 5 items



transaction ID



1



2



3



4



5





Following the original definition by Agrawal et al.3 the problem of association rule mining is defined as:
Let 
 
 
 
  be a set of 
 
 
 
  binary attributes called items.
Let 
 
 
 
  be a set of transactions called the database.
Each transaction in 
 
 
 
 
  has a unique transaction ID and contains a subset of the items in 
 
 
 
 .
A rule is defined as an implication of the form:



Where 
 
 
 
  and 
 
 
 
 .
Every rule is composed by two different set of items, also known as itemsets, 
 
 
 
 
  an 
 
 
 
 , where 
 
 
 
  is called antecedent or left-hand-side (LHS) and 
 
 
consequent or right-hand-side (RHS).
To illustrate the concepts, we use a small example from the supermarket domain. The set of items is 
 
 
 
  and in the table is shown a small database containing the items, where, in each entry, the value 1 means the presence of the item in the corresponding transaction, and the value 0 represent the absence of an item in a that transaction.
An example rule for the supermarket could be 
 
 
 
 
  meaning that if butter and bread are bought, customers also buy milk.
Note: this example is extremely small. In practical applications, a rule needs a support of several hundred transactions before it can be considered statistically significant, and data-sets often contain thousands or millions of transactions.
Useful Concepts
In order to select interesting rules from the set of all possible rules, constraints on various measures of significance and interest are used. The best-known constraints are minimum thresholds on support and confidence.
Let 
 
 
 
  an item-set, 
 
 
 
  an association rule and 
 
 
 
  a set of transactions of a given database.
Support
The support value of 
 
 
 
  with respect to 
 
 
 
 
  is defined as the proportion of transactions in the database which contains the item-set 
 
 
 
 . In formula
 
 
 
  In the example database, the item-set 
 
 
 
  has a support of 
 
 
 
  since it occurs in 20% of all transactions (1 out of 5 transactions). The argument of 
 
 
 
 
  is a set of preconditions, and thus becomes more restrictive as it grows (instead of more inclusive).
Confidence
The confidence value of a rule, 
 
 
 
  , with respect to a set of transactions 
 
 
 
 , is the proportion the transactions that contains 
 
 
 
  which also contains 
 
 
 
 .
Let define it as:


 
 
 .
For example, the rule 
 
 
 
  has a confidence of 
 
 
 
  in the database, which means that for 100% of the transactions containing butter and bread the rule is correct (100% of the times a customer buys butter and bread, milk is bought as well).
Note that 
 
 
 
  means the support of the union of the items in X and Y. This is somewhat confusing since we normally think in terms of probabilities of  events and not sets of items. We can rewrite 
 
 
 
  as the joint probability 
 
 
 
 
 , where 
 
 
 
  and 
 
 
 
  are the events that a transaction contains itemset 
 
 
 
  or 
 
 
 
 , respectively.4 Thus confidence can be interpreted as an estimate of the conditional probability 
 
 
 
 
 , the probability of finding the RHS of the rule in transactions under the condition that these transactions also contain the LHS.5
Lift
The lift of a rule is defined as:


 
  or the ratio of the observed support to that expected if X and Y were independent.
For Example, the rule 
 
 
 
  has a lift of 
 
 
 
 .
Conviction
The conviction of a rule is defined as 
 
 
 
 .
For Example, the rule 
 
 
 
 
  has a conviction of 
 
 
 
 , and can be interpreted as the ratio of the expected frequency that X occurs without Y (that is to say, the frequency that the rule makes an incorrect prediction) if X and Y were independent divided by the observed frequency of incorrect predictions. In this example, the conviction value of 1.2 shows that the rule 
 
 
 
  would be incorrect 20% more often (1.2 times as often) if the association between X and Y was purely random chance.
Process
 Association rules are usually required to satisfy a user-specified minimum support and a user-specified minimum confidence at the same time. Association rule generation is usually split up into two separate steps:

A minimum support threshold is applied to find all frequent item-sets in a database.
A minimum confidence constraint is applied to these frequent item-sets in order to form rules.

While the second step is straightforward, the first step needs more attention.
Finding all frequent item-sets in a database is difficult since it involves searching all possible item-sets (item combinations). The set of possible item-sets is the power set over 
 
 
 
  and has size 
 
 
 
  (excluding the empty set which is not a valid item-set). Although the size of the power-set grows exponentially in the number of items 
 
 
 
 
  in 
 
 
 
 , efficient search is possible using the downward-closure property of support67 (also called anti-monotonicity8) which guarantees that for a frequent itemset, all its subsets are also frequent and thus for an infrequent item-set, all its super-sets must also be infrequent. Exploiting this property, efficient algorithms (e.g., Apriori9 and Eclat10) can find all frequent item-sets.
History
The concept of association rules was popularised particularly due to the 1993 article of Agrawal et al.,11 which has acquired more than 6000 citations according to Google Scholar, as of March 2008, and is thus one of the most cited papers in the Data Mining field. However, it is possible that what is now called "association rules" is similar to what appears in the 1966 paper12 on GUHA, a general data mining method developed by Petr HÃ¡jek et al.13
Alternative measures of interestingness
In addition to confidence, other measures of interestingness for rules have been proposed. Some popular measures are:

All-confidence14


Collective strength15


Conviction16


Leverage17


Lift (originally called interest)18

A definition of these measures can be found here. Several more measures are presented and compared by Tan et al.19 Looking for techniques that can model what the user has known (and using these models as interestingness measures) is currently an active research trend under the name of "Subjective Interestingness."
Statistically sound associations
One limitation of the standard approach to discovering associations is that by searching massive numbers of possible associations to look for collections of items that appear to be associated, there is a large risk of finding many spurious associations. These are collections of items that co-occur with unexpected frequency in the data, but only do so by chance. For example, suppose we are considering a collection of 10,000 items and looking for rules containing two items in the left-hand-side and 1 item in the right-hand-side. There are approximately 1,000,000,000,000 such rules. If we apply a statistical test for independence with a significance level of 0.05 it means there is only a 5% chance of accepting a rule if there is no association. If we assume there are no associations, we should nonetheless expect to find 50,000,000,000 rules. Statistically sound association discovery2021 controls this risk, in most cases reducing the risk of finding any spurious associations to a user-specified significance level.
Algorithms
Many algorithms for generating association rules were presented over time.
Some well known algorithms are Apriori, Eclat and FP-Growth, but they only do half the job, since they are algorithms for mining frequent itemsets. Another step needs to be done after to generate rules from frequent itemsets found in a database.
Apriori algorithm
Apriori22 is the best-known algorithm to mine association rules. It uses a breadth-first search strategy to count the support of itemsets and uses a candidate generation function which exploits the downward closure property of support.
Eclat algorithm
Eclat23 (alt. ECLAT, stands for Equivalence Class Transformation) is a depth-first search algorithm using set intersection. It is a naturally elegant algorithm suitable for both sequential as well as parallel execution with locality enhancing properties. It was first introduced by Zaki, Parthasarathy, Li and Ogihara in a series of papers written in 1997.
Mohammed Javeed Zaki, Srinivasan Parthasarathy, Wei Li: A Localized Algorithm for Parallel Association Mining. SPAA 1997: 321-330
Mohammed Javeed Zaki, Srinivasan Parthasarathy, Mitsunori Ogihara, Wei Li: Parallel Algorithms for Discovery of Association Rules. Data Min. Knowl. Discov. 1(4): 343-373 (1997)
FP-growth algorithm
FP stands for frequent pattern.
In the first pass, the algorithm counts occurrence of items (attribute-value pairs) in the dataset, and stores them to 'header table'. In the second pass, it builds the FP-tree structure by inserting instances. Items in each instance have to be sorted by descending order of their frequency in the dataset, so that the tree can be processed quickly. Items in each instance that do not meet minimum coverage threshold are discarded. If many instances share most frequent items, FP-tree provides high compression close to tree root.
Recursive processing of this compressed version of main dataset grows large item sets directly, instead of generating candidate items and testing them against the entire database. Growth starts from the bottom of the header table (having longest branches), by finding all instances matching given condition. New tree is created, with counts projected from the original tree corresponding to the set of instances that are conditional on the attribute, with each node getting sum of its children counts. Recursive growth ends when no individual items conditional on the attribute meet minimum support threshold, and processing continues on the remaining header items of the original FP-tree.
Once the recursive process has completed, all large item sets with minimum coverage have been found, and association rule creation begins.24
Others
AprioriDP
AprioriDP25 utilizes Dynamic Programming in Frequent itemset mining. The working principle is to eliminate the candidate generation like FP-tree, but it stores support count in specialized data structure instead of tree.
Context Based Association Rule Mining Algorithm
CBPNARM is the newly developed algorithm which is developed in 2013 to mine association rules on the basis of context. It uses context variable on the basis of which the support of an itemset is changed on the basis of which the rules are finally populated to the rule set.
Node-set-based algorithms
FIN,26 PrePost 27 and PPV 28 are three algorithms based on node sets. They use nodes in a coding FP-tree to represent itemsets, and employ a depth-first search strategy to discovery frequent itemsets using "intersection" of node sets.
GUHA procedure ASSOC
GUHA is a general method for exploratory data analysis that has theoretical foundations in observational calculi.29
The ASSOC procedure30 is a GUHA method which mines for generalized association rules using fast bitstrings operations. The association rules mined by this method are more general than those output by apriori, for example "items" can be connected both with conjunction and disjunctions and the relation between antecedent and consequent of the rule is not restricted to setting minimum support and confidence as in apriori: an arbitrary combination of supported interest measures can be used.
OPUS search
OPUS is an efficient algorithm for rule discovery that, in contrast to most alternatives, does not require either monotone or anti-monotone constraints such as minimum support.31 Initially used to find rules for a fixed consequent3233 it has subsequently been extended to find rules with any item as a consequent.34 OPUS search is the core technology in the popular Magnum Opus association discovery system.
Lore
A famous story about association rule mining is the "beer and diaper" story. A purported survey of behavior of supermarket shoppers discovered that customers (presumably young men) who buy diapers tend also to buy beer. This anecdote became popular as an example of how unexpected association rules might be found from everyday data. There are varying opinions as to how much of the story is true.35 Daniel Powers says:36

In 1992, Thomas Blischok, manager of a retail consulting group at Teradata, and his staff prepared an analysis of 1.2 million market baskets from about 25 Osco Drug stores. Database queries were developed to identify affinities. The analysis "did discover that between 5:00 and 7:00 p.m. that consumers bought beer and diapers". Osco managers did NOT exploit the beer and diapers relationship by moving the products closer together on the shelves.

Other types of association mining
Multi-Relation Association Rules: Multi-Relation Association Rules (MRAR) is a new class of association rules which in contrast to primitive, simple and even multi-relational association rules (that are usually extracted from multi-relational databases), each rule item consists of one entity but several relations. These relations indicate indirect relationship between the entities. Consider the following MRAR where the first item consists of three relations live in, nearby and humid: âThose who live in a place which is near by a city with humid climate type and also are younger than 20 -> their health condition is goodâ. Such association rules are extractable from RDBMS data or semantic web data.37
Context Based Association Rules is a form of association rule. Context Based Association Rules claims more accuracy in association rule mining by considering a hidden variable named context variable which changes the final set of association rules depending upon the value of context variables. For example the baskets orientation in market basket analysis reflects an odd pattern in the early days of month.This might be because of abnormal context i.e. salary is drawn at the start of the month 38
Contrast set learning is a form of associative learning. Contrast set learners use rules that differ meaningfully in their distribution across subsets.3940
Weighted class learning is another form of associative learning in which weight may be assigned to classes to give focus to a particular issue of concern for the consumer of the data mining results.
High-order pattern discovery facilitate the capture of high-order (polythetic) patterns or event associations that are intrinsic to complex real-world data. 41
K-optimal pattern discovery provides an alternative to the standard approach to association rule learning that requires that each pattern appear frequently in the data.
Approximate Frequent Itemset mining is a relaxed version of Frequent Itemset mining that allows some of the items in some of the rows to be 0.42
Generalized Association Rules hierarchical taxonomy (concept hierarchy)
Quantitative Association Rules categorical and quantitative data 43
Interval Data Association Rules e.g. partition the age into 5-year-increment ranged
Maximal Association Rules
'''Sequential pattern mining ''' discovers subsequences that are common to more than minsup sequences in a sequence database, where minsup is set by the user. A sequence is an ordered list of transactions.44
Sequential Rules discovering relationships between items while considering the time ordering. It is generally applied on a sequence database. For example, a sequential rule found in database of sequences of customer transactions can be that customers who bought a computer and CD-Roms, later bought a webcam, with a given confidence and support.
'''Warmr '''is shipped as part of the ACE data mining suite. It allows association rule learning for first order relational rules.45
See also

Sequence mining
Production system (computer science)

References
External links
Bibliographies

Extensive Bibliography on Association Rules by J.M. Luna
Annotated Bibliography on Association Rules by M. Hahsler
Statsoft Electronic Statistics Textbook: Association Rules by Dell Software

Implementations

Open-Source data-mining suites


Christian Borgelt's implementations of Apriori, FP-Growth and Eclat written in C with Python bindings.
ELKI includes Java implementations of Apriori, Eclat and FPGrowth.
Orange module orngAssoc.
R package arules for mining association rules and frequent itemsets.
SPMF offers many open-source implementations for association rule mining, itemset mining and sequential pattern mining.
Weka, a collection of machine learning algorithms for data mining tasks written in Java


Academic example code


ARtool, GPL Java association rule mining application with GUI, offering implementations of multiple algorithms for discovery of frequent patterns and extraction of association rules (includes Apriori and FPgrowth, last updated 2002)
Bart Goethals' frequent pattern mining implementations
Ferda Dataminer, an extensible visual data mining platform, implements GUHA procedures ASSOC and features multirelational data mining
Frequent Itemset Mining Implementations Repository (FIMI)
Java implementations of association rule mining algorithms by KDIS
Ruby implementation (AI4R)
Zaki, Mohammed J.; Data Mining Software


Commercial offers


KNIME, an open source workflow oriented data preprocessing and analysis platform
KXEN, a commercial Data Mining software
LISp Miner, mines for generalized (GUHA) association rules (uses bitstrings, not apriori algorithm)
Magnum Opus, a system for statistically sound association discovery
RapidMiner, a Java data mining software suite
STATISTICA, commercial statistics software with an Association Rules module

"
Category:Data management Category:Data mining



Piatetsky-Shapiro, Gregory (1991), Discovery, analysis, and presentation of strong rules, in Piatetsky-Shapiro, Gregory; and Frawley, William J.; eds., Knowledge Discovery in Databases, AAAI/MIT Press, Cambridge, MA.


Michael Hahsler (2015). A Probabilistic Comparison of Commonly Used Interest Measures for Association Rules. http://michael.hahsler.net/research/association_rules/measures.html



Pei, Jian; Han, Jiawei; and Lakshmanan, Laks V. S.; Mining frequent itemsets with convertible constraints, in Proceedings of the 17th International Conference on Data Engineering, April 2â6, 2001, Heidelberg, Germany, 2001, pages 433-442
Agrawal, Rakesh; and Srikant, Ramakrishnan; Fast algorithms for mining association rules in large databases, in Bocca, Jorge B.; Jarke, Matthias; and Zaniolo, Carlo; editors, Proceedings of the 20th International Conference on Very Large Data Bases (VLDB), Santiago, Chile, September 1994, pages 487-499


HÃ¡jek, Petr; Havel, Ivan; Chytil, MetodÄj; The GUHA method of automatic hypotheses determination, Computing 1 (1966) 293-308
HÃ¡jek, Petr; Feglar, Tomas; Rauch, Jan; and Coufal, David; The GUHA method, data preprocessing and mining, Database Support for Data Mining Applications, Springer, 2004, ISBN 978-3-540-22479-2
Omiecinski, Edward R.; Alternative interest measures for mining associations in databases, IEEE Transactions on Knowledge and Data Engineering, 15(1):57-69, Jan/Feb 2003
Aggarwal, Charu C.; and Yu, Philip S.; A new framework for itemset generation, in PODS 98, Symposium on Principles of Database Systems, Seattle, WA, USA, 1998, pages 18-24
Brin, Sergey; Motwani, Rajeev; Ullman, Jeffrey D.; and Tsur, Shalom; Dynamic itemset counting and implication rules for market basket data, in SIGMOD 1997, Proceedings of the ACM SIGMOD International Conference on Management of Data (SIGMOD 1997), Tucson, Arizona, USA, May 1997, pp. 255-264
Piatetsky-Shapiro, Gregory; Discovery, analysis, and presentation of strong rules, Knowledge Discovery in Databases, 1991, pp. 229-248
Brin, Sergey; Motwani, Rajeev; Ullman, Jeffrey D.; and Tsur, Shalom; Dynamic itemset counting and implication rules for market basket data, in SIGMOD 1997, Proceedings of the ACM SIGMOD International Conference on Management of Data (SIGMOD 1997), Tucson, Arizona, USA, May 1997, pp. 265-276
Tan, Pang-Ning; Kumar, Vipin; and Srivastava, Jaideep; Selecting the right objective measure for association analysis, Information Systems, 29(4):293-313, 2004
Webb, Geoffrey I. (2007); Discovering Significant Patterns, Machine Learning 68(1), Netherlands: Springer, pp. 1-33 online access
Gionis, Aristides; Mannila, Heikki; MielikÃ¤inen, Taneli; and Tsaparas, Panayiotis; Assessing Data Mining Results via Swap Randomization, ACM Transactions on Knowledge Discovery from Data (TKDD), Volume 1, Issue 3 (December 2007), Article No. 14


Witten, Frank, Hall: Data mining practical machine learning tools and techniques, 3rd edition




Rauch, Jan; Logical calculi for knowledge discovery in databases, in Proceedings of the First European Symposium on Principles of Data Mining and Knowledge Discovery, Springer, 1997, pp. 47-57

Webb, Geoffrey I. (1995); OPUS: An Efficient Admissible Algorithm for Unordered Search, Journal of Artificial Intelligence Research 3, Menlo Park, CA: AAAI Press, pp. 431-465 online access


Webb, Geoffrey I. (2000); Efficient Search for Association Rules, in Ramakrishnan, Raghu; and Stolfo, Sal; eds.; Proceedings of the Sixth ACM SIGKDD International Conference on Knowledge Discovery and Data Mining (KDD-2000), Boston, MA, New York, NY: The Association for Computing Machinery, pp. 99-107 online access
http://www.dssresources.com/newsletters/66.php

Ramezani, Reza, Mohamad Saraee, and Mohammad Ali Nematbakhsh; MRAR: Mining Multi-Relation Association Rules, Journal of Computing and Security, 1, no. 2 (2014)
Shaheen, M; Shahbaz, M; and Guergachi, A; Context Based Positive and Negative Spatio Temporal Association Rule Mining, Elsevier Knowledge-Based Systems, Jan 2013, pp. 261-273

Menzies, Tim; and Hu, Ying; Data Mining for Very Busy People, IEEE Computer, October 2003, pp. 18-25

Jinze Liu, Susan Paulsen, Xing Sun, Wei Wang, Andrew Nobel, J. P. (2006). Mining approximate frequent itemsets in the presence of noise: Algorithm and analysis. Retrieved from http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.62.3805

Zaki, Mohammed J. (2001); SPADE: An Efficient Algorithm for Mining Frequent Sequences, Machine Learning Journal, 42, pp. 31â60





