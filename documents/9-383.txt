   Halley's method      Halley's method   In numerical analysis , Halley’s method is a root-finding algorithm used for functions of one real variable with a continuous second derivative, i.e., C 2 functions. It is named after its inventor Edmond Halley .  The algorithm is second in the class of Householder's methods , right after Newton's method . Like the latter, it produces iteratively a sequence of approximations to the root; their rate of convergence to the root is cubic. Multidimensional versions of this method exist.  Halley's method can be viewed as exactly finding the roots of a linear-over-linear Padé approximation to the function, in contrast to Newton's method / Secant method (approximates/ interpolates the function linearly) or Cauchy's method / Muller's method (approximates/interpolates the function quadratically). 1  Method  Halley’s method is a numerical algorithm for solving the nonlinear equation f ( x ) = 0. In this case, the function f has to be a function of one real variable. The method consists of a sequence of iterations:       x   n  +  1    =    x  n   -    2  f   (   x  n   )    f  ′    (   x  n   )      2    [    f  ′    (   x  n   )    ]   2    -   f   (   x  n   )    f  ′′    (   x  n   )            subscript  x    n  1       subscript  x  n       2  f   subscript  x  n    superscript  f  normal-′    subscript  x  n        2   superscript   delimited-[]     superscript  f  normal-′    subscript  x  n     2      f   subscript  x  n    superscript  f  ′′    subscript  x  n         x_{n+1}=x_{n}-\frac{2f(x_{n})f^{\prime}(x_{n})}{2{[f^{\prime}(x_{n})]}^{2}-f(x%
 _{n})f^{\prime\prime}(x_{n})}     beginning with an initial guess x 0 .  If f is a three times continuously differentiable function and a is a zero of f but not of its derivative, then, in a neighborhood of a , the iterates x n satisfy:        |    x   n  +  1    -  a   |   ≤   K  ⋅    |    x  n   -  a   |   3     ,    for some  K   >  0.      formulae-sequence         subscript  x    n  1    a     normal-⋅  K   superscript       subscript  x  n   a    3         for some  K   0.     |x_{n+1}-a|\leq K\cdot{|x_{n}-a|}^{3},\text{ for some }K>0.     This means that the iterates converge to the zero if the initial guess is sufficiently close, and that the convergence is cubic.  The following alternative formulation shows the similarity between Halley’s method and Newton’s method. The expression      f   (   x  n   )    /   f  ′     (   x  n   )           f   subscript  x  n     superscript  f  normal-′     subscript  x  n     f(x_{n})/f^{\prime}(x_{n})   is computed only once, and it is particularly useful when       f  ′′    (   x  n   )    /   f  ′     (   x  n   )            superscript  f  ′′    subscript  x  n     superscript  f  normal-′     subscript  x  n     f^{\prime\prime}(x_{n})/f^{\prime}(x_{n})   can be simplified.       x   n  +  1    =    x  n   -     f   (   x  n   )      f  ′    (   x  n   )       [   1  -     f   (   x  n   )      f  ′    (   x  n   )     ⋅     f  ′′    (   x  n   )     2   f  ′    (   x  n   )       ]    -  1           subscript  x    n  1       subscript  x  n         f   subscript  x  n       superscript  f  normal-′    subscript  x  n      superscript   delimited-[]    1   normal-⋅      f   subscript  x  n       superscript  f  normal-′    subscript  x  n          superscript  f  ′′    subscript  x  n      2   superscript  f  normal-′    subscript  x  n          1        x_{n+1}=x_{n}-\frac{f(x_{n})}{f^{\prime}(x_{n})}\left[1-\frac{f(x_{n})}{f^{%
 \prime}(x_{n})}\cdot\frac{f^{\prime\prime}(x_{n})}{2f^{\prime}(x_{n})}\right]^%
 {-1}     A further alternative is as below, in which case the technique is sometimes referred to as Bailey’s method . 2       x   n  +  1    =    x  n   -    f   (   x  n   )       f  ′    (   x  n   )    -    f   (   x  n   )    f  ′′    (   x  n   )     2   f  ′    (   x  n   )             subscript  x    n  1       subscript  x  n       f   subscript  x  n         superscript  f  normal-′    subscript  x  n        f   subscript  x  n    superscript  f  ′′    subscript  x  n      2   superscript  f  normal-′    subscript  x  n          x_{n+1}=x_{n}-\frac{f(x_{n})}{f^{\prime}(x_{n})-\frac{f(x_{n})f^{\prime\prime}%
 (x_{n})}{2f^{\prime}(x_{n})}}     Using any variation, when the second derivative is very close to zero, the iteration is almost the same as under Newton’s method.  Derivation  Consider the function        g   (  x  )    =    f   (  x  )      |    f  ′    (  x  )    |      .        g  x       f  x          superscript  f  normal-′   x        g(x)=\frac{f(x)}{\sqrt{|f^{\prime}(x)|}}.     Any root of f which is not a root of its derivative is a root of g ; and any root of g is a root of f . Applying Newton's method to g gives       x   n  +  1    =    x  n   -    g   (   x  n   )      g  ′    (   x  n   )           subscript  x    n  1       subscript  x  n       g   subscript  x  n       superscript  g  normal-′    subscript  x  n        x_{n+1}=x_{n}-\frac{g(x_{n})}{g^{\prime}(x_{n})}     with         g  ′    (  x  )    =     2    [    f  ′    (  x  )    ]   2    -   f   (  x  )    f  ′′    (  x  )      2   f  ′    (  x  )     |    f  ′    (  x  )    |       ,         superscript  g  normal-′   x         2   superscript   delimited-[]     superscript  f  normal-′   x    2      f  x   superscript  f  ′′   x      2   superscript  f  normal-′   x         superscript  f  normal-′   x         g^{\prime}(x)=\frac{2[f^{\prime}(x)]^{2}-f(x)f^{\prime\prime}(x)}{2f^{\prime}(%
 x)\sqrt{|f^{\prime}(x)|}},     and the result follows. Notice that if f ′( c ) = 0, then one cannot apply this at c because g ( c ) would be undefined.  Cubic convergence  Suppose a is a root of f but not of its derivative. And suppose that the third derivative of f exists and is continuous in a neighborhood of a and x n is in that neighborhood. Then Taylor's theorem implies:      0  =   f   (  a  )    =    f   (   x  n   )    +    f  ′    (   x  n   )    (   a  -   x  n    )    +      f  ′′    (   x  n   )    2     (   a  -   x  n    )   2    +      f  ′′′    (  ξ  )    6     (   a  -   x  n    )   3           0    f  a            f   subscript  x  n       superscript  f  normal-′    subscript  x  n     a   subscript  x  n            superscript  f  ′′    subscript  x  n    2    superscript    a   subscript  x  n    2           superscript  f  ′′′   ξ   6    superscript    a   subscript  x  n    3        0=f(a)=f(x_{n})+f^{\prime}(x_{n})(a-x_{n})+\frac{f^{\prime\prime}(x_{n})}{2}(a%
 -x_{n})^{2}+\frac{f^{\prime\prime\prime}(\xi)}{6}(a-x_{n})^{3}     and also       0  =   f   (  a  )    =    f   (   x  n   )    +    f  ′    (   x  n   )    (   a  -   x  n    )    +      f  ′′    (  η  )    2     (   a  -   x  n    )   2      ,        0    f  a            f   subscript  x  n       superscript  f  normal-′    subscript  x  n     a   subscript  x  n            superscript  f  ′′   η   2    superscript    a   subscript  x  n    2        0=f(a)=f(x_{n})+f^{\prime}(x_{n})(a-x_{n})+\frac{f^{\prime\prime}(\eta)}{2}(a-%
 x_{n})^{2},     where ξ and η are numbers lying between a and x n . Multiply the first equation by    2   f  ′    (   x  n   )       2   superscript  f  normal-′    subscript  x  n     2f^{\prime}(x_{n})   and subtract from it the second equation times     f  ′′    (   x  n   )    (   a  -   x  n    )        superscript  f  ′′    subscript  x  n     a   subscript  x  n      f^{\prime\prime}(x_{n})(a-x_{n})   to give:     0   0   \displaystyle 0     Canceling     f  ′    (   x  n   )    f  ′′    (   x  n   )     (   a  -   x  n    )   2        superscript  f  normal-′    subscript  x  n    superscript  f  ′′    subscript  x  n    superscript    a   subscript  x  n    2     f^{\prime}(x_{n})f^{\prime\prime}(x_{n})(a-x_{n})^{2}   and re-organizing terms yields:       0  =    2  f   (   x  n   )    f  ′    (   x  n   )    +    (    2    [    f  ′    (   x  n   )    ]   2    -   f   (   x  n   )    f  ′′    (   x  n   )     )    (   a  -   x  n    )    +    (      f  ′    (   x  n   )    f  ′′′    (  ξ  )    3   -     f  ′′    (   x  n   )    f  ′′    (  η  )    2    )     (   a  -   x  n    )   3      .      0      2  f   subscript  x  n    superscript  f  normal-′    subscript  x  n          2   superscript   delimited-[]     superscript  f  normal-′    subscript  x  n     2      f   subscript  x  n    superscript  f  ′′    subscript  x  n       a   subscript  x  n              superscript  f  normal-′    subscript  x  n    superscript  f  ′′′   ξ   3        superscript  f  ′′    subscript  x  n    superscript  f  ′′   η   2     superscript    a   subscript  x  n    3       0=2f(x_{n})f^{\prime}(x_{n})+\left(2[f^{\prime}(x_{n})]^{2}-f(x_{n})f^{\prime%
 \prime}(x_{n})\right)(a-x_{n})+\left(\frac{f^{\prime}(x_{n})f^{\prime\prime%
 \prime}(\xi)}{3}-\frac{f^{\prime\prime}(x_{n})f^{\prime\prime}(\eta)}{2}\right%
 )(a-x_{n})^{3}.     Put the second term on the left side and divide through by       2    [    f  ′    (   x  n   )    ]   2    -   f   (   x  n   )    f  ′′    (   x  n   )          2   superscript   delimited-[]     superscript  f  normal-′    subscript  x  n     2      f   subscript  x  n    superscript  f  ′′    subscript  x  n      2[f^{\prime}(x_{n})]^{2}-f(x_{n})f^{\prime\prime}(x_{n})     to get:        a  -   x  n    =     -   2  f   (   x  n   )    f  ′    (   x  n   )       2    [    f  ′    (   x  n   )    ]   2    -   f   (   x  n   )    f  ′′    (   x  n   )      -      2   f  ′    (   x  n   )    f  ′′′    (  ξ  )    -   3   f  ′′    (   x  n   )    f  ′′    (  η  )      6   (    2    [    f  ′    (   x  n   )    ]   2    -   f   (   x  n   )    f  ′′    (   x  n   )     )       (   a  -   x  n    )   3      .        a   subscript  x  n            2  f   subscript  x  n    superscript  f  normal-′    subscript  x  n         2   superscript   delimited-[]     superscript  f  normal-′    subscript  x  n     2      f   subscript  x  n    superscript  f  ′′    subscript  x  n              2   superscript  f  normal-′    subscript  x  n    superscript  f  ′′′   ξ     3   superscript  f  ′′    subscript  x  n    superscript  f  ′′   η      6      2   superscript   delimited-[]     superscript  f  normal-′    subscript  x  n     2      f   subscript  x  n    superscript  f  ′′    subscript  x  n        superscript    a   subscript  x  n    3       a-x_{n}=\frac{-2f(x_{n})f^{\prime}(x_{n})}{2[f^{\prime}(x_{n})]^{2}-f(x_{n})f^%
 {\prime\prime}(x_{n})}-\frac{2f^{\prime}(x_{n})f^{\prime\prime\prime}(\xi)-3f^%
 {\prime\prime}(x_{n})f^{\prime\prime}(\eta)}{6(2[f^{\prime}(x_{n})]^{2}-f(x_{n%
 })f^{\prime\prime}(x_{n}))}(a-x_{n})^{3}.     Thus:        a  -   x   n  +  1     =   -      2   f  ′    (   x  n   )    f  ′′′    (  ξ  )    -   3   f  ′′    (   x  n   )    f  ′′    (  η  )       12    [    f  ′    (   x  n   )    ]   2    -   6  f   (   x  n   )    f  ′′    (   x  n   )        (   a  -   x  n    )   3      .        a   subscript  x    n  1               2   superscript  f  normal-′    subscript  x  n    superscript  f  ′′′   ξ     3   superscript  f  ′′    subscript  x  n    superscript  f  ′′   η        12   superscript   delimited-[]     superscript  f  normal-′    subscript  x  n     2      6  f   subscript  x  n    superscript  f  ′′    subscript  x  n       superscript    a   subscript  x  n    3       a-x_{n+1}=-\frac{2f^{\prime}(x_{n})f^{\prime\prime\prime}(\xi)-3f^{\prime%
 \prime}(x_{n})f^{\prime\prime}(\eta)}{12[f^{\prime}(x_{n})]^{2}-6f(x_{n})f^{%
 \prime\prime}(x_{n})}(a-x_{n})^{3}.     The limit of the coefficient on the right side as is:       -     2   f  ′    (  a  )    f  ′′′    (  a  )    -   3   f  ′′    (  a  )    f  ′′    (  a  )      12    [    f  ′    (  a  )    ]   2      .            2   superscript  f  normal-′   a   superscript  f  ′′′   a     3   superscript  f  ′′   a   superscript  f  ′′   a      12   superscript   delimited-[]     superscript  f  normal-′   a    2       -\frac{2f^{\prime}(a)f^{\prime\prime\prime}(a)-3f^{\prime\prime}(a)f^{\prime%
 \prime}(a)}{12[f^{\prime}(a)]^{2}}.     If we take K to be a little larger than the absolute value of this, we can take absolute values of both sides of the formula and replace the absolute value of coefficient by its upper bound near a to get:       |   a  -   x   n  +  1     |   ≤   K    |   a  -   x  n    |   3            a   subscript  x    n  1        K   superscript      a   subscript  x  n     3      |a-x_{n+1}|\leq K|a-x_{n}|^{3}     which is what was to be proved.  To summarize,         Δ   x   i  +  1     =       3    (   f  ′′   )   2    -   2   f  ′    f  ′′′      12    (   f  ′   )   2       (   Δ   x  i    )   3    +   O    [   Δ   x  i    ]   4      ,    Δ   x  i    ≜    x  i   -  a     .     formulae-sequence      normal-Δ   subscript  x    i  1               3   superscript   superscript  f  ′′   2      2   superscript  f  normal-′    superscript  f  ′′′       12   superscript   superscript  f  normal-′   2      superscript    normal-Δ   subscript  x  i    3      O   superscript   delimited-[]    normal-Δ   subscript  x  i     4       normal-≜    normal-Δ   subscript  x  i       subscript  x  i   a      \Delta x_{i+1}=\frac{3(f^{\prime\prime})^{2}-2f^{\prime}f^{\prime\prime\prime}%
 }{12(f^{\prime})^{2}}(\Delta x_{i})^{3}+O[\Delta x_{i}]^{4},\qquad\Delta x_{i}%
 \triangleq x_{i}-a.     References  Notes    Sources   T.R. Scavo and J.B. Thoo, On the geometry of Halley’s method. American Mathematical Monthly , 102 :5 (1995), pp. 417–426. 1  This article began as a translation from [ http://fr.wikipedia.org/w/index.php?title=Itération_de_Halley&oldid; ;=11673690 the equivalent article in French Wikipedia], retrieved 22 January 2007.  Proinov, P. D., Ivanov, S. I. On the Convergence of Halley’s Method for Multiple Polynomial Zeros, Mediterranean Journal of Mathematics .   External links    Halley's Method by John H. Mathews  Halley's Method by P. J. Acklam  Newton's method and high order iterations , Pascal Sebah and Xavier Gourdon, 2001 (the site has a link to a Postscript version for better formula display)   "  Category:Root-finding algorithms     ↩  See for example the Bond Exchange of South Africa ’s Bond Pricing Formula Specifications , where Bailey’s method is suggested when solving for a bond’s  Yield to maturity . ↩     