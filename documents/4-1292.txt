   Analytic combinatorics      Analytic combinatorics   In mathematics, analytic combinatorics is one of the many techniques of counting combinatorial objects . It uses the internal structure of the objects to derive formulas for their generating functions and then complex analysis techniques to get asymptotics. This particular theory was mostly developed by Philippe Flajolet , and is detailed in his book with Robert Sedgewick , Analytic Combinatorics . Earlier contributors to the key ideas and techniques include Leonhard Euler , Arthur Cayley , Srinivasa Ramanujan , George Pólya , and Donald Knuth .  Classes of combinatorial structures  Consider the problem of distributing objects given by a generating function into a set of n slots, where a permutation group G of degree n acts on the slots to create an equivalence relation of filled slot configurations, and asking about the generating function of the configurations by weight of the configurations with respect to this equivalence relation, where the weight of a configuration is the sum of the weights of the objects in the slots. We will first explain how to solve this problem in the labelled and the unlabelled case and use the solution to motivate the creation of classes of combinatorial structures .  The Pólya enumeration theorem solves this problem in the unlabelled case. Let f ( z ) be the ordinary generating function (OGF) of the objects, then the OGF of the configurations is given by the substituted cycle index       Z   (  G  )    (   f   (  z  )    ,   f   (   z  2   )    ,  …  ,   f   (   z  n   )    )    .      Z  G     f  z     f   superscript  z  2    normal-…    f   superscript  z  n       Z(G)(f(z),f(z^{2}),\ldots,f(z^{n})).\,     In the labelled case we use an exponential generating function (EGF) g ( z ) of the objects and apply the Labelled enumeration theorem , which says that the EGF of the configurations is given by        g    (  z  )   n     |  G  |    .        g   superscript  z  n      G     \frac{g(z)^{n}}{|G|}.     We are able to enumerate filled slot configurations using either PET in the unlabelled case or the labelled enumeration theorem in the labelled case. We now ask about the generating function of configurations obtained when there is more than one set of slots, with a permutation group acting on each. Clearly the orbits do not intersect and we may add the respective generating functions. Suppose, for example, that we want to enumerate unlabelled sequences of length two or three of some objects contained in a set X . There are two sets of slots, the first one containing two slots, and the second one, three slots. The group acting on the first set is    E  2     subscript  E  2    E_{2}   , and on the second slot,    E  3     subscript  E  3    E_{3}   . We represent this by the following formal power series in X :        X  2   /    E  2     +    X  3   /   E  3           superscript  X  2    subscript  E  2       superscript  X  3    subscript  E  3      X^{2}/E_{2}\;+\;X^{3}/E_{3}     where the term     X  n   /  G       superscript  X  n   G    X^{n}/G   is used to denote the set of orbits under G and     X  n   =   X  ×  …  ×  X        superscript  X  n     X  normal-…  X     X^{n}=X\times\ldots\times X   , which denotes in the obvious way the process of distributing the objects from X with repetition into the n slots. Similarly, consider the labelled problem of creating cycles of arbitrary length from a set of labelled objects X . This yields the following series of actions of cyclic groups:        X  /    C  1     +    X  2   /    C  2     +    X  3   /    C  3     +    X  4   /    C  4     +  ⋯   .        X   subscript  C  1       superscript  X  2    subscript  C  2       superscript  X  3    subscript  C  3       superscript  X  4    subscript  C  4    normal-⋯    X/C_{1}\;+\;X^{2}/C_{2}\;+\;X^{3}/C_{3}\;+\;X^{4}/C_{4}\;+\cdots.     Clearly we can assign meaning to any such power series of quotients (orbits) with respect to permutation groups, where we restrict the groups of degree n to the conjugacy classes    Cl   (   S  n   )      Cl   subscript  S  n     \operatorname{Cl}(S_{n})   of the symmetric group    S  n     subscript  S  n    S_{n}   , which form a unique factorization domain. (The orbits with respect to two groups from the same conjugacy class are isomorphic.) This motivates the following definition.  A class    𝒞  ∈   ℕ   [  𝔄  ]        𝒞    ℕ   delimited-[]  𝔄      \mathcal{C}\in\mathbb{N}[\mathfrak{A}]   of combinatorial structures is a formal series      𝒞  =    ∑   n  ≥  1      ∑   G  ∈   Cl   (   S  n   )        c  G    (    X  n   /  G   )          𝒞    subscript     n  1      subscript     G   Cl   subscript  S  n         subscript  c  G      superscript  X  n   G        \mathcal{C}=\sum_{n\geq 1}\sum_{G\in\operatorname{Cl}(S_{n})}c_{G}(X^{n}/G)   where   𝔄   𝔄   \mathfrak{A}   (the "A" is for "atoms") is the set of primes of the UFD     {   Cl   (   S  n   )    }    n  ≥  1      subscript    Cl   subscript  S  n       n  1     \{\operatorname{Cl}(S_{n})\}_{n\geq 1}   and      c  G   ∈  ℕ   .       subscript  c  G   ℕ    c_{G}\in\mathbb{N}.     In the following we will simplify our notation a bit and write e.g.        E  2   +    E  3   and   C  1    +   C  2   +   C  3   +  ⋯   .       subscript  E  2      subscript  E  3   and   subscript  C  1     subscript  C  2    subscript  C  3   normal-⋯    E_{2}+E_{3}\mbox{ and }C_{1}+C_{2}+C_{3}+\cdots.     for the classes mentioned above.  The Flajolet–Sedgewick fundamental theorem  A theorem in the Flajolet–Sedgewick theory of symbolic combinatorics treats the enumeration problem of labelled and unlabelled combinatorial classes by means of the creation of symbolic operators that make it possible to translate equations involving combinatorial structures directly (and automatically) into equations in the generating functions of these structures.  Let    𝒞  ∈   ℕ   [  𝔄  ]        𝒞    ℕ   delimited-[]  𝔄      \mathcal{C}\in\mathbb{N}[\mathfrak{A}]   be a class of combinatorial structures. The OGF    F   (  z  )       F  z    F(z)   of    𝒞   (  X  )       𝒞  X    \mathcal{C}(X)   where X has OGF    f   (  z  )       f  z    f(z)   and the EGF    G   (  z  )       G  z    G(z)   of    𝒞   (  X  )       𝒞  X    \mathcal{C}(X)   where X is labelled with EGF    g   (  z  )       g  z    g(z)   are given by       F   (  z  )    =    ∑   n  ≥  1      ∑   G  ∈   Cl   (   S  n   )        c  G   Z   (  G  )    (   f   (  z  )    ,   f   (   z  2   )    ,  …  ,   f   (   z  n   )    )            F  z     subscript     n  1      subscript     G   Cl   subscript  S  n         subscript  c  G   Z  G     f  z     f   superscript  z  2    normal-…    f   superscript  z  n          F(z)=\sum_{n\geq 1}\sum_{G\in\operatorname{Cl}(S_{n})}c_{G}Z(G)(f(z),f(z^{2}),%
 \ldots,f(z^{n}))     and        G   (  z  )    =    ∑   n  ≥  1      (    ∑   G  ∈   Cl   (   S  n   )        c  G    |  G  |     )   g    (  z  )   n      .        G  z     subscript     n  1        subscript     G   Cl   subscript  S  n         subscript  c  G     G     g   superscript  z  n       G(z)=\sum_{n\geq 1}\left(\sum_{G\in\operatorname{Cl}(S_{n})}\frac{c_{G}}{|G|}%
 \right)g(z)^{n}.     In the labelled case we have the additional requirement that X not contain elements of size zero. It will sometimes prove convenient to add one to    G   (  z  )       G  z    G(z)   to indicate the presence of one copy of the empty set. It is possible to assign meaning to both    𝒞  ∈   ℤ   [  𝔄  ]        𝒞    ℤ   delimited-[]  𝔄      \mathcal{C}\in\mathbb{Z}[\mathfrak{A}]   (the most common example is the case of unlabelled sets) and     𝒞  ∈   ℚ   [  𝔄  ]     .      𝒞    ℚ   delimited-[]  𝔄      \mathcal{C}\in\mathbb{Q}[\mathfrak{A}].   To prove the theorem simply apply PET (Pólya enumeration theorem) and the labelled enumeration theorem.  The power of this theorem lies in the fact that it makes it possible to construct operators on generating functions that represent combinatorial classes. A structural equation between combinatorial classes thus translates directly into an equation in the corresponding generating functions. Moreover in the labelled case it is evident from the formula that we may replace    g   (  z  )       g  z    g(z)   by the atom z and compute the resulting operator, which may then be applied to EGFs. We now proceed to construct the most important operators. The reader may wish to compare with the data on the cycle index page.  The sequence operator   𝔖   𝔖   \mathfrak{S}     This operator corresponds to the class      1  +   E  1   +   E  2   +   E  3   +   ⋯       1   subscript  E  1    subscript  E  2    subscript  E  3   normal-⋯    1+E_{1}+E_{2}+E_{3}+\cdots\,     and represents sequences, i.e. the slots are not being permuted and there is exactly one empty sequence. We have       F   (  z  )    =   1  +    ∑   n  ≥  1     Z   (   E  n   )    (   f   (  z  )    ,   f   (   z  2   )    ,  …  ,   f   (   z  n   )    )      =   1  +    ∑   n  ≥  1     f    (  z  )   n      =   1   1  -   f   (  z  )              F  z     1    subscript     n  1      Z   subscript  E  n      f  z     f   superscript  z  2    normal-…    f   superscript  z  n               1    subscript     n  1      f   superscript  z  n             1    1    f  z        F(z)=1+\sum_{n\geq 1}Z(E_{n})(f(z),f(z^{2}),\ldots,f(z^{n}))=1+\sum_{n\geq 1}f%
 (z)^{n}=\frac{1}{1-f(z)}     and        G   (  z  )    =   1  +    ∑   n  ≥  1      (   1   |   E  n   |    )   g    (  z  )   n      =   1   1  -   g   (  z  )       .          G  z     1    subscript     n  1        1     subscript  E  n     g   superscript  z  n             1    1    g  z        G(z)=1+\sum_{n\geq 1}\left(\frac{1}{|E_{n}|}\right)g(z)^{n}=\frac{1}{1-g(z)}.     The cycle operator   ℭ   ℭ   \mathfrak{C}     This operator corresponds to the class       C  1   +   C  2   +   C  3   +   ⋯        subscript  C  1    subscript  C  2    subscript  C  3   normal-⋯    C_{1}+C_{2}+C_{3}+\cdots\,     i.e., cycles containing at least one object. We have       F   (  z  )    =    ∑   n  ≥  1     Z   (   C  n   )    (   f   (  z  )    ,   f   (   z  2   )    ,  …  ,   f   (   z  n   )    )     =    ∑   n  ≥  1      1  n     ∑   d  |  n     φ   (  d  )   f    (   z  d   )    n  /  d                F  z     subscript     n  1      Z   subscript  C  n      f  z     f   superscript  z  2    normal-…    f   superscript  z  n              subscript     n  1        1  n     subscript    fragments  d  normal-|  n      φ  d  f   superscript   superscript  z  d     n  d           F(z)=\sum_{n\geq 1}Z(C_{n})(f(z),f(z^{2}),\ldots,f(z^{n}))=\sum_{n\geq 1}\frac%
 {1}{n}\sum_{d|n}\varphi(d)f(z^{d})^{n/d}     or       F   (  z  )    =    ∑   k  ≥  1     φ   (  k  )     ∑   m  ≥  1      1   k  m    f    (   z  k   )   m       =    ∑   k  ≥  1       φ   (  k  )    k    log   1   1  -   f   (   z  k   )                 F  z     subscript     k  1      φ  k    subscript     m  1        1    k  m    f   superscript   superscript  z  k   m              subscript     k  1          φ  k   k       1    1    f   superscript  z  k            F(z)=\sum_{k\geq 1}\varphi(k)\sum_{m\geq 1}\frac{1}{km}f(z^{k})^{m}=\sum_{k%
 \geq 1}\frac{\varphi(k)}{k}\log\frac{1}{1-f(z^{k})}     and        G   (  z  )    =    ∑   n  ≥  1      (   1   |   C  n   |    )   g    (  z  )   n     =   log   1   1  -   g   (  z  )        .          G  z     subscript     n  1        1     subscript  C  n     g   superscript  z  n              1    1    g  z         G(z)=\sum_{n\geq 1}\left(\frac{1}{|C_{n}|}\right)g(z)^{n}=\log\frac{1}{1-g(z)}.     This operator, together with the set operator   𝔓   𝔓   \mathfrak{P}   , and their restrictions to specific degrees are used to compute random permutation statistics . There are two useful restrictions of this operator, namely to even and odd cycles.  The labelled even cycle operator    ℭ  even     subscript  ℭ  even    \mathfrak{C}_{\operatorname{even}}   is       C  2   +   C  4   +   C  6   +   ⋯        subscript  C  2    subscript  C  4    subscript  C  6   normal-⋯    C_{2}+C_{4}+C_{6}+\cdots\,     which yields        G   (  z  )    =    ∑   n  ≥  1      (   1   |   C   2  n    |    )   g    (  z  )    2  n      =    1  2    log   1   1  -   g    (  z  )   2         .          G  z     subscript     n  1        1     subscript  C    2  n      g   superscript  z    2  n               1  2       1    1    g   superscript  z  2           G(z)=\sum_{n\geq 1}\left(\frac{1}{|C_{2n}|}\right)g(z)^{2n}=\frac{1}{2}\log%
 \frac{1}{1-g(z)^{2}}.     This implies that the labelled odd cycle operator    ℭ  odd     subscript  ℭ  odd    \mathfrak{C}_{\operatorname{odd}}          C  1   +   C  3   +   C  5   +  ⋯       subscript  C  1    subscript  C  3    subscript  C  5   normal-⋯    C_{1}+C_{3}+C_{5}+\cdots     is given by        G   (  z  )    =    log   1   1  -   g   (  z  )       -    1  2    log   1   1  -   g    (  z  )   2         =    1  2    log    1  +   g   (  z  )      1  -   g   (  z  )         .          G  z         1    1    g  z          1  2       1    1    g   superscript  z  2                  1  2         1    g  z      1    g  z          G(z)=\log\frac{1}{1-g(z)}-\frac{1}{2}\log\frac{1}{1-g(z)^{2}}=\frac{1}{2}\log%
 \frac{1+g(z)}{1-g(z)}.     The multiset/set operator    𝔐  /  𝔓      𝔐  𝔓    \mathfrak{M}/\mathfrak{P}     The series is      1  +   S  1   +   S  2   +   S  3   +   ⋯       1   subscript  S  1    subscript  S  2    subscript  S  3   normal-⋯    1+S_{1}+S_{2}+S_{3}+\cdots\,     i.e., the symmetric group is applied to the slots. This creates multisets in the unlabelled case and sets in the labelled case (there are no multisets in the labelled case because the labels distinguish multiple instances of the same object from the set being put into different slots). We include the empty set in both the labelled and the unlabelled case.  The unlabelled case is done using the function       M   (   f   (  z  )    ,  y  )    =    ∑   n  ≥  0      y  n   Z   (   S  n   )    (   f   (  z  )    ,   f   (   z  2   )    ,  …  ,   f   (   z  n   )    )           M     f  z   y      subscript     n  0       superscript  y  n   Z   subscript  S  n      f  z     f   superscript  z  2    normal-…    f   superscript  z  n         M(f(z),y)=\sum_{n\geq 0}y^{n}Z(S_{n})(f(z),f(z^{2}),\ldots,f(z^{n}))     so that        𝔐   (   f   (  z  )    )    =   M   (   f   (  z  )    ,  1  )     .        𝔐    f  z      M     f  z   1      \mathfrak{M}(f(z))=M(f(z),1).\,     Evaluating    M   (   f   (  z  )    ,  1  )       M     f  z   1     M(f(z),1)   we obtain        F   (  z  )    =   exp   (    ∑   l  ≥  1      f   (   z  l   )    l    )     .        F  z       subscript     l  1        f   superscript  z  l    l       F(z)=\exp\left(\sum_{l\geq 1}\frac{f(z^{l})}{l}\right).     For the labelled case we have        G   (  z  )    =   1  +    ∑   n  ≥  1      (   1   |   S  n   |    )   g    (  z  )   n      =    ∑   n  ≥  0      g    (  z  )   n     n  !     =    exp  g    (  z  )     .          G  z     1    subscript     n  1        1     subscript  S  n     g   superscript  z  n             subscript     n  0        g   superscript  z  n      n              g   z      G(z)=1+\sum_{n\geq 1}\left(\frac{1}{|S_{n}|}\right)g(z)^{n}=\sum_{n\geq 0}%
 \frac{g(z)^{n}}{n!}=\exp g(z).     In the labelled case we denote the operator by   𝔓   𝔓   \mathfrak{P}   , and in the unlabelled case, by   𝔐   𝔐   \mathfrak{M}   .  Procedure  Typically, one starts with the neutral class    ℰ   ℰ   \mathcal{E}   , containing a single object of size 0 (the neutral object , often denoted by   ϵ   ϵ   \epsilon   ), and one or more atomic classes    𝒵   𝒵   \mathcal{Z}   , each containing a single object of size 1. Next, set-theoretic relations involving various simple operations, such as disjoint unions , products , sets , sequences , and multisets define more complex classes in terms of the already defined classes. These relations may be recursive . The elegance of symbolic combinatorics lies in that the set theoretic, or symbolic , relations translate directly into algebraic relations involving the generating functions.  In this article, we will follow the convention of using script uppercase letters to denote combinatorial classes and the corresponding plain letters for the generating functions (so the class   𝒜   𝒜   \mathcal{A}   has generating function    A   (  z  )       A  z    A(z)   ).  There are two types of generating functions commonly used in symbolic combinatorics— ordinary generating functions , used for combinatorial classes of unlabelled objects, and exponential generating functions , used for classes of labelled objects.  It is trivial to show that the generating functions (either ordinary or exponential) for   ℰ   ℰ   \mathcal{E}   and   𝒵   𝒵   \mathcal{Z}   are     E   (  z  )    =  1        E  z   1    E(z)=1   and     Z   (  z  )    =  z        Z  z   z    Z(z)=z   , respectively. The disjoint union is also simple — for disjoint sets   ℬ   ℬ   \mathcal{B}   and   𝒞   𝒞   \mathcal{C}   ,    𝒜  =   ℬ  ∪  𝒞       𝒜    ℬ  𝒞     \mathcal{A}=\mathcal{B}\cup\mathcal{C}   implies     A   (  z  )    =    B   (  z  )    +   C   (  z  )           A  z       B  z     C  z      A(z)=B(z)+C(z)   . The relations corresponding to other operations depend on whether we are talking about labelled or unlabelled structures (and ordinary or exponential generating functions).  Combinatorial sum  The restriction of unions to disjoint unions is an important one; however, in the formal specification of symbolic combinatorics, it is too much trouble to keep track of which sets are disjoint. Instead, we make use of a construction that guarantees there is no intersection ( be careful, however; this affects the semantics of the operation as well ). In defining the combinatorial sum of two sets   𝒜   𝒜   \mathcal{A}   and   ℬ   ℬ   \mathcal{B}   , we mark members of each set with a distinct marker, for example   ∘     \circ   for members of   𝒜   𝒜   \mathcal{A}   and   ∙   normal-∙   \bullet   for members of   ℬ   ℬ   \mathcal{B}   . The combinatorial sum is then:       𝒜  +  ℬ   =    (   𝒜  ×   {  ∘  }    )   ∪   (   ℬ  ×   {  ∙  }    )          𝒜  ℬ       𝒜        ℬ   normal-∙       \mathcal{A}+\mathcal{B}=(\mathcal{A}\times\{\circ\})\cup(\mathcal{B}\times\{%
 \bullet\})     This is the operation that formally corresponds to addition.  Unlabelled structures  With unlabelled structures, an ordinary generating function (OGF) is used. The OGF of a sequence    A  n     subscript  A  n    A_{n}   is defined as       A   (  x  )    =    ∑   n  =  0   ∞     A  n    x  n           A  x     superscript   subscript     n  0         subscript  A  n    superscript  x  n       A(x)=\sum_{n=0}^{\infty}A_{n}x^{n}     Product  The product of two combinatorial classes   𝒜   𝒜   \mathcal{A}   and   ℬ   ℬ   \mathcal{B}   is specified by defining the size of an ordered pair as the sum of the sizes of the elements in the pair. Thus we have for    a  ∈  𝒜      a  𝒜    a\in\mathcal{A}   and    b  ∈  ℬ      b  ℬ    b\in\mathcal{B}   ,     |   (  a  ,  b  )   |   =    |  a  |   +   |  b  |           a  b        a     b      |(a,b)|=|a|+|b|   . This should be a fairly intuitive definition. We now note that the number of elements in    𝒜  ×  ℬ      𝒜  ℬ    \mathcal{A}\times\mathcal{B}   of size n is        ∑   k  =  0   n     A  k    B   n  -  k      .      superscript   subscript     k  0    n      subscript  A  k    subscript  B    n  k       \sum_{k=0}^{n}A_{k}B_{n-k}.     Using the definition of the OGF and some elementary algebra, we can show that      𝒜  =   ℬ  ×  𝒞       𝒜    ℬ  𝒞     \mathcal{A}=\mathcal{B}\times\mathcal{C}   implies      A   (  z  )    =     B   (  z  )    ⋅  C    (  z  )     .        A  z      normal-⋅    B  z   C   z     A(z)=B(z)\cdot C(z).     Sequence  The sequence construction , denoted by    𝒜  =   𝔊   {  ℬ  }        𝒜    𝔊   ℬ      \mathcal{A}=\mathfrak{G}\{\mathcal{B}\}   is defined as        𝔊   {  ℬ  }    =   ℰ  +  ℬ  +   (   ℬ  ×  ℬ   )   +   (   ℬ  ×  ℬ  ×  ℬ   )   +  ⋯    .        𝔊   ℬ      ℰ  ℬ    ℬ  ℬ     ℬ  ℬ  ℬ   normal-⋯     \mathfrak{G}\{\mathcal{B}\}=\mathcal{E}+\mathcal{B}+(\mathcal{B}\times\mathcal%
 {B})+(\mathcal{B}\times\mathcal{B}\times\mathcal{B})+\cdots.     In other words, a sequence is the neutral element, or an element of   ℬ   ℬ   \mathcal{B}   , or an ordered pair, ordered triple, etc. This leads to the relation        A   (  z  )    =   1  +   B   (  z  )    +   B    (  z  )   2    +   B    (  z  )   3    +  ⋯   =   1   1  -   B   (  z  )       .          A  z     1    B  z     B   superscript  z  2      B   superscript  z  3    normal-⋯          1    1    B  z        A(z)=1+B(z)+B(z)^{2}+B(z)^{3}+\cdots=\frac{1}{1-B(z)}.     Set  The set (or powerset ) construction , denoted by    𝒜  =   𝔓   {  ℬ  }        𝒜    𝔓   ℬ      \mathcal{A}=\mathfrak{P}\{\mathcal{B}\}   is defined as        𝔓   {  ℬ  }    =    ∏   β  ∈  ℬ     (   ℰ  +   {  β  }    )     ,        𝔓   ℬ      subscript  product    β  ℬ      ℰ   β       \mathfrak{P}\{\mathcal{B}\}=\prod_{\beta\in\mathcal{B}}(\mathcal{E}+\{\beta\}),     which leads to the relation      A   (  z  )       A  z    \displaystyle A(z)     where the expansion       ln   (   1  +  u   )    =    ∑   k  =  1   ∞       (   -  1   )    k  -  1     u  k    k            1  u      superscript   subscript     k  1           superscript    1     k  1     superscript  u  k    k      \ln(1+u)=\sum_{k=1}^{\infty}\frac{(-1)^{k-1}u^{k}}{k}     was used to go from line 4 to line 5.  Multiset  The multiset construction , denoted    𝒜  =   𝔐   {  ℬ  }        𝒜    𝔐   ℬ      \mathcal{A}=\mathfrak{M}\{\mathcal{B}\}   is a generalization of the set construction. In the set construction, each element can occur zero or one times. In a multiset, each element can appear an arbitrary number of times. Therefore,        𝔐   {  ℬ  }    =    ∏   β  ∈  ℬ     𝔊   {  β  }      .        𝔐   ℬ      subscript  product    β  ℬ      𝔊   β       \mathfrak{M}\{\mathcal{B}\}=\prod_{\beta\in\mathcal{B}}\mathfrak{G}\{\beta\}.     This leads to the relation      A   (  z  )       A  z    \displaystyle A(z)     where, similar to the above set construction, we expand    ln   (   1  -   z  n    )         1   superscript  z  n      \ln(1-z^{n})   , swap the sums, and substitute for the OGF of   ℬ   ℬ   \mathcal{B}   .  Other elementary constructions  Other important elementary constructions are:   the cycle construction (    ℭ   {  ℬ  }       ℭ   ℬ     \mathfrak{C}\{\mathcal{B}\}   ), like sequences except that cyclic rotations are not considered distinct  pointing (    Θ  ℬ      normal-Θ  ℬ    \Theta\mathcal{B}   ), in which each member of   ℬ   ℬ   \mathcal{B}   is augmented by a neutral (zero size) pointer to one of its atoms  substitution (    ℬ  ∘  𝒞      ℬ  𝒞    \mathcal{B}\circ\mathcal{C}   ), in which each atom in a member of   ℬ   ℬ   \mathcal{B}   is replaced by a member of   𝒞   𝒞   \mathcal{C}   .   The derivations for these constructions are too complicated to show here. Here are the results:      Construction   Generating function           𝒜  =   ℭ   {  ℬ  }        𝒜    ℭ   ℬ      \mathcal{A}=\mathfrak{C}\{\mathcal{B}\}           A   (  z  )    =    ∑   k  =  1   ∞      ϕ   (  k  )    k    ln   1   1  -   B   (   z  k   )               A  z     superscript   subscript     k  1            ϕ  k   k       1    1    B   superscript  z  k           A(z)=\sum_{k=1}^{\infty}\frac{\phi(k)}{k}\ln\frac{1}{1-B(z^{k})}   (where    ϕ   (  k  )       ϕ  k    \phi(k)\,   is the Euler totient function )         𝒜  =   Θ  ℬ       𝒜    normal-Θ  ℬ     \mathcal{A}=\Theta\mathcal{B}           A   (  z  )    =   z   d   d  z    B   (  z  )          A  z     z    d    d  z    B  z     A(z)=z\frac{d}{dz}B(z)            𝒜  =   ℬ  ∘  𝒞       𝒜    ℬ  𝒞     \mathcal{A}=\mathcal{B}\circ\mathcal{C}           A   (  z  )    =   B   (   C   (  z  )    )          A  z     B    C  z      A(z)=B(C(z))\,        Examples  Many combinatorial classes can be built using these elementary constructions. For example, the class of plane trees (that is, trees embedded in the plane, so that the order of the subtrees matters) is specified by the recursive relation       𝒢  =    𝒵  ×  𝔊    {  𝒢  }     .      𝒢      𝒵  𝔊    𝒢      \mathcal{G}=\mathcal{Z}\times\mathfrak{G}\{\mathcal{G}\}.     In other words, a tree is a root node of size 1 and a sequence of subtrees. This gives       G   (  z  )    =   z   1  -   G   (  z  )            G  z     z    1    G  z       G(z)=\frac{z}{1-G(z)}     we solve for G(z) by multiplying    1  -   G   (  z  )        1    G  z     1-G(z)   to get        G   (  z  )    -   G    (  z  )   2     =  z          G  z     G   superscript  z  2     z    G(z)-G(z)^{2}=z     subtracting z and solving for G(z) using the quadratic formula gives        G   (  z  )    =    1  -    1  -   4  z      2    .        G  z       1      1    4  z      2     G(z)=\frac{1-\sqrt{1-4z}}{2}.     Another example (and a classic combinatorics problem) is integer partitions . First, define the class of positive integers   ℐ   ℐ   \mathcal{I}   , where the size of each integer is its value:      ℐ  =    𝒵  ×  𝔊    {  𝒵  }        ℐ      𝒵  𝔊    𝒵      \mathcal{I}=\mathcal{Z}\times\mathfrak{G}\{\mathcal{Z}\}     The OGF of   ℐ   ℐ   \mathcal{I}   is then        I   (  z  )    =   z   1  -  z     .        I  z     z    1  z      I(z)=\frac{z}{1-z}.     Now, define the set of partitions   𝒫   𝒫   \mathcal{P}   as       𝒫  =   𝔐   {  ℐ  }     .      𝒫    𝔐   ℐ      \mathcal{P}=\mathfrak{M}\{\mathcal{I}\}.     The OGF of   𝒫   𝒫   \mathcal{P}   is        P   (  z  )    =   exp   (    I   (  z  )    +    1  2   I   (   z  2   )    +    1  3   I   (   z  3   )    +  ⋯   )     .        P  z         I  z       1  2   I   superscript  z  2        1  3   I   superscript  z  3    normal-⋯      P(z)=\exp\left(I(z)+\frac{1}{2}I(z^{2})+\frac{1}{3}I(z^{3})+\cdots\right).     Unfortunately, there is no closed form for    P   (  z  )       P  z    P(z)   ; however, the OGF can be used to derive a recurrence relation , or, using more advanced methods of analytic combinatorics, calculate the asymptotic behavior of the counting sequence.  Labelled structures  An object is weakly labelled if each of its atoms has a nonnegative integer label, and each of these labels is distinct. An object is ( strongly or well ) labelled , if furthermore, these labels comprise the consecutive integers    [   1  …  n   ]     delimited-[]    1  normal-…  n     [1\ldots n]   . Note: some combinatorial classes are best specified as labelled structures or unlabelled structures, but some readily admit both specifications. A good example of labelled structures is the class of labelled graphs .  With labelled structures, an exponential generating function (EGF) is used. The EGF of a sequence    A  n     subscript  A  n    A_{n}   is defined as        A   (  x  )    =    ∑   n  =  0   ∞     A  n     x  n    n  !       .        A  x     superscript   subscript     n  0         subscript  A  n      superscript  x  n     n        A(x)=\sum_{n=0}^{\infty}A_{n}\frac{x^{n}}{n!}.     Product  For labelled structures, we must use a different definition for product than for unlabelled structures. In fact, if we simply used the cartesian product, the resulting structures would not even be well labelled. Instead, we use the so-called labelled product , denoted     𝒜  ⋆  ℬ   .     normal-⋆  𝒜  ℬ    \mathcal{A}\star\mathcal{B}.     For a pair    β  ∈  ℬ      β  ℬ    \beta\in\mathcal{B}   and    γ  ∈  𝒞      γ  𝒞    \gamma\in\mathcal{C}   , we wish to combine the two structures into a single structure. In order for the result to be well labelled, this requires some relabelling of the atoms in   β   β   \beta   and   γ   γ   \gamma   . We will restrict our attention to relabellings that are consistent with the order of the original labels. Note that there are still multiple ways to do the relabelling; thus, each pair of members determines not a single member in the product, but a set of new members. The details of this construction are found on the page of the Labelled enumeration theorem .  To aid this development, let us define a function,   ρ   ρ   \rho   , that takes as its argument a (possibly weakly) labelled object   α   α   \alpha   and relabels its atoms in an order-consistent way so that    ρ   (  α  )       ρ  α    \rho(\alpha)   is well labelled. We then define the labelled product for two objects   α   α   \alpha   and   β   β   \beta   as        α  ⋆  β   =   {   (   α  ′   ,   β  ′   )   :      (   α  ′   ,   β  ′   )   is well-labelled,  ρ   (   α  ′   )    =  α   ,    ρ   (   β  ′   )    =  β    }    .       normal-⋆  α  β    conditional-set    superscript  α  normal-′    superscript  β  normal-′     formulae-sequence        superscript  α  normal-′    superscript  β  normal-′    is well-labelled,  ρ   superscript  α  normal-′    α       ρ   superscript  β  normal-′    β       \alpha\star\beta=\{(\alpha^{\prime},\beta^{\prime}):(\alpha^{\prime},\beta^{%
 \prime})\mbox{ is well-labelled, }\rho(\alpha^{\prime})=\alpha,\rho(\beta^{%
 \prime})=\beta\}.     Finally, the labelled product of two classes   𝒜   𝒜   \mathcal{A}   and   ℬ   ℬ   \mathcal{B}   is        𝒜  ⋆  ℬ   =    ⋃    α  ∈  𝒜   ,   β  ∈  ℬ      (   α  ⋆  β   )     .       normal-⋆  𝒜  ℬ     subscript    formulae-sequence    α  𝒜     β  ℬ      normal-⋆  α  β      \mathcal{A}\star\mathcal{B}=\bigcup_{\alpha\in\mathcal{A},\beta\in\mathcal{B}}%
 (\alpha\star\beta).     The EGF can be derived by noting that for objects of size   k   k   k   and    n  -  k      n  k    n-k   , there are    (      n      k      )     binomial  n  k    {n\choose k}   ways to do the relabelling. Therefore, the total number of objects of size   n   n   n   is        ∑   k  =  0   n     (     n      k     )    A  k    B   n  -  k      .      superscript   subscript     k  0    n      binomial  n  k    subscript  A  k    subscript  B    n  k       \sum_{k=0}^{n}{n\choose k}A_{k}B_{n-k}.     This binomial convolution relation for the terms is equivalent to multiplying the EGFs,         A   (  z  )    ⋅  B    (  z  )    .       normal-⋅    A  z   B   z    A(z)\cdot B(z).\,     Sequence  The sequence construction     𝒜  =   𝔊   {  ℬ  }        𝒜    𝔊   ℬ      \mathcal{A}=\mathfrak{G}\{\mathcal{B}\}   is defined similarly to the unlabelled case:       𝔊   {  ℬ  }    =   ℰ  +  ℬ  +   (   ℬ  ⋆  ℬ   )   +   (   ℬ  ⋆  ℬ  ⋆  ℬ   )   +  ⋯         𝔊   ℬ      ℰ  ℬ   normal-⋆  ℬ  ℬ    normal-⋆  ℬ  ℬ  ℬ   normal-⋯     \mathfrak{G}\{\mathcal{B}\}=\mathcal{E}+\mathcal{B}+(\mathcal{B}\star\mathcal{%
 B})+(\mathcal{B}\star\mathcal{B}\star\mathcal{B})+\cdots   and again, as above,       A   (  z  )    =   1   1  -   B   (  z  )            A  z     1    1    B  z       A(z)=\frac{1}{1-B(z)}     Set  In labelled structures, a set of   k   k   k   elements corresponds to exactly    k  !      k    k!   sequences. This is different from the unlabelled case, where some of the permutations may coincide. Thus for    𝒜  =   𝔓   {  ℬ  }        𝒜    𝔓   ℬ      \mathcal{A}=\mathfrak{P}\{\mathcal{B}\}   , we have       A   (  z  )    =    ∑   k  =  0   ∞     B    (  z  )   k     k  !     =   exp   (   B   (  z  )    )            A  z     superscript   subscript     k  0          B   superscript  z  k      k              B  z       A(z)=\sum_{k=0}^{\infty}\frac{B(z)^{k}}{k!}=\exp(B(z))     Cycle  Cycles are also easier than in the unlabelled case. A cycle of length   k   k   k   corresponds to   k   k   k   distinct sequences. Thus for    𝒜  =   ℭ   {  ℬ  }        𝒜    ℭ   ℬ      \mathcal{A}=\mathfrak{C}\{\mathcal{B}\}   , we have        A   (  z  )    =    ∑   k  =  0   ∞     B    (  z  )   k    k    =   ln   (   1   1  -   B   (  z  )      )     .          A  z     superscript   subscript     k  0          B   superscript  z  k    k             1    1    B  z         A(z)=\sum_{k=0}^{\infty}\frac{B(z)^{k}}{k}=\ln\left(\frac{1}{1-B(z)}\right).     Boxed product  In labelled structures, the min-boxed product     𝒜   m  i  n    =    ℬ  □   ⋆  𝒞        subscript  𝒜    m  i  n     normal-⋆   superscript  ℬ  normal-□   𝒞     \mathcal{A}_{min}=\mathcal{B}^{\square}\star\mathcal{C}   is a variation of the original product which requires the element of   ℬ   ℬ   \mathcal{B}   in the product with the minimal label. Similarly, we can also define a max-boxed product, denoted by     𝒜   m  a  x    =    ℬ  ■   ⋆  𝒞        subscript  𝒜    m  a  x     normal-⋆   superscript  ℬ  normal-■   𝒞     \mathcal{A}_{max}=\mathcal{B}^{\blacksquare}\star\mathcal{C}   , by the same manner. Then we have,         A   m  i  n     (  z  )    =    A   m  a  x     (  z  )    =    ∫  0  z     B  ′    (  t  )   C   (  t  )   d  t     .           subscript  A    m  i  n    z      subscript  A    m  a  x    z          subscript   superscript   z   0      superscript  B  normal-′   t  C  t  d  t       A_{min}(z)=A_{max}(z)=\int^{z}_{0}B^{\prime}(t)C(t)dt.   or equivalently,         A   m  i  n   ′    (  t  )    =    A   m  a  x   ′    (  t  )    =    B  ′    (  t  )   C   (  t  )     .           superscript   subscript  A    m  i  n    normal-′   t      superscript   subscript  A    m  a  x    normal-′   t           superscript  B  normal-′   t  C  t      A_{min}^{\prime}(t)=A_{max}^{\prime}(t)=B^{\prime}(t)C(t).     Example  An increasing Cayley tree is a labelled non-plane and rooted tree whose labels along any branch stemming from the root form an increasing sequence. Then, let   ℒ   ℒ   \mathcal{L}   be the class of such trees. The recursive specification is now     ℒ  =     𝒵  □   ⋆  S   E  T   (  ℒ  )     .      ℒ     normal-⋆   superscript  𝒵  normal-□   S   E  T  ℒ     \mathcal{L}=\mathcal{Z}^{\square}\star SET(\mathcal{L}).     Other elementary constructions  The operators       ℭ  even   ,   ℭ  odd   ,   𝔓  even   ,   and   𝔓  odd        subscript  ℭ  even    subscript  ℭ  odd    subscript  𝔓  even     and   subscript  𝔓  odd      \mathfrak{C}_{\operatorname{even}},\mathfrak{C}_{\operatorname{odd}},\mathfrak%
 {P}_{\operatorname{even}},\mbox{ and }\mathfrak{P}_{\operatorname{odd}}     represent cycles of even and odd length, and sets of even and odd cardinality.  Example  Stirling numbers of the second kind may be derived and analyzed using the structural decomposition       𝔓   (    𝔓    ≥  1     (  𝒵  )    )    .      𝔓     subscript  𝔓    absent  1    𝒵     \mathfrak{P}(\mathfrak{P}_{\geq 1}(\mathcal{Z})).     The decomposition      𝔓   (   ℭ   (  𝒵  )    )       𝔓    ℭ  𝒵     \mathfrak{P}(\mathfrak{C}(\mathcal{Z}))     is used to study unsigned Stirling numbers of the first kind , and in the derivation of the statistics of random permutations . A detailed examination of the exponential generating functions associated to Stirling numbers within symbolic combinatorics may be found on the page on Stirling numbers and exponential generating functions in symbolic combinatorics .  See also   Combinatorial species   References   François Bergeron, Gilbert Labelle, Pierre Leroux, Théorie des espèces et combinatoire des structures arborescentes , LaCIM, Montréal (1994). English version: Combinatorial Species and Tree-like Structures , Cambridge University Press (1998).  Philippe Flajolet and Robert Sedgewick, Analytic Combinatorics , Cambridge University Press (2009). (available online: http://algo.inria.fr/flajolet/Publications/book.pdf )  Micha Hofri, Analysis of Algorithms: Computational Methods and Mathematical Tools , Oxford University Press (1995).   "  Category:Combinatorics   