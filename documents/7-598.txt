   Explicit and implicit methods      Explicit and implicit methods   Explicit and implicit methods are approaches used in numerical analysis for obtaining numerical solutions of time-dependent ordinary and partial differential equations , as is required in computer simulations of physical processes .  Explicit methods calculate the state of a system at a later time from the state of the system at the current time, while implicit methods find a solution by solving an equation involving both the current state of the system and the later one. Mathematically, if    Y   (  t  )       Y  t    Y(t)   is the current system state and    Y   (   t  +   Δ  t    )       Y    t    normal-Δ  t      Y(t+\Delta t)   is the state at the later time (    Δ  t      normal-Δ  t    \Delta t   is a small time step), then, for an explicit method       Y   (   t  +   Δ  t    )    =   F   (   Y   (  t  )    )          Y    t    normal-Δ  t       F    Y  t      Y(t+\Delta t)=F(Y(t))\,   while for an implicit method one solves an equation       G   (   Y   (  t  )    ,   Y   (   t  +   Δ  t    )    )    =   0   (  1  )          G     Y  t     Y    t    normal-Δ  t        0  1     G(Y(t),Y(t+\Delta t))=0\quad\quad(1)\,   to find     Y   (   t  +   Δ  t    )    .      Y    t    normal-Δ  t      Y(t+\Delta t).     It is clear that implicit methods require an extra computation (solving the above equation), and they can be much harder to implement. Implicit methods are used because many problems arising in practice are stiff , for which the use of an explicit method requires impractically small time steps    Δ  t      normal-Δ  t    \Delta t   to keep the error in the result bounded (see numerical stability ). For such problems, to achieve given accuracy, it takes much less computational time to use an implicit method with larger time steps, even taking into account that one needs to solve an equation of the form (1) at each time step. That said, whether one should use an explicit or implicit method depends upon the problem to be solved.  Illustration using the forward and backward Euler methods  Consider the ordinary differential equation         d  y    d  t    =   -   y  2     ,   t  ∈    [  0  ,  a  ]    (  2  )        formulae-sequence        d  y     d  t       superscript  y  2       t    0  a   2      \frac{dy}{dt}=-y^{2},\ t\in[0,a]\quad\quad(2)     with the initial condition     y   (  0  )    =  1.        y  0   1.    y(0)=1.   Consider a grid     t  k   =   a   k  n         subscript  t  k     a    k  n      t_{k}=a\frac{k}{n}   for 0 ≤ k ≤ n , that is, the time step is      Δ  t   =   a  /  n    ,        normal-Δ  t     a  n     \Delta t=a/n,   and denote     y  k   =   y   (   t  k   )         subscript  y  k     y   subscript  t  k      y_{k}=y(t_{k})   for each   k   k   k   . Discretize this equation using the simplest explicit and implicit methods, which are the forward Euler and ''backward Euler '' methods (see numerical ordinary differential equations ) and compare the obtained schemes.   Forward Euler method:   The forward Euler method        (    d  y    d  t    )   k   =     y   k  +  1    -   y  k     Δ  t    =   -   y  k  2           subscript      d  y     d  t    k        subscript  y    k  1     subscript  y  k      normal-Δ  t            superscript   subscript  y  k   2       \left(\frac{dy}{dt}\right)_{k}=\frac{y_{k+1}-y_{k}}{\Delta t}=-y_{k}^{2}   yields       y   k  +  1    =     y  k   -   Δ  t   y  k  2      (  3  )         subscript  y    k  1        subscript  y  k     normal-Δ  t   superscript   subscript  y  k   2     3     y_{k+1}=y_{k}-\Delta ty_{k}^{2}\quad\quad\quad(3)\,   for each     k  =   0  ,  1  ,  …  ,  n    .      k   0  1  normal-…  n     k=0,1,\dots,n.   This is an explicit formula for    y   k  +  1      subscript  y    k  1     y_{k+1}   .   Backward Euler method:   With the backward Euler method         y   k  +  1    -   y  k     Δ  t    =   -   y   k  +  1   2             subscript  y    k  1     subscript  y  k      normal-Δ  t       superscript   subscript  y    k  1    2      \frac{y_{k+1}-y_{k}}{\Delta t}=-y_{k+1}^{2}     one finds the implicit equation        y   k  +  1    +   Δ  t   y   k  +  1   2     =   y  k          subscript  y    k  1      normal-Δ  t   superscript   subscript  y    k  1    2      subscript  y  k     y_{k+1}+\Delta ty_{k+1}^{2}=y_{k}   for    y   k  +  1      subscript  y    k  1     y_{k+1}   (compare this with formula (3) where    y   k  +  1      subscript  y    k  1     y_{k+1}   was given explicitly rather than as an unknown in an equation).  This is a quadratic equation , having one negative and one positive root . The positive root is picked because in the original equation the initial condition is positive, and then   y   y   y   at the next time step is given by       y   k  +  1    =     -  1   +    1  +   4  Δ  t   y  k        2  Δ  t    .   (  4  )      fragments   subscript  y    k  1           1       1    4  normal-Δ  t   subscript  y  k         2  normal-Δ  t    normal-.  italic-   fragments  normal-(  4  normal-)     y_{k+1}=\frac{-1+\sqrt{1+4\Delta ty_{k}}}{2\Delta t}.\quad\quad(4)     In the vast majority of cases, the equation to be solved when using an implicit scheme is much more complicated than a quadratic equation, and no analytical solution exists. Then one uses root-finding algorithms , such as Newton's method , to find the numerical solution.  See also   Courant–Friedrichs–Lewy condition  SIMPLE algorithm , a semi-implicit method for pressure-linked equations   "  Category:Numerical differential equations   