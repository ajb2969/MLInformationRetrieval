


HRU (security)




HRU (security)

The HRU security model (Harrison, Ruzzo, Ullman model) is an operating system level computer security model which deals with the integrity of access rights in the system. It is an extension of the Graham-Denning model, based around the idea of a finite set of procedures being available to edit the access rights of a subject 
 
 
 
  on an object 
 
 
 
 . It is named after its three authors, Michael A. Harrison, Walter L. Ruzzo and Jeffrey D. Ullman.1
Along with presenting the model, Harrison, Ruzzo and Ullman also discussed the possibilities and limitations of proving the safety of systems using an algorithm.2
Description of the model
The HRU model defines a protection system consisting of a set of generic rights R and a set of commands C. An instantaneous description of the system is called a configuration and is defined as a tuple

 
  of current subjects 
 
 
 
 
 , current objects 
 
 
 
  and an access matrix 
 
 
 
 . Since the subjects are required to be part of the objects, the access matrix contains one row for each subject and one column for each subject and object. An entry for subject 
 
 
 
  and object 
 
 
 
  is a subset of the generic rights 
 
 
 
 
 .
The commands are composed of primitive operations and can additionally have a list of pre-conditions that require certain rights to be present for a pair 
 
 
 
  of subjects and objects.
The primitive requests can modify the access matrix by adding or removing access rights for a pair of subjects and objects and by adding or removing subjects or objects. Creation of a subject or object requires the subject or object not to exist in the current configuration, while deletion of a subject or object requires it to have existed prior to deletion. In a complex command, a sequence of operations is executed only as a whole. A failing operation in a sequence makes the whole sequence fail, a form of database transaction.
Discussion of safety
Harrison, Ruzzo and Ullman3 discussed whether there is an algorithm that takes an arbitrary initial configuration and answers the following question: is there an arbitrary sequence of commands that adds a generic right into a cell of the access matrix where it has not been in the initial configuration?
They showed that there is no such algorithm, thus the problem is undecidable in the general case. They also showed a limitation of the model to commands with only one primitive operation to render the problem decidable.
See also

EROS - Extremely Reliable Operating System

References
"
Category:Capability systems Category:Computer security models










