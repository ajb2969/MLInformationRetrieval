   Mean value analysis      Mean value analysis   In queueing theory , a discipline within the mathematical theory of probability , mean value analysis (MVA) is a recursive technique for computing expected queue lengths, waiting time at queueing nodes and throughput in equilibrium for a closed separable system of queues. The first approximate techniques were published independently by Schweitzer 1 and Bard, 2 3 followed later by an exact version by Lavenberg and Reiser published in 1980. 4 5  It is based on the arrival theorem , which states that when one customer in an M -customer closed system arrives at a service facility he/she observes the rest of the system to be in the equilibrium state for a system with M − 1 customers.  Problem setup  Consider a closed queueing network of K  M/M/1 queues , with M customers circulating in the system. To compute the mean queue length and waiting time at each of the nodes and throughput of the system we use an iterative algorithm starting with a network with 0 customers.  Write μ i for the service rate at node i and P for the customer routing matrix where element p ij denotes the probability that a customer finishing service at node i moves to node j for service. To use the algorithm we first compute the visit ratio row vector v , a vector such that v = v P.  Now write L i ( n ) for the mean number of customer at queue i when there are a total of n customers in the system (this includes the job currently being served at queue i ) and W j ( n ) for the mean time spent by a customer in queue i when there are a total of n customers in the system. Denote the throughput of a system with m customers by λ m .  Algorithm  The algorithm 6 starts with an empty network (zero customers), then increases the number of customers by 1 at each iteration until there are the required number ( M ) of customers in the system.  To initialise, set L k (0) = 0 for k = 1,..., K . (This sets the average queue length in a system with no customers to zero at all nodes.)  Repeat for m = 1,..., M :   1. For k = 1, ..., K compute the waiting time at each node using the arrival theorem          W  k    (  m  )    =      L  k    (   m  -  1   )    +  1    μ  k     .         subscript  W  k   m          subscript  L  k     m  1    1    subscript  μ  k      W_{k}(m)=\frac{L_{k}\left(m-1\right)+1}{\mu_{k}}.         2. Then compute the system throughput using Little's law         λ  m   =   m     ∑   k  =  1   K      W  k    (  m  )    v  k       .       subscript  λ  m     m    superscript   subscript     k  1    K      subscript  W  k   m   subscript  v  k        \lambda_{m}=\frac{m}{\sum_{k=1}^{K}W_{k}(m)v_{k}}.         3. Finally, use little's law applied to each queue to compute the mean queue lengths for k = 1, ..., K           L  k    (  m  )    =    v  k    λ  m    W  k    (  m  )     .         subscript  L  k   m      subscript  v  k    subscript  λ  m    subscript  W  k   m     L_{k}(m)=v_{k}\lambda_{m}W_{k}(m).          End repeat.  Schweitzer's approximation  Schweitzer's approximation estimates the average number of jobs at node k to be 7 8        L  k    (   m  -  1   )    ≈     m  -  1   m    L  k    (  m  )           subscript  L  k     m  1          m  1   m    subscript  L  k   m     L_{k}(m-1)\approx\frac{m-1}{m}L_{k}(m)     which from the above formulas yields fixed-point relationships which can be solved numerically. This iterative approach is typically faster than the recursive approach of MVA. 9  Pseudo-code  set ''L'' ''k'' (''m'') = ''M''/''K''
 
 repeat until convergence:
 
 :: \lambda_m = \frac{m}{\sum_{k=1}^K \frac{\frac{m-1}{m}L_k(m) + 1}{\mu_k} v_k} :: L_k(m) = v_k \lambda_m \frac{\frac{m-1}{m}L_k(m) + 1}{\mu_k}   Multiclass networks  For networks with a single customer class the MVA algorithm is very fast and time taken grows linearly with the number of customers and number of queues. However, the number of multiplications and additions required for MVA grows exponentially with the number of customer classes. Practically, the algorithm works for 3-4 customer classes. 10 The method of moments is an exact method which required log-quadratic time and can solve in practice models with up to 10 classes of customers. 11 Approximate algorithms have also been proposed with lower complexity. 12  Extensions  The mean value analysis algorithm has been applied to a class of PEPA models describing queueing networks and the performance of a key distribution center . 13  Software   JMVA , a tool written in Java which implements MVA. 14  queueing , a library for GNU Octave which includes MVA. 15   External links   J. Virtamo: Queuing networks . Handout from Helsinki Tech gives good overview of Jackson's Theorem and MVA.  Simon Lam: A simple derivation of the MVA algorithm . Shows relationship between Buzen's algorithm and MVA.   References  "  Category:Stochastic processes  Category:Queueing theory      ↩  ↩  ↩  ↩  ↩  ↩  ↩  ↩  ↩   ↩  ↩  ↩  ↩     