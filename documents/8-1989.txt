


Putnam model




Putnam model

The Putnam model is an empirical software effort estimation model.1 The original paper by Lawrence H. Putnam published in 1978 is seen as pioneering work in the field of software process modelling. 2 As a group, empirical models work by collecting software project data (for example, effort and size) and fitting a curve to the data. Future effort estimates are made by providing size and calculating the associated effort using the equation which fit the original data (usually with some error).
Created by Lawrence Putnam, Sr. the Putnam model describes the time and effort required to finish a software project of specified size. SLIM (Software LIfecycle Management) is the name given by Putnam to the proprietary suite of tools his company QSM, Inc. has developed based on his model. It is one of the earliest of these types of models developed, and is among the most widely used. Closely related software parametric models are Constructive Cost Model (COCOMO), Parametric Review of Information for Costing and Evaluation – Software (PRICE-S), and Software Evaluation and Estimation of Resources – Software Estimating Model (SEER-SEM).
The Software Equation
While managing R&D; projects for the Army and later at GE, Putnam noticed software staffing profiles followed the well-known Rayleigh distribution.3
Putnam used his observations about productivity levels to derive the software equation:



where:

Size is the product size (whatever size estimate is used by your organization is appropriate). Putnam uses ESLOC (Effective Source Lines of Code) throughout his books.
B is a scaling factor and is a function of the project size.

4

Productivity is the Process Productivity, the ability of a particular software organization to produce software of a given size at a particular defect rate.
Effort is the total effort applied to the project in person-years.
Time is the total schedule of the project in years.

In practical use, when making an estimate for a software task the software equation is solved for effort:



An estimated software size at project completion and organizational process productivity is used. Plotting effort as a function of time yields the Time-Effort Curve. The points along the curve represent the estimated total effort to complete the project at some time. One of the distinguishing features of the Putnam model is that total effort decreases as the time to complete the project is extended. This is normally represented in other parametric models with a schedule relaxation parameter.




This estimating method is fairly sensitive to uncertainty in both size and process productivity. Putnam advocates obtaining process productivity by calibration:5



Putnam makes a sharp distinction between 'conventional productivity' : size / effort and process productivity.
One of the key advantages to this model is the simplicity with which it is calibrated. Most software organizations, regardless of maturity level can easily collect size, effort and duration (time) for past projects. Process Productivity, being exponential in nature is typically converted to a linear productivity index an organization can use to track their own changes in productivity and apply in future effort estimates.6
See also

Software estimation

References










External links

QSM, Inc.

"
Category:Software engineering costs



↩
↩
↩
↩

↩




