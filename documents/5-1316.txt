   Iverson bracket      Iverson bracket   In mathematics , the Iverson bracket , named after Kenneth E. Iverson , is a notation that denotes a number that is 1 if the condition in square brackets is satisfied, and 0 otherwise. More exactly,       [  P  ]   =   {     1     if  P  is true;       0    otherwise.           delimited-[]  P    cases  1    if  P  is true;   0  otherwise.     [P]=\begin{cases}1&\text{if }P\text{ is true;}\\
 0&\text{otherwise.}\end{cases}   where   P   P   P   is a statement that can be true or false. This notation was introduced by Kenneth E. Iverson in his programming language APL , 1 2 while the specific restriction to square brackets was advocated by Donald Knuth to avoid ambiguity in parenthesized logical expressions. 3  Uses  The Iverson bracket converts a Boolean value to an integer value through the natural map     𝐟𝐚𝐥𝐬𝐞  ↦  0   ;   𝐭𝐫𝐮𝐞  ↦  1      formulae-sequence   maps-to  false  0    maps-to  true  1     \textbf{false}\mapsto 0;\textbf{true}\mapsto 1   , which allows counting to be represented as summation. For instance, the Euler phi function that counts the number of positive integers up to n which are coprime to n can be expressed by      ϕ   (  n  )   =   ∑   i  =  1   n    [  gcd   (  i  ,  n  )   =  1  ]   ,  for  n  ∈   ℕ  +   .     fragments  ϕ   fragments  normal-(  n  normal-)     superscript   subscript     i  1    n    fragments  normal-[    fragments  normal-(  i  normal-,  n  normal-)    1  normal-]   normal-,  for  n    superscript  ℕ    normal-.    \phi(n)=\sum_{i=1}^{n}[\gcd(i,n)=1],\qquad\text{for }n\in\mathbb{N}^{+}.   More generally the notation allows moving boundary conditions of summations (or integrals) as a separate factor into the summand, freeing up space around the summation operator, but more importantly allowing it to be manipulated algebraically. For example,       ∑   1  ≤  i  ≤  10     i  2   =   ∑  i    i  2    [  1  ≤  i  ≤  10  ]   .     fragments   subscript       1  i       10      superscript  i  2     subscript   i    superscript  i  2    fragments  normal-[  1   i   10  normal-]   normal-.    \sum_{1\leq i\leq 10}i^{2}=\sum_{i}i^{2}[1\leq i\leq 10].   In the first sum, the index   i   i   i   is limited to be in the range 1 to 10. The second sum is allowed to range over all integers, but where i is strictly less than 1 or strictly greater than 10, the summand is 0, contributing nothing to the sum. Such use of the Iverson bracket can permit easier manipulation of these expressions.  Another use of the Iverson bracket is to simplify equations with special cases. For example, the formula         ∑       1  ≤  k  ≤  n         gcd   (  k  ,  n  )    =  1         k   =    1  2   n  φ   (  n  )          subscript    STACKED      1  k       n        k  n   1     k       1  2   n  φ  n     \sum_{1\leq k\leq n\atop\gcd(k,n)=1}\!\!k=\frac{1}{2}n\varphi(n)     which is valid for    n  >  1      n  1    n>1   but which is off by    1  2      1  2    \frac{1}{2}   for    n  =  1      n  1    n=1   . To get an identity valid for all positive integers n (i.e., all values for which    ϕ   (  n  )       ϕ  n    \phi(n)   is defined), a correction term involving the Iverson bracket may be added:        ∑       1  ≤  k  ≤  n         gcd   (  k  ,  n  )    =  1         k  =   1  2   n   (  φ   (  n  )   +   [  n  =  1  ]   )      fragments   subscript    STACKED      1  k       n        k  n   1     k     1  2   n   fragments  normal-(  φ   fragments  normal-(  n  normal-)     fragments  normal-[  n   1  normal-]   normal-)     \sum_{1\leq k\leq n\atop\gcd(k,n)=1}\!\!k=\frac{1}{2}n(\varphi(n)+[n=1])     Special cases  The Kronecker delta notation is a specific case of Iverson notation when the condition is equality. That is,       δ   i  j    =   [  i  =  j  ]   .     fragments   subscript  δ    i  j      fragments  normal-[  i   j  normal-]   normal-.    \delta_{ij}=[i=j].     The indicator function , often denoted     𝟏  A    (  x  )        subscript  1  A   x    \mathbf{1}_{A}(x)   ,     𝐈  A    (  x  )        subscript  𝐈  A   x    \mathbf{I}_{A}(x)   or     χ  A    (  x  )        subscript  χ  A   x    \chi_{A}(x)   , is an Iverson bracket with set membership as its condition:       𝐈  A    (  x  )   :=   [  x  ∈  A  ]      fragments   subscript  𝐈  A    fragments  normal-(  x  normal-)   assign   fragments  normal-[  x   A  normal-]     \mathbf{I}_{A}(x):=[x\in A]   .  The sign function and Heaviside step function are also easily expressed in this notation:      sgn   (  x  )   =   [  x  >  0  ]   -   [  x  <  0  ]      fragments  sgn   fragments  normal-(  x  normal-)     fragments  normal-[  x   0  normal-]     fragments  normal-[  x   0  normal-]     \operatorname{sgn}(x)=[x>0]-[x<0]         H   (  x  )   =   [  x  >  0  ]   .     fragments  H   fragments  normal-(  x  normal-)     fragments  normal-[  x   0  normal-]   normal-.    H(x)=[x>0].     The comparison functions max, min, abs, can be expressed respectively as      max   (  x  ,  y  )   =  x   [  x  >  y  ]   +  y   [  x  ≤  y  ]   ,     fragments    fragments  normal-(  x  normal-,  y  normal-)    x   fragments  normal-[  x   y  normal-]    y   fragments  normal-[  x   y  normal-]   normal-,    \max(x,y)=x[x>y]+y[x\leq y],         min   (  x  ,  y  )   =  x   [  x  ≤  y  ]   +  y   [  x  >  y  ]   ,     fragments    fragments  normal-(  x  normal-,  y  normal-)    x   fragments  normal-[  x   y  normal-]    y   fragments  normal-[  x   y  normal-]   normal-,    \min(x,y)=x[x\leq y]+y[x>y],   and      |  x  |  =  x   [  x  ≥  0  ]   -  x   [  x  <  0  ]   .     fragments  normal-|  x  normal-|   x   fragments  normal-[  x   0  normal-]    x   fragments  normal-[  x   0  normal-]   normal-.    |x|=x[x\geq 0]-x[x<0].     The floor and ceiling functions can be expressed as       ⌊  x  ⌋   =   ∑   n  =   -  ∞    ∞   n   [  n  ≤  x  <  n  +  1  ]      fragments   fragments  normal-⌊  x  normal-⌋     superscript   subscript     n          n   fragments  normal-[  n   x   n   1  normal-]     \lfloor x\rfloor=\sum_{n=-\infty}^{\infty}n[n\leq x   and       ⌈  x  ⌉   =   ∑   n  =   -  ∞    ∞   n   [  n  -  1  <  x  ≤  n  ]   .     fragments   fragments  normal-⌈  x  normal-⌉     superscript   subscript     n          n   fragments  normal-[  n   1   x   n  normal-]   normal-.    \lceil x\rceil=\sum_{n=-\infty}^{\infty}n[n-1     The Macaulay brackets can be expressed       {  x  }   =  x  ⋅   [  x  ≥  0  ]   .     fragments   fragments  normal-{  x  normal-}    x  normal-⋅   fragments  normal-[  x   0  normal-]   normal-.    \{x\}=x\cdot[x\geq 0].     And the trichotomy of the reals is equivalent to the following identity:       [  a  <  b  ]   +   [  a  =  b  ]   +   [  a  >  b  ]   =  1.     fragments   fragments  normal-[  a   b  normal-]     fragments  normal-[  a   b  normal-]     fragments  normal-[  a   b  normal-]    1.    [a b]=1.     References  "  Category:Mathematical notation     Kenneth E. Iverson, A Programming Language , New York: Wiley, p. 11, 1962. ↩  Ronald Graham , Donald Knuth , and Oren Patashnik . Concrete Mathematics , Section 2.2: Sums and Recurrences. ↩  Donald Knuth, "Two Notes on Notation", American Mathematical Monthly , Volume 99, Number 5, May 1992, pp. 403–422. ( TeX , ). ↩     