   EdDSA      EdDSA   In public-key cryptography , Edwards-curve Digital Signature Algorithm (EdDSA) is a digital signature scheme using a variant of Schnorr signature based on Twisted Edwards curves . It is designed for high performance while avoiding security problems that have surfaced in other digital signature schemes. It was developed by a team including Daniel J. Bernstein , Niels Duif, Tanja Lange, Peter Schwabe, and Bo-Yin Yang. 1  Ed25519  Ed25519 is a specific implementation of EdDSA using the Twisted Edwards curve :        -   x  2    +   y  2    =   1  -    121665  121666    x  2    y  2              superscript  x  2     superscript  y  2      1      121665  121666    superscript  x  2    superscript  y  2       -x^{2}+y^{2}=1-\frac{121665}{121666}x^{2}y^{2}   , over the prime field defined by the prime number  . This curve is birationally equivalent to the Montgomery curve known as Curve25519 . The equivalence is    x  =      -  486664    u   /  v       x          486664    u   v     x=\sqrt{-486664}u/v   and    y  =    (   u  -  1   )   /   (   u  +  1   )        y      u  1     u  1      y=(u-1)/(u+1)   . 2 3  Features  Performance  The Bernstein team have optimized Ed25519 for 64-bit processors in the x86  Nehalem / Westmere family, achieving fast key generation, document signing and signature verification. Verification can be performed in batches of 64 signatures for even greater throughput. Ed25519 is targeted to provide attack resistance comparable to quality 128-bit symmetric ciphers . Public keys are 256 bits (32 bytes) in length and signatures are twice that size.  Secure coding  Security features of Ed25519 include elimination of branch operations and array indexing steps that depend on data which must be kept secret, so as to defeat many side channel attacks . Like other digital signature algorithms, EdDSA requires a secret value, or nonce , unique to each signature, however EdDSA calculates this nonce deterministically, as the hash of the secret key and the message, rather than rely on a random number generator. This reduces the risk of a random number generator attack , but does not completely eliminate it, since high quality random numbers are still needed for key generation.  Software  Notable uses of Ed25519 include OpenSSH , GnuPG and various alternatives, and the signify tool by OpenBSD . 4   SUPERCOP reference implementation ( C language with inline assembler )  Slow but concise alternate implementation , does not include side-channel attack protection 5 ( Python )  NaCl  CryptoNote  cryptocurrency  protocol  wolfSSL 6   See also   ECDSA  Curve25519  NaCl (software)   References  External links   Ed25519 home page   "  Category:Elliptic curve cryptography  Category:Digital signature schemes     ↩   ↩  ↩  ↩  http://www.wolfssl.com/wolfSSL/Products-wolfssl.html ↩     