   Burstsort      Burstsort   Burstsort and its variants are cache-efficient algorithms for sorting strings and are faster than quicksort for large data sets , first published in 2003. 1  Burstsort algorithms use a trie to store prefixes of strings, with growable arrays of pointers as end nodes containing sorted, unique, suffixes (referred to as buckets). Some variants copy the string tails into the buckets. As the buckets grow beyond a predetermined threshold, the buckets are "burst", giving the sort its name. A more recent variant uses a bucket index with smaller sub-buckets to reduce memory usage. Most implementations delegate to multikey quicksort, an extension of three-way radix quicksort, to sort the contents of the buckets. By dividing the input into buckets with common prefixes, the sorting can be done in a cache-efficient manner.  References   A burstsort derivative (C-burstsort), faster than burstsort: Cache-Efficient String Sorting Using Copying  The data type used in burstsort: Burst Tries: A Fast, Efficient Data Structure for String Keys  Efficient Trie-Based Sorting of Large Sets of Strings  Engineering Burstsort: Towards Fast In-Place String Sorting   External links   A burstsort implementation in C++: Free C++ Copy-Burstsort Library  A burstsort implementation in Java: burstsort4j  Judy arrays are a type of copy burstsort: C implementation   "  Category:Sorting algorithms     â†©     