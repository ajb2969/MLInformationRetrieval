   Structure tensor      Structure tensor   In mathematics, the structure tensor , also referred to as the second-moment matrix , is a matrix derived from the gradient of a function . It summarizes the predominant directions of the gradient in a specified neighborhood of a point, and the degree to which those directions are coherent. The structure tensor is often used in image processing and computer vision .  J. Bigun and G. Granlund (1986), Optimal  Orientation  Detection  of  Linear  Symmetry . Tech. Report LiTH-ISY-I-0828, Computer Vision Laboratory, Linkoping University, Sweden 1986; Thesis Report, Linkoping studies in science and technology No. 85, 1986.  1     The 2D structure tensor  Continuous version  For a function   I   I   I   of two variables p =( x , y ), the structure tensor is the 2×2 matrix        S  w    (  p  )    =   [       ∫   w   (  r  )      (    I  x    (   p  -  r   )    )   2    d  r         ∫   w   (  r  )    I  x    (   p  -  r   )    I  y    (   p  -  r   )   d  r           ∫   w   (  r  )    I  x    (   p  -  r   )    I  y    (   p  -  r   )   d  r         ∫   w   (  r  )      (    I  y    (   p  -  r   )    )   2    d  r        ]          subscript  S  w   p         w  r   superscript     subscript  I  x     p  r    2   d  r        w  r   subscript  I  x     p  r    subscript  I  y     p  r   d  r          w  r   subscript  I  x     p  r    subscript  I  y     p  r   d  r        w  r   superscript     subscript  I  y     p  r    2   d  r        S_{w}(p)=\begin{bmatrix}\int w(r)(I_{x}(p-r))^{2}\,dr&\int w(r)I_{x}(p-r)I_{y}%
 (p-r)\,dr\\
 \int w(r)I_{x}(p-r)I_{y}(p-r)\,dr&\int w(r)(I_{y}(p-r))^{2}\,dr\end{bmatrix}   where    I  x     subscript  I  x    I_{x}   and    I  y     subscript  I  y    I_{y}   are the partial derivatives of   I   I   I   with respect to x and y ; the integrals range over the plane    ℝ  2     superscript  ℝ  2    \mathbb{R}^{2}   ; and w is some fixed "window function", a distribution on two variables. Note that the matrix    S  w     subscript  S  w    S_{w}   is itself a function of p =( x , y ).  The formula above can be written also as      S  w    (  p  )    =   ∫   w   (  r  )    S  0    (   p  -  r   )   d  r           subscript  S  w   p       w  r   subscript  S  0     p  r   d  r      S_{w}(p)=\int w(r)S_{0}(p-r)\,dr   , where    S  0     subscript  S  0    S_{0}   is the matrix-valued function defined by        S  0    (  p  )    =   [       (    I  x    (  p  )    )   2       I  x    (  p  )    I  y    (  p  )          I  x    (  p  )    I  y    (  p  )        (    I  y    (  p  )    )   2      ]          subscript  S  0   p      superscript     subscript  I  x   p   2      subscript  I  x   p   subscript  I  y   p        subscript  I  x   p   subscript  I  y   p    superscript     subscript  I  y   p   2       S_{0}(p)=\begin{bmatrix}(I_{x}(p))^{2}&I_{x}(p)I_{y}(p)\\
 I_{x}(p)I_{y}(p)&(I_{y}(p))^{2}\end{bmatrix}     If the gradient      ∇  I   =   (   I  x   ,   I  y   )        normal-∇  I     subscript  I  x    subscript  I  y      \nabla I=(I_{x},I_{y})   of   I   I   I   is viewed as a 1×2 (single-row) matrix, the matrix    S  0     subscript  S  0    S_{0}   can be written as the matrix product       (   ∇  I   )   ′    (   ∇  I   )        superscript   normal-∇  I   normal-′    normal-∇  I     (\nabla I)^{\prime}(\nabla I)   , where     (   ∇  I   )   ′     superscript   normal-∇  I   normal-′    (\nabla I)^{\prime}   denotes the 2×1 (single-column) transpose of the gradient. (Note however that the structure tensor     S  w    (  p  )        subscript  S  w   p    S_{w}(p)   cannot be factored in this way.)  Discrete version  In image processing and other similar applications, the function   I   I   I   is usually given as a discrete array of samples    I   [  p  ]       I   delimited-[]  p     I[p]   , where p is a pair of integer indices. The 2D structure tensor at a given pixel is usually taken to be the discrete sum        S  w    [  p  ]    =   [        ∑  r     w   [  r  ]     (    I  x    [   p  -  r   ]    )   2          ∑  r     w   [  r  ]    I  x    [   p  -  r   ]    I  y    [   p  -  r   ]            ∑  r     w   [  r  ]    I  x    [   p  -  r   ]    I  y    [   p  -  r   ]          ∑  r     w   [  r  ]     (    I  y    [   p  -  r   ]    )   2        ]          subscript  S  w    delimited-[]  p        subscript   r     w   delimited-[]  r    superscript     subscript  I  x    delimited-[]    p  r     2       subscript   r     w   delimited-[]  r    subscript  I  x    delimited-[]    p  r     subscript  I  y    delimited-[]    p  r          subscript   r     w   delimited-[]  r    subscript  I  x    delimited-[]    p  r     subscript  I  y    delimited-[]    p  r        subscript   r     w   delimited-[]  r    superscript     subscript  I  y    delimited-[]    p  r     2         S_{w}[p]=\begin{bmatrix}\sum_{r}w[r](I_{x}[p-r])^{2}&\sum_{r}w[r]I_{x}[p-r]I_{%
 y}[p-r]\\
 \sum_{r}w[r]I_{x}[p-r]I_{y}[p-r]&\sum_{r}w[r](I_{y}[p-r])^{2}\end{bmatrix}     Here the summation index r ranges over a finite set of index pairs (the "window", typically     {  -  m  .  .  +  m  }   ×   {  -  m  .  .  +  m  }      fragments   fragments  normal-{   m  normal-.  normal-.   m  normal-}     fragments  normal-{   m  normal-.  normal-.   m  normal-}     \{-m..+m\}\times\{-m..+m\}   for some m ), and w [ r ] is a fixed "window weight" that depends on r , such that the sum of all weights is 1. The values      I  x    [  p  ]    ,    I  y    [  p  ]          subscript  I  x    delimited-[]  p       subscript  I  y    delimited-[]  p      I_{x}[p],I_{y}[p]   are the partial derivatives sampled at pixel p ; which, for instance, may be estimated from by   I   I   I   by finite difference formulas.  The formula of the structure tensor can be written also as      S  w    [  p  ]    =    ∑  r    w   [  r  ]    S  0    [   p  -  r   ]            subscript  S  w    delimited-[]  p      subscript   r     w   delimited-[]  r    subscript  S  0    delimited-[]    p  r        S_{w}[p]=\sum_{r}w[r]S_{0}[p-r]   , where    S  0     subscript  S  0    S_{0}   is the matrix-valued array such that        S  0    [  p  ]    =   [       (    I  x    [  p  ]    )   2       I  x    [  p  ]    I  y    [  p  ]          I  x    [  p  ]    I  y    [  p  ]        (    I  y    [  p  ]    )   2      ]          subscript  S  0    delimited-[]  p       superscript     subscript  I  x    delimited-[]  p    2      subscript  I  x    delimited-[]  p    subscript  I  y    delimited-[]  p         subscript  I  x    delimited-[]  p    subscript  I  y    delimited-[]  p     superscript     subscript  I  y    delimited-[]  p    2       S_{0}[p]=\begin{bmatrix}(I_{x}[p])^{2}&I_{x}[p]I_{y}[p]\\
 I_{x}[p]I_{y}[p]&(I_{y}[p])^{2}\end{bmatrix}     Interpretation  The importance of the 2D structure tensor    S  w     subscript  S  w    S_{w}   stems from the fact that its eigenvalues      λ  1   ,   λ  2       subscript  λ  1    subscript  λ  2     \lambda_{1},\lambda_{2}   (which can be ordered so that     λ  1   ≥   λ  2   ≥  0         subscript  λ  1    subscript  λ  2        0     \lambda_{1}\geq\lambda_{2}\geq 0   ) and the corresponding eigenvectors      e  1   ,   e  2       subscript  e  1    subscript  e  2     e_{1},e_{2}   summarize the distribution of the gradient      ∇  I   =   (   I  x   ,   I  y   )        normal-∇  I     subscript  I  x    subscript  I  y      \nabla I=(I_{x},I_{y})   of   I   I   I   within the window defined by   w   w   w   centered at   p   p   p   . 2 3 4  Namely, if     λ  1   >   λ  2        subscript  λ  1    subscript  λ  2     \lambda_{1}>\lambda_{2}   , then    e  1     subscript  e  1    e_{1}   (or    -   e  1        subscript  e  1     -e_{1}   ) is the direction that is maximally aligned with the gradient within the window. In particular, if      λ  1   >  0   ,    λ  2   =  0      formulae-sequence     subscript  λ  1   0      subscript  λ  2   0     \lambda_{1}>0,\lambda_{2}=0   then the gradient is always a multiple of    e  1     subscript  e  1    e_{1}   (positive, negative or zero); this is the case if and only if   I   I   I   within the window varies along the direction    e  1     subscript  e  1    e_{1}   but is constant along    e  2     subscript  e  2    e_{2}   .  If     λ  1   =   λ  2        subscript  λ  1    subscript  λ  2     \lambda_{1}=\lambda_{2}   , on the other hand, the gradient in the window has no predominant direction; which happens, for instance, when the image has rotational symmetry within that window. In particular,     λ  1   =   λ  2   =  0         subscript  λ  1    subscript  λ  2        0     \lambda_{1}=\lambda_{2}=0   if and only if the function   I   I   I   is constant (     ∇  I   =   (  0  ,  0  )        normal-∇  I    0  0     \nabla I=(0,0)   ) within   W   W   W   .  More generally, the value of    λ  k     subscript  λ  k    \lambda_{k}   , for k =1 or k =2, is the   w   w   w   -weighted average, in the neighborhood of p , of the square of the directional derivative of   I   I   I   along    e  k     subscript  e  k    e_{k}   . The relative discrepancy between the two eigenvalues of    S  w     subscript  S  w    S_{w}   is an indicator of the degree of anisotropy of the gradient in the window, namely how strongly is it biased towards a particular direction (and its opposite). 5 6 This attribute can be quantified by the coherence , defined as       c  w   =    (     λ  1   -   λ  2      λ  1   +   λ  2     )   2        subscript  c  w    superscript       subscript  λ  1    subscript  λ  2       subscript  λ  1    subscript  λ  2     2     c_{w}=\left(\frac{\lambda_{1}-\lambda_{2}}{\lambda_{1}+\lambda_{2}}\right)^{2}     if     λ  2   >  0       subscript  λ  2   0    \lambda_{2}>0   . This quantity is 1 when the gradient is totally aligned, and 0 when it has no preferred direction. The formula is undefined, even in the limit , when the image is constant in the window (     λ  1   =   λ  2   =  0         subscript  λ  1    subscript  λ  2        0     \lambda_{1}=\lambda_{2}=0   ). Some authors define it as 0 in that case.  Note that the average of the gradient    ∇  I     normal-∇  I    \nabla I   inside the window is not a good indicator of anisotropy. Aligned but oppositely oriented gradient vectors would cancel out in this average, whereas in the structure tensor they are properly added together. 7  By expanding the effective radius of the window function   w   w   w   (that is, increasing its variance), one can make the structure tensor more robust in the face of noise, at the cost of diminished spatial resolution. 8 9 The formal basis for this property is described in more detail below, where it is shown that a multi-scale formulation of the structure tensor, referred to as the multi-scale structure tensor , constitutes a true multi-scale representation of directional data under variations of the spatial extent of the window function .  The 3D structure tensor  Definition  The structure tensor can be defined also for a function   I   I   I   of three variables p =( x , y , z ) in an entirely analogous way. Namely, in the continuous version we have      S  w    (  p  )    =   ∫   w   (  r  )    S  0    (   p  -  r   )   d  r           subscript  S  w   p       w  r   subscript  S  0     p  r   d  r      S_{w}(p)=\int w(r)S_{0}(p-r)\,dr   , where        S  0    (  p  )    =   [       (    I  x    (  p  )    )   2       I  x    (  p  )    I  y    (  p  )        I  x    (  p  )    I  z    (  p  )          I  x    (  p  )    I  y    (  p  )        (    I  y    (  p  )    )   2       I  y    (  p  )    I  z    (  p  )          I  x    (  p  )    I  z    (  p  )        I  y    (  p  )    I  z    (  p  )        (    I  z    (  p  )    )   2      ]          subscript  S  0   p      superscript     subscript  I  x   p   2      subscript  I  x   p   subscript  I  y   p      subscript  I  x   p   subscript  I  z   p        subscript  I  x   p   subscript  I  y   p    superscript     subscript  I  y   p   2      subscript  I  y   p   subscript  I  z   p        subscript  I  x   p   subscript  I  z   p      subscript  I  y   p   subscript  I  z   p    superscript     subscript  I  z   p   2       S_{0}(p)=\begin{bmatrix}(I_{x}(p))^{2}&I_{x}(p)I_{y}(p)&I_{x}(p)I_{z}(p)\\
 I_{x}(p)I_{y}(p)&(I_{y}(p))^{2}&I_{y}(p)I_{z}(p)\\
 I_{x}(p)I_{z}(p)&I_{y}(p)I_{z}(p)&(I_{z}(p))^{2}\end{bmatrix}   where     I  x   ,   I  y   ,   I  z       subscript  I  x    subscript  I  y    subscript  I  z     I_{x},I_{y},I_{z}   are the three partial derivatives of   I   I   I   , and the integral ranges over    ℝ  3     superscript  ℝ  3    \mathbb{R}^{3}   .  In the discrete version,      S  w    [  p  ]    =    ∑  r    w   [  r  ]    S  0    [   p  -  r   ]            subscript  S  w    delimited-[]  p      subscript   r     w   delimited-[]  r    subscript  S  0    delimited-[]    p  r        S_{w}[p]=\sum_{r}w[r]S_{0}[p-r]   , where        S  0    [  p  ]    =   [       (    I  x    [  p  ]    )   2       I  x    [  p  ]    I  y    [  p  ]        I  x    [  p  ]    I  z    [  p  ]          I  x    [  p  ]    I  y    [  p  ]        (    I  y    [  p  ]    )   2       I  y    [  p  ]    I  z    [  p  ]          I  x    [  p  ]    I  z    [  p  ]        I  y    [  p  ]    I  z    [  p  ]        (    I  z    [  p  ]    )   2      ]          subscript  S  0    delimited-[]  p       superscript     subscript  I  x    delimited-[]  p    2      subscript  I  x    delimited-[]  p    subscript  I  y    delimited-[]  p       subscript  I  x    delimited-[]  p    subscript  I  z    delimited-[]  p         subscript  I  x    delimited-[]  p    subscript  I  y    delimited-[]  p     superscript     subscript  I  y    delimited-[]  p    2      subscript  I  y    delimited-[]  p    subscript  I  z    delimited-[]  p         subscript  I  x    delimited-[]  p    subscript  I  z    delimited-[]  p       subscript  I  y    delimited-[]  p    subscript  I  z    delimited-[]  p     superscript     subscript  I  z    delimited-[]  p    2       S_{0}[p]=\begin{bmatrix}(I_{x}[p])^{2}&I_{x}[p]I_{y}[p]&I_{x}[p]I_{z}[p]\\
 I_{x}[p]I_{y}[p]&(I_{y}[p])^{2}&I_{y}[p]I_{z}[p]\\
 I_{x}[p]I_{z}[p]&I_{y}[p]I_{z}[p]&(I_{z}[p])^{2}\end{bmatrix}   and the sum ranges over a finite set of 3D indices, usually     {  -  m  .  .  +  m  }   ×   {  -  m  .  .  +  m  }   ×   {  -  m  .  .  +  m  }      fragments   fragments  normal-{   m  normal-.  normal-.   m  normal-}     fragments  normal-{   m  normal-.  normal-.   m  normal-}     fragments  normal-{   m  normal-.  normal-.   m  normal-}     \{-m..+m\}\times\{-m..+m\}\times\{-m..+m\}   for some m .  Interpretation  As in the two-dimensional case, the eigenvalues     λ  1   ,   λ  2   ,   λ  3       subscript  λ  1    subscript  λ  2    subscript  λ  3     \lambda_{1},\lambda_{2},\lambda_{3}   of     S  w    [  p  ]        subscript  S  w    delimited-[]  p     S_{w}[p]   , and the corresponding eigenvectors     e  1   ,   e  2   ,   e  3       subscript  e  1    subscript  e  2    subscript  e  3     e_{1},e_{2},e_{3}   , summarize the distribution of gradient directions within the neighborhood of p defined by the window   w   w   w   . This information can be visualized as an ellipsoid whose semi-axes are equal to the eigenvalues and directed along their corresponding eigenvectors. 10  (Figure)  Ellipsoidal representation of the 3D structure tensor.   In particular, if the ellipsoid is stretched along one axis only, like a cigar (that is, if    λ  1     subscript  λ  1    \lambda_{1}   is much larger than both    λ  2     subscript  λ  2    \lambda_{2}   and    λ  3     subscript  λ  3    \lambda_{3}   ), it means that the gradient in the window is predominantly aligned with the direction    e  1     subscript  e  1    e_{1}   , so that the isosurfaces of   I   I   I   tend to be flat and perpendicular to that vector. This situation occurs, for instance, when p lies on a thin plate-like feature, or on the smooth boundary between two regions with contrasting values.      (Figure)  The structure tensor ellipsoid of a surface-like neighborhood (" surfel "), where     λ  1   >  >   λ  2   ≈   λ  3      fragments   subscript  λ  1      subscript  λ  2     subscript  λ  3     \lambda_{1}>\!>\lambda_{2}\approx\lambda_{3}   .   (Figure)  A 3D window straddling a smooth boundary surface between two uniform regions of a 3D image.   (Figure)  The corresponding structure tensor ellipsoid.       If the ellipsoid is flattened in one direction only, like a pancake (that is, if    λ  3     subscript  λ  3    \lambda_{3}   is much smaller than both    λ  1     subscript  λ  1    \lambda_{1}   and    λ  2     subscript  λ  2    \lambda_{2}   ), it means that the gradient directions are spread out but perpendicular to    e  3     subscript  e  3    e_{3}   ; so that the isosurfaces tend to be like tubes parallel to that vector. This situation occurs, for instance, when p lies on a thin line-like feature, or on a sharp corner of the boundary between two regions with contrasting values.      (Figure)  The structure tensor of a line-like neighborhood ("curvel"), where     λ  1   ≈   λ  2   >  >   λ  3      fragments   subscript  λ  1     subscript  λ  2      subscript  λ  3     \lambda_{1}\approx\lambda_{2}>\!>\lambda_{3}   .   (Figure)  A 3D window straddling a line-like feature of a 3D image.   (Figure)  The corresponding structure tensor ellipsoid.       Finally, if the ellipsoid is roughly spherical (that is, if     λ  1   ≈   λ  2   ≈   λ  3          subscript  λ  1    subscript  λ  2         subscript  λ  3      \lambda_{1}\approx\lambda_{2}\approx\lambda_{3}   ), it means that the gradient directions in the window are more or less evenly distributed, with no marked preference; so that the function   I   I   I   is mostly isotropic in that neighborhood. This happens, for instance, when the function has spherical symmetry in the neighborhood of p . In particular, if the ellipsoid degenerates to a point (that is, if the three eigenvalues are zero), it means that   I   I   I   is constant (has zero gradient) within the window.      (Figure)  The structure tensor in an isotropic neighborhood, where     λ  1   ≈   λ  2   ≈   λ  3          subscript  λ  1    subscript  λ  2         subscript  λ  3      \lambda_{1}\approx\lambda_{2}\approx\lambda_{3}   .   (Figure)  A 3D window containing a spherical feature of a 3D image.   (Figure)  The corresponding structure tensor ellipsoid.       The multi-scale structure tensor  The structure tensor is an important tool in scale space analysis. The multi-scale structure tensor (or multi-scale second moment matrix ) of a function   I   I   I   is in contrast to other one-parameter scale-space features an image descriptor that is defined over two scale parameters. One scale parameter, referred to as local scale    t   t   t   , is needed for determining the amount of pre-smoothing when computing the image gradient     (   ∇  I   )    (  x  ;  t  )        normal-∇  I    x  t     (\nabla I)(x;t)   . Another scale parameter, referred to as integration scale    s   s   s   , is needed for specifying the spatial extent of the window function    w   (  ξ  ;  s  )       w   ξ  s     w(\xi;s)   that determines the weights for the region in space over which the components of the outer product of the gradient by itself     (   ∇  I   )     (   ∇  I   )   T        normal-∇  I    superscript   normal-∇  I   T     (\nabla I)(\nabla I)^{T}   are accumulated.  More precisely, suppose that   I   I   I   is a real-valued signal defined over    ℝ  k     superscript  ℝ  k    \mathbb{R}^{k}   . For any local scale    t  >  0      t  0    t>0   , let a multi-scale representation    I   (  x  ;  t  )       I   x  t     I(x;t)   of this signal be given by     I   (  x  ;  t  )    =     h   (  x  ;  t  )    *  I    (  x  )          I   x  t          h   x  t    I   x     I(x;t)=h(x;t)*I(x)   where    h   (  x  ;  t  )       h   x  t     h(x;t)   represents a pre-smoothing kernel. Furthermore, let     (   ∇  I   )    (  x  ;  t  )        normal-∇  I    x  t     (\nabla I)(x;t)   denote the gradient of the scale space representation . Then, the multi-scale structure tensor/second-moment matrix is defined by 11 12  J. Garding and T. Lindeberg (1996). "Direct  computation  of  shape  cues  using  scale-adapted  spatial  derivative  operators , International Journal of Computer Vision, volume 17, issue 2, pages 163--191.        μ   (  x  ;  t  ,  s  )    =    ∫   ξ  ∈   ℝ  k       (   ∇  I   )    (   x  -  ξ   ;  t  )     (   ∇  I   )   T    (   x  -  ξ   ;  t  )   w   (  ξ  ;  s  )   d  ξ          μ   x  t  s      subscript     ξ   superscript  ℝ  k        normal-∇  I      x  ξ   t    superscript   normal-∇  I   T      x  ξ   t   w   ξ  s   d  ξ      \mu(x;t,s)=\int_{\xi\in\mathbb{R}^{k}}(\nabla I)(x-\xi;t)\,(\nabla I)^{T}(x-%
 \xi;t)\,w(\xi;s)\,d\xi   Conceptually, one may ask if it would be sufficient to use any self-similar families of smoothing functions    h   (  x  ;  t  )       h   x  t     h(x;t)   and    w   (  ξ  ;  s  )       w   ξ  s     w(\xi;s)   . If one naively would apply, for example, a box filter, however, then non-desirable artifacts could easily occur. If one wants the multi-scale structure tensor to be well-behaved over both increasing local scales   t   t   t   and increasing integration scales   s   s   s   , then it can be shown that both the smoothing function and the window function have to be Gaussian. 13 The conditions that specify this uniqueness are similar to the scale-space axioms that are used for deriving the uniqueness of the Gaussian kernel for a regular Gaussian scale space of image intensities.  There are different ways of handling the two-parameter scale variations in this family of image descriptors. If we keep the local scale parameter   t   t   t   fixed and apply increasingly broadened versions of the window function by increasing the integration scale parameter   s   s   s   only, then we obtain a true formal scale space representation of the directional data computed at the given local scale    t   t   t   . 14 If we couple the local scale and integration scale by a relative integration scale     r  ≥  1      r  1    r\geq 1   , such that    s  =   r  t       s    r  t     s=rt   then for any fixed value of   r   r   r   , we obtain a reduced self-similar one-parameter variation, which is frequently used to simplify computational algorithms, for example in corner detection , interest point detection , texture analysis and image matching . By varying the relative integration scale    r  ≥  1      r  1    r\geq 1   in such a self-similar scale variation, we obtain another alternative way of parameterizing the multi-scale nature of directional data obtained by increasing the integration scale.  A conceptually similar construction can be performed for discrete signals, with the convolution integral replaced by a convolution sum and with the continuous Gaussian kernel    g   (  x  ;  t  )       g   x  t     g(x;t)   replaced by the discrete Gaussian kernel     T   (  n  ;  t  )       T   n  t     T(n;t)   :       μ   (  x  ;  t  ,  s  )    =    ∑   n  ∈   ℤ  k       (   ∇  I   )    (   x  -  n   ;  t  )     (   ∇  I   )   T    (   x  -  n   ;  t  )   w   (  n  ;  s  )           μ   x  t  s      subscript     n   superscript  ℤ  k        normal-∇  I      x  n   t    superscript   normal-∇  I   T      x  n   t   w   n  s       \mu(x;t,s)=\sum_{n\in\mathbb{Z}^{k}}(\nabla I)(x-n;t)\,(\nabla I)^{T}(x-n;t)\,%
 w(n;s)   When quantizing the scale parameters   t   t   t   and   s   s   s   in an actual implementation, a finite geometric progression    α  i     superscript  α  i    \alpha^{i}   is usually used, with i ranging from 0 to some maximum scale index m . Thus, the discrete scale levels will bear certain similarities to image pyramid , although spatial subsampling may not necessarily be used in order to preserve more accurate data for subsequent processing stages.  Applications  The eigenvalues of the structure tensor play a significant role in many image processing algorithms, for problems like corner detection , interest point detection , and feature tracking . 15                16 The structure tensor also plays a central role in the Lucas-Kanade optical flow algorithm , and in its extensions to estimate affine shape adaptation ; 17 where the magnitude of    λ  2     subscript  λ  2    \lambda_{2}   is an indicator of the reliability of the computed result. The tensor has also been used for scale space analysis, 18 estimation of local surface orientation from monocular or binocular cues, 19 non-linear fingerprint enhancement ,  A. Almansa and T. Lindeberg (2000), Enhancement  of  fingerprint  images  using  shape-adaptated  scale-space  operators .  IEEE Transactions on Image Processing, volume 9, number 12, pages 2027-2042.   diffusion-based image processing , 20 21 22 23 and several other image processing problems.  Processing spatio-temporal video data with the structure tensor  The three-dimensional structure tensor has been used to analyze three-dimensional video data (viewed as a function of x , y , and time t ). 24 If one in this context aims at image descriptors that are invariant under Galilean transformations, to make it possible to compare image measurements that have been obtained under variations of a priori unknown image velocities    v  =    (   v  x   ,   v  y   )   T       v   superscript    subscript  v  x    subscript  v  y    T     v=(v_{x},v_{y})^{T}          [      x  ′        y  ′        t  ′      ]   =   G   [     x      y      t     ]    =   G   [      x  -     v  x    t         y  -     v  y    t        t     ]             superscript  x  normal-′      superscript  y  normal-′      superscript  t  normal-′       G    x    y    t            G      x     subscript  v  x   t        y     subscript  v  y   t      t        \begin{bmatrix}x^{\prime}\\
 y^{\prime}\\
 t^{\prime}\end{bmatrix}=G\begin{bmatrix}x\\
 y\\
 t\end{bmatrix}=G\begin{bmatrix}x-v_{x}\,t\\
 y-v_{y}\,t\\
 t\end{bmatrix}   , it is, however, from a computational viewpoint more preferable to parameterize the components in the structure tensor/second-moment matrix   S   S   S   using the notion of Galilean diagonalization 25       S  ′   =     R   s  p  a  c  e    -  T       G   -  T      S     G   -  1      R   s  p  a  c  e    -  1     =   [      ν  1                 ν  2                 ν  3      ]          superscript  S  normal-′      superscript   subscript  R    s  p  a  c  e      T     superscript  G    T    S   superscript  G    1     superscript   subscript  R    s  p  a  c  e      1             subscript  ν  1   absent  absent    absent   subscript  ν  2   absent    absent  absent   subscript  ν  3        S^{\prime}=R_{space}^{-T}\,G^{-T}\,S\,G^{-1}\,R_{space}^{-1}=\begin{bmatrix}%
 \nu_{1}&&\\
 &\nu_{2}&\\
 &&\nu_{3}\end{bmatrix}   where   G   G   G   denotes a Galilean transformation of space-time and    R   s  p  a  c  e      subscript  R    s  p  a  c  e     R_{space}   a two-dimensional rotation over the spatial domain, compared to the abovementioned use of eigenvalues of a 3-D structure tensor, which corresponds to an eigenvalue decomposition and a (non-physical) three-dimensional rotation of space-time       S  ′′   =     R    s  p  a  c  e   -   t  i  m  e     -  T      S    R    s  p  a  c  e   -   t  i  m  e     -  1     =   [      λ  1                 λ  2                 λ  3      ]          superscript  S  ′′      superscript   subscript  R      s  p  a  c  e     t  i  m  e       T    S   superscript   subscript  R      s  p  a  c  e     t  i  m  e       1             subscript  λ  1   absent  absent    absent   subscript  λ  2   absent    absent  absent   subscript  λ  3        S^{\prime\prime}=R_{space-time}^{-T}\,S\,R_{space-time}^{-1}=\begin{bmatrix}%
 \lambda_{1}&&\\
 &\lambda_{2}&\\
 &&\lambda_{3}\end{bmatrix}   . To obtain true Galilean invariance, however, also the shape of the spatio-temporal window function needs to be adapted, 26 27 corresponding to the transfer of affine shape adaptation 28 from spatial to spatio-temporal image data. In combination with local spatio-temporal histogram descriptors, 29 these concepts together allow for Galilean invariant recognition of spatio-temporal events. 30  See also   Tensor  Tensor operator  Directional derivative  Gaussian  Corner detection  Edge detection  Lucas-Kanade method  Affine shape adaptation   References    Resources   [ http://www.mathworks.com/matlabcentral/fileexchange/loadFile.do?objectId=12362&objectType; ;=FILE Download MATLAB Source]  Structure Tensor Tutorial (Original)   "  Category:Tensors  Category:Feature detection (computer vision)     ↩     ↩  ↩  ↩   T. Lindeberg (1994), Scale-Space Theory in Computer Vision . Kluwer Academic Publishers, (see sections 14.4.1 and 14.2.3 on pages 359-360 and 355-356 for detailed statements about how the multi-scale second-moment matrix/structure tensor defines a true and uniquely determined multi-scale representation of directional data). ↩    ↩    ↩  ↩     J. Weickert (1998), Anisotropic diffusion in image processing, Teuber Verlag, Stuttgart. ↩  ↩  ↩  ↩   ↩   ↩   ↩  ↩     