   Tensor product      Tensor product   In mathematics , the tensor product , denoted by   ⊗   normal-⊗   ⊗   , may be applied in different contexts to vectors , matrices , tensors , vector spaces , algebras , topological vector spaces , and modules , among many other structures or objects. In each case the significance of the symbol is the same: the freest bilinear operation . In some contexts, this product is also referred to as outer product . The term "tensor product" is also used in relation to monoidal categories . The   ⊠   normal-⊠   \boxtimes   variant of   ⊗   normal-⊗   ⊗   is used in control theory .  Tensor product of vector spaces  The tensor product of two vector spaces    V   V   V   and   W   W   W   over a field    K   K   K   is another vector space over   K   K   K   . It is denoted , or    V  ⊗  W      V  normal-⊗  W    V⊗W   when the underlying field   K   K   K   is understood.  Prerequisite: the free vector space  The definition of   ⊗   normal-⊗   ⊗   requires the notion of the free vector space     F   (  S  )       F  S    F(S)   on some set    S   S   S   . The elements of the vector space    F   (  S  )       F  S    F(S)   are formal sums of elements of   S   S   S   with coefficients in a given field   K   K   K   . A formal sum is an expression written in the form of a sum in which no actual arithmetic operations can be carried out. For example     2  a   +   3  b         2  a     3  b     2a+3b   is a formal sum, and     1  −   x        1  normal-−   x    \frac{1−}{x}   is a formal sum with no restrictions on values of   x   x   x   (versus the usual case where   S   S   S     Addition of formal sums is defined as follows: if    m  =  n      m  n    m=n   , cannot be simplified. If   k   k   k   , then .  Scalar multiplication of formal sums is defined as follows: If   K   K   K   is in the field   S   S   S   , then  .  The dimension of the vector space equals the number of elements in   V   V   V   .  Definition  Given two vector spaces   W   W   W   and   K   K   K   over a field   U   U   U   , the tensor product   V   V   V   of   W   W   W   and    U  =   V  ⊗  W       U    V  normal-⊗  W     U=V⊗W   , denoted as    V  ×  W      V  normal-×  W    V×W   is defined as the vector space whose elements and operations are constructed as follows:  From the cartesian product     F   (   V  ×  W   )       F    V  normal-×  W     F(V×W)   , the free vector space   K   K   K   over    V  ⊗  W      V  normal-⊗  W    V⊗W   is formed. The vectors of    F   (   V  ×  W   )       F    V  normal-×  W     F(V×W)   are then defined to be the equivalence classes of    v  ;  ,   v  1   ,   v  2   ∈  V  ;  w  ,   w  1   ,   w  2   ∈  W  ;  c  ∈  K  ;     fragments  v  normal-;  normal-,   subscript  v  1   normal-,   subscript  v  2    V  normal-;  w  normal-,   subscript  w  1   normal-,   subscript  w  2    W  normal-;  c   K  normal-;    \displaystyle v;,v_{1},v_{2}\in V;w,w_{1},w_{2}\in W;c\in K;   under the following equivalence relations:      V  ⊗  W      V  normal-⊗  W    V⊗W     The operations of    +  :  U  ×  U  →  U     fragments   normal-:  U  ×  U  →  U    +:U×U→U   , i.e. the map of vector addition    ⋅  :   K  ×  U  →  U      normal-:  normal-⋅    K  normal-×  U  normal-→  U     ⋅:K×U→U   and scalar multiplication    F   (   V  ×  W   )       F    V  normal-×  W     F(V×W)   are defined to be the respective operations and from      u  ~   1   ,    u  ~   2       subscript   normal-~  u   1    subscript   normal-~  u   2     \tilde{u}_{1},\tilde{u}_{2}   , acting on any representatives          u  ~   1   ∈   u  1    ,     u  ~   2   ∈   u  2   ⇒   (  +  )     :    (   u  1   ,   u  2   )   ↦   [     u  ~   1    +  F     u  ~   2    ]       normal-:   formulae-sequence     subscript   normal-~  u   1    subscript  u  1         subscript   normal-~  u   2    subscript  u  2     normal-⇒         maps-to    subscript  u  1    subscript  u  2     delimited-[]    subscript   F    subscript   normal-~  u   1    subscript   normal-~  u   2        \tilde{u}_{1}\in u_{1},\tilde{u}_{2}\in u_{2}\Rightarrow(+):(u_{1},u_{2})%
 \mapsto[\tilde{u}_{1}+_{F}\tilde{u}_{2}]   in the involved equivalence classes outputting the one equivalence class of the result.         u  ~   1   ∈   u  1   ⇒   (  ⋅  )    :    (  c  ,   u  1   )   ↦   [   c   ⋅  F     u  ~   1    ]       normal-:       subscript   normal-~  u   1    subscript  u  1     normal-⇒    normal-⋅     maps-to   c   subscript  u  1     delimited-[]    subscript  normal-⋅  F   c   subscript   normal-~  u   1        \tilde{u}_{1}\in u_{1}\Rightarrow(\cdot):(c,u_{1})\mapsto[c\cdot_{F}\tilde{u}_%
 {1}]         V  ⊗  W      V  normal-⊗  W    V⊗W     The result is independent of which representatives of the involved classes have been chosen. In other words, the operations are well-defined.  In other words, the tensor product     F   (   V  ×  W   )    /  N        F    V  normal-×  W    N    F(V×W)/N   is defined as the quotient space    N   N   N   , where    F   (   V  ×  W   )       F    V  normal-×  W     F(V×W)   is the subspace of    N  =   ∅  ∅       N    normal-∅  normal-∅     N=∅∅   consisting of the equivalence class of the zero element,    ∅  ∈  F   (   V  ×  W   )       normal-∅  normal-∈  F    V  normal-×  W     ∅∈F(V×W)   ,   N   N   N   , under the equivalence relation of above. The following expression explicitly gives the subspace    N  =   {  n  ∈  F   (  V  ×  W  )   |      fragments  N    fragments  normal-{  n   F   fragments  normal-(  V   W  normal-)   normal-|     \displaystyle N=\{n\in F(V\times W)\,|   :     N   N   N     In the quotient, where     (   v  1   ,   w  1   )   +   (   v  2   ,   w  1   )         subscript  v  1    subscript  w  1      subscript  v  2    subscript  w  1      \displaystyle(v_{1},w_{1})+(v_{2},w_{1})   is mapped to the zero vector, the following equalities,      F   (   V  ×  W   )       F    V  normal-×  W     F(V×W)   all hold (unlike in    V  ⊗  W      V  normal-⊗  W    V⊗W   ), which is exactly what is desired. In these latter expressions, the , etc, are images in the quotient of vectors in the free product under the quotient map. Usually, some other notation is employed for them, see below.  Notation  Elements of   v   v   v   are often referred to as tensors , although this term refers to many other related concepts as well. 1 If   V   V   V   belongs to   w   w   w   and   W   W   W   belongs to    (  v  ,  w  )     v  w    (v,w)   , then the equivalence class of    v  ⊗  w      v  normal-⊗  w    v⊗w   is denoted by    "  ⊗  "      normal-"  normal-⊗  normal-"    "⊗"   , which is called the tensor product of v with w . In physics and engineering, this use of the    v  ⊗  w      v  normal-⊗  w    v⊗w   symbol refers specifically to the outer product operation; the result of the outer product    v  ⊗  w      v  normal-⊗  w    v⊗w   is one of the standard ways of representing the equivalence class    V  ⊗  W      V  normal-⊗  W    V⊗W   . 2 An element of    v  ⊗  w      v  normal-⊗  w    v⊗w   that can be written in the form    (  1  ,  1  )     1  1    (1,1)   is called a pure or simple tensor . In general, an element of the tensor product space is not a pure tensor, but rather a finite linear combination of pure tensors. For example, if and are linearly independent , and and are also linearly independent, then cannot be written as a pure tensor. The number of simple tensors required to express an element of a tensor product is called the tensor rank (not to be confused with tensor order , which is the number of spaces one has taken the product of, in this case 2; in notation, the number of indices), and for linear operators or matrices, thought of as   V   V   V   tensors (elements of the space ), it agrees with matrix rank .  Dimension  Given bases  and  for   W   W   W   and    V  ⊗  W      V  normal-⊗  W    V⊗W   respectively, the tensors  form a basis for    m  n      m  n    mn   . The dimension of the tensor product therefore is the product of dimensions of the original spaces; for instance will have dimension    S  :   V  →  X      normal-:  S    V  normal-→  X     S:V→X   .  Tensor product of linear maps  The tensor product also operates on linear maps between vector spaces. Specifically, given two linear maps    T  :   W  →  Y      normal-:  T    W  normal-→  Y     T:W→Y   and   S   S   S   between vector spaces, the tensor product of the two linear maps    T   T   T   and     S  ⊗  T   :    V  ⊗  W   →   X  ⊗  Y       normal-:   tensor-product  S  T    normal-→   tensor-product  V  W    tensor-product  X  Y      S\otimes T:V\otimes W\rightarrow X\otimes Y   is a linear map         (   S  ⊗  T   )    (   v  ⊗  w   )    =     S   (  v  )    ⊗  T    (  w  )     .         tensor-product  S  T    tensor-product  v  w       tensor-product    S  v   T   w     (S\otimes T)(v\otimes w)=S(v)\otimes T(w).   defined by     S   S   S     In this way, the tensor product becomes a bifunctor from the category of vector spaces to itself, covariant in both arguments. 3  If   T   T   T   and    S  ⊗  T      S  normal-⊗  T    S⊗T   are both injective, surjective, or continuous then   S   S   S   is, respectively, injective, surjective, continuous.  By choosing bases of all vector spaces involved, the linear maps   T   T   T   and    S  ⊗  T      S  normal-⊗  T    S⊗T   can be represented by matrices . Then, the matrix describing the tensor product   V   V   V   is the Kronecker product of the two matrices. For example, if   X   X   X   ,   W   W   W   ,   Y   Y   Y   , and   S   S   S   above are all two-dimensional and bases have been fixed for all of them, and   T   T   T   and    [      a   1  ,  1       a   1  ,  2         a   2  ,  1       a   2  ,  2       ]       subscript  a   1  1     subscript  a   1  2       subscript  a   2  1     subscript  a   2  2       \begin{bmatrix}a_{1,1}&a_{1,2}\\
 a_{2,1}&a_{2,2}\\
 \end{bmatrix}   are given by the matrices    [      b   1  ,  1       b   1  ,  2         b   2  ,  1       b   2  ,  2       ]       subscript  b   1  1     subscript  b   1  2       subscript  b   2  1     subscript  b   2  2       \begin{bmatrix}b_{1,1}&b_{1,2}\\
 b_{2,1}&b_{2,2}\\
 \end{bmatrix}   and       [      a   1  ,  1       a   1  ,  2         a   2  ,  1       a   2  ,  2       ]   ⊗   [      b   1  ,  1       b   1  ,  2         b   2  ,  1       b   2  ,  2       ]    =   [       a   1  ,  1     [      b   1  ,  1       b   1  ,  2         b   2  ,  1       b   2  ,  2       ]        a   1  ,  2     [      b   1  ,  1       b   1  ,  2         b   2  ,  1       b   2  ,  2       ]                  a   2  ,  1     [      b   1  ,  1       b   1  ,  2         b   2  ,  1       b   2  ,  2       ]        a   2  ,  2     [      b   1  ,  1       b   1  ,  2         b   2  ,  1       b   2  ,  2       ]       ]   =   [       a   1  ,  1     b   1  ,  1         a   1  ,  1     b   1  ,  2         a   1  ,  2     b   1  ,  1         a   1  ,  2     b   1  ,  2           a   1  ,  1     b   2  ,  1         a   1  ,  1     b   2  ,  2         a   1  ,  2     b   2  ,  1         a   1  ,  2     b   2  ,  2           a   2  ,  1     b   1  ,  1         a   2  ,  1     b   1  ,  2         a   2  ,  2     b   1  ,  1         a   2  ,  2     b   1  ,  2           a   2  ,  1     b   2  ,  1         a   2  ,  1     b   2  ,  2         a   2  ,  2     b   2  ,  1         a   2  ,  2     b   2  ,  2        ]    .         tensor-product     subscript  a   1  1     subscript  a   1  2       subscript  a   2  1     subscript  a   2  2         subscript  b   1  1     subscript  b   1  2       subscript  b   2  1     subscript  b   2  2            subscript  a   1  1       subscript  b   1  1     subscript  b   1  2       subscript  b   2  1     subscript  b   2  2          subscript  a   1  2       subscript  b   1  1     subscript  b   1  2       subscript  b   2  1     subscript  b   2  2         absent  absent       subscript  a   2  1       subscript  b   1  1     subscript  b   1  2       subscript  b   2  1     subscript  b   2  2          subscript  a   2  2       subscript  b   1  1     subscript  b   1  2       subscript  b   2  1     subscript  b   2  2                   subscript  a   1  1     subscript  b   1  1        subscript  a   1  1     subscript  b   1  2        subscript  a   1  2     subscript  b   1  1        subscript  a   1  2     subscript  b   1  2          subscript  a   1  1     subscript  b   2  1        subscript  a   1  1     subscript  b   2  2        subscript  a   1  2     subscript  b   2  1        subscript  a   1  2     subscript  b   2  2          subscript  a   2  1     subscript  b   1  1        subscript  a   2  1     subscript  b   1  2        subscript  a   2  2     subscript  b   1  1        subscript  a   2  2     subscript  b   1  2          subscript  a   2  1     subscript  b   2  1        subscript  a   2  1     subscript  b   2  2        subscript  a   2  2     subscript  b   2  1        subscript  a   2  2     subscript  b   2  2          \begin{bmatrix}a_{1,1}&a_{1,2}\\
 a_{2,1}&a_{2,2}\\
 \end{bmatrix}\otimes\begin{bmatrix}b_{1,1}&b_{1,2}\\
 b_{2,1}&b_{2,2}\\
 \end{bmatrix}=\begin{bmatrix}a_{1,1}\begin{bmatrix}b_{1,1}&b_{1,2}\\
 b_{2,1}&b_{2,2}\\
 \end{bmatrix}&a_{1,2}\begin{bmatrix}b_{1,1}&b_{1,2}\\
 b_{2,1}&b_{2,2}\\
 \end{bmatrix}\\
 &\\
 a_{2,1}\begin{bmatrix}b_{1,1}&b_{1,2}\\
 b_{2,1}&b_{2,2}\\
 \end{bmatrix}&a_{2,2}\begin{bmatrix}b_{1,1}&b_{1,2}\\
 b_{2,1}&b_{2,2}\\
 \end{bmatrix}\\
 \end{bmatrix}=\begin{bmatrix}a_{1,1}b_{1,1}&a_{1,1}b_{1,2}&a_{1,2}b_{1,1}&a_{1%
 ,2}b_{1,2}\\
 a_{1,1}b_{2,1}&a_{1,1}b_{2,2}&a_{1,2}b_{2,1}&a_{1,2}b_{2,2}\\
 a_{2,1}b_{1,1}&a_{2,1}b_{1,2}&a_{2,2}b_{1,1}&a_{2,2}b_{1,2}\\
 a_{2,1}b_{2,1}&a_{2,1}b_{2,2}&a_{2,2}b_{2,1}&a_{2,2}b_{2,2}\\
 \end{bmatrix}.   , respectively, then the tensor product of these two matrices is     v   v   v     The resultant rank is at most 4, and the resultant dimension 16. Here rank denotes the tensor rank (number of requisite indices), while the matrix rank counts the number of degrees of freedom in the resulting array.  A dyadic product is the special case of the tensor product between two vectors of the same dimension.  Universal property  The tensor product as defined above is a universal property . In this context, this means that the tensor product is uniquely defined, up to isomorphism: there is only one tensor product. In the context of linear algebra and vector spaces, the maps in question are required to be linear maps . The tensor product of vector spaces, as defined above, satisfies the following universal property: there is a bilinear map (i.e., linear in each variable   w   w   w   and    φ  :   V  ×  W  →  V  ⊗  W      normal-:  φ    V  normal-×  W  normal-→  V  normal-⊗  W     φ:V×W→V⊗W   )   Z   Z   Z   such that given any other vector space    h  :   V  ×  W  →  Z      normal-:  h    V  normal-×  W  normal-→  Z     h:V×W→Z   together with a bilinear map     :   V  ⊗  W  →  Z      normal-:  absent    V  normal-⊗  W  normal-→  Z     :V⊗W→Z   , there is a unique linear map    h  =   ∘  φ       h    normal-∘  φ     h=∘φ   satisfying   φ   φ   φ   . In this sense,    V  ×  W      V  normal-×  W    V×W   is the most general bilinear map that can be built from     φ  ′   :   V  ×  W  →  V  ⊗  ′  W      normal-:    φ  normal-′     V  normal-×  W  normal-→  V  normal-⊗  normal-′  W     φ′:V×W→V⊗′W   . In particular, this implies that any spaces with such a (uniquely defined) tensor product are examples of symmetric monoidal categories , as this is the defining characteristic of the category. Uniqueness of the tensor product means that for any other bilinear map    k  :   V  ⊗  W  →  V  ⊗  ′  W      normal-:  k    V  normal-⊗  W  normal-→  V  normal-⊗  normal-′  W     k:V⊗W→V⊗′W   with the above property there is an isomorphism     φ  ′   =   k  ∘  φ         φ  normal-′     k  normal-∘  φ     φ′=k∘φ   such that      V  ⊗  W   ≅   W  ⊗  V    .       tensor-product  V  W    tensor-product  W  V     V\otimes W\cong W\otimes V.   holds.  This characterization can simplify proving statements about the tensor product. For example, the tensor product is symmetric: that is, there is a canonical isomorphism :      V  ×  W  →  W  ⊗  V      V  normal-×  W  normal-→  W  normal-⊗  V    V×W→W⊗V   To construct, say, a map from left to right, it suffices, by the universal property, to give a bilinear map    (  v  ,  w  )     v  w    (v,w)   . This is done by mapping    w  ⊗  v      w  normal-⊗  v    w⊗v   to    V  ⊗  W  →  W  ⊗  V      V  normal-⊗  W  normal-→  W  normal-⊗  V    V⊗W→W⊗V   . Constructing a map in the opposite direction is done similarly, as is checking that the two linear maps    W  ⊗  V  →  V  ⊗  W      W  normal-⊗  V  normal-→  V  normal-⊗  W    W⊗V→V⊗W   and       V  1   ⊗   (    V  2   ⊗   V  3    )    ≅    (    V  1   ⊗   V  2    )   ⊗   V  3     .       tensor-product   subscript  V  1    tensor-product   subscript  V  2    subscript  V  3      tensor-product   tensor-product   subscript  V  1    subscript  V  2     subscript  V  3      V_{1}\otimes(V_{2}\otimes V_{3})\cong(V_{1}\otimes V_{2})\otimes V_{3}.   are inverse to one another.  Similar reasoning can be used to show that the tensor product is associative, that is, there are natural isomorphisms     n   n   n   Therefore, it is customary to omit the parentheses and write .  Tensor powers and braiding  Let   n   n   n   be a non-negative integer. The   V   V   V   th tensor power of the vector space   n   n   n   is the   V   V   V   -fold tensor product of       V    ⊗  n       =  def       V  ⊗  ⋯  ⊗  V   ⏟   n    .       superscript  V   tensor-product  absent  n     def     subscript   normal-⏟   tensor-product  V  normal-⋯  V    n     V^{\otimes n}\;\overset{\mathrm{def}}{=}\;\underbrace{V\otimes\cdots\otimes V}%
 _{n}.   with itself. That is     σ   σ   σ     A permutation    n   n   n   of the set  determines a mapping of the   V   V   V   th Cartesian power of    σ  :    V  n   →   V  n       normal-:  σ   normal-→   superscript  V  n    superscript  V  n      \sigma:V^{n}\to V^{n}           σ   (   v  1   ,   v  2   ,  …  ,   v  n   )    =   (   v   σ  1    ,   v   σ  2    ,  …  ,   v   σ  n    )    .        σ    subscript  v  1    subscript  v  2   normal-…   subscript  v  n       subscript  v    σ  1     subscript  v    σ  2    normal-…   subscript  v    σ  n       \sigma(v_{1},v_{2},\dots,v_{n})=(v_{\sigma 1},v_{\sigma 2},\dots,v_{\sigma n}).   defined by      φ  :    V  n   →   V    ⊗  n        normal-:  φ   normal-→   superscript  V  n    superscript  V   tensor-product  absent  n       \varphi:V^{n}\to V^{\otimes n}     Let     V   V   V   be the natural multilinear embedding of the Cartesian power of   V   V   V   into the tensor power of     τ  σ   :    V    ⊗  n    →   V    ⊗  n        normal-:   subscript  τ  σ    normal-→   superscript  V   tensor-product  absent  n     superscript  V   tensor-product  absent  n       \tau_{\sigma}:V^{\otimes n}\to V^{\otimes n}   . Then, by the universal property, there is a unique isomorphism        φ  ∘  σ   =    τ  σ   ∘  φ    .        φ  σ      subscript  τ  σ   φ     \varphi\circ\sigma=\tau_{\sigma}\circ\varphi.   such that     σ   σ   σ     The isomorphism is called the braiding map associated to the permutation   r   r   r   .  Product of tensors  For non-negative integers   s   s   s   and    (  r  ,  s  )     r  s    (r,s)   a   V   V   V   - tensor on a vector space       T  s  r    (  V  )    =      V  ⊗  …  ⊗  V   ⏟   r   ⊗      V  *   ⊗  …  ⊗   V  *    ⏟   s    =    V    ⊗  r    ⊗   V   *    ⊗  s       .           subscript   superscript  T  r   s   V    tensor-product   subscript   normal-⏟   tensor-product  V  normal-…  V    r    subscript   normal-⏟   tensor-product   superscript  V    normal-…   superscript  V      s          tensor-product   superscript  V   tensor-product  absent  r     superscript  V     tensor-product  absent  s         T^{r}_{s}(V)=\underbrace{V\otimes\dots\otimes V}_{r}\otimes\underbrace{V^{*}%
 \otimes\dots\otimes V^{*}}_{s}=V^{\otimes r}\otimes V^{*\otimes s}.   is an element of     f   f   f   Here is the dual vector space (which consists of all linear maps    V   V   V   from   K   K   K   to the ground field         T  s  r    (  V  )     ⊗  K    T   s  ′    r  ′      (  V  )    →    T   s  +   s  ′     r  +   r  ′      (  V  )     .     normal-→      subscript  tensor-product  K      subscript   superscript  T  r   s   V    subscript   superscript  T   superscript  r  normal-′     superscript  s  normal-′     V      subscript   superscript  T    r   superscript  r  normal-′       s   superscript  s  normal-′     V     T^{r}_{s}(V)\otimes_{K}T^{r^{\prime}}_{s^{\prime}}(V)\to T^{r+r^{\prime}}_{s+s%
 ^{\prime}}(V).   ).  There is a product map, called the (tensor) product of tensors     V   V   V   It is defined by grouping all occurring "factors"   V   V   V   together: writing for an element of       (    v  1   ⊗   f  1    )   ⊗   (   v  1  ′   )    =    v  1   ⊗   v  1  ′   ⊗   f  1     .       tensor-product   tensor-product   subscript  v  1    subscript  f  1     subscript   superscript  v  normal-′   1     tensor-product   subscript  v  1    subscript   superscript  v  normal-′   1    subscript  f  1      (v_{1}\otimes f_{1})\otimes(v^{\prime}_{1})=v_{1}\otimes v^{\prime}_{1}\otimes
 f%
 _{1}.   and for elements of the dual space,     V   V   V     Picking a basis of    T   (  V  )       T  V    T(V)   and the corresponding dual basis of ,   F   F   F   is endowed with a natural basis (this basis is described in the article on Kronecker products ). In terms of these bases, the components of a (tensor) product of two (or more) tensors can be computed. For example, if   G   G   G   and   m   m   m   are two covariant tensors of rank   n   n   n   and    F  ∈  T      F  normal-∈  T    F∈T   respectively (i.e.    G  ∈  T      G  normal-∈  T    G∈T   , and       (   F  ⊗  G   )     i  1    i  2   …   i   m  +  n      =    F    i  1    i  2   …   i  m      G    i   m  +  1     i   m  +  2     i   m  +  3    …   i   m  +  n        .       subscript   tensor-product  F  G      subscript  i  1    subscript  i  2   normal-…   subscript  i    m  n         subscript  F     subscript  i  1    subscript  i  2   normal-…   subscript  i  m      subscript  G     subscript  i    m  1     subscript  i    m  2     subscript  i    m  3    normal-…   subscript  i    m  n         (F\otimes G)_{i_{1}i_{2}...i_{m+n}}=F_{i_{1}i_{2}...i_{m}}G_{i_{m+1}i_{m+2}i_{%
 m+3}...i_{m+n}}.   ), then the components of their tensor product are given by     𝐔   𝐔   \mathbf{U}    4 Thus, the components of the tensor product of two tensors are the ordinary product of the components of each tensor. Another example: let    (  1  ,  1  )     1  1    (1,1)   be a tensor of type   𝐕   𝐕   \mathbf{V}   with components , and let    (  1  ,  0  )     1  0    (1,0)   be a tensor of type     U  α    V   γ   β    =    (  U  ⊗  V  )   α      γ    β       fragments   superscript  U  α    subscript   superscript  V  γ   β     superscript   fragments  normal-(  U  tensor-product  V  normal-)   α    subscript   γ   β     U^{\alpha}{}_{\beta}V^{\gamma}=(U\otimes V)^{\alpha}{}_{\beta}{}^{\gamma}   with components . Then       V  μ    U  ν    =   σ      (  V  ⊗  U  )    μ  ν     .   σ       fragments   superscript  V  μ    superscript  U  ν    subscript   σ    superscript   fragments  normal-(  V  tensor-product  U  normal-)     μ  ν     subscript  normal-.  σ     V^{\mu}U^{\nu}{}_{\sigma}=(V\otimes U)^{\mu\nu}{}_{\sigma}.   and     V   V   V     Relation to dual space  A particular example is the tensor product of some vector space   f   f   f   with its dual vector space  (which consists of all linear maps    V   V   V   from   K   K   K   to the ground field     V  ⊗   V  *    →  K     normal-→   tensor-product  V   superscript  V     K    V\otimes V^{*}\to K   ). In this case, there is a natural "evaluation" map        v  ⊗  f   ↦   f   (  v  )     .     maps-to   tensor-product  v  f     f  v     v\otimes f\mapsto f(v).   which on elementary tensors is defined by        T  s  r    (  V  )    →    T   s  -  1    r  -  1     (  V  )       normal-→     subscript   superscript  T  r   s   V      subscript   superscript  T    r  1      s  1    V     T^{r}_{s}(V)\to T^{r-1}_{s-1}(V)   The resulting map       r  ,  s   >  0       r  s   0    r,s>0   is called tensor contraction (for   V   V   V   ).  On the other hand, if      K  →   V  ⊗   V  *     ,   λ  ↦    ∑  i     λ   v  i    ⊗   v  i  *       .     formulae-sequence   normal-→  K   tensor-product  V   superscript  V       maps-to  λ    subscript   i    tensor-product    λ   subscript  v  i     subscript   superscript  v    i        K\to V\otimes V^{*},\lambda\mapsto\sum_{i}\lambda v_{i}\otimes v^{*}_{i}.   is finite-dimensional , there is a map in the other direction (called coevaluation )     V   V   V   where is a basis of   U   U   U   , and is its dual basis. The interplay of evaluation and coevaluation map can be used to characterize finite-dimensional vector spaces without referring to bases. 5  Tensor product vs. Hom  Given three vector spaces   V   V   V   ,   W   W   W   ,      Hom   (   U  ⊗  V   ,  W  )    ≅   Hom   (  U  ,   Hom   (  V  ,  W  )    )     .        Hom    tensor-product  U  V   W      Hom   U    Hom   V  W        \mathrm{Hom}(U\otimes V,W)\cong\mathrm{Hom}(U,\mathrm{Hom}(V,W)).   the tensor product is linked to the vector space of all linear maps, as follows:      H  o  m   (  -  ,  -  )       H  o  m        Hom(-,-)   Here   K   K   K   denotes the     T  s  r    (  V  )        subscript   superscript  T  r   s   V    \scriptstyle T^{r}_{s}(V)   -vector space of all linear maps. This is an example of adjoint functors : the tensor product is "left adjoint" to Hom.  Adjoint representation  The tensor    E  n  d   (  V  )       E  n  d  V    End(V)   may be naturally viewed as a module for the Lie algebra     r  =  s  =  1        r  s       1     r=s=1   by means of the diagonal action: for simplicity let us assume    u  ∈  E  n  d   (  V  )       u  normal-∈  E  n  d  V    u∈End(V)   , then, for each      u   (   a  ⊗  b   )    =     u   (  a  )    ⊗  b   -    a  ⊗   u  *     (  b  )      ,        u   tensor-product  a  b       tensor-product    u  a   b      tensor-product  a   superscript  u     b      u(a\otimes b)=u(a)\otimes b-a\otimes u^{*}(b),   ,     u   u   u     where in is the transpose of     ⟨   u   (  a  )    ,  b  ⟩   =   ⟨  a  ,    u  *    (  b  )    ⟩          u  a   b    a     superscript  u    b      \langle u(a),b\rangle=\langle a,u^{*}(b)\rangle   , that is, in terms of the obvious pairing on ,        T  1  1    (  V  )    →   End   (  V  )       normal-→     subscript   superscript  T  1   1   V     End  V     \scriptstyle T^{1}_{1}(V)\rightarrow\mathrm{End}(V)   .  There is a canonical isomorphism       (   a  ⊗  b   )    (  x  )    =    ⟨  x  ,  b  ⟩   a    .         tensor-product  a  b   x      x  b   a     (a\otimes b)(x)=\langle x,b\rangle a.   given by     u   u   u     Under this isomorphism, every    E  n  d   (  V  )       E  n  d  V    End(V)   in     T  1  1    (  V  )        subscript   superscript  T  1   1   V    \scriptstyle T^{1}_{1}(V)   may be first viewed as an endomorphism of    E  n  d   (  V  )       E  n  d  V    End(V)   and then viewed as an endomorphism of    a  d   (  u  )       a  d  u    ad(u)   . In fact it is the adjoint representation     E  n  d   (  V  )       E  n  d  V    End(V)   of   A   A   A   .  Tensor products of modules over a ring  The tensor product of two modules    B   B   B   and   R   R   R   over a commutative  ring      A   ⊗  R   B   :=    F   (   A  ×  B   )    /  G      assign    subscript  tensor-product  R   A  B       F    A  B    G     A\otimes_{R}B:=F(A\times B)/G   is defined in exactly the same way as the tensor product of vector spaces over a field:      F   (   A  ×  B   )       F    A  normal-×  B     F(A×B)   where now   R   R   R   is the free   G   G   G   -module generated by the cartesian product and   R   R   R   is the    a  b  ≠  b  a      a  b  normal-≠  b  a    ab≠ba   -module generated by the same relations as above.  More generally, the tensor product can be defined even if the ring is non-commutative (   A   A   A   ). In this case   R   R   R   has to be a right-   B   B   B   -module and   R   R   R   is a left-     (   a  r   ,  b  )   -   (  a  ,   r  b   )          a  r   b    a    r  b      (ar,b)-(a,rb)   -module, and instead of the last two relations above, the relation     R   R   R   is imposed. If   R   R   R   is non-commutative, this is no longer an     (  a  ,  b  )   →  a  ⊗  b       a  b   normal-→  a  normal-⊗  b    (a,b)→a⊗b   -module, but just an abelian group .  The universal property also carries over, slightly modified: the map defined by     ϕ   (   a  +   a  ′    ,  b  )    =    ϕ   (  a  ,  b  )    +   ϕ   (   a  ′   ,  b  )           ϕ     a   superscript  a  normal-′    b        ϕ   a  b      ϕ    superscript  a  normal-′   b       \displaystyle\phi(a+a^{\prime},b)=\phi(a,b)+\phi(a^{\prime},b)   is a middle linear map (referred to as "the canonical middle linear map". 6 ); that is, 7 it satisfies:     φ   φ   φ     The first two properties make    A  ×  B      A  normal-×  B    A×B   a bilinear map of the abelian group    ψ   ψ   ψ   . For any middle linear map    A  ×  B      A  normal-×  B    A×B   of   f   f   f   , a unique group homomorphism    ψ  =   f  ∘  φ       ψ    f  normal-∘  φ     ψ=f∘φ   of satisfies   ϕ   ϕ   \phi   , and this property determines    V  ⊗  W      V  normal-⊗  W    V⊗W   within group isomorphism. See the main article for details.  Computing the tensor product  For vector spaces, the tensor product   V   V   V   is quickly computed since bases of   W   W   W   of    V  ⊗  W      V  normal-⊗  W    V⊗W   immediately determine a basis of    𝐙  /  n      𝐙  n    \mathbf{Z}/n   , as was mentioned above. For modules over a general (commutative) ring, not every module is free. For example,   𝐙   𝐙   \mathbf{Z}   is not a free abelian group (=    𝐙  /  n      𝐙  n    \mathbf{Z}/n   -module). The tensor product with       M   ⊗  𝐙   𝐙   /  n   =   M  /  n    .          subscript  tensor-product  𝐙   M  𝐙   n     M  n     M\otimes_{\mathbf{Z}}\mathbf{Z}/n=M/n.   is given by     R   R   R   More generally, given a presentation of some   M   M   M   -module      ∑   j  ∈  J      a   j  i     m  i     =  0        subscript     j  J       subscript  a    j  i     subscript  m  i     0    \sum_{j\in J}a_{ji}m_{i}=0   , that is, a number of generators together with relations     M   ⊗  R   N   =   coker   (    N  J   →   N  I    )          subscript  tensor-product  R   M  N    coker   normal-→   superscript  N  J    superscript  N  I       M\otimes_{R}N=\operatorname{coker}(N^{J}\rightarrow N^{I})   , with , the tensor product can be computed as the following cokernel :      n  ∈  N      n  normal-∈  N    n∈N   Here and the map is determined by sending some   j   j   j   in the   M   M   M   th copy of to (in ). Colloquially, this may be rephrased by saying that a presentation of   R   R   R   gives rise to a presentation of . This is referred to by saying that the tensor product is a right exact functor . It is not in general left exact, that is, given an injective map of      M  1    ⊗  R   N   →    M  2    ⊗  R   N      normal-→    subscript  tensor-product  R    subscript  M  1   N     subscript  tensor-product  R    subscript  M  2   N     M_{1}\otimes_{R}N\to M_{2}\otimes_{R}N   -modules , the tensor product     n   n   n   is not usually injective. For example, tensoring the (injective) map given by multiplication with    n  :   𝐙  →  𝐙      normal-:  n    𝐙  normal-→  𝐙     n:\mathbf{Z}→\mathbf{Z}   ,    𝐙  /  n      𝐙  n    \mathbf{Z}/n   with    0  :     𝐙  /  n   →  𝐙   /  n      normal-:  0        𝐙  n   normal-→  𝐙   n     0:\mathbf{Z}/n→\mathbf{Z}/n   yields the zero map   R   R   R   , which is not injective. Higher Tor functors measure the defect of the tensor product being not left exact. All higher Tor functors are assembled in the derived tensor product .  Tensor product of algebras  Let   R   R   R   be a commutative ring. The tensor product of   A   A   A   -modules applies, in particular, if   B   B   B   and   R   R   R   are    R   R   R   -algebras . In this case, the tensor product is an       (    a  1   ⊗   b  1    )   ⋅   (    a  2   ⊗   b  2    )    =    (    a  1   ⋅   a  2    )   ⊗   (    b  1   ⋅   b  2    )     .       normal-⋅   tensor-product   subscript  a  1    subscript  b  1     tensor-product   subscript  a  2    subscript  b  2      tensor-product   normal-⋅   subscript  a  1    subscript  a  2     normal-⋅   subscript  b  1    subscript  b  2       (a_{1}\otimes b_{1})\cdot(a_{2}\otimes b_{2})=(a_{1}\cdot a_{2})\otimes(b_{1}%
 \cdot b_{2}).   -algebra itself by putting          R   [  x  ]     ⊗  R   R    [  y  ]    ≅   R   [  x  ,  y  ]     .          subscript  tensor-product  R     R   delimited-[]  x    R    delimited-[]  y      R   x  y      R[x]\otimes_{R}R[y]\cong R[x,y].   For example,     A   A   A     A particular example is when   B   B   B   and   R   R   R   are fields containing a common subfield    A  =     R  x  x   /  f    (  x  )        A        R  x  x   f   x     A=Rxx/f(x)   . The tensor product of fields is closely related to Galois theory : if, say,   f   f   f   , where   R   R   R   is some irreducible polynomial with coefficients in     A   ⊗  R   B   ≅     B   [  x  ]    /  f    (  x  )          subscript  tensor-product  R   A  B         B   delimited-[]  x    f   x     A\otimes_{R}B\cong B[x]/f(x)   , the tensor product can be calculated as     f   f   f   where now   B   B   B   is interpreted as the same polynomial, but with its coefficients regarded as elements of   B   B   B   . In the larger field    A  =  B      A  B    A=B   , the polynomial may become reducible, which brings in Galois theory. For example, if   R   R   R   is a Galois extension of     A   ⊗  R   A   ≅     A   [  x  ]    /  f    (  x  )          subscript  tensor-product  R   A  A         A   delimited-[]  x    f   x     A\otimes_{R}A\cong A[x]/f(x)   , then     A   A   A   is isomorphic (as an    f   (   x  1   ,  …  ,   x  k   )       f    subscript  x  1   normal-…   subscript  x  k      \scriptstyle f(x_{1},\dots,x_{k})   -algebra) to the .  Other examples of tensor products  Tensor product of sheaves of modules  Tensor product of Hilbert spaces  Topological tensor product  Tensor product of graded vector spaces  Tensor product of quadratic forms  Tensor product of multilinear maps  Given multilinear maps    g   (   x  1   ,  …  ,   x  m   )       g    subscript  x  1   normal-…   subscript  x  m      \scriptstyle g(x_{1},\dots,x_{m})   and       (   f  ⊗  g   )    (   x  1   ,  …  ,   x   k  +  m    )    =   f   (   x  1   ,  …  ,   x  k   )   g   (   x   k  +  1    ,  …  ,   x   k  +  m    )     .         tensor-product  f  g     subscript  x  1   normal-…   subscript  x    k  m        f    subscript  x  1   normal-…   subscript  x  k    g    subscript  x    k  1    normal-…   subscript  x    k  m        (f\otimes g)(x_{1},\dots,x_{k+m})=f(x_{1},\dots,x_{k})g(x_{k+1},\dots,x_{k+m}).   their tensor product is the multilinear function      V  ∧  V      V  V    V\wedge V     Tensor product of graphs  It should be mentioned that, though called "tensor product", this is not a tensor product of graphs in the above sense; actually it is the category-theoretic product in the category of graphs and graph homomorphisms . However it is actually the Kronecker tensor product of the adjacency matrices of the graphs. Compare also the section Tensor product of linear maps above.  Monoidal categories  A general context for tensor product is that of a monoidal category .  Applications  Exterior and symmetric algebra  Two notable constructions in linear algebra can be constructed as quotients of the tensor product: the exterior algebra and the symmetric algebra . For example, given a vector space V , the exterior product      V  ⊗  V  /   (  v  ⊗  v  for all  v  ∈  V  )   .     fragments  V  tensor-product  V    fragments  normal-(  v  tensor-product  v  for all  v   V  normal-)   normal-.    V\otimes V/(v\otimes v\text{ for all }v\in V).   is defined as      V  ⊗  V  /   (   v  1   ⊗   v  2   +   v  2   ⊗   v  1   for all   v  1   ,   v  2   ∈  V  )   .     fragments  V  tensor-product  V    fragments  normal-(   subscript  v  1   tensor-product   subscript  v  2     subscript  v  2   tensor-product   subscript  v  1   for all   subscript  v  1   normal-,   subscript  v  2    V  normal-)   normal-.    V\otimes V/(v_{1}\otimes v_{2}+v_{2}\otimes v_{1}\text{ for all }v_{1},v_{2}%
 \in V).   Note that when V 's underlying field does not have characteristic 2, then this definition is equivalent to       v  1   ⊗   v  2      tensor-product   subscript  v  1    subscript  v  2     v_{1}\otimes v_{2}   The image of     v  1   ∧   v  2        subscript  v  1    subscript  v  2     v_{1}\wedge v_{2}   in the exterior product is usually denoted      v  1   ∧   v  2    =    -   v  2    ∧   v  1           subscript  v  1    subscript  v  2         subscript  v  2     subscript  v  1      v_{1}\wedge v_{2}=-v_{2}\wedge v_{1}   and satisfies, by construction,    V  ⊗  …  ⊗  V     tensor-product  V  normal-…  V    V\otimes\dots\otimes V   . Similar constructions are possible for     Λ  n   V       superscript  normal-Λ  n   V    \Lambda^{n}V   ( n factors), giving rise to     S  y   m  n   V   :=      V  ⊗  …  ⊗  V   ⏟   n   /   (    …  ⊗   v  i   ⊗   v   i  +  1    ⊗  …   -   …  ⊗   v   i  +  1    ⊗   v  i   ⊗  …    )       assign    S  y   superscript  m  n   V      subscript   normal-⏟   tensor-product  V  normal-…  V    n      tensor-product  normal-…   subscript  v  i    subscript  v    i  1    normal-…    tensor-product  normal-…   subscript  v    i  1     subscript  v  i   normal-…       Sym^{n}V:=\underbrace{V\otimes\dots\otimes V}_{n}/(\dots\otimes v_{i}\otimes v%
 _{i+1}\otimes\dots-\dots\otimes v_{i+1}\otimes v_{i}\otimes\dots)   , the n -th exterior power of V . The latter notion is the basis of differential n -forms .  The symmetric algebra is constructed in a similar manner:      ∘  .  ×     fragments   normal-.     \scriptstyle\circ.\times   That is, in the symmetric algebra two adjacent vectors (and therefore all of them) can be interchanged. The resulting objects are called symmetric tensors.  Tensor product of line bundles  Tensor product in programming  Array programming languages  Array programming languages may have this pattern built in. For example, in APL the tensor product is expressed as    A  ∘  .  ×  B     fragments  A   normal-.   B    \scriptstyle A\circ.\times B   (for example    A  ∘  .  ×  B  ∘  .  ×  C     fragments  A   normal-.   B   normal-.   C    \scriptstyle A\circ.\times B\circ.\times C   or    (   mod  n   )     pmod  n    \;\;(\mathop{{\rm mod}}n)   ). In J the tensor product is the dyadic form of */ (for example a */ b or ' a */ b */ c ').  Note that J's treatment also allows the representation of some tensor fields, as a and b may be functions instead of constants. This product of two functions is a derived function, and if a and b are differentiable , then a */ b is differentiable.  However, these kinds of notation are not universally present in array languages. Other array languages may require explicit treatment of indices (for example, MATLAB ), and/or may not support higher-order functions such as the Jacobian derivative (for example, Fortran /APL).  See also   Dyadic product  Extension of scalars  Multilinear subspace learning  Tensor algebra  Tensor contraction  Topological tensor product  Monoidal category   Notes  References     .       "  Category:Binary operations  Category:Bilinear operators     See Tensor or Tensor (intrinsic definition) . ↩  This similar to how the engineering use of "    (   mod  n   )     pmod  n    \;\;(\mathop{{\rm mod}}n)   " specifically returns the remainder, one of the many elements of the $\pmod n$ equivalence class. ↩  ↩  Analogous formulas also hold for contravariant tensors, as well as tensors of mixed variance. Although in many cases such as when there is an inner product defined, the distinction is irrelevant. ↩  See Compact closed category . ↩  ↩  ↩     