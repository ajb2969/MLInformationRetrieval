   Boole's expansion theorem      Boole's expansion theorem   Boole's expansion theorem , often referred to as the Shannon expansion or decomposition , is the identity     F  =    x  ⋅   F  x    +    x  ′   ⋅   F  x  ′         F     normal-⋅  x   subscript  F  x     normal-⋅   superscript  x  normal-′    superscript   subscript  F  x   normal-′       F=x\cdot F_{x}+x^{\prime}\cdot F_{x}^{\prime}   , where   F   F   F   is any Boolean function and    F  x     subscript  F  x    F_{x}   and    F  x  ′     superscript   subscript  F  x   normal-′    F_{x}^{\prime}   are   F   F   F   with the argument   x   x   x   equal to   1   1   1   and to   0   0    respectively.  The terms    F  x     subscript  F  x    F_{x}   and    F  x  ′     superscript   subscript  F  x   normal-′    F_{x}^{\prime}   are sometimes called the positive and negative Shannon cofactors , respectively, of   F   F   F   with respect to   x   x   x   . These are functions, computed by restrict operator,    r  e  s  t  r  i  c  t   (  F  ,  x  ,  0  )       r  e  s  t  r  i  c  t   F  x  0     restrict(F,x,0)   and    r  e  s  t  r  i  c  t   (  F  ,  x  ,  1  )       r  e  s  t  r  i  c  t   F  x  1     restrict(F,x,1)   (see valuation (logic) and partial application ).  It has been called the "fundamental theorem of Boolean algebra". 1 Besides its theoretical importance, it paved the way for binary decision diagrams , satisfiability solvers , and many other techniques relevant to computer engineering and formal verification of digital circuits.  Statement of the theorem  A more explicit way of stating the theorem is-       f   (   X  1   ,   X  2   ,  …  ,   X  n   )    =      X  1   ⋅  f    (  1  ,   X  2   ,  …  ,   X  n   )    +     X  1  ′   ⋅  f    (  0  ,   X  2   ,  …  ,   X  n   )           f    subscript  X  1    subscript  X  2   normal-…   subscript  X  n          normal-⋅   subscript  X  1   f    1   subscript  X  2   normal-…   subscript  X  n        normal-⋅   superscript   subscript  X  1   normal-′   f    0   subscript  X  2   normal-…   subscript  X  n        f(X_{1},X_{2},\dots,X_{n})=X_{1}\cdot f(1,X_{2},\dots,X_{n})+X_{1}^{\prime}%
 \cdot f(0,X_{2},\dots,X_{n})   Proof for the statement follows from direct use of mathematical induction , from the observation that     f   (   X  1   )    =     X  1   .1   +    X  1  ′   .0          f   subscript  X  1         subscript  X  1   .1      superscript   subscript  X  1   normal-′   .0      f(X_{1})=X_{1}.1+X_{1}^{\prime}.0   and expanding a 2-ary and n-ary Boolean functions identically.  History  George Boole presented this expansion as his Proposition II, "To expand or develop a function involving any number of logical symbols", in his Laws of Thought (1854), 2 and it was "widely applied by Boole and other nineteenth-century logicians". 3  Claude Shannon , noted information-theorist and communications pioneer, mentioned this expansion, among other Boolean identities, in a 1948 paper, 4 and showed the switching network interpretations of the identity. In the literature of computer design and switching theory, it is often attributed to Shannon. 5  Application to switching circuits   Binary decision diagrams follow from systematic use of this theorem  Any Boolean function can be implemented directly in a switching circuit using a hierarchy of basic multiplexer by repeated application of this theorem.   Notes    External links   Shannon’s Decomposition Example with multiplexers.  Optimizing Sequential Cycles Through Shannon Decomposition and Retiming (PDF) Paper on application.   "  Category:Boolean algebra     Paul C. Rosenbloom, The Elements of Mathematical Logic , 1950, p. 5 ↩  George Boole, An Investigation of the Laws of Thought: On which are Founded the Mathematical Theories of Logic and Probabilities , 1854, p. 72 [ http://books.google.com/books?id=SWgLVT0otY8C&pg; ;=PA73&dq;=to+expand+or+develop+a+function full text at Google Books] ↩  Frank Markham Brown, Boolean Reasoning: The Logic of Boolean Equations , 2nd edition, 2003, p. 42 ↩  Claude Shannon, "The Synthesis of Two-Terminal Switching Circuits", Bell System Technical Journal  28 :59–98, full text , p. 62 ↩      