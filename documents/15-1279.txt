   Aggregative game      Aggregative game   In game theory , an aggregative game is a game in which every player’s payoff is a function of the player’s own strategy and the aggregate of all players’ strategies. The concept was first proposed by Nobel laureate Reinhard Selten in 1970 who considered the case where the aggregate is the sum of the players' strategies.  Definition  Consider a standard non-cooperative game with n players, where     S  i   ⊆  ℝ       subscript  S  i   ℝ    S_{i}\subseteq\mathbb{R}   is the strategy set of player i ,    S  =    S  1   ×   S  2   ×  …  ×   S  n        S     subscript  S  1    subscript  S  2   normal-…   subscript  S  n      S=S_{1}\times S_{2}\times\ldots\times S_{n}   is the joint strategy set, and     f  i   :   S  →  ℝ      normal-:   subscript  f  i    normal-→  S  ℝ     f_{i}:S\to\mathbb{R}   is the payoff function of player i . The game is then called an aggregative game if for each player i there exists a function      f  ~   i   :     S  i   ×  ℝ   →  ℝ      normal-:   subscript   normal-~  f   i    normal-→     subscript  S  i   ℝ   ℝ     \tilde{f}_{i}:S_{i}\times\mathbb{R}\to\mathbb{R}   such that for all    s  ∈  S      s  S    s\in S   :        f  i    (  s  )    =     f  ~   i    (   s  i   ,    ∑   j  =  1   n    s  j    )           subscript  f  i   s      subscript   normal-~  f   i     subscript  s  i     superscript   subscript     j  1    n    subscript  s  j        f_{i}(s)=\tilde{f}_{i}\left(s_{i},\sum_{j=1}^{n}s_{j}\right)     In words, payoff functions in aggregative games depend on players' own strategies and the aggregate     ∑   s  j        subscript  s  j     \sum s_{j}   . As an example, consider the Cournot model where firm i has payoff/profit function      f  i    (  s  )    =     s  i   P   (   ∑   s  j    )    -    C  i    (   s  i   )            subscript  f  i   s        subscript  s  i   P     subscript  s  j        subscript  C  i    subscript  s  i       f_{i}(s)=s_{i}P\left(\sum s_{j}\right)-C_{i}(s_{i})   (here   P   P   P   and    C  i     subscript  C  i    C_{i}   are, respectively, the inverse demand function and the cost function of firm i ). This is an aggregative game since      f  i    (  s  )    =     f  ~   i    (   s  i   ,   ∑   s  j    )           subscript  f  i   s      subscript   normal-~  f   i     subscript  s  i      subscript  s  j        f_{i}(s)=\tilde{f}_{i}\left(s_{i},\sum s_{j}\right)   where       f  ~   i    (   s  i   ,  X  )    =     s  i   P   (  X  )    -    C  i    (   s  i   )            subscript   normal-~  f   i     subscript  s  i   X         subscript  s  i   P  X      subscript  C  i    subscript  s  i       \tilde{f}_{i}(s_{i},X)=s_{i}P(X)-C_{i}(s_{i})   .  Generalizations  A number of generalizations of the standard definition of an aggregative game have appeared in the literature. A game is generalized aggregative 1 if there exists an additively separable function    g  :   S  →  ℝ      normal-:  g   normal-→  S  ℝ     g:S\to\mathbb{R}   (i.e., if there exist increasing functions      h  0   ,   h  1   ,  …  ,   h  n    :   ℝ  →  ℝ      normal-:    subscript  h  0    subscript  h  1   normal-…   subscript  h  n     normal-→  ℝ  ℝ     h_{0},h_{1},\ldots,h_{n}:\mathbb{R}\to\mathbb{R}   such that     g   (  s  )    =    h  0    (    ∑  i     h  i    (   s  i   )     )          g  s      subscript  h  0     subscript   i      subscript  h  i    subscript  s  i        g(s)=h_{0}(\sum_{i}h_{i}(s_{i}))   ) such that for each player i there exists a function      f  ~   i   :     S  i   ×  ℝ   →  ℝ      normal-:   subscript   normal-~  f   i    normal-→     subscript  S  i   ℝ   ℝ     \tilde{f}_{i}:S_{i}\times\mathbb{R}\to\mathbb{R}   such that      f  i    (  s  )    =     f  ~   i    (   s  i   ,   g   (   s  1   ,  …  ,   s  n   )    )           subscript  f  i   s      subscript   normal-~  f   i     subscript  s  i     g    subscript  s  1   normal-…   subscript  s  n         f_{i}(s)=\tilde{f}_{i}(s_{i},g(s_{1},\ldots,s_{n}))   for all    s  ∈  S      s  S    s\in S   . Obviously, any aggregative game is generalized aggregative as seen by taking     g   (   s  1   ,  …  ,   s  n   )    =   ∑   g  i          g    subscript  s  1   normal-…   subscript  s  n        subscript  g  i      g(s_{1},\ldots,s_{n})=\sum g_{i}   . A more general definition still is that of quasi-aggregative games where agents' payoff functions are allowed to depend on different functions of opponents' strategies. 2 Aggregative games can also be generalized to allow for infinitely many players in which case the aggregator will typically be an integral rather than a linear sum. 3 Aggregative games with a continuum of players are frequently studied in mean field game theory .  Properties   Generalized aggregative games (hence aggregative games) admit backward reply correspondences and in fact, is the most general class to do so. 4 Backward reply correspondences, as well as the closely related share correspondences , are powerful analytical tools in game theory. For example, backward reply correspondences were used to give the first general proof of the existence of a Nash equilibrium in the Cournot model without assuming quasiconcavity of firms' profit functions. 5 Backward reply correspondences also play a crucial role for comparative statics analysis (see below).  Quasi-aggregative games (hence generalized aggregative games, hence aggregative games) are best-response potential games if best-response correspondences are either increasing or decreasing. 6 7 Precisely as games with strategic complementarities , such games therefore have a pure strategy Nash equilibrium regardless of whether payoff functions are quasiconcave and/or strategy sets are convex . The existence proof in 8 is a special case of such more general existence results.  Aggregative games have strong comparative statics properties. Under very general conditions one can predict how a change in exogenous parameters will affect the Nash equilibria . 9 10   See also   Bertrand competition  Cournot competition  Mean field game theory   Notes  References     "  Category:Game theory     ↩  ↩  ↩   ↩  ↩    ↩  ↩     