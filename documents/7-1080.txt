   Beeman's algorithm      Beeman's algorithm   Beeman's algorithm is a method for numerically integrating  ordinary differential equations of order 2, more specifically Newton's equations of motion     x  ¨   =   A   (  x  )         normal-¨  x     A  x     \ddot{x}=A(x)   . It was designed to allow high numbers of particles in simulations of molecular dynamics. There is a direct or explicit and an implicit variant of the method. The direct variant was published by Schofield 1 in 1973 as a personal communication from Beeman. This is what is commonly known as Beeman's method . It is a variant of the Verlet integration method. It produces identical positions, but uses a different formula for the velocities. Beeman 2 in 1976 published a class of implicit (predictor-corrector) multi-step methods, where Beeman's method is the direct variant of the third order method in this class.  Equation  The formula used to compute the positions at time    t  +   Δ  t       t    normal-Δ  t     t+\Delta t   in the full predictor-corrector 3 scheme is:   Predict    x   (   t  +   Δ  t    )       x    t    normal-Δ  t      x(t+\Delta t)   from data at times     t  and  t   -   Δ  t         t  and  t     normal-Δ  t     t\text{ and }t-\Delta t             x(t+\Delta t) = x(t) + v(t) \Delta t  + \frac{1}{6}\Bigl( 4 a(t) - a(t - \Delta t)\Bigr)\Delta t^2  + O( \Delta t^4)  .   Correct position and velocities at time    t  +   Δ  t       t    normal-Δ  t     t+\Delta t   from data at times     t  and  t   +   Δ  t         t  and  t     normal-Δ  t     t\text{ and }t+\Delta t   by repeated evaluation of the differential equation to get the acceleration    a   (   t  +   Δ  t    )       a    t    normal-Δ  t      a(t+\Delta t)   and of the equations of the implicit system     \begin{align}     x(t+\Delta t) &= x(t) + v(t) \Delta t  + \frac{1}{6}\Bigl(a(t+\Delta t) + 2a(t)\Bigr)\Delta t^2  + O(\Delta t^4);\\  v(t+\Delta t)\Delta t &=x(t+\Delta t)-x(t)  + \frac16 \Bigl(2a(t+\Delta t) + a(t)\Bigr)\Delta t^2  + O(\Delta t^4);  \end{align}   In tests it was found that this corrector step needs to be repeated at most twice. The values on the right are the old values of the last iterations, resulting in the new values on the left.   Using only the predictor formula and the corrector for the velocities one obtains a direct or explicit method 4 which is a variant of the Verlet integration method: 5      x   (   t  +   Δ  t    )       x    t    normal-Δ  t      \displaystyle x(t+\Delta t)     This is the variant that is usually understood as Beeman's method .  Beeman 6 also proposed to alternatively replace the velocity update in the last equation by the second order Adams–Moulton method :       v   (   t  +   Δ  t    )    =    v   (  t  )    +    1  12    (     5  a   (   t  +   Δ  t    )    +   8  a   (  t  )     -   a   (   t  -   Δ  t    )     )   Δ  t   +   O   (   Δ   t  3    )           v    t    normal-Δ  t         v  t       1  12         5  a    t    normal-Δ  t       8  a  t      a    t    normal-Δ  t      normal-Δ  t     O    normal-Δ   superscript  t  3        v(t+\Delta t)=v(t)+\frac{1}{12}\Bigl(5a(t+\Delta t)+8a(t)-a(t-\Delta t)\Bigr)%
 \Delta t+O(\Delta t^{3})     where      t   t   t   is present time (i.e.: independent variable)      Δ  t      normal-Δ  t    \Delta t   is the time step size      x   (  t  )       x  t    x(t)   is the position at time t      v   (  t  )       v  t    v(t)   is the velocity at time t      a   (  t  )       a  t    a(t)   is the acceleration at time t, computed as a function of    x   (  t  )       x  t    x(t)     the last term is the error term, using the big O notation   Predictor-Corrector Modifications  In systems where the forces are a function of velocity in addition to position, the above equations need to be modified into a predictor-corrector form whereby the velocities at time    t  +   Δ  t       t    normal-Δ  t     t+\Delta t   are predicted and the forces calculated, before producing a corrected form of the velocities.  An example is:        x   (   t  +   Δ  t    )    =      x   (  t  )    +   v   (  t  )   Δ  t   +    2  3   a   (  t  )   Δ   t  2     -    1  6   a   (   t  -   Δ  t    )   Δ   t  2     +   O   (   Δ   t  4    )      .        x    t    normal-Δ  t             x  t     v  t  normal-Δ  t       2  3   a  t  normal-Δ   superscript  t  2         1  6   a    t    normal-Δ  t    normal-Δ   superscript  t  2       O    normal-Δ   superscript  t  4        x(t+\Delta t)=x(t)+v(t)\Delta t+\frac{2}{3}a(t)\Delta t^{2}-\frac{1}{6}a(t-%
 \Delta t)\Delta t^{2}+O(\Delta t^{4}).     The velocities at time t =    t  +   Δ  t       t    normal-Δ  t     t+\Delta t   are then calculated from the positions.       v   (   t  +   Δ  t    )    (   p  r  e  d  i  c  t  e  d   )    =      v   (  t  )    +    3  2   a   (  t  )   Δ  t    -    1  2   a   (   t  -   Δ  t    )   Δ  t    +   O   (   Δ   t  3    )           v    t    normal-Δ  t      p  r  e  d  i  c  t  e  d            v  t       3  2   a  t  normal-Δ  t        1  2   a    t    normal-Δ  t    normal-Δ  t      O    normal-Δ   superscript  t  3        v(t+\Delta t)(predicted)=v(t)+\frac{3}{2}a(t)\Delta t-\frac{1}{2}a(t-\Delta t)%
 \Delta t+O(\Delta t^{3})     The accelerations at time t =    t  +   Δ  t       t    normal-Δ  t     t+\Delta t   are then calculated from the positions and predicted velocities.       v   (   t  +   Δ  t    )    (   c  o  r  r  e  c  t  e  d   )    =      v   (  t  )    +    5  12   a   (   t  +   Δ  t    )   Δ  t   +    2  3   a   (  t  )   Δ  t    -    1  12   a   (   t  -   Δ  t    )   Δ  t    +   O   (   Δ   t  3    )           v    t    normal-Δ  t      c  o  r  r  e  c  t  e  d            v  t       5  12   a    t    normal-Δ  t    normal-Δ  t       2  3   a  t  normal-Δ  t        1  12   a    t    normal-Δ  t    normal-Δ  t      O    normal-Δ   superscript  t  3        v(t+\Delta t)(corrected)=v(t)+\frac{5}{12}a(t+\Delta t)\Delta t+\frac{2}{3}a(t%
 )\Delta t-\frac{1}{12}a(t-\Delta t)\Delta t+O(\Delta t^{3})     Error term  As shown above, the local error term is    O   (   Δ   t  4    )       O    normal-Δ   superscript  t  4      O(\Delta t^{4})   for position and    O   (   Δ   t  3    )       O    normal-Δ   superscript  t  3      O(\Delta t^{3})   velocity,resulting in a global error of    O   (   Δ   t  3    )       O    normal-Δ   superscript  t  3      O(\Delta t^{3})   . In comparison, Verlet is    O   (   Δ   t  4    )       O    normal-Δ   superscript  t  4      O(\Delta t^{4})   for position and    O   (   Δ   t  2    )       O    normal-Δ   superscript  t  2      O(\Delta t^{2})   for velocity. However, the more important global error is    O   (   Δ   t  2    )       O    normal-Δ   superscript  t  2      O(\Delta t^{2})   . In exchange for greater accuracy, Beeman's algorithm is moderately computationally more expensive.  Memory Requirements  The simulation must keep track of position, velocity, acceleration and previous acceleration vectors per particle (though some clever work-arounds for storing the previous acceleration vector are possible), keeping its memory requirements on par with velocity Verlet and slightly more expensive than the original Verlet method.  References   7  8  9      "  Category:Numerical differential equations           ↩  ↩  ↩     