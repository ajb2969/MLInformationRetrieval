   TC (complexity)      TC (complexity)   In theoretical computer science , and specifically computational complexity theory and circuit complexity , TC is a complexity class , and TC i is a hierarchy of complexity classes. Each class TC i consists of the languages recognized by Boolean circuits with depth    O   (    log  i   n   )       O    superscript   i   n     O(\log^{i}n)   and a polynomial number of unlimited-fanin  AND , OR gates and Majority gates . The class TC is defined as       TC  =    ⋃   i  ≥  0     TC  i     .      TC    subscript     i  0     superscript  TC  i      \mbox{TC}=\bigcup_{i\geq 0}\mbox{TC}^{i}.     Relation to NC and AC  The relationship between the TC, NC and the AC hierarchy can be summarized as        NC  i   ⊆   AC  i   ⊆   TC  i   ⊆   NC   i  +  1     .         superscript  NC  i    superscript  AC  i         superscript  TC  i         superscript  NC    i  1       \mbox{NC}^{i}\subseteq\mbox{AC}^{i}\subseteq\mbox{TC}^{i}\subseteq\mbox{NC}^{i%
 +1}.     In particular, we know that        NC  0   ⊊   AC  0   ⊊   TC  0   ⊆   NC  1    .         superscript  NC  0    superscript  AC  0         superscript  TC  0         superscript  NC  1      \mbox{NC}^{0}\subsetneq\mbox{AC}^{0}\subsetneq\mbox{TC}^{0}\subseteq\mbox{NC}^%
 {1}.     The first strict containment follows from the fact that NC 0 cannot compute any function that depends on all the input bits. Thus choosing a problem that is trivially in AC 0 and depends on all bits separates the two classes. (For example, consider the OR function.) The strict containment AC 0 ⊊ TC 0 follows because parity and majority (which are both in TC 0 ) were shown to be not in AC 0 . 1 2  As an immediate consequence of the above containments, we have that NC = AC = TC.  References       "  Category:Circuit complexity  Category:Complexity classes     M. Furst, J. B. Saxe, and M. Sipser. Parity, circuits, and the polynomial-time hierarchy. Math. Systems Theory , 17:13–27, 1984. ↩  ↩     