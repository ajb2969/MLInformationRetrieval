   Complexity index      Complexity index   Besides complexity intended as a difficulty to compute a function (see computational complexity ), in modern computer science and in statistics another complexity index of a function stands for denoting its information content, in turn affecting the difficulty of learning the function from examples . Complexity indices in this sense characterize the entire class of functions to which the one we are interested in belongs. Focusing on Boolean functions , the detail of a class   𝖢   𝖢   \mathsf{C}   of Boolean functions c essentially denotes how deeply the class is articulated.  To identify this index we must first define a sentry function of   𝖢   𝖢   \mathsf{C}   . Let us focus for a moment on a single function c , call it a concept defined on a set   𝒳   𝒳   \mathcal{X}   of elements that we may figure as points in a Euclidean space . In this framework, the above function associates to c a set of points that, since are defined to be external to the concept, prevent it from expanding into another function of   𝖢   𝖢   \mathsf{C}   . We may dually define these points in terms of sentinelling a given concept c from being fully enclosed (invaded) by another concept within the class. Therefore we call these points either sentinels or sentry points ; they are assigned by the sentry function   𝑺   𝑺   \boldsymbol{S}   to each concept of   𝖢   𝖢   \mathsf{C}   in such a way that:   the sentry points are external to the concept c to be sentineled and internal to at least one other including it,  each concept    c  ′     superscript  c  normal-′    c^{\prime}   including c has at least one of the sentry points of c either in the gap between c and    c  ′     superscript  c  normal-′    c^{\prime}   , or outside    c  ′     superscript  c  normal-′    c^{\prime}   and distinct from the sentry points of    c  ′     superscript  c  normal-′    c^{\prime}   , and  they constitute a minimal set with these properties.   The technical definition coming from  is rooted in the inclusion of an augmented concept    c  +     superscript  c     c^{+}   made up of c plus its sentry points by another     (   c  ′   )   +     superscript   superscript  c  normal-′      \left(c^{\prime}\right)^{+}   in the same class.  Definition of sentry function  For a concept class   𝖢   𝖢   \mathsf{C}   on a space   𝔛   𝔛   \mathfrak{X}   , a sentry function is a total function     𝑺  :    𝖢  ∪   {  ∅  ,  𝔛  }    ↦   2  𝔛       normal-:  𝑺   maps-to    𝖢    𝔛     superscript  2  𝔛      \boldsymbol{S}:\mathsf{C}\cup\{\emptyset,\mathfrak{X}\}\mapsto 2^{\mathfrak{X}}   satisfying the following conditions:   Sentinels are outside the sentineled concept (      c  ∩   𝑺   (  c  )     =  ∅        c    𝑺  c       c\cap{\boldsymbol{S}}(c)=\emptyset   for all    c  ∈  𝖢      c  𝖢    c\in\mathsf{C}    ) .  Sentinels are inside the invading concept ( Having introduced the sets     c  +   =   c  ∪   𝑺   (  c  )          superscript  c      c    𝑺  c      c^{+}=c\cup\boldsymbol{S}(c)   , an invading concept     c  ′   ∈  𝖢       superscript  c  normal-′   𝖢    c^{\prime}\in\mathsf{C}   is such that     c  ′   ⊈  c     not-subset-of-or-equals   superscript  c  normal-′   c    c^{\prime}\not\subseteq c   and     c  +   ⊆    (   c  ′   )   +        superscript  c     superscript   superscript  c  normal-′       c^{+}\subseteq\left(c^{\prime}\right)^{+}   . Denoting    up   (  c  )       up  c    \mathrm{up}(c)   the set of concepts invading c , we must have that if     c  2   ∈   up   (   c  1   )         subscript  c  2     up   subscript  c  1      c_{2}\in\mathrm{up}(c_{1})   , then      c  2   ∩   𝑺   (   c  1   )     ≠  ∅         subscript  c  2     𝑺   subscript  c  1        c_{2}\cap{\boldsymbol{S}}(c_{1})\neq\emptyset    ) .      𝑺   (  c  )       𝑺  c    {\boldsymbol{S}}(c)   is a minimal set with the above properties ( No     𝑺  ′   ≠  𝑺       superscript  𝑺  normal-′   𝑺    {\boldsymbol{S}}^{\prime}\neq{\boldsymbol{S}}   exists satisfying (1) and (2) and having the property that      𝑺  ′    (  c  )    ⊆   𝑺   (  c  )           superscript  𝑺  normal-′   c     𝑺  c     \boldsymbol{S}^{\prime}(c)\subseteq\boldsymbol{S}(c)   for every    c  ∈  𝖢      c  𝖢    c\in\mathsf{C}    ) .  Sentinels are honest guardians. It may be that    c  ⊆    (   c  ′   )   +       c   superscript   superscript  c  normal-′       c\subseteq\left(c^{\prime}\right)^{+}   but      𝑺   (  c  )    ∩   c  ′    =  ∅          𝑺  c    superscript  c  normal-′       {\boldsymbol{S}}(c)\cap c^{\prime}=\emptyset   so that     c  ′   ∉   up   (  c  )         superscript  c  normal-′     up  c     c^{\prime}\not\in\mathrm{up}(c)   . This however must be a consequence of the fact that all points of    𝑺   (  c  )       𝑺  c    {\boldsymbol{S}}(c)   are involved in really sentineling c against other concepts in    up   (  c  )       up  c    \mathrm{up}(c)   and not just in avoiding inclusion of    c  +     superscript  c     c^{+}   by     (   c  ′   )   +     superscript   superscript  c  normal-′      (c^{\prime})^{+}   . Thus if we remove     c  ′   ,   𝑺   (  c  )        superscript  c  normal-′     𝑺  c     c^{\prime},{\boldsymbol{S}}(c)   remains unchanged ( Whenever    c  1     subscript  c  1    c_{1}   and    c  2     subscript  c  2    c_{2}   are such that     c  1   ⊂    c  2   ∪   𝑺   (   c  2   )          subscript  c  1      subscript  c  2     𝑺   subscript  c  2       c_{1}\subset c_{2}\cup{\boldsymbol{S}}(c_{2})   and      c  2   ∩   𝑺   (   c  1   )     =  ∅         subscript  c  2     𝑺   subscript  c  1        c_{2}\cap{\boldsymbol{S}}(c_{1})=\emptyset   , then the restriction of   𝑺   𝑺   {\boldsymbol{S}}   to      {   c  1   }   ∪   up   (   c  1   )     -   {   c  2   }           subscript  c  1      up   subscript  c  1       subscript  c  2      \{c_{1}\}\cup\mathrm{up}(c_{1})-\{c_{2}\}   is a sentry function on this set ) .       𝑺   (  c  )       𝑺  c    {\boldsymbol{S}}(c)   is the frontier of c upon   𝑺   𝑺   \boldsymbol{S}   .  (Figure)  A schematic outlook of outer sentineling functionality   With reference to the picture on the right,    {   x  1   ,   x  2   ,   x  3   }      subscript  x  1    subscript  x  2    subscript  x  3     \{x_{1},x_{2},x_{3}\}   is a candidate frontier of    c  0     subscript  c  0    c_{0}   against     c  1   ,   c  2   ,   c  3   ,   c  4       subscript  c  1    subscript  c  2    subscript  c  3    subscript  c  4     c_{1},c_{2},c_{3},c_{4}   . All points are in the gap between a    c  i     subscript  c  i    c_{i}   and    c  0     subscript  c  0    c_{0}   . They avoid inclusion of     c  0   ∪   {   x  1   ,   x  2   ,   x  3   }        subscript  c  0     subscript  x  1    subscript  x  2    subscript  x  3      c_{0}\cup\{x_{1},x_{2},x_{3}\}   in    c  3     subscript  c  3    c_{3}   , provided that these points are not used by the latter for sentineling itself against other concepts. Vice versa we expect that    c  1     subscript  c  1    c_{1}   uses    x  1     subscript  x  1    x_{1}   and    x  3     subscript  x  3    x_{3}   as its own sentinels,    c  2     subscript  c  2    c_{2}   uses    x  2     subscript  x  2    x_{2}   and    x  3     subscript  x  3    x_{3}   and    c  4     subscript  c  4    c_{4}   uses    x  1     subscript  x  1    x_{1}   and    x  2     subscript  x  2    x_{2}   analogously. Point    x  4     subscript  x  4    x_{4}   is not allowed as a    c  0     subscript  c  0    c_{0}   sentry point since, like any diplomatic seat, it should be located outside all other concepts just to ensure that it is not occupied in case of invasion by    c  0     subscript  c  0    c_{0}   .  Definition of detail  The frontier size of the most expensive concept to be sentineled with the least efficient sentineling function, i.e. the quantity       D  𝖢   =    sup   𝑺  ,  c     #  𝑺   (  c  )          subscript  normal-D  𝖢     subscript  supremum   𝑺  c      normal-#  𝑺  c      \mathrm{D}_{\mathsf{C}}=\sup_{{\boldsymbol{S}},c}\#{\boldsymbol{S}}(c)   ,  is called detail of   𝖢   𝖢   \mathsf{C}   .   𝑺   𝑺   \boldsymbol{S}   spans also over sentry functions on subsets of   𝔛   𝔛   \mathfrak{X}   sentineling in this case the intersections of the concepts with these subsets. Actually, proper subsets of   𝔛   𝔛   \mathfrak{X}   may host sentineling tasks that prove harder than those emerging with   𝔛   𝔛   \mathfrak{X}   itself.  The detail    D  𝖢     subscript  normal-D  𝖢    \mathrm{D}_{\mathsf{C}}   is a complexity measure of concept classes dual to the VC dimension     D   𝖵  C      subscript  normal-D    𝖵  C     \mathrm{D}_{\mathsf{V}C}   . The former uses points to separate sets of concepts, the latter concepts for partitioning sets of points. In particular the following inequality holds       D  𝖢   ≤    D   𝖵  C    +  1        subscript  normal-D  𝖢      subscript  normal-D    𝖵  C    1     \mathrm{D}_{\mathsf{C}}\leq\mathrm{D}_{\mathsf{V}C}+1     See also Rademacher complexity for a recently introduced class complexity index.  Example: continuous spaces  Class C of circles in    ℝ  2     superscript  ℝ  2    \mathbb{R}^{2}   has detail     D  𝖢   =  2       subscript  normal-D  𝖢   2    \mathrm{D}_{\mathsf{C}}=2   , as shown in the picture on left below. Similarly, for the class of segments on   ℝ   ℝ   \mathbb{R}   , as shown in the picture on right.     (Figure)  Two points     x  1   ,   x  2       subscript  x  1    subscript  x  2     x_{1},x_{2}   outside c (thick circle) are sufficient to prevent a larger circle not containing them from including it   (Figure)  The class of segments in   ℝ   ℝ   \mathbb{R}   and two points needed to sentinel its concepts      Example: discrete spaces  The class    𝖢  =   {   c  1   ,   c  2   ,   c  3   ,   c  4   }       𝖢    subscript  c  1    subscript  c  2    subscript  c  3    subscript  c  4      \mathsf{C}=\{c_{1},c_{2},c_{3},c_{4}\}   on    𝔛  =   {   x  1   ,   x  2   ,   x  3   }       𝔛    subscript  x  1    subscript  x  2    subscript  x  3      \mathfrak{X}=\{x_{1},x_{2},x_{3}\}   whose concepts are illustrated in the following scheme, where “   +     +   ” denotes an element    x  j     subscript  x  j    x_{j}   belonging to    c  i     subscript  c  i    c_{i}   , “   -     -   ” an element outside    c  i     subscript  c  i    c_{i}   and   ○   normal-○   \bigcirc   a sentry point:       style="background:#ffdead;"    x  1     subscript  x  1    x_{1}      style="background:#ffdead;"    x  2     subscript  x  2    x_{2}      style="background:#ffdead;"    x  3     subscript  x  3    x_{3}        style="background:#cdcdcd;"     c  1   =        subscript  c  1   absent    c_{1}=          ○  -     normal-○     \bigcirc\!\!\!\!\!-          ○  -     normal-○     \bigcirc\!\!\!\!\!-         -     -        style="background:#cdcdcd;"     c  2   =        subscript  c  2   absent    c_{2}=          ○  -     normal-○     \bigcirc\!\!\!\!\!-         +     +         +     +        style="background:#cdcdcd;"     c  3   =        subscript  c  3   absent    c_{3}=         +     +          ○  -     normal-○     \bigcirc\!\!\!\!\!-         +     +        style="background:#cdcdcd;"     c  4   =        subscript  c  4   absent    c_{4}=         +     +         +     +         +     +        This class has     D  𝖢   =  2       subscript  normal-D  𝖢   2    \mathrm{D}_{\mathsf{C}}=2   . As usual we may have different sentineling functions. A worst case   𝐒   𝐒   \mathbf{S}   , as illustrated, is      𝐒   (   c  1   )    =   {   x  1   ,   x  2   }    ,     𝐒   (   c  2   )    =   {   x  1   }    ,     𝐒   (   c  3   )    =   {   x  2   }    ,    𝐒   (   c  4   )    =  ∅        formulae-sequence      𝐒   subscript  c  1      subscript  x  1    subscript  x  2      formulae-sequence      𝐒   subscript  c  2      subscript  x  1      formulae-sequence      𝐒   subscript  c  3      subscript  x  2         𝐒   subscript  c  4          \mathbf{S}(c_{1})=\{x_{1},x_{2}\},\mathbf{S}(c_{2})=\{x_{1}\},\mathbf{S}(c_{3}%
 )=\{x_{2}\},\mathbf{S}(c_{4})=\emptyset   . However a cheaper one is      𝐒   (   c  1   )    =   {   x  3   }    ,     𝐒   (   c  2   )    =   {   x  1   }    ,     𝐒   (   c  3   )    =   {   x  2   }    ,    𝐒   (   c  4   )    =  ∅        formulae-sequence      𝐒   subscript  c  1      subscript  x  3      formulae-sequence      𝐒   subscript  c  2      subscript  x  1      formulae-sequence      𝐒   subscript  c  3      subscript  x  2         𝐒   subscript  c  4          \mathbf{S}(c_{1})=\{x_{3}\},\mathbf{S}(c_{2})=\{x_{1}\},\mathbf{S}(c_{3})=\{x_%
 {2}\},\mathbf{S}(c_{4})=\emptyset   :       style="background:#ffdead;"    x  1     subscript  x  1    x_{1}      style="background:#ffdead;"    x  2     subscript  x  2    x_{2}      style="background:#ffdead;"    x  3     subscript  x  3    x_{3}        style="background:#cdcdcd;"     c  1   =        subscript  c  1   absent    c_{1}=         -     -         -     -          ○  -     normal-○     \bigcirc\!\!\!\!\!-        style="background:#cdcdcd;"     c  2   =        subscript  c  2   absent    c_{2}=          ○  -     normal-○     \bigcirc\!\!\!\!\!-         +     +         +     +        style="background:#cdcdcd;"     c  3   =        subscript  c  3   absent    c_{3}=         +     +          ○  -     normal-○     \bigcirc\!\!\!\!\!-         +     +        style="background:#cdcdcd;"     c  4   =        subscript  c  4   absent    c_{4}=         +     +         +     +         +     +        References      "  Category:Computational complexity theory  Category:Algorithmic inference   