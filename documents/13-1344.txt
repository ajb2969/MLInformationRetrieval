   Minimum k-cut      Minimum k-cut   In mathematics, the minimum k -cut , is a combinatorial optimization problem that requires finding a set of edges whose removal would partition the graph to k connected components. These edges are referred to as k -cut . The goal is to find the minimum-weight k -cut. This partitioning can have applications in VLSI design, data-mining , finite elements and communication in parallel computing .  Formal definition  Given an undirected graph G = ( V , E ) with an assignment of weights to the edges w : E → N and an integer k ∈ {2, 3, …, | V |}, partition V into k disjoint sets F = { C 1 , C 2 , …, C k } while minimizing       ∑   i  =  1    k  -  1      ∑   j  =   i  +  1    k     ∑       v  1   ∈   C  i          v  2   ∈   C  j         w   (   {   v  1   ,   v  2   }   )          superscript   subscript     i  1      k  1      superscript   subscript     j    i  1     k     subscript        subscript  v  1    subscript  C  i         subscript  v  2    subscript  C  j         w    subscript  v  1    subscript  v  2         \sum_{i=1}^{k-1}\sum_{j=i+1}^{k}\sum_{\begin{smallmatrix}v_{1}\in C_{i}\\
 v_{2}\in C_{j}\end{smallmatrix}}w(\left\{v_{1},v_{2}\right\})     For a fixed k , the problem is polynomial time solvable in O (| V | k 2 ). 1 However, the problem is NP-complete if k is part of the input. 2 It is also NP-complete if we specify   k   k   k   vertices and ask for the minimum   k   k   k   -cut which separates these vertices among each of the sets. 3  Approximations  Several approximation algorithms exist with an approximation of 2 − 2/ k . A simple greedy algorithm that achieves this approximation factor computes a minimum cut in each connected components and removes the lightest one. This algorithm requires a total of n − 1 max flow computations. Another algorithm achieving the same guarantee uses the Gomory–Hu tree representation of minimum cuts. Constructing the Gomory–Hu tree requires n − 1 max flow computations, but the algorithm requires an overall O ( kn ) max flow computations. Yet, it is easier to analyze the approximation factor of the second algorithm. 4 5  If we restrict the graph to a metric space, meaning a complete graph that satisfies the triangle inequality , and enforce that the output partitions are each of pre-specified sizes, the problem is approximable to within a factor of  3 for any fixed k . 6 More recently, polynomial time approximation schemes (PTAS) were discovered for those problems. 7  See also   Maximum cut  Minimum cut   Notes    References            "  Category:NP-complete problems  Category:Combinatorial optimization  Category:Computational problems in graph theory  Category:Approximation algorithms     . ↩  ↩  1 , which cites 2 ↩  . ↩  . ↩  . ↩  ↩     