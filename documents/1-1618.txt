   Queueing theory      Queueing theory   (Figure)  Queue networks are systems in which single queues are connected by a routing network. In this image servers are represented by circles, queues by a series of retangles and the routing network by arrows. In the study of queue networks one typically tries to obtain the equilibrium distribution of the network, although in many applications the study of the transient state is fundamental.   Queueing theory is the mathematical study of waiting lines, or queues . 1 In queueing theory a model is constructed so that queue lengths and waiting time can be predicted. 2 Queueing theory is generally considered a branch of operations research because the results are often used when making business decisions about the resources needed to provide a service.  Queueing theory has its origins in research by Agner Krarup Erlang when he created models to describe the Copenhagen telephone exchange. 3 The ideas have since seen applications including telecommunication , traffic engineering , computing 4 and the design of factories, shops, offices and hospitals. 5 6  Single queueing nodes  Single queueing nodes are usually described using Kendall's notation in the form A / S / C where A describes the time between arrivals to the queue, S the size of jobs and C the number of servers at the node. 7 8 Many theorems in queueing theory can be proved by reducing queues to mathematical systems known as Markov chains , first described by Andrey Markov in his 1906 paper. 9  Agner Krarup Erlang , a Danish engineer who worked for the Copenhagen Telephone Exchange, published the first paper on what would now be called queueing theory in 1909. 10 11 12 He modeled the number of telephone calls arriving at an exchange by a Poisson process and solved the M/D/1 queue in 1917 and M/D/k queueing model in 1920. 13 In Kendall's notation:   M stands for Markov or memoryless and means arrivals occur according to a Poisson process  D stands for deterministic and means jobs arriving at the queue require a fixed amount of service  k describes the number of servers at the queueing node ( k = 1, 2,...). If there are more jobs at the node than there are servers then jobs will queue and wait for service   The M/M/1 queue is a simple model where a single server serves jobs that arrive according to a Poisson process and have exponentially distributed service requirements. In an M/G/1 queue the G stands for general and indicates an arbitrary probability distribution . The M/G/1 model was solved by Felix Pollaczek in 1930, 14 a solution later recast in probabilistic terms by Aleksandr Khinchin and now known as the Pollaczek–Khinchine formula . 15  After World War II queueing theory became an area of research interest to mathematicians. 16 In 1953 David Kendall solved the GI/M/k queue 17 and introduced the modern notation for queues, now known as Kendall's notation . In 1957 Pollaczek studied the GI/G/1 using an integral equation . 18  John Kingman gave a formula for the mean waiting time in a G/G/1 queue : Kingman's formula . 19  The matrix geometric method and matrix analytic methods have allowed queues with phase-type distributed inter-arrival and service time distributions to be considered. 20  Problems such as performance metrics for the M/G/k queue remain an open problem. 21  Service disciplines  Various scheduling policies can be used at queuing nodes:   First in first out :This principle states that customers are served one at a time and that the customer that has been waiting the longest is served first. 22  Last in first out :This principle also serves customers one at a time, but the customer with the shortest waiting time will be served first. 23 Also known as a stack .  Processor sharing :Service capacity is shared equally between customers. 24 Priority :Customers with high priority are served first. 25 Priority queues can be of two types, non-preemptive (where a job in service cannot be interrupted) and preemptive (where a job in service can be interrupted by a higher priority job). No work is lost in either model. 26  Shortest job first : The next job to be served is the one with the smallest size Preemptive shortest job first : The next job to be served is the one with the original smallest size 27  Shortest remaining processing time : The next job to serve is the one with the smallest remaining processing requirement. 28    Service facility :    Single server:customers line up and there is only one server  Parallel servers:customers line up and there are several servers  Tandem queue:there are many counters and customers can decide going where to queue    Customer’s behavior of waiting:    Balking:customers deciding not to join the queue if it is too long  Jockeying:customers switch between queues if they think they will get served faster by so doing  Reneging:customers leave the queue if they have waited too long for service   Queueing networks  Networks of queues are systems in which a number of queues are connected by customer routing. When a customer is serviced at one node it can join another node and queue for service, or leave the network. For a network of m the state of the system can be described by an m –dimensional vector ( x 1 , x 2 ,..., x m ) where x i represents the number of customers at each node.  The first significant results in this area were Jackson networks , 29 30 for which an efficient product-form stationary distribution exists and the mean value analysis 31 which allows average metrics such as throughput and sojourn times to be computed. 32 If the total number of customers in the network remains constant the network is called a closed network and has also been shown to have a product–form stationary distribution in the Gordon–Newell theorem . 33 This result was extended to the BCMP network 34 where a network with very general service time, regimes and customer routing is shown to also exhibit a product-form stationary distribution. The normalizing constant can be calculated with the Buzen's algorithm , proposed in 1973. 35  Networks of customers have also been investigated, Kelly networks where customers of different classes experience different priority levels at different service nodes. 36 Another type of network are G-networks first proposed by Erol Gelenbe in 1993: 37 these networks do not assume exponential time distributions like the classic Jackson Network.  Example of M/M/1   Birth and Death process    A/B/C   (Figure)  Birth and Death process.     A:distribution of arrival time       B:distribution of service time       C:the number of parallel servers      A system of inter-arrival time and service time showed exponential distribution, we denoted M.     λ：the average arrival rate       µ：the average service rate of a single service       P : the probability of n customers in system       n :the number of people in system      Let E represent the number of times of entering state n, and L represent the number of times of leaving state n. We have     |   E  -  L   |   ∈   {  0  ,  1  }           E  L     0  1     |E-L|\in\{0,1\}   . When the system arrives at steady state, which means t, we have, therefore arrival rate=removed rate.    Balance equation     situation 0      μ  1    P  1    =    λ  0    P  0           subscript  μ  1    subscript  P  1       subscript  λ  0    subscript  P  0      \mu_{1}P_{1}=\lambda_{0}P_{0}          situation 1       λ  0    P  0    +    μ  2    P  2     =    (    λ  1   +   μ  1    )    P  1             subscript  λ  0    subscript  P  0       subscript  μ  2    subscript  P  2          subscript  λ  1    subscript  μ  1     subscript  P  1      \lambda_{0}P_{0}+\mu_{2}P_{2}=(\lambda_{1}+\mu_{1})P_{1}          situation n       λ   n  -  1     P   n  -  1     +    μ   n  +  1     P   n  +  1      =    (    λ  n   +   μ  n    )    P  n             subscript  λ    n  1     subscript  P    n  1        subscript  μ    n  1     subscript  P    n  1           subscript  λ  n    subscript  μ  n     subscript  P  n      \lambda_{n-1}P_{n-1}+\mu_{n+1}P_{n+1}=(\lambda_{n}+\mu_{n})P_{n}          By balance equation, P_1=\frac{\lambda_0}{\mu_1}P_0\;\;\;P_2=\frac{\lambda_1}{\mu_2}P_1+\frac{1}{\mu_2}(\mu_1P_1-\lambda_0P_0)=\frac{\lambda_1}{\mu_2}P_1=\frac{\lambda_1\lambda_0}{\mu_2\mu_1}P_0        By mathematical induction,      P_n=\frac{\lambda_{n-1}\lambda_{n-2}\cdots\lambda_0}{\mu_n\mu_{n-1}\cdots\mu_1}P_0=P_0\prod_{i=0}^{n-1}\frac{\lambda_i}{\mu_{i+1}}    Because      \sum_{n=0}^{\infty}P_n=P_0+P_0\sum_{n=1}^{\infty}\prod_{i=0}^ {n-1}\frac{\lambda_i}{\mu_{i+1}}=1    we get      P_0=\frac{1}{1+\sum_{n=1}^{\infty}\prod_{i=0}^ {n-1}\frac{\lambda_i}{\mu_{i+1}}}  Routing algorithms  In discrete time networks where there is a constraint on which service nodes can be active at any time, the max-weight scheduling algorithm chooses a service policy to give optimal throughput in the case that each job visits only a single service node. In the more general case where jobs can visit more than one node, backpressure routing gives optimal throughput.  A network scheduler must choose a queuing algorithm, which affects the characteristics of the larger network.  Mean field limits  Mean field models consider the limiting behaviour of the empirical measure (proportion of queues in different states) as the number of queues ( m above) goes to infinity. The impact of other queues on any given queue in the network is approximated by a differential equation. The deterministic model converges to the same stationary distribution as the original model. 38  Fluid limits  Fluid models are continuous deterministic analogs of queueing networks obtained by taking the limit when the process is scaled in time and space, allowing heterogeneous objects. This scaled trajectory converges to a deterministic equation which allows us stability of the system to be proven. It is known that a queueing network can be stable, but have an unstable fluid limit. 39  Heavy traffic/diffusion approximations  In a system with high occupancy rates (utilisation near 1) a heavy traffic approximation can be used to approximate the queueing length process by a reflected Brownian motion , 40  Ornstein–Uhlenbeck process or more general diffusion process . 41 The number of dimensions of the RBM is equal to the number of queueing nodes and the diffusion is restricted to the non-negative orthant .  Software for simulation/analysis   Java Modelling Tools , a GPL suite of queueing theory tools written in Java 42  Queueing Package for GNU Octave 43   See also   Ehrenfest model  Erlang unit  Industrial engineering  Network simulation  Queue area  Queueing delay  Queueing Systems (a journal of queueing theory)  Random early detection  Renewal theory  Throughput  Scheduling (computing)  Traffic jam  Traffic generation model   References  Further reading    Online   chap.15, pp. 380–412     External links   Queueing theory calculator  Teknomo's Queueing theory tutorial and calculators  Virtamo's Queueing Theory Course  Myron Hlynka's Queueing Theory Page  Queueing Theory Basics  A free online tool to solve some classical queueing systems   "  Category:Stochastic processes  Category:Production and manufacturing  Category:Services management and marketing  Category:Operations research  Category:Formal sciences  *  Category:Rationing and licensing  Category:Network performance  Category:Markov models  Category:Markov processes     ↩    ↩  ↩  ↩  Tijms, H.C, ''Algorithmic Analysis of Queues", Chapter 9 in A First Course in Stochastic Models, Wiley, Chichester, 2003 ↩  ↩  A.A. Markov, Extension of the law of large numbers to dependent quantities, Izvestiia Fiz.-Matem. Obsch. Kazan Univ., (2nd Ser.), 15(1906), pp. 135–156 [Also [37], pp. 339–361]. ↩  ↩  ↩  ↩  ↩  Pollaczek, F., Ueber eine Aufgabe der Wahrscheinlichkeitstheorie, Math. Z. 1930 ↩   ↩  Kendall, D.G.:Stochastic processes occurring in the theory of queues and their analysis by the method of the imbedded Markov chain, Ann. Math. Stat. 1953 ↩  Pollaczek, F., Problèmes Stochastiques posés par le phénomène de formation d'une queue ↩  ↩  ↩   Penttinen A., Chapter 8 – Queueing Systems , Lecture Notes: S-38.145 - Introduction to Teletraffic Theory. ↩     ↩  ↩  ↩  ↩  ↩  ↩  ↩  ↩  ↩  ↩  ↩  ↩  ↩  ↩  ↩  ↩  ↩  ↩     