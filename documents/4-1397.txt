   Symbolic Cholesky decomposition      Symbolic Cholesky decomposition   In the mathematical subfield of numerical analysis the symbolic Cholesky decomposition is an algorithm used to determine the non-zero pattern for the   L   L   L   factors of a symmetric  sparse matrix when applying the Cholesky decomposition or variants.  Algorithm  Let    A  =   (   a   i  j    )   ∈   𝕂   n  ×  n          A   subscript  a    i  j          superscript  𝕂    n  n       A=(a_{ij})\in\mathbb{K}^{n\times n}   be a sparse symmetric positive definite matrix with elements from a field    𝕂   𝕂   \mathbb{K}    , which we wish to factorize as    A  =   L    L  T         A    L   superscript  L  T      A=LL^{T}\,   .  In order to implement an efficient sparse factorization it has been found to be necessary to determine the non zero structure of the factors before doing any numerical work. To write the algorithm down we use the following notation:   Let    𝒜  i     subscript  𝒜  i    \mathcal{A}_{i}   and    ℒ  j     subscript  ℒ  j    \mathcal{L}_{j}   be sets representing the non-zero patterns of columns i and j (below the diagonal only, and including diagonal elements) of matrices   A   A   A   and   L   L   L   respectively.  Take    min   ℒ  j        subscript  ℒ  j     \min\mathcal{L}_{j}   to mean the smallest element of    ℒ  j     subscript  ℒ  j    \mathcal{L}_{j}   .  Use a parent function    π   (  i  )       π  i    \pi(i)\,\!   to define the elimination tree within the matrix.   The following algorithm gives an efficient symbolic factorization of     A    A   A\,    :           π   (  i  )    :=    0    for all   i            For   i   :=    1    to   n            ℒ   i   :=   𝒜  i            For all    j    such that   π   (  j  )    =  i           ℒ   i   :=    (    ℒ  i   ∪   ℒ  j    )   ∖   {  j  }             π    (  i  )    :=   min   (    ℒ  i   ∖   {  i  }    )            missing-subexpression    assign    π  i     0  for all  i       missing-subexpression    assign    For  i     1  to  n       missing-subexpression    assign   subscript  ℒ  i    subscript  𝒜  i       missing-subexpression       For all  j  such that  π  j   i      missing-subexpression    assign   subscript  ℒ  i        subscript  ℒ  i    subscript  ℒ  j     j        missing-subexpression    assign    π  i        subscript  ℒ  i    i         \begin{aligned}&\displaystyle\pi(i):=0~{}\mbox{for all}~{}i\\
 &\displaystyle\mbox{For}~{}i:=1~{}\mbox{to}~{}n\\
 &\displaystyle\qquad\mathcal{L}_{i}:=\mathcal{A}_{i}\\
 &\displaystyle\qquad\mbox{For all}~{}j~{}\mbox{such that}~{}\pi(j)=i\\
 &\displaystyle\qquad\qquad\mathcal{L}_{i}:=(\mathcal{L}_{i}\cup\mathcal{L}_{j}%
 )\setminus\{j\}\\
 &\displaystyle\qquad\pi(i):=\min(\mathcal{L}_{i}\setminus\{i\})\end{aligned}     "  Category:Articles with example pseudocode  Category:Matrix decompositions   