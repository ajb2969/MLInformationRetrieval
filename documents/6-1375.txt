   Multi-armed bandit      Multi-armed bandit   (Figure)  A row of slot machines in Las Vegas.   In probability theory , the multi-armed bandit problem (sometimes called the K - 1 or N -armed bandit problem 2 ) is a problem in which a gambler at a row of slot machines (sometimes known as "one-armed bandits") has to decide which machines to play, how many times to play each machine and in which order to play them. 3 When played, each machine provides a random reward from a distribution specific to that machine. The objective of the gambler is to maximize the sum of rewards earned through a sequence of lever pulls. 4 5  Robbins in 1952, realizing the importance of the problem, constructed convergent population selection strategies in "some aspects of the sequential design of experiments". 6  A theorem, the Gittins index published first by John C. Gittins gives an optimal policy in the Markov setting for maximizing the expected discounted reward. 7  In practice, multi-armed bandits have been used to model the problem of managing research projects in a large organization, like a science foundation or a pharmaceutical company . Given a fixed budget, the problem is to allocate resources among the competing projects, whose properties are only partially known at the time of allocation, but which may become better understood as time passes. 8 9  In early versions of the multi-armed bandit problem, the gambler has no initial knowledge about the machines. The crucial tradeoff the gambler faces at each trial is between "exploitation" of the machine that has the highest expected payoff and "exploration" to get more information about the expected payoffs of the other machines. The trade-off between exploration and exploitation is also faced in reinforcement learning .  Empirical motivation  The multi-armed bandit problem models an agent that simultaneously attempts to acquire new knowledge (called "exploration") and optimize his or her decisions based on existing knowledge (called "exploitation"). The agent attempts to balance these competing tasks in order to maximize his or her total value over the period of time considered. There are many practical applications of the bandit model, for example:   clinical trials investigating the effects of different experimental treatments while minimizing patient losses, 10 11 12 13  adaptive routing efforts for minimizing delays in a network.  portfolio design 14   In these practical examples, the problem requires balancing reward maximization based on the knowledge already acquired with attempting new actions to further increase knowledge. This is known as the exploitation vs. exploration tradeoff in reinforcement learning .  The model has also been used to control dynamic allocation of resources to different projects, answering the question of which project to work on, given uncertainty about the difficulty and payoff of each possibility. 15  Originally considered by Allied scientists in World War II , it proved so intractable that, according to Peter Whittle , the problem was proposed to be dropped over Germany so that German scientists "could also waste their time on it". 16  The version of the problem now commonly analyzed was formulated by Herbert Robbins in 1952.  The multi-armed bandit model  The multi-armed bandit (short: bandit ) can be seen as a set of real distributions     B  =   {   R  1   ,  …  ,   R  K   }       B    subscript  R  1   normal-…   subscript  R  K      B=\{R_{1},\dots,R_{K}\}   , each distribution being associated with the rewards delivered by one of the    K  ∈  ℤ      K  ℤ    K\in\mathbb{Z}   levers. Let     μ  1   ,  …  ,   μ  K       subscript  μ  1   normal-…   subscript  μ  K     \mu_{1},\dots,\mu_{K}   be the mean values associated with these reward distributions. The gambler iteratively plays one lever per round and observes the associated reward. The objective is to maximize the sum of the collected rewards. The horizon   H   H   H   is the number of rounds that remain to be played. The bandit problem is formally equivalent to a one-state Markov decision process . The regret    ρ   ρ   \rho   after   T   T   T   rounds is defined as the expected difference between the reward sum associated with an optimal strategy and the sum of the collected rewards    ρ  =    T   μ  *    -    ∑   t  =  1   T     r  ^   t         ρ      T   superscript  μ       superscript   subscript     t  1    T    subscript   normal-^  r   t       \rho=T\mu^{*}-\sum_{t=1}^{T}\widehat{r}_{t}   , where    μ  *     superscript  μ     \mu^{*}   is the maximal reward mean,     μ  *   =    max  k    {   μ  k   }         superscript  μ      subscript   k    subscript  μ  k      \mu^{*}=\max_{k}\{\mu_{k}\}   , and     r  ^   t     subscript   normal-^  r   t    \widehat{r}_{t}   is the reward at time t . A strategy whose average regret per round    ρ  /  T      ρ  T    \rho/T   tends to zero with probability 1 when the number of played rounds tends to infinity is a zero-regret strategy . 17 Intuitively, zero-regret strategies are guaranteed to converge to a (not necessarily unique) optimal strategy if enough rounds are played.  Variations  A common formulation is the Binary multi-armed bandit or Bernoulli multi-armed bandit, which issues a reward of one with probability   p   p   p   , and otherwise a reward of zero.  Another formulation of the multi-armed bandit has each arm representing an independent Markov machine. Each time a particular arm is played, the state of that machine advances to a new one, chosen according to the Markov state evolution probabilities. There is a reward depending on the current state of the machine. In a generalisation called the "restless bandit problem", the states of non-played arms can also evolve over time. 18 There has also been discussion of systems where the number of choices (about which arm to play) increases over time. 19  Computer science researchers have studied multi-armed bandits under worst-case assumptions, obtaining algorithms to minimize regret in both finite and infinite ( asymptotic ) time horizons for both stochastic 20 and non-stochastic 21 arm payoffs.  Bandit strategies  A major breakthrough was the construction of optimal population selection strategies, or policies (that possess uniformly maximum convergence rate to the population with highest mean) in the work described below.  Optimal solutions  In the paper "Asymptotically efficient adaptive allocation rules", Lai and Robbins 22 (following papers of Robbins and his co-workers going back to Robbins to the year 1952) constructed convergent population selection policies that possess the fastest rate of convergence (to the population with highest mean) for the case that the population reward distributions are the one-parameter exponential family. Then, in Katehakis and Robbins  23 simplifications of the policy and the main proof were given for the case of normal populations with known variances. The next notable progress was obtained by Burnetas and Katehakis in the "Optimal adaptive policies for sequential allocation problems", 24 where index based policies with uniformly maximum convergence rate were constructed, under more general conditions that include the case in which the distributions of outcomes from each population depend on a vector of unknown parameters. Burnetas and Katehakis (1996) also provided an explicit solution for the important case in which the distributions of outcomes follow arbitrary (i.e., nonparametric) discrete, univariate distributions.  Later in "Optimal adaptive policies for Markov decision processes" 25 Burnetas and Katehakis studied the much larger model of Markov Decision Processes under partial information, where the transition law and/or the expected one period rewards may depend on unknown parameter. In this work the explicit form for a class of adaptive policies that possess uniformly maximum convergence rate properties for the total expected finite horizon reward, were constructed under sufficient assumptions of finite state-action spaces and irreducibility of the transition law. A main feature of these policies is that the choice of actions, at each state and time period, is based on indices that are inflations of the right-hand side of the estimated average reward optimality equations. These inflations have recently been called the optimistic approach in the work of Tewari and Bartlett, 26 Ortner 27 Filippi, Cappé, and Garivier, 28 and Honda and Takemura. 29  Approximate solutions  Many strategies exist which provide an approximate solution to the bandit problem, and can be put into the four broad categories detailed below.  Semi-uniform strategies  Semi-uniform strategies were the earliest (and simplest) strategies discovered to approximately solve the bandit problem. All those strategies have in common a greedy behavior where the best lever (based on previous observations) is always pulled except when a (uniformly) random action is taken.   Epsilon-greedy strategy : The best lever is selected for a proportion    1  -  ϵ      1  ϵ    1-\epsilon   of the trials, and a lever is selected at random (with uniform probability) for a proportion   ϵ   ϵ   \epsilon   . A typical parameter value might be    ϵ  =  0.1      ϵ  0.1    \epsilon=0.1   , but this can vary widely depending on circumstances and predilections.    Epsilon-first strategy : A pure exploration phase is followed by a pure exploitation phase. For   N   N   N   trials in total, the exploration phase occupies    ϵ  N      ϵ  N    \epsilon N   trials and the exploitation phase     (   1  -  ϵ   )   N        1  ϵ   N    (1-\epsilon)N   trials. During the exploration phase, a lever is randomly selected (with uniform probability); during the exploitation phase, the best lever is always selected.    Epsilon-decreasing strategy : Similar to the epsilon-greedy strategy, except that the value of   ϵ   ϵ   \epsilon   decreases as the experiment progresses, resulting in highly explorative behaviour at the start and highly exploitative behaviour at the finish.    Adaptive epsilon-greedy strategy based on value differences (VDBE) : Similar to the epsilon-decreasing strategy, except that epsilon is reduced on basis of the learning progress instead of manual tuning (Tokic, 2010). 30 High fluctuations in the value estimates lead to a high epsilon (exploration); low fluctuations to a low epsilon (exploitation). Further improvements can be achieved by a softmax weighted action selection in case of exploratory actions (Tokic & Palm, 2011). 31    Contextual-Epsilon-greedy strategy : Similar to the epsilon-greedy strategy, except that the value of   ϵ   ϵ   \epsilon   is computed regarding the situation in experiment processes, which let the algorithm be Context-Aware. It is based on dynamic exploration/exploitation and can adaptively balance the two aspects by deciding which situation is most relevant for exploration or exploitation, resulting in highly explorative behavior when the situation is not critical and highly exploitative behavior at critical situation. 32   Probability matching strategies  Probability matching strategies reflect the idea that the number of pulls for a given lever should match its actual probability of being the optimal lever. Probability matching strategies are also known as Thompson sampling or Bayesian Bandits, 33 and surprisingly easy to implement if you can sample from the posterior for the mean value of each alternative.  Probability matching strategies also admit solutions to so-called contextual bandit problems.  Pricing strategies  Pricing strategies establish a price for each lever. For example as illustrated with the POKER algorithm, 34 the price can be the sum of the expected reward plus an estimation of extra future rewards that will gain through the additional knowledge. The lever of highest price is always pulled.  Strategies with ethical constraints  These strategies minimize the assignment of any patient to an inferior arm ( "physician's duty" ). In a typical case, they minimize expected successes lost (ESL), that is, the expected number of favorable outcomes that were missed because of assignment to an arm later proved to be inferior. Another version minimizes resources wasted on any inferior, more expensive, treatment. 35  Contextual Bandit  A particularly useful version of the multi-armed bandit is the contextual multi-armed bandit problem. In this problem, in each iteration an agent has to choose between arms. Before making the choice, the agent sees a d-dimensional feature vector (context vector), associated with the current iteration. The learner uses these context vectors along with the rewards of the arms played in the past to make the choice of the arm to play in the current iteration. Over time, the learner's aim is to collect enough information about how the context vectors and rewards relate to each other, so that it can predict the next best arm to play by looking at the feature vectors. 36  Approximate solutions for Contextual Bandit  Many strategies exist which provide an approximate solution to the Contextual bandit problem, and can be put into two broad categories detailed below.  Online linear classifier   LinUCB algorithm : the authors assume a linear dependency between the expected reward of an action and its context and model the representation space using a set of linear predictors.   Online non-linear classifier   UCBogram algorithm : The nonlinear reward functions are estimated using piecewise constant over a functions using a piecewise constant estimator called regressogram in Nonparametric regression . Then, UCB is employed on each constant piece. Successive refinements of the partition of the context space are scheduled or chosen adaptively. 37 38 39    NeuralBandit algorithm : In this algorithm several neural networks are trained to modelize the value of rewards knowing the context, and it uses a multi-experts approach to choose online the parameters of multi-layer perceptrons. 40    KernelUCB algorithm : a kernelized non-linear version of linearUCB, with efficient implementation and finite-time analysis. 41   Adversarial Bandit  Another variant of the multi-armed bandit problem is called the adversarial bandit, first introduced by Auer and Cesa-Bianchi (1998). In this variant, at each iteration an agent chooses an arm and an adversary simultaneously chooses the payoff structure for each arm. This is one of the strongest generalizations of the bandit problem 42 as it removes all assumptions of the distribution and a solution to the adversarial bandit problem is a generalized solution to the more specific bandit problems.  Infinite Armed Bandit  In the original specification and in the above variants, the bandit problem is specified with a discrete and finite number of arms, often indicated by the variable   K   K   K   . In the infinite armed case, introduced by Agarwal (1995), the "arms" are a continuous variable in   K   K   K   dimensions.  Dueling Bandit  The Dueling Bandit variant was introduced by Yue et al. (2012) 43 to model the exploration-versus-exploration tradeoff for relative feedback. In this variant the gambler is allowed to pull two levers at the same time, but she only gets a binary feedback telling which lever provided the best reward. The difficulty of this problem stems from the fact that the gambler has no way of directly observing the reward of her actions.  See also   Gittins index — a powerful, general strategy for analyzing bandit problems.  Optimal stopping  Search theory  Greedy algorithm   References   44  45  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62   Further reading     .   .   .   .     .     .   .     External links   PyMaBandits , Open-Source implementation of bandit strategies in Python and Matlab  bandit.sourceforge.net Bandit project , Open-Source implementation of bandit strategies  Banditlib , Open-Source implementation of bandit strategies in C++  Leslie Pack Kaelbling and Michael L. Littman (1996). Exploitation versus Exploration: The Single-State Case  Tutorial: Introduction to Bandits: Algorithms and Theory. Part1 . Part2 .  Feynman's restaurant problem , a classic example (with known answer) of the exploitation vs. exploration tradeoff.  Bandit algorithms vs. A-B testing .  S. Bubeck and N. Cesa-Bianchi A Survey on Bandits   "  Category:Sequential methods  Category:Sequential experiments  Category:Stochastic optimization  Category:Machine learning      ↩  ↩    ↩  ↩       Press (1986) ↩   Farias and Madan (2011) ↩       ↩  ↩  ↩  ↩  ↩  ↩  ↩  Filippi, S. and Cappé, O. and Garivier, A. (2010). "Online regret bounds for Markov decision processes with deterministic transitions", Communication, Control, and Computing (Allerton), 2010 48th Annual Allerton Conference on , pp. 115--122 ↩  ↩              Burtini (2015) ↩   ↩  ↩  ↩  ↩  ↩  ↩  ↩  ↩  ↩  ↩  ↩  ↩  ↩  ↩  . ↩  . ↩  ↩  ↩  ↩     