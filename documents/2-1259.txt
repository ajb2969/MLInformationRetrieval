   Borwein's algorithm      Borwein's algorithm   In mathematics , Borwein's algorithm is an algorithm devised by Jonathan and Peter Borwein to calculate the value of 1/ π . They devised several other algorithms. They published a book: Jonathon M. Borwein, Peter B. Borwein, Pi and the AGM - A Study in Analytic Number Theory and Computational Complexity, Wiley, New York, 1987. Many of their results are available in: Jorg Arndt, Christoph Haenel, Pi Unleashed, Springer, Berlin, 2001, ISBN 3-540-66572-2.  Jonathan Borwein and Peter Borwein's Version (1993)  Start out by setting     A   A   \displaystyle A     Then         -   C  3     π   =    ∑   n  =  0   ∞       (   6  n   )   !      (   3  n   )   !     (   n  !   )   3       A  +   n  B     C   3  n                  superscript  C  3     π     superscript   subscript     n  0              6  n          3  n     superscript    n   3         A    n  B     superscript  C    3  n         \frac{\sqrt{-C^{3}}}{\pi}=\sum_{n=0}^{\infty}{\frac{(6n)!}{(3n)!(n!)^{3}}\frac%
 {A+nB}{C^{3n}}}     Each additional term of the series yields approximately 50 digits. This is an example of a Ramanujan–Sato series .  Cubic convergence (1991)  Start out by setting      a  0     subscript  a  0    \displaystyle a_{0}     Then iterate      r   k  +  1      subscript  r    k  1     \displaystyle r_{k+1}     Then a k converges cubically to 1/π; that is, each iteration approximately triples the number of correct digits.  Another formula for π (1989)  Start out by setting     A   A   \displaystyle A     Then       1  /  π   =   12    ∑   n  =  0   ∞       (   -  1   )   n     (   6  n   )   !    (   A  +   n  B    )       (   n  !   )   3     (   3  n   )   !    C   n  +   1  /  2               1  π     12    superscript   subscript     n  0           superscript    1   n       6  n      A    n  B        superscript    n   3       3  n     superscript  C    n    1  2           1/\pi=12\sum_{n=0}^{\infty}\frac{(-1)^{n}(6n)!\,(A+nB)}{(n!)^{3}(3n)!\,C^{n+1/%
 2}}\,\!     Each additional term of the partial sum yields approximately 31 digits.  Quartic algorithm (1985)  Start out by setting 1      a  0     subscript  a  0    \displaystyle a_{0}     Then iterate      y   k  +  1      subscript  y    k  1     \displaystyle y_{k+1}     Then a k converges quartically against 1/π; that is, each iteration approximately quadruples the number of correct digits.  Quadratic convergence (1984)  Start out by setting 2  3      a  0     subscript  a  0    \displaystyle a_{0}     Then iterate      a   n  +  1      subscript  a    n  1     \displaystyle a_{n+1}     Then p k converges quadratically to π; that is, each iteration approximately doubles the number of correct digits. The algorithm is not self-correcting; each iteration must be performed with the desired number of correct digits of π.  Quintic convergence  Start out by setting      a  0     subscript  a  0    \displaystyle a_{0}     Then iterate      x   n  +  1      subscript  x    n  1     \displaystyle x_{n+1}     Then a k converges quintically to 1/π (that is, each iteration approximately quintuples the number of correct digits), and the following condition holds:      0  <    a  n   -   1  π    <    16  ⋅   5  n   ⋅   e   -   5  n      π         0     subscript  a  n     1  π            normal-⋅  16   superscript  5  n    superscript  e     superscript  5  n      π      0    4  Nonic convergence  Start out by setting      a  0     subscript  a  0    \displaystyle a_{0}     Then iterate      t   n  +  1      subscript  t    n  1     \displaystyle t_{n+1}     Then a k converges nonically to 1/ π ; that is, each iteration approximately multiplies the number of correct digits by nine.  See also   Gauss–Legendre algorithm – another algorithm to calculate π  Bailey–Borwein–Plouffe formula   References     Pi Formulas from Wolfram MathWorld   "  Category:Pi algorithms     ↩  ↩  ↩  http://www.cecm.sfu.ca/organics/papers/garvan/paper/html/node12.html ↩     