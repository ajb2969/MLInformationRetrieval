


Affinity propagation




Affinity propagation

In statistics and data mining, affinity propagation (AP) is a clustering algorithm based on the concept of "message passing" between data points.1 Unlike clustering algorithms such as 

 
 -means or 

 
 -medoids, AP does not require the number of clusters to be determined or estimated before running the algorithm. Like 
 
 
 
 -medoids, AP finds "exemplars", members of the input set that are representative of clusters.2
Algorithm
Let  through  be a set of data points, with no assumptions made about their internal structure, and let 
 
 
 
  be a function that quantifies the similarity between any two points, such that  iff  is more similar to  than to .
The algorithm proceeds by alternating two message passing steps, to update two matrices:3

The "responsibility" matrix 
 
 
 
  has values 
 
 
 
  that quantify how well-suited  is to serve as the exemplar for , relative to other candidate exemplars for .
The "availability" matrix 
 
 
 
  contains values 
 
 
 
  represents how "appropriate" it would be for  to pick  as its exemplar, taking into account other points' preference for  as an exemplar.

Both matrices are initialized to all zeroes, and can be viewed as log-probability tables. The algorithm then performs the following updates iteratively:

First, responsibility updates are sent around
 
 

Then, availability is updated per





 
  for 
 
 
 
  and
 


 
 .
 



Applications
The inventors of affinity propagation showed it is better for certain computer vision and computational biology tasks, e.g. clustering of pictures of human faces and identifying regulated transcripts, than 
 
 
 
 -means,4 even when 
 
 
 
 -means was allowed many random restarts and initialized using PCA.5 A study comparing AP and Markov clustering on protein interaction graph partitioning found Markov clustering to work better for that problem.6 A semi-supervised variant has been proposed for text mining applications.7
Software

A Java implementation is included in the ELKI data mining framework.
Java Apro library implements parallelized Affinity Propagation and Hierarchical AP.
A Julia implementation of affinity propagation is contained in Julia Statistics's Clustering.jl package.8
A Python version is part of the scikit-learn library.9
An R implementation is available in the "apcluster" package.10

References
"
Category:Data clustering algorithms










Clustering.jl www.github.com

apcluster cran.r-project.org>




