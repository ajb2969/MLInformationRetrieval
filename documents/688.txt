   Verifiable random function      Verifiable random function   In cryptography , the concept of a verifiable random function was introduced by Micali , Rabin , and Vadhan . 1 It is a pseudo-random function that provides publicly verifiable proofs of its outputs' correctness. Given an input value x , the owner of the secret key SK can compute the function value y = F SK ( x ) and the proof p SK ( x ). Using the proof and the public key     P  K   =   g   S  K          P  K    superscript  g    S  K      PK=g^{SK}   , everyone can check that the value y = F SK ( x ) was indeed computed correctly, yet this information cannot be used to find the secret key.  The original construction was rather inefficient. Recently, an efficient and practical verifiable random function was proposed by Yevgeniy Dodis and Aleksandr Yampolskiy. 2 In their construction,          F   S  K     (  x  )    =    e    (  g  ,  g  )    1  /   (   x  +   S  K    )      and       p   S  K     (  x  )    =   g   1  /   (   x  +   S  K    )       ,     formulae-sequence       subscript  F    S  K    x      e   superscript   g  g     1    x    S  K       and         subscript  p    S  K    x    superscript  g    1    x    S  K         F_{SK}(x)=e(g,g)^{1/(x+SK)}\quad\mbox{and}\quad p_{SK}(x)=g^{1/(x+SK)},   where e (·,·) is a bilinear map . To verify whether     F   S  K     (  x  )        subscript  F    S  K    x    F_{SK}(x)   was computed correctly or not, one can check if     e   (    g  x   P  K   ,    p   S  K     (  x  )    )    =   e   (  g  ,  g  )          e      superscript  g  x   P  K      subscript  p    S  K    x       e   g  g      e(g^{x}PK,p_{SK}(x))=e(g,g)   .  The proof of security relies on a new decisional bilinear Diffie-Hellman inversion assumption , which asks given    (  g  ,   g  x   ,  …  ,   g   (   x  q   )    ,  R  )     g   superscript  g  x   normal-…   superscript  g   superscript  x  q    R    (g,g^{x},\ldots,g^{(x^{q})},R)   as input to distinguish    R  =   e    (  g  ,  g  )    1  /  x         R    e   superscript   g  g     1  x       R=e(g,g)^{1/x}   from random.  References    "  Category:Cryptographic algorithms     ↩  ↩     