   Richardson–Lucy deconvolution      Richardson–Lucy deconvolution   The Richardson–Lucy algorithm , also known as Lucy–Richardson deconvolution , is an iterative procedure for recovering a latent image that has been blurred by a known point spread function . It was named after William Richardson and Leon Lucy, who described it independently. 1 2  Description  When an image is recorded on a detector such as photographic film or a charge-coupled device , it is generally slightly blurred, with an ideal point source not appearing as a point but being spread out, into what is known as the point spread function . Non-point sources are effectively the sum of many individual point sources, and pixels in an observed image can be represented in terms of the point spread function and the latent image as       d  i   =    ∑  j     p   i  j      u  j           subscript  d  i     subscript   j      subscript  p    i  j     subscript  u  j       d_{i}=\sum_{j}p_{ij}u_{j}\,   where    p   i  j      subscript  p    i  j     p_{ij}   is the point spread function (the fraction of light coming from true location   j   j   j   that is observed at position   i   i   i   ),    u  j     subscript  u  j    u_{j}   is the pixel value at location   j   j   j   in the latent image, and    d  i     subscript  d  i    d_{i}   is the observed value at pixel location   i   i   i   . The statistics are performed under the assumption that    u  j     subscript  u  j    u_{j}   are Poisson distributed , which is appropriate for photon noise in the data.  The basic idea is to calculate the most likely     u  j     subscript  u  j    u_{j}   given the observed    d  i     subscript  d  i    d_{i}   and known    p   i  j      subscript  p    i  j     p_{ij}   . This leads to an equation for    u  j     subscript  u  j    u_{j}   which can be solved iteratively according to       u  j   (   t  +  1   )    =    u  j   (  t  )      ∑  i      d  i    c  i     p   i  j            superscript   subscript  u  j     t  1       superscript   subscript  u  j   t     subscript   i        subscript  d  i    subscript  c  i     subscript  p    i  j         u_{j}^{(t+1)}=u_{j}^{(t)}\sum_{i}\frac{d_{i}}{c_{i}}p_{ij}   where        c  i   =    ∑  j     p   i  j     u  j   (  t  )       .       subscript  c  i     subscript   j      subscript  p    i  j     superscript   subscript  u  j   t       c_{i}=\sum_{j}p_{ij}u_{j}^{(t)}.     It has been shown empirically that if this iteration converges, it converges to the maximum likelihood solution for    u  j     subscript  u  j    u_{j}   . 3  This can also be written more generally (for more dimensions) in terms of convolution , 4       u   (   t  +  1   )    =    u   (  t  )    ⋅   (    d    u   (  t  )    ⊗  p    ⊗   p  ^    )         superscript  u    t  1     normal-⋅   superscript  u  t    tensor-product    d   tensor-product   superscript  u  t   p     normal-^  p       u^{(t+1)}=u^{(t)}\cdot\left(\frac{d}{u^{(t)}\otimes p}\otimes\hat{p}\right)   where the division and multiplication are element wise, and    p  ^     normal-^  p    \hat{p}   is the flipped point spread function, such that         p  ^    n  m    =   p    (   i  -  n   )    (   j  -  m   )      ,    0  ≤  n   ,   m  ≤   i  ,  j        formulae-sequence     subscript   normal-^  p     n  m     subscript  p      i  n     j  m       formulae-sequence    0  n     m   i  j       \hat{p}_{nm}=p_{(i-n)(j-m)},0\leq n,m\leq i,j     In problems where the point spread function    p   i  j      subscript  p    i  j     p_{ij}   is dependent on one or more unknown parameters, the Richardson–Lucy algorithm cannot be used.  References    "  Category:Image processing  Category:Estimation theory     ↩  ↩  ↩  ↩     