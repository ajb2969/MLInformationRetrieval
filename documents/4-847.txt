   Tor functor      Tor functor   In homological algebra , the Tor functors are the derived functors of the tensor product functor. They were first defined in generality to express the Künneth theorem and universal coefficient theorem in algebraic topology .  Specifically, suppose R is a ring , and denote by R - Mod the category of left R -modules and by Mod - R the category of right R -modules (if R is commutative , the two categories coincide). Pick a fixed module B in R - Mod . For A in Mod - R , set T ( A ) = A ⊗ R B . Then T is a right exact functor from Mod - R to the category of abelian groups  Ab (in the case when R is commutative, it is a right exact functor from Mod - R to Mod - R ) and its left derived functors  L n T are defined. We set        Tor  n  R    (  A  ,  B  )    =    (    L  n   T   )    (  A  )           superscript   subscript  Tor  n   R    A  B         subscript  L  n   T   A     \mathrm{Tor}_{n}^{R}(A,B)=(L_{n}T)(A)     i.e., we take a projective resolution      ⋯  →   P  2   →   P  1   →   P  0   →  A  →  0       normal-→  normal-⋯   subscript  P  2     normal-→     subscript  P  1     normal-→     subscript  P  0     normal-→    A    normal-→    0     \cdots\rightarrow P_{2}\rightarrow P_{1}\rightarrow P_{0}\rightarrow A\rightarrow
 0     then remove the A term and tensor the projective resolution with B to get the complex      ⋯  →    P  2    ⊗  R   B   →    P  1    ⊗  R   B   →    P  0    ⊗  R   B   →  0       normal-→  normal-⋯    subscript  tensor-product  R    subscript  P  2   B     normal-→      subscript  tensor-product  R    subscript  P  1   B     normal-→      subscript  tensor-product  R    subscript  P  0   B     normal-→    0     \cdots\rightarrow P_{2}\otimes_{R}B\rightarrow P_{1}\otimes_{R}B\rightarrow P_%
 {0}\otimes_{R}B\rightarrow 0     (note that A ⊗ R B does not appear and the last arrow is just the zero map) and take the homology of this complex.  Properties   For every n ≥ 1, Tor is an additive functor from Mod - R × R - Mod to Ab . In the case when R is commutative, we have additive functors from Mod - R × Mod - R to Mod - R .    As is true for every family of derived functors, every short exact sequence 0 → K → L → M → 0 induces a long exact sequence of the form         ⋯  →    Tor  2  R    (  M  ,  B  )    →    Tor  1  R    (  K  ,  B  )    →    Tor  1  R    (  L  ,  B  )    →    Tor  1  R    (  M  ,  B  )    →   K  ⊗  B   →   L  ⊗  B   →   M  ⊗  B   →  0       normal-→  normal-⋯     superscript   subscript  Tor  2   R    M  B      normal-→       superscript   subscript  Tor  1   R    K  B      normal-→       superscript   subscript  Tor  1   R    L  B      normal-→       superscript   subscript  Tor  1   R    M  B      normal-→     tensor-product  K  B     normal-→     tensor-product  L  B     normal-→     tensor-product  M  B     normal-→    0     \cdots\rightarrow\mathrm{Tor}_{2}^{R}(M,B)\rightarrow\mathrm{Tor}_{1}^{R}(K,B)%
 \rightarrow\mathrm{Tor}_{1}^{R}(L,B)\rightarrow\mathrm{Tor}_{1}^{R}(M,B)%
 \rightarrow K\otimes B\rightarrow L\otimes B\rightarrow M\otimes B\rightarrow 0   .      If R is commutative and r in R is not a zero divisor then            Tor  1  R    (   R  /   (  r  )    ,  B  )    =   {   b  ∈  B   :    r  b   =  0   }    ,         superscript   subscript  Tor  1   R      R  r   B     conditional-set    b  B       r  b   0      \mathrm{Tor}_{1}^{R}(R/(r),B)=\{b\in B:rb=0\},        from which the terminology Tor (that is, Torsion ) comes: see torsion subgroup .   Tor( A , B ) = 0 for all n ≥ 2. The reason: every abelian group  A has a free resolution of length 1, since subgroups of free abelian groups are free abelian. So in this important special case, the higher Tor functors vanish. In addition, Tor( Z / k Z  , A ) = Ker( f ) where f represents "multiplication by k ".    Furthermore, every free module has a free resolution of length zero, so by the argument above, if F is a free R -module, then Tor( F,B ) = 0 for all n ≥ 1.    The Tor functors preserve filtered colimits and arbitrary direct sums : there is a natural isomorphism           Tor  n  R    (    ⊕  i    A  i    ,    ⊕  j    B  j    )    ≃    ⊕  i     ⊕  j     Tor  n  R    (   A  i   ,   B  j   )         similar-to-or-equals     superscript   subscript  Tor  n   R      subscript  direct-sum  i    subscript  A  i      subscript  direct-sum  j    subscript  B  j        subscript  direct-sum  i     subscript  direct-sum  j      superscript   subscript  Tor  n   R     subscript  A  i    subscript  B  j         \mathrm{Tor}_{n}^{R}\left(\bigoplus_{i}A_{i},\bigoplus_{j}B_{j}\right)\simeq%
 \bigoplus_{i}\bigoplus_{j}\mathrm{Tor}_{n}^{R}(A_{i},B_{j})           From the classification of finitely generated abelian groups , we know that every finitely generated abelian group is the direct sum of copies of Z and Z k . This together with the previous three points allows us to compute Tor( A , B ) whenever A is finitely generated.    A module M in Mod - R is flat if and only if Tor( M , -) = 0. In this case, we even have Tor( M , -) = 0 for all n ≥ 1 . In fact, to compute Tor( A,B ), one may use a flat resolution of A or B , instead of a projective resolution (note that a projective resolution is automatically a flat resolution, but the converse isn't true, so allowing flat resolutions is more flexible).    Symmetry: if R is commutative, then there is a natural isomorphism Tor( L , L )    ≃   similar-to-or-equals   \simeq    Tor( L , L ).   Here is the idea for abelian groups (i.e., the case R = Z and n =1). Fix a free resolution of L as follows         0  →   M  i   →   K  i   →   L  i    ,       normal-→  0   subscript  M  i     normal-→     subscript  K  i     normal-→     subscript  L  i      0\to M_{i}\to K_{i}\to L_{i},        so that M and K are free abelian groups. This gives rise to a double-complex with exact rows and columns ||center||800px Start with x     ∈     \in    Tor( L , L ), so     β  03     subscript  β  03    \beta_{03}    ( x )    ∈     \in    Ker(     β  13     subscript  β  13    \beta_{13}    ). Let x     ∈     \in     M     ⊗   tensor-product   \otimes     K be such that     α  12     subscript  α  12    \alpha_{12}    ( x ) =     β  03     subscript  β  03    \beta_{03}    ( x ). Then            α  22   ∘   β  12     (   x  12   )    =     β  13   ∘   α  21     (   x  12   )    =     β  13   ∘   β  03     (  x  )    =  0   ,             subscript  α  22    subscript  β  12     subscript  x  12         subscript  β  13    subscript  α  21     subscript  x  12              subscript  β  13    subscript  β  03    x        0     \alpha_{22}\circ\beta_{12}(x_{12})=\beta_{13}\circ\alpha_{21}(x_{12})=\beta_{1%
 3}\circ\beta_{03}(x)=0,        i.e.,     β  12     subscript  β  12    \beta_{12}    ( x )    ∈     \in    Ker(     α  22     subscript  α  22    \alpha_{22}    ). By exactness of the second row, this means that     β  12     subscript  β  12    \beta_{12}    ( x ) =     α  21     subscript  α  21    \alpha_{21}    ( x ) for some unique x     ∈     \in     K     ⊗   tensor-product   \otimes     M . Then            α  31   ∘   β  21     (   x  21   )    =     β  22   ∘   α  21     (   x  21   )    =     β  22   ∘   β  12     (   x  12   )    =  0   ,             subscript  α  31    subscript  β  21     subscript  x  21         subscript  β  22    subscript  α  21     subscript  x  21              subscript  β  22    subscript  β  12     subscript  x  12         0     \alpha_{31}\circ\beta_{21}(x_{21})=\beta_{22}\circ\alpha_{21}(x_{21})=\beta_{2%
 2}\circ\beta_{12}(x_{12})=0,        i.e.,     β  21     subscript  β  21    \beta_{21}    ( x )    ∈     \in    Ker(     α  31     subscript  α  31    \alpha_{31}    ). By exactness of the bottom row, this means that     β  21     subscript  β  21    \beta_{21}    ( x ) =     α  30     subscript  α  30    \alpha_{30}    ( y ) for some unique y     ∈     \in    Tor( L , L ).  Upon checking that y is uniquely determined by x (not dependent on the choice of x ), this defines a function Tor( L , L )    →   normal-→   \to    Tor( L , L ), taking x to y , which is a group homomorphism. One may check that this map has an inverse, namely the function Tor( L , L )    →   normal-→   \to    Tor( L , L ) defined in a similarly manner. One can also check that the function does not depend on the choice of free resolutions.  See also   Ext functor   References     "  Category:Homological algebra  Category:Binary operations   