   Matroid partitioning      Matroid partitioning   The matroid partitioning problem is a problem arising in the mathematical study of matroids and in the design and analysis of algorithms , in which the goal is to partition the elements of a matroid into as few independent sets as possible. An example is the problem of computing the arboricity of an undirected graph , the minimum number of forests needed to cover all of its edges. Matroid partitioning may be solved in polynomial time , given an independence oracle for the matroid. It may be generalized to show that a matroid sum is itself a matroid, to provide an algorithm for computing ranks and independent sets in matroid sums, and to compute the largest common independent set in the intersection of two given matroids. 1  Example  The arboricity of an undirected graph is the minimum number of forests into which its edges can be partitioned, or equivalently (by adding overlapping edges to each forest as necessary) the minimum number of spanning forests whose union is the whole graph. A formula proved by Crispin Nash-Williams characterizes the arboricity exactly: it is the maximum, over all subgraphs   H   H   H   of the given graph   G   G   G   , of the quantity    ⌈    |   E   (  H  )    |     |   V   (  H  )    |   -  1    ⌉            E  H          V  H    1      \left\lceil\frac{|E(H)|}{|V(H)|-1}\right\rceil   . 2  The forests of a graph form the independent sets of the associated graphic matroid , and the quantity     |   V   (  H  )    |   -  1          V  H    1    |V(H)|-1   appearing in Nash-Williams' formula is the rank of the graphic matroid of   H   H   H   , the maximum size of one of its independent sets. Thus, the problem of determining the arboricity of a graph is exactly the matroid partitioning problem for the graphic matroid. The fact that the    |   E   (  H  )    |        E  H     |E(H)|   elements of this matroid cannot be partitioned into fewer than     |   E   (  H  )    |     |   V   (  H  )    |   -  1           E  H          V  H    1     \frac{|E(H)|}{|V(H)|-1}   independent subsets is then just an application of the pigeonhole principle saying that, if   x   x   x   items are partitioned into sets of size at most   y   y   y   , then at least    x  /  y      x  y    x/y   sets are needed. The harder direction of Nash-Williams' formula, which can be generalized to all matroids, is the proof that a partition of this size always exists. 3  Formula for partition size  To generalize Nash-Williams' formula, one may replace   G   G   G   by a matroid   M   M   M   , and the subgraph   H   H   H   of   G   G   G   with a restriction     M  |  S     fragments  M  normal-|  S    M|S   of   M   M   M   to a subset   S   S   S   of its elements. The number of edges of the subgraph   H   H   H   becomes, in this generalization, the cardinality    |  S  |      S    |S|   of the selected subset, and the formula     |   V   (  H  )    |   -  1          V  H    1    |V(H)|-1   for the maximum size of a forest in   H   H   H   becomes the rank    r   (  S  )       r  S    r(S)   . Thus, the minimum number of independent sets in a partition of the given matroid   M   M   M   should be given by the formula        k   (  M  )    =    max  S    ⌈    |  S  |    r   (  S  )     ⌉     ,        k  M     subscript   S       S     r  S       k(M)=\max_{S}\left\lceil\frac{|S|}{r(S)}\right\rceil,   which is valid for all matroids and was given an algorithmic proof by . 4 5  Algorithms  The first algorithm for matroid partitioning was given by . 6 It is an incremental augmenting-path algorithm that considers the elements of the matroid one by one, in an arbitrary order, maintaining at each step of the algorithm an optimal partition for the elements that have been considered so far. At each step, when considering an element   x   x   x   that has not yet been placed into a partition, the algorithm constructs a directed graph that has as its nodes the elements that have already been partitioned, the new element   x   x   x   , and a special element    ⊥  i     subscript  bottom  i    \bot_{i}   for each of the   k   k   k   independent sets in the current partition. It then forms a directed graph    G  x     subscript  G  x    G_{x}   on this node set, with a directed arc     ⊥  i   →  y     fragments   subscript  bottom  i   normal-→  y    \bot_{i}\rightarrow y   for each matroid element   y   y   y   that can be added to partition set   i   i   i   without causing it to become dependent, and with a directed arc    z  →  y     normal-→  z  y    z\rightarrow y   for each pair of matroid elements    (  y  ,  z  )     y  z    (y,z)   such that removing   z   z   z   from its partition and replacing it with   y   y   y   forms another independent set. 7 8  If this graph contains a directed path from an element    ⊥  i     subscript  bottom  i    \bot_{i}   to the newly considered element   x   x   x   , then the shortest such path (or more generally any path that does not have any shortcutting edges) describes a sequence of changes that can be made simultaneously to the partition sets in order to form a new partition, with the same number of sets, that also includes   x   x   x   . In this case, the algorithm performs these changes and continues. If, on the other hand, no such path exists, then let   S   S   S   consist of the matroid elements from which   x   x   x   is reachable in   D   D   D   . Each set in the current partition must be a maximal independent set in    M  |  S     fragments  M  normal-|  S    M|S   , for if some element   y   y   y   of   S   S   S   could be added to partition set   i   i   i   in the restriction, then either there would exist an arc     ⊥  i   →  y     fragments   subscript  bottom  i   normal-→  y    \bot_{i}\rightarrow y   (if partition set   i   i   i   is non-maximal in the full matroid   M   M   M   ) or an arc    z  →  y     normal-→  z  y    z\rightarrow y   where    z  ∉  S      z  S    z\notin S   (if the partition set is non-maximal in   S   S   S   but maximal in the full matroid). In either case the existence of this arc contradicts the assumed construction of the set   S   S   S   , and the contradiction proves that each partition set is maximal. Thus, by the easy direction of the matroid partitioning formula, the number of sets needed to partition   S   S   S   is at least       ⌈    |  S  |    r   (  S  )     ⌉   =   ⌈     k  r   (  S  )    +  1    r   (  S  )     ⌉   =   k  +  1               S     r  S             k  r  S   1     r  S            k  1      \left\lceil\frac{|S|}{r(S)}\right\rceil=\left\lceil\frac{kr(S)+1}{r(S)}\right%
 \rceil=k+1   , so in this case the algorithm may find an optimal partition by placing   x   x   x   into its own new independent set and leaving the other independent sets unchanged. 9 10  The overall algorithm, then, considers each element   x   x   x   of the given matroid in turn, constructs the graph    G  x     subscript  G  x    G_{x}   , tests which nodes can reach   x   x   x   , and uses this information to update the current partition so that it includes   x   x   x   . At each step, the partition of the elements considered so far is optimal, so when the algorithm terminates it will have found an optimal partition for the whole matroid. Proving that this algorithm is correct requires showing that a shorcut-free path in the auxiliary graph always describes a sequence of operations that, when performed simultaneously, correctly preserves the independence of the sets in the partition; a proof of this fact was given by Edmonds. Because the algorithm only increases the number of sets in the partition when the matroid partitioning formula shows that a larger number is needed, the correctness of this algorithm also shows the correctness of the formula. 11 12  Although this algorithm depends only on the existence of an independence oracle for its correctness, faster algorithms can be found in many cases by taking advantage of the more specialized structure of specific types of matroids (such as graphic matroids ) from which a particular partitioning problem has been defined. 13  Related problems  A matroid sum      ∑  i    M  i       subscript   i    subscript  M  i     \sum_{i}M_{i}   (where each    M  i     subscript  M  i    M_{i}   is a matroid) is itself a matroid, having as its elements the union of the elements of the summands. A set is independent in the sum if it can be partitioned into sets that are independent within each summand. The matroid partitioning algorithm generalizes to the problem of testing whether a set is independent in a matroid sum, and its correctness can be used to prove that a matroid sum is necessarily a matroid. 14 15  The matroid intersection problem of finding the largest set that is independent in two matroids    M  1     subscript  M  1    M_{1}   and    M  2     subscript  M  2    M_{2}   may be solved by turning it into an equivalent matroid sum problem: if   B   B   B   is a basis of the sum     M  1   +   M  2  *        subscript  M  1    superscript   subscript  M  2       M_{1}+M_{2}^{*}   , where    M  2  *     superscript   subscript  M  2      M_{2}^{*}   is the dual of    M  2     subscript  M  2    M_{2}   , then   B   B   B   must have full rank in    M  2  *     superscript   subscript  M  2      M_{2}^{*}   and removing a maximal independent set of    M  2  *     superscript   subscript  M  2      M_{2}^{*}   from   B   B   B   leaves a maximum intersection. 16  Matroid partitioning is a form of set cover problem, and the corresponding set packing problem (find a maximum number of disjoint spanning sets within a given matroid) is also of interest. It can be solved by algorithms similar to those for matroid partitioning. 17 The fractional set packing and set covering problems associated with a matroid (that is, assign a weight to each independent set in such a way that for every element the total weight of the sets containing it is at most one or at least one, maximizing or minimizing the total weight of all the sets, respectively) can also be solved in polynomial time using matroid partitioning methods. 18  As well as its use in calculating the arboricity of a graph, matroid partitioning can be used with other matroids to find a subgraph of a given graph whose average degree is maximum, and to find the edge toughness of a graph (a variant of graph toughness involving the deletion of edges in place of vertices). 19  References  "  Category:Matroid theory     . ↩  . ↩    . ↩         . ↩    . ↩        