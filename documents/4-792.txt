   Comma category      Comma category   In mathematics, a comma category (a special case being a slice category ) is a construction in category theory . It provides another way of looking at morphisms : instead of simply relating objects of a category to one another, morphisms become objects in their own right. This notion was introduced in 1963 by F. W. Lawvere (Lawvere, 1963 p. 36), although the technique did not become generally known until many years later. Several mathematical concepts can be treated as comma categories. Comma categories also guarantee the existence of some limits and colimits . The name comes from the notation originally used by Lawvere, which involved the comma punctuation mark. Although standard notation has changed since the use of a comma as an operator is potentially confusing, and even Lawvere dislikes the uninformative term "comma category" (Lawvere, 1963 p. 13), the name persists.  Definition  The most general comma category construction involves two functors with the same codomain. Often one of these will have domain 1 (the one-object one-morphism category). Some accounts of category theory consider only these special cases, but the term comma category is actually much more general.  General form  Suppose that   𝒜   𝒜   \mathcal{A}   ,   ℬ   ℬ   \mathcal{B}   , and   𝒞   𝒞   \mathcal{C}   are categories, and   S   S   S   and   T   T   T   (for source and target) are functors      𝒜   →  𝑆   𝒞   ←  𝑇   ℬ        S  normal-→   𝒜  𝒞     T  normal-←     ℬ     \mathcal{A}\xrightarrow{\;\;S\;\;}\mathcal{C}\xleftarrow{\;\;T\;\;}\mathcal{B}   We can form the comma category    (   S  ↓  T   )     normal-↓  S  T    (S\downarrow T)   as follows:   The objects are all triples    (  α  ,  β  ,  f  )     α  β  f    (\alpha,\beta,f)   with   α   α   \alpha   an object in   𝒜   𝒜   \mathcal{A}   ,   β   β   \beta   an object in   ℬ   ℬ   \mathcal{B}   , and    f  :    S   (  α  )    →   T   (  β  )        normal-:  f   normal-→    S  α     T  β      f:S(\alpha)\rightarrow T(\beta)   a morphism in   𝒞   𝒞   \mathcal{C}   .  The morphisms from    (  α  ,  β  ,  f  )     α  β  f    (\alpha,\beta,f)   to    (   α  ′   ,   β  ′   ,   f  ′   )      superscript  α  normal-′    superscript  β  normal-′    superscript  f  normal-′     (\alpha^{\prime},\beta^{\prime},f^{\prime})   are all pairs    (  g  ,  h  )     g  h    (g,h)   where    g  :   α  →   α  ′       normal-:  g   normal-→  α   superscript  α  normal-′      g:\alpha\rightarrow\alpha^{\prime}   and    h  :   β  →   β  ′       normal-:  h   normal-→  β   superscript  β  normal-′      h:\beta\rightarrow\beta^{\prime}   are morphisms in   𝒜   𝒜   \mathcal{A}   and   ℬ   ℬ   \mathcal{B}   respectively, such that the following diagram commutes :          S   (  α  )       →   S   (  g  )        S   (   α  ′   )         f  ↓           ↓   f  ′         T   (  β  )       →   T   (  h  )         T   (   β  ′   )            S  α      S  g   normal-→     S   superscript  α  normal-′       normal-↓  f  absent   absent   normal-↓  absent   superscript  f  normal-′        T  β      T  h    absent  normal-→      T   superscript  β  normal-′       \begin{matrix}S(\alpha)&\xrightarrow{S(g)}&S(\alpha^{\prime})\\
 f\Bigg\downarrow&&\Bigg\downarrow f^{\prime}\\
 T(\beta)&\xrightarrow[T(h)]{}&T(\beta^{\prime})\end{matrix}     Morphisms are composed by taking     (  g  ,  h  )   ∘   (   g  ′   ,   h  ′   )        g  h     superscript  g  normal-′    superscript  h  normal-′      (g,h)\circ(g^{\prime},h^{\prime})   to be    (   g  ∘   g  ′    ,   h  ∘   h  ′    )       g   superscript  g  normal-′      h   superscript  h  normal-′      (g\circ g^{\prime},h\circ h^{\prime})   , whenever the latter expression is defined. The identity morphism on an object    (  α  ,  β  ,  f  )     α  β  f    (\alpha,\beta,f)   is    (   id  α   ,   id  β   )      subscript  id  α    subscript  id  β     (\mathrm{id}_{\alpha},\mathrm{id}_{\beta})   .  Slice category  The first special case occurs when    𝒜  =  𝒞      𝒜  𝒞    \mathcal{A}=\mathcal{C}   ,   S   S   S   is the identity functor , and    ℬ  =  𝟏      ℬ  1    \mathcal{B}=\textbf{1}   (the category with one object   *     *   and one morphism). Then     T   (  *  )    =  A        T    A    T(*)=A   for some object   A   A   A   in   𝒞   𝒞   \mathcal{C}   . In this case, the comma category is written    (   𝒞  ↓  A   )     normal-↓  𝒞  A    (\mathcal{C}\downarrow A)   , and is often called the slice category over   A   A   A   or the category of objects over   A   A   A    . The objects    (  α  ,  *  ,  f  )     α   f    (\alpha,*,f)   can be simplified to pairs    (  α  ,  f  )     α  f    (\alpha,f)   , where    f  :   α  →  A      normal-:  f   normal-→  α  A     f:\alpha\rightarrow A   . Sometimes,   f   f   f   is denoted    π  α     subscript  π  α    \pi_{\alpha}   . A morphism from    (  B  ,   π  B   )     B   subscript  π  B     (B,\pi_{B})   to    (   B  ′   ,   π   B  ′    )      superscript  B  normal-′    subscript  π   superscript  B  normal-′      (B^{\prime},\pi_{B^{\prime}})   in the slice category is then an arrow    g  :   B  →   B  ′       normal-:  g   normal-→  B   superscript  B  normal-′      g:B\rightarrow B^{\prime}   making the following diagram commute:   (Figure)  CommaCategory-01.png    Coslice category  The dual concept to a slice category is a coslice category. Here,   S   S   S   has domain 1 and   T   T   T   is an identity functor. In this case, the comma category is often written    (   A  ↓  𝒞   )     normal-↓  A  𝒞    (A\downarrow\mathcal{C})   , where   A   A   A   is the object of   𝒞   𝒞   \mathcal{C}   selected by   S   S   S   . It is called the coslice category with respect to   A   A   A   , or the category of objects under   A   A   A    . The objects are pairs    (  B  ,   i  B   )     B   subscript  i  B     (B,i_{B})   with     i  B   :   A  →  B      normal-:   subscript  i  B    normal-→  A  B     i_{B}:A\rightarrow B   . Given    (  B  ,   i  B   )     B   subscript  i  B     (B,i_{B})   and    (   B  ′   ,   i   B  ′    )      superscript  B  normal-′    subscript  i   superscript  B  normal-′      (B^{\prime},i_{B^{\prime}})   , a morphism in the coslice category is a map    h  :   B  →   B  ′       normal-:  h   normal-→  B   superscript  B  normal-′      h:B\rightarrow B^{\prime}   making the following diagram commute:   (Figure)  CommaCategory-02.png    Arrow category     S   S   S   and   T   T   T   are identity functors on   𝒞   𝒞   \mathcal{C}   (so    𝒜  =  ℬ  =  𝒞        𝒜  ℬ       𝒞     \mathcal{A}=\mathcal{B}=\mathcal{C}   ). In this case, the comma category is the arrow category    𝒞  →     superscript  𝒞  normal-→    \mathcal{C}^{\rightarrow}   . Its objects are the morphisms of   𝒞   𝒞   \mathcal{C}   , and its morphisms are commuting squares in   𝒞   𝒞   \mathcal{C}   . 1  Other variations  In the case of the slice or coslice category, the identity functor may be replaced with some other functor; this yields a family of categories particularly useful in the study of adjoint functors . For example, if   T   T   T   is the forgetful functor mapping an abelian group to its underlying set , and   s   s   s   is some fixed set (regarded as a functor from 1 ), then the comma category    (   s  ↓  T   )     normal-↓  s  T    (s\downarrow T)   has objects that are maps from   s   s   s   to a set underlying a group. This relates to the left adjoint of   T   T   T   , which is the functor that maps a set to the free abelian group having that set as its basis. In particular, the initial object of    (   s  ↓  T   )     normal-↓  s  T    (s\downarrow T)   is the canonical injection    s  →   T   (  G  )       normal-→  s    T  G     s\rightarrow T(G)   , where   G   G   G   is the free group generated by   s   s   s   .  An object of    (   s  ↓  T   )     normal-↓  s  T    (s\downarrow T)   is called a morphism from   s   s   s   to   T   T   T    or a    T   T   T   -structured arrow with domain   s   s   s    in. 2 An object of    (   S  ↓  t   )     normal-↓  S  t    (S\downarrow t)   is called a morphism from   S   S   S   to   t   t   t    or a    S   S   S   -costructured arrow with codomain   t   t   t    in. 3  Another special case occurs when both   S   S   S   and   T   T   T   are functors with domain 1 . If     S   (  *  )    =  A        S    A    S(*)=A   and     T   (  *  )    =  B        T    B    T(*)=B   , then the comma category    (   S  ↓  T   )     normal-↓  S  T    (S\downarrow T)   , written    (   A  ↓  B   )     normal-↓  A  B    (A\downarrow B)   , is the discrete category whose objects are morphisms from   A   A   A   to   B   B   B   .  Properties  For each comma category there are forgetful functors from it.   Domain functor,    S  ↓  T  →  𝒜       normal-↓  S  T    normal-→    𝒜     S\downarrow T\to\mathcal{A}   , which maps:  objects     (  α  ,  β  ,  f  )   ↦  α     maps-to   α  β  f   α    (\alpha,\beta,f)\mapsto\alpha   ;  morphisms     (  g  ,  h  )   ↦  g     maps-to   g  h   g    (g,h)\mapsto g   ;   Codomain functor,    S  ↓  T  →  ℬ       normal-↓  S  T    normal-→    ℬ     S\downarrow T\to\mathcal{B}   , which maps:  objects     (  α  ,  β  ,  f  )   ↦  β     maps-to   α  β  f   β    (\alpha,\beta,f)\mapsto\beta   ;  morphisms     (  g  ,  h  )   ↦  h     maps-to   g  h   h    (g,h)\mapsto h   .   Arrow functor,    S  ↓  T  →   C  ↓        normal-↓  S  T    normal-→     superscript  C  normal-↓      S\downarrow T\to C^{\downarrow}   , which maps:  objects     (  α  ,  β  ,  f  )   ↦  f     maps-to   α  β  f   f    (\alpha,\beta,f)\mapsto f   ;  morphisms     (  g  ,  h  )   ↦   (   S  g   ,   T  h   )      maps-to   g  h      S  g     T  h      (g,h)\mapsto(Sg,Th)   ;    Examples of use  Some notable categories  Several interesting categories have a natural definition in terms of comma categories.   The category of pointed sets is a comma category,    (    \bull   ↓  𝐒𝐞𝐭   )     normal-↓  \bull  𝐒𝐞𝐭    \scriptstyle{(\bull\downarrow\mathbf{Set})}   with    \bull    \bull   \scriptstyle{\bull}   being (a functor selecting) any singleton set , and   𝐒𝐞𝐭   𝐒𝐞𝐭   \scriptstyle{\mathbf{Set}}   (the identity functor of) the category of sets . Each object of this category is a set, together with a function selecting some element of the set: the "basepoint". Morphisms are functions on sets which map basepoints to basepoints. In a similar fashion one can form the category of pointed spaces     (    \bull   ↓  𝐓𝐨𝐩   )     normal-↓  \bull  𝐓𝐨𝐩    \scriptstyle{(\bull\downarrow\mathbf{Top})}   .    The category of graphs is    (   𝐒𝐞𝐭  ↓  D   )     normal-↓  𝐒𝐞𝐭  D    \scriptstyle{(\mathbf{Set}\downarrow D)}   , with    D  :   𝐒𝐞𝐭  →  𝐒𝐞𝐭      normal-:  D   normal-→  𝐒𝐞𝐭  𝐒𝐞𝐭     \scriptstyle{D:\mathbf{Set}\rightarrow\mathbf{Set}}   the functor taking a set   s   s   s   to    s  ×  s      s  s    s\times s   . The objects    (  a  ,  b  ,  f  )     a  b  f    (a,b,f)   then consist of two sets and a function;   a   a   a   is an indexing set,   b   b   b   is a set of nodes, and    f  :   a  →   (   b  ×  b   )       normal-:  f   normal-→  a    b  b      f:a\rightarrow(b\times b)   chooses pairs of elements of   b   b   b   for each input from   a   a   a   . That is,   f   f   f   picks out certain edges from the set    b  ×  b      b  b    b\times b   of possible edges. A morphism in this category is made up of two functions, one on the indexing set and one on the node set. They must "agree" according to the general definition above, meaning that     (  g  ,  h  )   :    (  a  ,  b  ,  f  )   →   (   a  ′   ,   b  ′   ,   f  ′   )       normal-:   g  h    normal-→   a  b  f     superscript  a  normal-′    superscript  b  normal-′    superscript  f  normal-′       (g,h):(a,b,f)\rightarrow(a^{\prime},b^{\prime},f^{\prime})   must satisfy      f  ′   ∘  g   =    T   (  h  )    ∘  f          superscript  f  normal-′   g       T  h   f     f^{\prime}\circ g=T(h)\circ f   . In other words, the edge corresponding to a certain element of the indexing set, when translated, must be the same as the edge for the translated index.    Many "augmentation" or "labelling" operations can be expressed in terms of comma categories. Let   S   S   S   be the functor taking each graph to the set of its edges, and let   A   A   A   be (a functor selecting) some particular set: then    (   S  ↓  A   )     normal-↓  S  A    (S\downarrow A)   is the category of graphs whose edges are labelled by elements of   A   A   A   . This form of comma category is often called objects   S   S   S   -over   A   A   A    - closely related to the "objects over   A   A   A   " discussed above. Here, each object takes the form    (  B  ,   π  B   )     B   subscript  π  B     (B,\pi_{B})   , where   B   B   B   is a graph and    π  B     subscript  π  B    \pi_{B}   a function from the edges of   B   B   B   to   A   A   A   . The nodes of the graph could be labelled in essentially the same way.    A category is said to be locally cartesian closed if every slice of it is cartesian closed (see above for the notion of slice ). Locally cartesian closed categories are the classifying categories of dependent type theories .   Limits and universal morphisms  Colimits in comma categories may be "inherited". If   𝒜   𝒜   \mathcal{A}   and   ℬ   ℬ   \mathcal{B}   are cocomplete,    S  :   𝒜  →  𝒞      normal-:  S   normal-→  𝒜  𝒞     S:\mathcal{A}\rightarrow\mathcal{C}   is a cocontinuous functor, and    T  :   ℬ  →  𝒞      normal-:  T   normal-→  ℬ  𝒞     T:\mathcal{B}\rightarrow\mathcal{C}   another functor (not necessarily cocontinuous), then the comma category    (   S  ↓  T   )     normal-↓  S  T    (S\downarrow T)   produced will also be cocomplete. For example, in the above construction of the category of graphs, the category of sets is cocomplete, and the identity functor is cocontinuous: so graphs are also cocomplete - all (small) colimits exist. This result is much harder to obtain directly.  If   𝒜   𝒜   \mathcal{A}   and   ℬ   ℬ   \mathcal{B}   are complete, and both    S  :   𝒜  →  𝒞      normal-:  S   normal-→  𝒜  𝒞     S:\mathcal{A}\rightarrow\mathcal{C}   and    T  :   ℬ  →  𝒞      normal-:  T   normal-→  ℬ  𝒞     T:\mathcal{B}\rightarrow\mathcal{C}   are continuous functors , 4 then the comma category    (   S  ↓  T   )     normal-↓  S  T    (S\downarrow T)   is also complete, and the projection functors     (  S  ↓  T  )   →  𝒜     fragments   fragments  normal-(  S  normal-↓  T  normal-)   normal-→  A    (S\downarrow T)\rightarrow\mathcal{A}   and     (  S  ↓  T  )   →  ℬ     fragments   fragments  normal-(  S  normal-↓  T  normal-)   normal-→  B    (S\downarrow T)\rightarrow\mathcal{B}   are limit preserving.  The notion of a universal morphism to a particular colimit, or from a limit, can be expressed in terms of a comma category. Essentially, we create a category whose objects are cones, and where the limiting cone is a terminal object; then, each universal morphism for the limit is just the morphism to the terminal object. This works in the dual case, with a category of cocones having an initial object. For example, let   𝒞   𝒞   \mathcal{C}   be a category with    F  :   𝒞  →   𝒞  ×  𝒞       normal-:  F   normal-→  𝒞    𝒞  𝒞      F:\mathcal{C}\rightarrow\mathcal{C}\times\mathcal{C}   the functor taking each object   c   c   c   to    (  c  ,  c  )     c  c    (c,c)   and each arrow   f   f   f   to    (  f  ,  f  )     f  f    (f,f)   . A universal morphism from    (  a  ,  b  )     a  b    (a,b)   to   F   F   F   consists, by definition, of an object    (  c  ,  c  )     c  c    (c,c)   and morphism    ρ  :    (  a  ,  b  )   →   (  c  ,  c  )       normal-:  ρ   normal-→   a  b    c  c      \rho:(a,b)\rightarrow(c,c)   with the universal property that for any morphism     ρ  ′   :    (  a  ,  b  )   →   (  d  ,  d  )       normal-:   superscript  ρ  normal-′    normal-→   a  b    d  d      \rho^{\prime}:(a,b)\rightarrow(d,d)   there is a unique morphism    σ  :   c  →  d      normal-:  σ   normal-→  c  d     \sigma:c\rightarrow d   with      F   (  σ  )    ∘  ρ   =   ρ  ′           F  σ   ρ    superscript  ρ  normal-′     F(\sigma)\circ\rho=\rho^{\prime}   . In other words, it is an object in the comma category    (    (  a  ,  b  )   ↓  F   )     normal-↓   a  b   F    ((a,b)\downarrow F)   having a morphism to any other object in that category; it is initial. This serves to define the coproduct in   𝒞   𝒞   \mathcal{C}   , when it exists.  Adjunctions  Lawvere showed that the functors    F  :   𝒞  →  𝒟      normal-:  F   normal-→  𝒞  𝒟     F:\mathcal{C}\rightarrow\mathcal{D}   and    G  :   𝒟  →  𝒞      normal-:  G   normal-→  𝒟  𝒞     G:\mathcal{D}\rightarrow\mathcal{C}   are adjoint if and only if the comma categories    (   F  ↓   i   d  𝒟     )     normal-↓  F    i   subscript  d  𝒟      (F\downarrow id_{\mathcal{D}})   and    (    i   d  𝒞    ↓  G   )     normal-↓    i   subscript  d  𝒞    G    (id_{\mathcal{C}}\downarrow G)   , with    i   d  𝒟       i   subscript  d  𝒟     id_{\mathcal{D}}   and    i   d  𝒞       i   subscript  d  𝒞     id_{\mathcal{C}}   the identity functors on   𝒞   𝒞   \mathcal{C}   and   𝒟   𝒟   \mathcal{D}   respectively, are isomorphic, and equivalent elements in the comma category can be projected onto the same element of    𝒞  ×  𝒟      𝒞  𝒟    \mathcal{C}\times\mathcal{D}   . This allows adjunctions to be described without involving sets, and was in fact the original motivation for introducing comma categories.  Natural transformations  If the domains of    S  ,  T     S  T    S,T   are equal, then the diagram which defines morphisms in    S  ↓  T     normal-↓  S  T    S\downarrow T   with     α  =  β   ,     α  ′   =   β  ′    ,   g  =  h       formulae-sequence    α  β    formulae-sequence     superscript  α  normal-′    superscript  β  normal-′      g  h      \alpha=\beta,\alpha^{\prime}=\beta^{\prime},g=h   is identical to the diagram which defines a natural transformation     S  →  T     normal-→  S  T    S\to T   . The difference between the two notions is that a natural transformation is a particular collection of morphisms of type of the form     S   (  α  )    →   T   (  α  )       normal-→    S  α     T  α     S(\alpha)\to T(\alpha)   , while objects of the comma category contains all morphisms of type of such form. A functor to the comma category selects that particular collection of morphisms. This is described succinctly by an observation by Huq that a natural transformation    η  :   S  →  T      normal-:  η   normal-→  S  T     \eta:S\to T   , with     S  ,  T   :   𝒜  →  𝒞      normal-:   S  T    normal-→  𝒜  𝒞     S,T:\mathcal{A}\to\mathcal{C}   , corresponds to a functor    𝒜  →   (  S  ↓  T  )      fragments  A  normal-→   fragments  normal-(  S  normal-↓  T  normal-)     \mathcal{A}\to(S\downarrow T)   which maps each object   α   α   \alpha   to    (  α  ,  α  ,   η  α   )     α  α   subscript  η  α     (\alpha,\alpha,\eta_{\alpha})   and maps each morphism   g   g   g   to    (  g  ,  g  )     g  g    (g,g)   . This is a bijective correspondence between natural transformations    S  →  T     normal-→  S  T    S\to T   and functors    𝒜  →   (  S  ↓  T  )      fragments  A  normal-→   fragments  normal-(  S  normal-↓  T  normal-)     \mathcal{A}\to(S\downarrow T)   which are sections of both forgetful functors from    S  ↓  T     normal-↓  S  T    S\downarrow T   .  References      Lawvere, W (1963). "FUNCTORIAL SEMANTICS OF ALGEBRAIC THEORIES AND SOME ALGEBRAIC PROBLEMS IN THE CONTEXT OF FUNCTORIAL SEMANTICS OF ALGEBRAIC THEORIES" http://www.tac.mta.ca/tac/reprints/articles/5/tr5.pdf   External links   J. Adamek, H. Herrlich, G. Stecker, Abstract and Concrete Categories-The Joy of Cats  WildCats is a category theory package for Mathematica . Manipulation and visualization of objects, morphisms , categories, functors , natural transformations , universal properties .  Interactive Web page which generates examples of categorical constructions in the category of finite sets.   "  Category:Category-theoretic categories     ↩    See I. 2.16.1 in Francis Borceux (1994), Handbook of Categorical Algebra 1 , Cambridge University Press. ISBN 0-521-44178-1. ↩     