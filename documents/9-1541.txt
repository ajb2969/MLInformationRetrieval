   Graph product      Graph product   In mathematics , a graph product is a binary operation on graphs . Specifically, it is an operation that takes two graphs G 1 and G 2 and produces a graph H with the following properties:   The vertex set of H is the Cartesian product  V ( G 1 ) × V ( G 2 ), where V ( G 1 ) and V ( G 2 ) are the vertex sets of G 1 and G 2 , respectively.  Two vertices ( u 1 , u 2 ) and ( v 1 , v 2 ) of H are connected by an edge if and only if the vertices u 1 , u 2 , v 1 , v 2 satisfy conditions of a certain type (see below).   The following table shows the most common graph products, with   ∼   similar-to   \sim   ; denoting “is connected by an edge to”, and   ≁   not-similar-to   \not\sim   denoting non-connection. The operator symbols listed here are by no means standard, especially in older papers.      Name   Condition for (    u  1     subscript  u  1    u_{1}   ,    u  2     subscript  u  2    u_{2}   ) ∼ (    v  1     subscript  v  1    v_{1}   ,    v  2     subscript  v  2    v_{2}   ).   Dimensions   Example       Cartesian product     G  □  H      G  normal-□  H    G\square H      (    u  1     subscript  u  1    u_{1}   =    v  1     subscript  v  1    v_{1}   and    u  2     subscript  u  2    u_{2}      ∼   similar-to   \sim       v  2     subscript  v  2    v_{2}   ) or (    u  1     subscript  u  1    u_{1}      ∼   similar-to   \sim       v  1     subscript  v  1    v_{1}   and    u  2     subscript  u  2    u_{2}   =    v  2     subscript  v  2    v_{2}   )         G    V  1   ,   E  1     □   H    V  2   ,   E  2      →   J    (    V  1    V  2    )   ,   (     E  2    V  1    +    E  1    V  2     )        normal-→     subscript  G    subscript  V  1    subscript  E  1     normal-□   subscript  H    subscript  V  2    subscript  E  2       subscript  J      subscript  V  1    subscript  V  2         subscript  E  2    subscript  V  1       subscript  E  1    subscript  V  2         G_{V_{1},E_{1}}\square H_{V_{2},E_{2}}\rightarrow J_{(V_{1}V_{2}),(E_{2}V_{1}+%
 E_{1}V_{2})}     (Figure)  Graph-Cartesian-product.svg      Tensor product (Categorical product)     G  ×  H      G  H    G\times H          u  1     subscript  u  1    u_{1}      ∼   similar-to   \sim       v  1     subscript  v  1    v_{1}   and    u  2     subscript  u  2    u_{2}      ∼   similar-to   \sim       v  2     subscript  v  2    v_{2}            G    V  1   ,   E  1     ×   H    V  2   ,   E  2      →   J    (    V  1    V  2    )   ,   (   2   E  1    E  2    )        normal-→     subscript  G    subscript  V  1    subscript  E  1      subscript  H    subscript  V  2    subscript  E  2       subscript  J      subscript  V  1    subscript  V  2      2   subscript  E  1    subscript  E  2        G_{V_{1},E_{1}}\times H_{V_{2},E_{2}}\rightarrow J_{(V_{1}V_{2}),(2E_{1}E_{2})}     (Figure)  Graph-tensor-product.svg      Lexicographical product     G  ⋅  H     normal-⋅  G  H    G\cdot H   or    G   [  H  ]       G   delimited-[]  H     G[H]      u 1 ∼ v 1 or ( u 1 = v 1 and u 2 ∼ v 2 )         G    V  1   ,   E  1     ⋅   H    V  2   ,   E  2      →   J    (    V  1    V  2    )   ,   (     E  2    V  1    +    E  1    V  2  2     )        normal-→   normal-⋅   subscript  G    subscript  V  1    subscript  E  1      subscript  H    subscript  V  2    subscript  E  2       subscript  J      subscript  V  1    subscript  V  2         subscript  E  2    subscript  V  1       subscript  E  1    superscript   subscript  V  2   2         G_{V_{1},E_{1}}\cdot H_{V_{2},E_{2}}\rightarrow J_{(V_{1}V_{2}),(E_{2}V_{1}+E_%
 {1}V_{2}^{2})}     (Figure)  Graph-lexicographic-product.svg      Strong product (Normal product, AND product)     G  ⊠  H     normal-⊠  G  H    G\boxtimes H      ( u 1 = v 1 and u 2 ∼ v 2 ) or ( u 1 ∼ v 1 and u 2 = v 2 ) or ( u 1 ∼ v 1 and u 2 ∼ v 2 )         G    V  1   ,   E  1     ⊠   H    V  2   ,   E  2      →   J    (    V  1    V  2    )   ,   (     V  1    E  2    +    V  2    E  1    +   2   E  1    E  2     )        normal-→   normal-⊠   subscript  G    subscript  V  1    subscript  E  1      subscript  H    subscript  V  2    subscript  E  2       subscript  J      subscript  V  1    subscript  V  2         subscript  V  1    subscript  E  2       subscript  V  2    subscript  E  1      2   subscript  E  1    subscript  E  2         G_{V_{1},E_{1}}\boxtimes H_{V_{2},E_{2}}\rightarrow J_{(V_{1}V_{2}),(V_{1}E_{2%
 }+V_{2}E_{1}+2E_{1}E_{2})}         Co-normal product (disjunctive product, OR product)     G  *  H      G  H    G*H      u 1 ∼ v 1 or  u 2 ∼ v 2       Modular product       (    u  1   ∼    v  1   and   u  2    ∼   v  2    )       similar-to   subscript  u  1      subscript  v  1   and   subscript  u  2      similar-to     subscript  v  2      (u_{1}\sim v_{1}\text{ and }u_{2}\sim v_{2})    or     (    u  1   ≁    v  1   and   u  2    ≁   v  2    )       not-similar-to   subscript  u  1      subscript  v  1   and   subscript  u  2      not-similar-to     subscript  v  2      (u_{1}\not\sim v_{1}\text{ and }u_{2}\not\sim v_{2})          Rooted product   see article         G    V  1   ,   E  1     ⋅   H    V  2   ,   E  2      →   J    (    V  1    V  2    )   ,   (     E  2    V  1    +   E  1    )        normal-→   normal-⋅   subscript  G    subscript  V  1    subscript  E  1      subscript  H    subscript  V  2    subscript  E  2       subscript  J      subscript  V  1    subscript  V  2         subscript  E  2    subscript  V  1     subscript  E  1        G_{V_{1},E_{1}}\cdot H_{V_{2},E_{2}}\rightarrow J_{(V_{1}V_{2}),(E_{2}V_{1}+E_%
 {1})}     (Figure)  Graph-rooted-product.svg      Kronecker product   see article   see article   see article     Zig-zag product   see article   see article   see article     Replacement product        Homomorphic product 1     G  ⋉  H     left-normal-factor-semidirect-product  G  H    G\ltimes H          (    u  1   =   v  1    )       subscript  u  1    subscript  v  1     (u_{1}=v_{1})    or     (    u  1   ∼    v  1   and   u  2    ≁   v  2    )       similar-to   subscript  u  1      subscript  v  1   and   subscript  u  2      not-similar-to     subscript  v  2      (u_{1}\sim v_{1}\text{ and }u_{2}\not\sim v_{2})          In general, a graph product is determined by any condition for ( u 1 , u 2 ) ∼ ( v 1 , v 2 ) that can be expressed in terms of the statements u 1 ∼ v 1 , u 2 ∼ v 2 , u 1 = v 1 , and u 2 = v 2 .  Mnemonic  Let    K  2     subscript  K  2    K_{2}   be the complete graph on two vertices (i.e. a single edge). The product graphs     K  2   □   K  2        subscript  K  2   normal-□   subscript  K  2     K_{2}\square K_{2}   ,     K  2   ×   K  2        subscript  K  2    subscript  K  2     K_{2}\times K_{2}   , and     K  2   ⊠   K  2      normal-⊠   subscript  K  2    subscript  K  2     K_{2}\boxtimes K_{2}   look exactly like the glyph representing the operator. For example,     K  2   □   K  2        subscript  K  2   normal-□   subscript  K  2     K_{2}\square K_{2}   is a four cycle (a square) and     K  2   ⊠   K  2      normal-⊠   subscript  K  2    subscript  K  2     K_{2}\boxtimes K_{2}   is the complete graph on four vertices. The    G   [  H  ]       G   delimited-[]  H     G[H]   notation for lexicographic product serves as a reminder that this product is not commutative.  See also   Graph operations   Notes  References    .   "  Category:Graph products  Category:Graph operations  Category:Binary operations     ↩     