   Notation for theoretic scheduling problems      Notation for theoretic scheduling problems   A convenient notation for theoretic scheduling problems was introduced by Ronald Graham , Eugene Lawler , Jan Karel Lenstra and Alexander Rinnooy Kan in. 1 It consists of three fields: α , β and γ .  Each field may be a comma separated list of words. The α field describes the machine environment, β the job characteristics, and γ the objective function.  Machine environment  Single stage problems  Each job comes with a given processing time.   1  there is a single machine  P  there are   m   m   m   parallel identical machines  Q  there are   m   m   m   parallel machines with different given speeds, length of job   i   i   i   on machine   j   j   j   is the processing time    p  i     subscript  p  i    p_{i}   divided by speed    s  j     subscript  s  j    s_{j}     R  there are   m   m   m   parallel unrelated machines, there are given processing times    p   i  j      subscript  p    i  j     p_{ij}   for job   i   i   i   on machine   j   j   j      The last three letters might be followed by the number of machines which is then fixed, here   m   m   m   stands then for a fixed number.  Multi-stage problem   O : open shop problem F : flow shop problem J : job shop problem   Job characteristics  The processing time may be equal for all jobs (     p  i   =  p       subscript  p  i   p    p_{i}=p   , or     p   i  j    =  p       subscript  p    i  j    p    p_{ij}=p   ) or even of unit length (     p  i   =  1       subscript  p  i   1    p_{i}=1   , or     p   i  j    =  1       subscript  p    i  j    1    p_{ij}=1   ). This makes a difference because all release times, deadlines are assumed to be integer.       r  i     subscript  r  i    r_{i}     for each job a release time is given before which it cannot be scheduled, default is 0.      d  i     subscript  d  i    d_{i}     for each job a deadline is given after which it cannot be scheduled. If the objective is    ∑   U  i        subscript  U  i     \sum U_{i}   for example, then this field is implicitly assumed.  pmtn  the jobs may be preempted and execution resumed later, possibly on a different machine      s  i  z   e  i       s  i  z   subscript  e  i     size_{i}     Each job comes with a number of machines on which it must be scheduled at the same time, default is 1.   Precedence relations might be given for the jobs, in form of a partial order, meaning that if i is a predecessor of i' in that order, i' can start only when i is completed.   prec  an arbitrary precedence relation is given  sp-tree, tree, intree, outtree, chain  specific partial orders   Objective functions  Most objective functions depend on the deadline    d  i     subscript  d  i    d_{i}   and the completion time    C  i     subscript  C  i    C_{i}   of job   i   i   i   . We define lateness     L  i   =    C  i   -   d  i         subscript  L  i      subscript  C  i    subscript  d  i      L_{i}=C_{i}-d_{i}   , earliness     E  i   =   max   {  0  ,    d  i   -   C  i    }         subscript  E  i     0     subscript  d  i    subscript  C  i       E_{i}=\max\{0,d_{i}-C_{i}\}   , tardiness     T  i   =   max   {  0  ,    C  i   -   d  i    }         subscript  T  i     0     subscript  C  i    subscript  d  i       T_{i}=\max\{0,C_{i}-d_{i}\}   , unit penalty     U  i   =  0       subscript  U  i   0    U_{i}=0   if     C  i   ≤   d  i        subscript  C  i    subscript  d  i     C_{i}\leq d_{i}   and     U  i   =  1       subscript  U  i   1    U_{i}=1   otherwise. The common objective functions are     C  max   ,   L  max   ,   E  max   ,   T  max   ,   ∑   C  i    ,   ∑   L  i    ,   ∑   E  i    ,   ∑   T  i        subscript  C     subscript  L     subscript  E     subscript  T       subscript  C  i       subscript  L  i       subscript  E  i       subscript  T  i      C_{\max},L_{\max},E_{\max},T_{\max},\sum C_{i},\sum L_{i},\sum E_{i},\sum T_{i}   or weighted version of these sums, where every job comes with a priority    w  i     subscript  w  i    w_{i}   .  Examples  Adapted from 2   1|prec|    L  max     subscript  L     L_{\max}   : a single machine, general precedence constraint, minimizing maximum lateness.    R|pmtn|    ∑   C  i        subscript  C  i     \sum C_{i}   : variable number of unrelated parallel machines, allowing preemption, minimizing total completion time.    J3|    p   i  j      subscript  p    i  j     p_{ij}   |    C  max     subscript  C     C_{\max}   : 3-machines job shop with unit processing times, minimizing maximum completion time.   References   B. Chen, C.N. Potts and G.J. Woeginger. "A review of machine scheduling: Complexity, algorithms and approximability". Handbook of Combinatorial Optimization (Volume 3) (Editors: D.-Z. Du and P. Pardalos), 1998, Kluwer Academic Publishers. 21-169. ISBN 0-7923-5285-8 (HB) 0-7923-5019-7 (Set)  Peter Brucker, Sigrid Knust. Complexity results for scheduling problems   "  Category:Theoretical computer science  Category:Scheduling (computing)      ↩     