   Bilateral filter      Bilateral filter   A bilateral filter is a non-linear, edge-preserving and noise-reducing  smoothing  filter for images . The intensity value at each pixel in an image is replaced by a weighted average of intensity values from nearby pixels. This weight can be based on a Gaussian distribution. Crucially, the weights depend not only on Euclidean distance of pixels, but also on the radiometric differences (e.g. range differences, such as color intensity, depth distance, etc.). This preserves sharp edges by systematically looping through each pixel and adjusting weights to the adjacent pixels accordingly.  The bilateral filter is defined as         I  filtered    (  x  )    =    1   W  p      ∑    x  i   ∈  Ω     I   (   x  i   )    f  r    (   ∥    I   (   x  i   )    -   I   (  x  )     ∥   )    g  s    (   ∥    x  i   -  x   ∥   )       ,         superscript  I  filtered   x       1   subscript  W  p      subscript      subscript  x  i   normal-Ω      I   subscript  x  i    subscript  f  r    norm      I   subscript  x  i      I  x      subscript  g  s    norm     subscript  x  i   x         I^{\text{filtered}}(x)=\frac{1}{W_{p}}\sum_{x_{i}\in\Omega}I(x_{i})f_{r}(\|I(x%
 _{i})-I(x)\|)g_{s}(\|x_{i}-x\|),     where the normalization term       W  p   =    ∑    x  i   ∈  Ω      f  r    (   ∥    I   (   x  i   )    -   I   (  x  )     ∥   )    g  s    (   ∥    x  i   -  x   ∥   )          subscript  W  p     subscript      subscript  x  i   normal-Ω       subscript  f  r    norm      I   subscript  x  i      I  x      subscript  g  s    norm     subscript  x  i   x        W_{p}=\sum_{x_{i}\in\Omega}{f_{r}(\|I(x_{i})-I(x)\|)g_{s}(\|x_{i}-x\|)}     ensures that the filter preserves image energy and       I  filtered     superscript  I  filtered    I^{\text{filtered}}   is the filtered image;     I   I   I   is the original input image to be filtered;     x   x   x   are the coordinates of the current pixel to be filtered;     Ω   normal-Ω   \Omega   is the window centered in   x   x   x   ;      f  r     subscript  f  r    f_{r}   is the range kernel for smoothing differences in intensities. This function can be a Gaussian function;      g  s     subscript  g  s    g_{s}   is the spatial kernel for smoothing differences in coordinates. This function can be a Gaussian function;   As mentioned above, the weight    W  p     subscript  W  p    W_{p}   is assigned using the spatial closeness and the intensity difference. 1 Consider a pixel located at    (  i  ,  j  )     i  j    (i,j)   which needs to be denoised in image using its neighbouring pixels and one of its neighbouring pixels is located at    (  k  ,  l  )     k  l    (k,l)   . Then, the weight assigned for pixel    (  k  ,  l  )     k  l    (k,l)   to denoise the pixel    (  i  ,  j  )     i  j    (i,j)   is given by:     w   (  i  ,  j  ,  k  ,  l  )    =   e   (    -      (   i  -  k   )   2   +    (   j  -  l   )   2     2   σ  d  2      -     ∥    I   (  i  ,  j  )    -   I   (  k  ,  l  )     ∥   2    2   σ  r  2      )          w   i  j  k  l     superscript  e           superscript    i  k   2    superscript    j  l   2      2   superscript   subscript  σ  d   2         superscript   norm      I   i  j      I   k  l      2     2   superscript   subscript  σ  r   2         w(i,j,k,l)=e^{(-\frac{(i-k)^{2}+(j-l)^{2}}{2\sigma_{d}^{2}}-\frac{\|I(i,j)-I(k%
 ,l)\|^{2}}{2\sigma_{r}^{2}})}     where σ d and σ r are smoothing parameters and I(i, j) and I(k, l) are the intensity of pixels    (  i  ,  j  )     i  j    (i,j)   and    (  k  ,  l  )     k  l    (k,l)   respectively. After calculating the weights, normalize them.      I  D    (  i  ,  j  )    =      ∑   k  ,  l        I   (  k  ,  l  )    *  w    (  i  ,  j  ,  k  ,  l  )        ∑   k  ,  l      w   (  i  ,  j  ,  k  ,  l  )             subscript  I  D    i  j        subscript    k  l          I   k  l    w    i  j  k  l       subscript    k  l      w   i  j  k  l        I_{D}(i,j)=\frac{\sum_{k,l}{I(k,l)*w(i,j,k,l)}}{\sum_{k,l}{w(i,j,k,l)}}     where    I  D     subscript  I  D    I_{D}   is the denoised intensity of pixel    (  i  ,  j  )     i  j    (i,j)   .  Parameters   As the range parameter σ r increases, the bilateral filter gradually approaches Gaussian convolution more closely because the range Gaussian widens and flattens, which means that it becomes nearly constant over the intensity interval of the image.  As the spatial parameter σ d increases, the larger features get smoothened.   Limitations  The bilateral filter in its direct form can introduce several types of image artifacts:   Staircase effect - intensity plateaus that lead to images appearing like cartoons 1  Gradient reversal - introduction of false edges in the image 2   There exist several extensions to the filter that deal with these artifacts. Alternative filters, like the guided filter  3 , have also been proposed as an efficient alternative without these limitations.  Implementations  Adobe Photoshop implements a bilateral filter in its surface blur tool. GIMP implements a bilateral filter in its Filters-->Blur tools; and it is called Selective Gaussian Blur '.  Related models  The Bilateral filter was shown to be an application of the short time kernel of the Beltrami flow . 2 See also. 3  With similar goal as the Bilateral filter, the class of edge-preserving smoothing filters also includes: Anisotropic Diffusion , the Weighted Least Squares framework, 4 the Edge-Avoiding Wavelets, 5 Geodesic editing, 6 Guided filtering, 7 and the Domain Transform framework. 8  See also   Gaussian filter  Gaussian function  Gaussian blur  Convolution   External links   Kaiming He: Guided image filtering (faster than bilateral filter and avoids staircasing and gradient reversal artifacts)  Kunal N. Chaudhury Constant-time filtering  Kunal N. Chaudhury, Daniel Sage, and Michael Unser Java plugin , Fast bilateral filtering  Haarith Devarajan, Harold Nyikal, Bilateral Filters , in: Image Scaling and Bilateral Filtering 2006 course  Sylvain Paris, Pierre Kornprobst, Jack Tumblin, Frédo Durand, Bilateral Filtering: Theory and Applications , preprint  Sylvain Paris, Pierre Kornprobst, Jack Tumblin, Frédo Durand, A Gentle Introduction to Bilateral Filtering and its Applications , SIGGRAPH 2008 class  Ben Weiss, Fast Median and Bilateral Filtering , SIGGRAPH 2006 preprint  Carlo Tomasi, Roberto Manduchi, Bilateral Filtering for Gray and Color Images (shorter HTML version), proceedings of the ICCV 1998   References  "  Category:Image noise reduction techniques     Carlo Tomasi and Roberto Manduchi, “Bilateral filtering for gray and color images,” in Computer Vision, 1998. Sixth International Conference on . IEEE, 1998, pp. 839– 846. ↩  R. Kimmel, R. Malladi, and N. Sochen. Images as Embedded Maps and Minimal Surfaces: Movies, Color, Texture, and Volumetric Medical Images. International Journal of Computer Vision, 39(2):111-129, Sept. 2000. some color results http://www.cs.technion.ac.il/~ron/PAPERS/KimMalSoc_IJCV2000.pdf ↩  N. Sochen, R. Kimmel, and A.M. Bruckstein. Diffusions and confusions in signal and image processing, Journal of Mathematical Imaging and Vision, 14(3):195-209, 2001.http://www.cs.technion.ac.il/~ron/PAPERS/SocKimBru_JMIV2001.pdf ↩  Farbman, Zeev, Raanan Fattal, Dani Lischinski, and Richard Szeliski. "Edge-preserving decompositions for multi-scale tone and detail manipulation." In ACM Transactions on Graphics (TOG), vol. 27, no. 3 (2008): 67. http://www.cs.huji.ac.il/~danix/epd/ ↩  Fattal, Raanan. "Edge-avoiding wavelets and their applications." In ACM Transactions on Graphics (TOG) vol. 28, no. 3 (2009): 22. http://www.cs.huji.ac.il/~raananf/projects/eaw/ ↩  Criminisi, Antonio, Toby Sharp, Carsten Rother, and Patrick Pérez. "Geodesic image and video editing." In ACM Transactions on Graphphics (TOG), vol. 29, no. 5 (2010): 134. http://research.microsoft.com/apps/pubs/default.aspx?id=81528 ↩  He, Kaiming, Jian Sun, and Xiaoou Tang. "Guided image filtering." In Computer Vision–ECCV 2010, pp. 1-14. Springer Berlin Heidelberg, 2010. http://research.microsoft.com/en-us/um/people/kahe/eccv10/ ↩  Gastal, Eduardo S. L., and Manuel M. Oliveira. "Domain transform for edge-aware image and video processing." In ACM Transactions on Graphics (TOG), vol. 30, no. 4 (2011): 69. http://inf.ufrgs.br/~eslgastal/DomainTransform/ ↩     