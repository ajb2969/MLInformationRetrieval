   Domain adaptation      Domain adaptation   Domain Adaptation 1 2 is a field of associated with machine learning and transfer learning . This scenario arises when we aim at learning from a source data distribution a well performing model on a different (but related) target data distribution. For instance, one of the tasks of the common spam filtering problem consists in adapting a model from one user (the source distribution) to a new one who receives significantly different emails (the target distribution). Note that, when more than one source distribution is available we talked about multi-source domain adaptation. 3  Formalization  Let   X   X   X   be the input space (or description space) and let   Y   Y   Y   be the output space (or label space). The objective of a machine learning algorithm is to learn a mathematical model (a hypothesis)    h  :   X  →  Y      normal-:  h   normal-→  X  Y     h:X\to Y   able to affect a label of   Y   Y   Y   to an example from   X   X   X   . This model is learned from a learning sample    S  =    {   (   x  i   ,   y  i   )   }    i  =  1   m   ∈    (   X  ×  Y   )   m         S   superscript   subscript     subscript  x  i    subscript  y  i       i  1    m         superscript    X  Y   m      S=\{(x_{i},y_{i})\}_{i=1}^{m}\in(X\times Y)^{m}   .  Usually in supervised learning (without domain adaptation), we suppose that the examples     (   x  i   ,   y  i   )   ∈  S        subscript  x  i    subscript  y  i    S    (x_{i},y_{i})\in S   are drawn i.i.d. from a distribution    D  S     subscript  D  S    D_{S}   of support    X  ×  Y      X  Y    X\times Y   (unknown and fixed). The objective is then to learn   h   h   h   (from   S   S   S   ) such that it commits the less error as possible for labeling new examples coming from the distribution    D  S     subscript  D  S    D_{S}   .  The main difference between supervised learning and domain adaptation is that in the latter situation we study two different (but related) distributions    D  S     subscript  D  S    D_{S}   and    D  T     subscript  D  T    D_{T}   on    X  ×  Y      X  Y    X\times Y   . The domain adaptation task consists then to transfer knowledge from the source domain    D  S     subscript  D  S    D_{S}   to the target one    D  T     subscript  D  T    D_{T}   . The goal is then to learn   h   h   h   (from labeled or unlabeled samples coming from the two domains) such that it commits the less error as possible on the target domain    D  T     subscript  D  T    D_{T}   .  The major issue is the following: if a model is learned from a source domain, what is its capacity to correctly label data coming from the target domain?  The different types of domain adaptation  There are several contexts of domain adaptation. They differ in the informations considered for the target task.   The unsupervised domain adaptation : the learning sample contains a set of labeled source examples, a set of unlabeled source examples and an unlabeled set of target examples.  The semi-supervised domain adaptation : in this situation, we also consider a "small" set of labeled target examples.  The supervised domain adaptation : all the examples considered are supposed to be labeled.   Three algorithmic principles  Reweighting algorithms  The objective is to reweight the source labeled sample such that it "looks like" the target sample (in term of the error measure considered) 4 5  Iterative algorithms  A method for adapting consists in iteratively "auto-labeled" the target examples. The principle is simple:   a model   h   h   h   is learned from the labeled examples;     h   h   h   automatically labels some target examples;  a new model is learned from the new labeled examples.   Note that there exists other iterative approaches, but they usually need target labeled examples.  Search of a common representation space  The goal is to find or construct a common representation space for the two domains. The objective is to obtain a space in which the domains are close to each other while keeping good performances on the source labeling task.  References  "  Category:Machine learning     ↩  ↩  ↩  ↩  ↩     