   Sheila Greibach      Sheila Greibach   Sheila Adele Greibach (born 6 Oct 1939 in New York City) is a researcher in formal languages in computing, automata , compiler theory (in particular), and computer science . She is an Emeritus Professor of Computer Science at the University of California, Los Angeles , and has worked with Seymour Ginsburg and Michael A. Harrison in context-sensitive parsing using the stack automaton model.  Besides establishing the normal form ( Greibach normal form ) for context-free grammars , in 1965, she also investigated properties of W-grammars , pushdown automata , and decidability problems .  Early career  Greibach earned in 1960 her A.B. degree from Radcliffe College in linguistics and applied mathematics ( summa cum laude ), and her A.M. degree in 1962 also from there. In 1963, she achieved her PhD at Harvard University , advised by Anthony Oettinger. 1 The title of her PhD thesis is "Inverses of Phrase Structure Generators".  She continued to work at Harvard at the Division of Engineering and Applied Physics, until 1969 when she moved to the UCLA , where she has been professor since 1970 until present (as of March 2014).  Work and contributions  Among her students were Ronald V. Book and Michael J. Fischer . The following list indicates some of her work. The top portion of the list is from the ACM Digital Library and the remainder from the FOCS Bibliography by David M. Jones.  From ACM Digital Library  "Jump PDA's, deterministic context-free languages, principal AFDLs and polynomial time recognition (Extended Abstract)," Proceedings of the fifth annual ACM symposium on Theory of Computing, April 1973   Every deterministic context-free language can be accepted by a deterministic finite delay pda with jumps. Increasing the number of types or occurrences of jumps increases the family of languages accepted with finite delay. Hence the family of deterministic context-free language is a principal AFDL; there is a context-free language    L  0     subscript  L  0    L_{0}   such that every context-free language is an inverse gsm image of    L  0     subscript  L  0    L_{0}   or     L  0   -   {  e  }        subscript  L  0    e     L_{0}-\{e\}   .   "Some restrictions on W-grammars" Proceedings of the sixth annual ACM symposium on Theory of computing, April 1974   The effect of some restrictions on W-grammars (the formalization of the syntax of ALGOL 68 ) are explored. Two incomparable families examined at length are WRB (languages generated by normal regular-based W-grammars) and WS (languages generated by simple W-grammars). Both properly contain the context-free languages and are properly contained in the family of quasirealtime languages. In addition, WRB is closed under nested iterate ...   "An Infinite Hierarchy of Context-Free Languages," Journal of the ACM (JACM) , Volume 16 Issue 1, January 1969  "A New Normal-Form Theorem for Context-Free Phrase Structure Grammars," JACM , Volume 12 Issue 1, January 1965  "The Unsolvability of the Recognition of Linear Context-Free Languages," JACM , Volume 13 Issue 4, October 1966   The problem of whether a given context-free language is linear is shown to be recursively undecidable.   Co-authored works  "Multitape AFA," co-authored with Seymour Ginsburg, Journal of the ACM (JACM) , Volume 19 Issue 2, April 1972  "Superdeterministic PDAs: A Subcase with a Decidable Inclusion problem", co-authored with E. P. Friedman, " JACM ", October 1980, Volume 27 Issue 4  "Stack automata and compiling," co-authored with Seymour Ginsburg and Michael A. Harrison, " JACM ", January 1967, Volume 14 Issue 1   Compilation consists of two parts, recognition and translation. A mathematical model is presented which embodies salient features of many modern compiling techniques. The model, called the stack automaton, has the desirable feature of being deterministic in nature. This deterministic device is generalized to a nondeterministic device (nondeterministic stack automaton) and particular instances of this more general device are noted. Sets accepted by nondeterministic stack automata are recursi ...   "Quasi-realtime languages (Extended Abstract)," co-authored with Ronald V. Book, Proceedings of the first annual ACM symposium on Theory of Computing, May 1969   Quasi-realtime languages are the languages accepted by nondeterministic multitape Turing machines in real time. The family of quasi-realtime languages forms an abstract family of languages closed under intersection, linear erasing, and reversal. It is identical with the family of languages accepted by nondeterministic multitape Turing machines in linear time. Every quasi-realtime language can be accepted in real time by a non-deterministic one stack, one pushdown store machine, and can be e ...   "One-way stack automata," co-authored with Seymour Ginsburg and Michael A. Harrison, " JACM ", April 1967, Volume 14 Issue 2   A number of operations which either preserve sets accepted by one-way stack automata or preserve sets accepted by deterministic one-way stack automata are presented. For example, sequential transduction preserves the former; set complementation, the latter. Several solvability questions are also considered.   "Tape- and time-bounded Turing acceptors and AFLs (Extended Abstract)" co-authored with Ronald V. Book and Ben Wegbreit, Proceedings of the second annual ACM symposium on Theory of computing, May 1970   Complexity classes of formal languages defined by time- and tape-bounded Turing acceptors are studied with the aim of showing sufficient conditions for these classes to be AFLs and to be principal AFLs.   "Uniformly erasable AFL", co-authored with Seymour Ginsburg and Jonathan Goldstine, Proceedings of the fourth annual ACM symposium on Theory of computing, May 1972   This paper showed that a number of well-known families have property (*). In particular, the authors proved that the family of context-free languages does indeed have this property. In addition, we show that several familiar subfamilies of the context-free languages, such as the one-counter languages , have property (*). Finally, we show that there are families satisfying (*) which are not subfamilies of the context-free languages, for we prove that any family generated from one-let ...    Formal parsing systems  Sheila A. Greibach  August 1964  Communications of the ACM, Volume 7 Issue 8    Automatic syntactic analysis has recently become important for both natural language data processing and syntax-directed compilers. A formal parsing system G = (V, μ, T, R) consists of two finite disjoint vocabularies, V and T, a many-many map, μ, from V onto T, and a recursive set R of strings in T called syntactic sentence classes ...   From FOCS Bibliography   Seymour Ginsburg and Sheila Greibach.  Deterministic context free languages.  In Proceedings of the Sixth Annual Symposium on Switching Circuit Theory and Logical Design , pages 203-220. IEEE, 1965.    Seymour Ginsburg, Sheila A. Greibach, and Michael A. Harrison.  One-way stack automata (extended abstract).  In Conference Record of 1966 Seventh Annual Symposium on Switching and Automata Theory , pages 47-52, Berkeley, California, 26–28 October 1966. IEEE.    Sheila A. Greibach.  An infinite hierarchy of context-free languages.  In Conference Record of 1967 Eighth Annual Symposium on Switching and Automata Theory, pages 32-36, Austin, Texas, 18–20 October 1967. IEEE.    Seymour Ginsburg and Sheila Greibach.  Abstract families of languages.  In Conference Record of 1967 Eighth Annual Symposium on Switching and Automata Theory, pages 128-139, Austin, Texas, 18–20 October 1967. IEEE. Citations.    Sheila Greibach.  Checking automata and one-way stack languages (extended abstract).  In Conference Record of 1968 Ninth Annual Symposium on Switching and Automata Theory, pages 287-291, Schenectady, New York, 15–18 October 1968. IEEE. Citations.    Sheila A. Greibach.  Full AFLs and nested iterated substitution.  In Conference Record of 1969 Tenth Annual Symposium on Switching and Automata Theory, pages 222-230, Waterloo, Ontario, Canada, 15–17 October 1969. IEEE.    J. W. Carlyle, S. A. Greibach, and A. Paz.  A two-dimensional generating system modeling growth by binary cell division (preliminary report).  In 15th Annual Symposium on Switching and Automata Theory, pages 1-12, The University of New Orleans, 14–16 October 1974. IEEE.    S. A. Greibach.  Formal languages: Origins and directions.  In 20th Annual Symposium on Foundations of Computer Science , pages 66-90, San Juan, Puerto Rico, 29–31 October 1979. IEEE.   Others   Ronald Book, Shimon Even, Sheila Greibach and Gene Ott.  Ambiguity in Graphs and Expressions.  IEEE Transactions on Computers, vol. c-20, No. 2, February 1971. IEEE.   See also   Greibach normal form  Abstract family of acceptors  Greibach's theorem   External links   Sheila Greibach's Home page at UCLA   References  "  Category:1939 births  Category:Living people  Category:University of California, Los Angeles faculty  Category:Theoretical computer scientists  Category:Women computer scientists  Category:Women in technology  Category:Radcliffe College alumni  Category:Harvard University alumni     ↩     