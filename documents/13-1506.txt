   Elliptic curve primality      Elliptic curve primality   In mathematics  elliptic curve primality testing techniques are among the quickest and most widely used methods in primality proving. 1 It is an idea forwarded by Shafi Goldwasser and Joe Kilian in 1986 and turned into an algorithm by A. O. L. Atkin the same year. The algorithm was altered and improved by several collaborators subsequently, and notably by Atkin and , in 1993. 2 The concept of using elliptic curves in factorization had been developed by H. W. Lenstra in 1985, and the implications for its use in primality testing (and proving) followed quickly.  Primality testing is a field that has been around since the time of Fermat , in whose time most algorithms were based on factoring, which become unwieldy with large input; modern algorithms treat the problems of determining whether a number is prime and what its factors are separately. It became of practical importance with the advent of modern cryptography. Although many current tests result in a probabilistic output ( N is either shown composite, or probably prime, such as with the Baillie–PSW primality test or the Miller–Rabin test ), the elliptic curve test proves primality (or compositeness) with a quickly verifiable certificate. 3  Elliptic curve primality proving provides an alternative to (among others) the Pocklington primality test , which can be difficult to implement in practice. The elliptic curve primality tests are based on criteria analogous to the Pocklington criterion, on which that test is based, 4 where the group     (    ℤ  /  n   ℤ   )   *     superscript      ℤ  n   ℤ      (\mathbb{Z}/n\mathbb{Z})^{*}   is replaced by    E   (    ℤ  /  n   ℤ   )       E      ℤ  n   ℤ     E(\mathbb{Z}/n\mathbb{Z})   , and E is a properly chosen elliptic curve. We will now state a proposition on which to base our test, which is analogous to the Pocklington criterion, and gives rise to the Goldwasser–Kilian–Atkin form of the elliptic curve primality test.  Elliptic curve primality proving  It is a general-purpose algorithm , meaning it does not depend on the number being of a special form. ECPP is currently in practice the fastest known algorithm for testing the primality of general numbers, but the worst-case execution time is not known. ECPP heuristically runs in time: 5      O   (    (   log  n   )    5  +  ε    )       O   superscript    n     5  ε      O((\log n)^{5+\varepsilon})\,     for some    ε  >  0      ε  0    \varepsilon>0   . This exponent may be decreased to    4  +  ε      4  ε    4+\varepsilon   for some versions by heuristic arguments. ECPP works the same way as most other primality tests do, finding a group and showing its size is such that   p   p   p   is prime. For ECPP the group is an elliptic curve over a finite set of quadratic forms such that    p  -  1      p  1    p-1   is trivial to factor over the group.  ECPP generates an Atkin – Goldwasser –Kilian–Morain certificate of primality by recursion and then attempts to verify the certificate. The step that takes the most CPU time is the certificate generation, because factoring over a class field must be performed. The certificate can be verified quickly, allowing a check of operation to take very little time.  As of December 2014 the largest prime 6 that has been proved with ECPP method is the 29,271-digits prime value of the Lucas sequence :       L  u  c  a  s   (  140057  )    .      L  u  c  a  s  140057    Lucas(140057).   The proof certification with Marcel Martin's multi-processor Primo software by Peter Kaiser and Paul Underwood started in January 2014 and ended in December 2014. The certification took 6 months on a 16 core Xeon computer at 3 GHz plus a further 6 months on a 32 core AMD computer at 2.2 GHz.  Proposition  Let N be a positive integer, and E be the set which is defined by the equation     y  2   =     x  3   +   a  x   +  b      (   mod  N   )         superscript  y  2    annotated     superscript  x  3     a  x   b    pmod  N      y^{2}=x^{3}+ax+b\;\;(\mathop{{\rm mod}}N)   . Consider E over     ℤ  /  N   ℤ        ℤ  N   ℤ    \mathbb{Z}/N\mathbb{Z}   , use the usual addition law on E , and write 0 for the neutral element on E .  Let m be an integer. If there is a prime q which divides m , and is greater than     (    N   1  /  4    +  1   )   2     superscript     superscript  N    1  4    1   2    (N^{1/4}+1)^{2}   and there exists a point P on E such that  (1) mP = 0  (2) ( m / q ) P is defined and not equal to 0  Then N is prime.  Proof  If N is composite, then there exists a prime    p  ≤   N       p    N     p\leq\sqrt{N}   that divides N . Define    E  p     subscript  E  p    E_{p}   as the elliptic curve defined by the same equation as E but evaluated modulo p rather than modulo N . Define    m  p     subscript  m  p    m_{p}   as the order of the group    E  p     subscript  E  p    E_{p}   . By Hasse's theorem on elliptic curves we know       m  p   ≤   p  +  1  +   2   p     =    (    p   +  1   )   2   ≤    (    N   1  /  4    +  1   )   2   <  q         subscript  m  p     p  1    2    p           superscript      p   1   2         superscript     superscript  N    1  4    1   2        q     m_{p}\leq p+1+2\sqrt{p}=(\sqrt{p}+1)^{2}\leq(N^{1/4}+1)^{2}     and thus     gcd   (  q  ,   m  p   )    =  1        q   subscript  m  p    1    \gcd{(q,m_{p})}=1   and there exists an integer u with the property that       u  q   ≡   1     (   mod   m  p    )          u  q    annotated  1   pmod   subscript  m  p       uq\equiv 1\;\;(\mathop{{\rm mod}}m_{p})     Let    P  p     subscript  P  p    P_{p}   be the point P evaluated modulo p . Thus, on    E  p     subscript  E  p    E_{p}   we have        (   m  /  q   )    P  p    =   u  q   (   m  /  q   )    P  p    =   u  m   P  p    =   0             m  q    subscript  P  p      u  q    m  q    subscript  P  p           u  m   subscript  P  p         0     (m/q)P_{p}=uq(m/q)P_{p}=umP_{p}=0\,     by (1), as    m   P  p       m   subscript  P  p     mP_{p}   is calculated using the same method as mP , except modulo p rather than modulo N (and    p  ∣  N     fragments  p  normal-∣  N    p\mid N   ).  This contradicts (2), because if ( m / q ) P is defined and not equal to 0 (mod N ), then the same method calculated modulo p instead of modulo N will yield        (   m  /  q   )    P  p    ≠  0          m  q    subscript  P  p    0    (m/q)P_{p}\neq 0    7  Goldwasser–Kilian algorithm  From this proposition an algorithm can be constructed to prove an integer, N , is prime. This is done as follows:  Choose three integers at random, a, x, y and set      b  ≡     y  2   -   x  3   -   a  x       (   mod  N   )        b   annotated     superscript  y  2    superscript  x  3     a  x     pmod  N      b\equiv y^{2}-x^{3}-ax\;\;(\mathop{{\rm mod}}N)     Now P = ( x , y ) is a point on E , where we have that E is defined by     y  2   =    x  3   +   a  x   +  b        superscript  y  2      superscript  x  3     a  x   b     y^{2}=x^{3}+ax+b   . Next we need an algorithm to count the number of points on E . Applied to E , this algorithm (Koblitz and others suggest Schoof's algorithm ) produces a number m which is the number of points on curve E over F N , provided N is prime. Next we have a criterion for deciding whether our curve E is acceptable.  If we can write m in the form    m  =   k  q       m    k  q     m=kq   where    k  ≥  2      k  2    k\geq 2   is a small integer and q a probable prime (it has passed some previous probabilistic primality test , for example), then we do not discard E . If it is not possible to write m in this form, we discard our curve and randomly select another triple (a, x, y) to start over.  Assuming we find a curve which passes the criterion, proceed to calculate mP and kP . If at any stage in the calculation we encounter an undefined expression (from calculating the multiples of P or in our point counting algorithm), it gives us a non-trivial factor of N .  If     m  P   ≠  0        m  P   0    mP\neq 0   it is clear that N is not prime, because if N were prime then E would have order m , and any element of E would become 0 on multiplication by m . If kP = 0 then we have hit a dead-end and must start again with a different triple.  Now if     m  P   =  0        m  P   0    mP=0   and     k  P   ≠  0        k  P   0    kP\neq 0   then our previous proposition tells us that N is prime. However there is one possible problem, which is the primality of q . This must be verified, using the same algorithm. So we have described a down-run procedure, where the primality of N can be proven through the primality of q and indeed smaller 'probable primes' until we have reached certain primes and are finished. 8 9  Problems with the algorithm  Atkin and Morain state "the problem with GK is that Schoof's algorithm seems almost impossible to implement. 10 It is very slow and cumbersome to count all of the points on E using Schoof's algorithm, which is the preferred algorithm for the Goldwasser–Kilian algorithm. However, the original algorithm by Schoof is not efficient enough to provide the number of points in short time. 11 These comments have to be seen in the historical context, before the improvements by Elkies and Atkin to Schoof's method.  A second problem Koblitz notes is the difficulty of finding the curve E whose number of points is of the form kq , as above. There is no known theorem which guarantees we can find a suitable E in polynomially many attempts. The distribution of primes on the Hasse interval    [    p  +  1   -   2   p     ,   p  +  1  +   2   p     ]         p  1     2    p       p  1    2    p       [p+1-2\sqrt{p},p+1+2\sqrt{p}]   , which contains m , is not the same as the distribution of primes in the group orders, counting curves with multiplity. However, this is not a significant problem in practice. 12  Atkin–Morain elliptic curve primality test (ECPP)  In a 1993 paper, Atkin and Morain described an algorithm ECPP which avoided the trouble of relying on a cumbersome point counting algorithm (Schoof's). The algorithm still relies on the proposition stated above, but rather than randomly generating elliptic curves and searching for a proper m , their idea was to construct a curve E where the number of points is easy to compute. Complex multiplication is key in the construction of the curve.  Now, given an N for which primality needs to be proven we need to find a suitable m and q , just as in the Goldwasser–Kilian test, that will fulfill the proposition and prove the primality of N . (Of course, a point P and the curve itself, E , must also be found.)  ECPP uses complex multiplication to construct the curve E , doing so in a way that allows for m (the number of points on E ) to be easily computed. We will now describe this method:  Utilization of complex multiplication requires a negative discriminant , D , such that D can be written as the product of two elements    D  =   π   π  ¯        D    π   normal-¯  π      D=\pi\bar{\pi}   , or completely equivalently, we can write the equation:        a  2   +    |  D  |    b  2     =   4   N           superscript  a  2       D    superscript  b  2       4  N     a^{2}+|D|b^{2}=4N\,     For some a, b . If we can describe N in terms of either of these forms, we can create an elliptic curve E on     ℤ  /  N   ℤ        ℤ  N   ℤ    \mathbb{Z}/N\mathbb{Z}   with complex multiplication (described in detail below), and the number of points is given by:        |   E   (    ℤ  /  N   ℤ   )    |   =    N  +  1   -  π  -   π  ¯    =    N  +  1   -  a    .            E      ℤ  N   ℤ         N  1   π   normal-¯  π             N  1   a      |E(\mathbb{Z}/N\mathbb{Z})|=N+1-\pi-\bar{\pi}=N+1-a.\,     For N to split into two the two elements, we need that     (   D  N   )   =  1        D  N   1    \left(\frac{D}{N}\right)=1   (where    (   D  N   )      D  N    \left(\frac{D}{N}\right)   denotes the Legendre symbol ). This is a necessary condition, and we achieve sufficiency if the class number  h ( D ) of the order in    ℚ   (   D   )       ℚ    D     \mathbb{Q}(\sqrt{D})   is 1. This happens for only 13 values of D , which are the elements of {−3, −4, −7, −8, −11, −12, −16, −19, −27, −28, −43, −67, −163}  The test  Pick discriminants D in sequence of increasing h ( D ). For each D check if     (   D  N   )   =  1        D  N   1    \left(\frac{D}{N}\right)=1   and whether 4 N can be written as:        a  2   +    |  D  |    b  2     =   4   N           superscript  a  2       D    superscript  b  2       4  N     a^{2}+|D|b^{2}=4N\,     This part can be verified using Cornacchia's algorithm . Once acceptable D and a have been discovered, calculate    m  =    N  +  1   -  a       m      N  1   a     m=N+1-a   . Now if m has a prime factor q of size      q  >    (    N   1  /  4    +  1   )   2       q   superscript     superscript  N    1  4    1   2     q>(N^{1/4}+1)^{2}     use the complex multiplication method to construct the curve E and a point P on it. Then we can use our proposition to verify the primality of N . Note that if m does not have a large prime factor or cannot be factored quickly enough, another choice of D can be made. 13  Complex multiplication method  For completeness, we will provide an overview of complex multiplication , the way in which an elliptic curve can be created, given our D (which can be written as a product of two elements).  Assume first that    D  ≠   -  3       D    3     D\neq-3   and    D  ≠   -  4       D    4     D\neq-4   (these cases are much more easily done). It is necessary to calculate the elliptic j-invariants of the h ( D ) classes of the order of discriminant D as complex numbers. There are several formulas to calculate these.  Next create the monic polynomial     H  D    (  X  )        subscript  H  D   X    H_{D}(X)   , which has roots corresponding to the h ( D ) values. Note, that     H  D    (  X  )        subscript  H  D   X    H_{D}(X)   is the class polynomial . From complex multiplication theory, we know that     H  D    (  X  )        subscript  H  D   X    H_{D}(X)   has integer coefficients, which allows us to estimate these coefficients accurately enough to discover their true values.  Now, if N is prime, CM tells us that     H  D    (  X  )        subscript  H  D   X    H_{D}(X)   splits modulo N into a product of h ( D ) linear factors, based on the fact that D was chosen so that N splits as the product of two elements. Now if j is one of the h ( D ) roots modulo N we can define E as:         y  2   =     x  3   -   3  k   c   2  r    x    +   2  k   c   3  r       ,    where  k   =   j   j  -  1728      ,     formulae-sequence     superscript  y  2        superscript  x  3     3  k   superscript  c    2  r    x      2  k   superscript  c    3  r           where  k     j    j  1728       y^{2}=x^{3}-3kc^{2r}x+2kc^{3r},\text{ where }k=\frac{j}{j-1728},     c is any quadratic nonresidue mod N , and r is either 0 or 1.  Given a root j there are only two possible nonisomorphic choices of E , one for each choice of r . We have the cardinality of these curves as       |   E   (    ℤ  /  N   ℤ   )    |   =    N  +  1   -  a           E      ℤ  N   ℤ         N  1   a     |E(\mathbb{Z}/N\mathbb{Z})|=N+1-a   or     |   E   (    ℤ  /  N   ℤ   )    |   =   N  +  1  +  a           E      ℤ  N   ℤ       N  1  a     |E(\mathbb{Z}/N\mathbb{Z})|=N+1+a    14 15 16  Discussion  Just as with the Goldwasser–Killian test, this one leads to a down-run procedure. Again, the culprit is q . Once we find a q that works, we must check it to be prime, so in fact we are doing the whole test now for q . Then again we may have to perform the test for factors of q . This leads to a nested certificate where at each level we have an elliptic curve E , an m and the prime in doubt, q .  Example of Atkin–Morain ECPP  We construct an example to prove that    N  =  167      N  167    N=167   is prime using the Atkin–Morain ECPP test. First proceed through the set of 13 possible discriminants, testing whether the Legendre Symbol     (   D  /  N   )   =  1        D  N   1    (D/N)=1   , and if 4 N can be written as     4  N   =    a  2   +    |  D  |    b  2           4  N      superscript  a  2       D    superscript  b  2       4N=a^{2}+|D|b^{2}   .  For our example D = −43 is chosen. This is because     (   D  /  N   )   =   (   -   43  /  167    )   =  1          D  N       43  167         1     (D/N)=(-43/167)=1   and also, using Cornacchia's algorithm, we know that     4  ⋅   (  167  )    =    25  2   +    (  43  )    (   1  2   )          normal-⋅  4  167      superscript  25  2     43   superscript  1  2       4\cdot(167)=25^{2}+(43)(1^{2})   and thus a = 25 and b = 1.  The next step is to calculate m . This is easily done as    m  =    N  +  1   -  a       m      N  1   a     m=N+1-a   which yields    m  =    167  +  1   -  25   =  143        m      167  1   25        143     m=167+1-25=143   . Next we need to find a probable prime divisor of m , which was referred to as q . It must satisfy the condition that    q  >    (    N   1  /  4    +  1   )   2       q   superscript     superscript  N    1  4    1   2     q>(N^{1/4}+1)^{2}     Now in this case, m = 143 = 11*13. So unfortunately we cannot choose 11 or 13 as our q , for it does not satisfy the necessary inequality. We are saved, however, by an analogous proposition to that which we stated before the Goldwasser–Kilian algorithm, which comes from a paper by Morain. 17 It states, that given our m , we look for an s which divides m ,    s  >    (    N   1  /  4    +  1   )   2       s   superscript     superscript  N    1  4    1   2     s>(N^{1/4}+1)^{2}   , but is not necessarily prime, and check whether, for each    p  i     subscript  p  i    p_{i}   which divides s        m  /   p  i    P   ≠   P  ∞           m   subscript  p  i    P    subscript  P      m/p_{i}P\neq P_{\infty}     for some point P on our yet to be constructed curve.  If s satisfies the inequality, and its prime factors satisfy the above, then N is prime.  So in our case, we choose s = m = 143. Thus our possible    p  i     subscript  p  i    p_{i}   's are 11 and 13. First, it is clear that    143  >    (    167   1  /  4    +  1   )   2       143   superscript     superscript  167    1  4    1   2     143>(167^{1/4}+1)^{2}   , and so we need only check the values of         (   143  /  11   )   P   =   13  P  and   (   143  /  13   )   P   =   11  P    .            143  11   P     13  P  and    143  13   P          11  P      (143/11)P=13P\text{ and }(143/13)P=11P.     But before we can do this, we must construct our curve, and choose a point P . In order to construct the curve, we make use of complex multiplication. In our case we compute the J-invariant       j  ≡    -   960  3       (   mod  167   )    ≡   107     (   mod  167   )     .        j   annotated     superscript  960  3     pmod  167          annotated  107   pmod  167       j\equiv-960^{3}\;\;(\mathop{{\rm mod}}167)\equiv 107\;\;(\mathop{{\rm mod}}167%
 ).\,     Next we compute    k  =    j   1728  -  j       (   mod  167   )    ≡   158     (   mod  167   )          k   annotated    j    1728  j     pmod  167          annotated  158   pmod  167       k=\frac{j}{1728-j}\;\;(\mathop{{\rm mod}}167)\equiv 158\;\;(\mathop{{\rm mod}}%
 167)   and we know our elliptic curve is of the form:       y  2   =    x  3   +   3  k   c  2   x   +   2  k   c  3          superscript  y  2      superscript  x  3     3  k   superscript  c  2   x     2  k   superscript  c  3       y^{2}=x^{3}+3kc^{2}x+2kc^{3}   ,  where k is as described previously and c a non-square in    𝔽  167     subscript  𝔽  167    \mathbb{F}_{167}   . So we can begin with       r  =  0   ,    3  k   ≡   140     (   mod  167   )        formulae-sequence    r  0       3  k    annotated  140   pmod  167       r=0,3k\equiv 140\;\;(\mathop{{\rm mod}}167)   ,     2  k   ≡   149     (   mod  167   )          2  k    annotated  149   pmod  167      2k\equiv 149\;\;(\mathop{{\rm mod}}167)   which yields  E      y  2   =     x  3   +   140  x   +  149      (   mod  167   )         superscript  y  2    annotated     superscript  x  3     140  x   149    pmod  167      y^{2}=x^{3}+140x+149\;\;(\mathop{{\rm mod}}167)     Now, utilizing the point P = (6,6) on E it can be verified that 143 P =    P  ∞     subscript  P     P_{\infty}   .  It is simple to check that 13(6, 6) = (12, 65) and 11P = (140, 147), and so, by Morain's proposition, N is prime.  Complexity and running times  Goldwasser and Kilian's elliptic curve primality proving algorithm terminates in expected polynomial time for at least      1  -   O   (   2   -   N   1   log   log  n        )        1    O   superscript  2      N    1      n           1-O\left(2^{-N\frac{1}{\log\log n}}\right)     of prime inputs.  Conjecture  Let    π   (  x  )       π  x    \pi(x)   be the number of primes smaller than x         ∃   c  1    ,   c  2    >  0   :     π   (   x  +   x    )    -   π   (  x  )     ≥     c  2    x      log   c  1    x        normal-:        subscript  c  1     subscript  c  2    0         π    x    x       π  x         subscript  c  2     x      superscript    subscript  c  1    x       \exists c_{1},c_{2}>0:\pi(x+\sqrt{x})-\pi(x)\geq\frac{c_{2}\sqrt{x}}{\log^{c_{%
 1}}x}     for sufficiently large x .  If one accepts this conjecture then the Goldwasser–Kilian algorithm terminates in expected polynomial time for every input. Also, if our N is of length k , then the algorithm creates a certificate of size    O   (   k  2   )       O   superscript  k  2     O(k^{2})   that can be verified in    O   (   k  4   )       O   superscript  k  4     O(k^{4})   . 18  Now consider another conjecture, which will give us a bound on the total time of the algorithm.  Conjecture 2  Suppose there exist positive constants    c  1     subscript  c  1    c_{1}   and    c  2     subscript  c  2    c_{2}   such that the amount of primes in the interval        [  x  ,   x  +    2  x     ]   ,  x   ≥  2        x    x      2  x      x   2    [x,x+\sqrt{2x}],x\geq 2   is larger than     c  1    x     (   log  x   )    -   c  2          subscript  c  1     x    superscript    x      subscript  c  2       c_{1}\sqrt{x}(\log x)^{-c_{2}}     Then the Goldwasser Kilian algorithm proves the primality of N in an expected time of      O   (    log   10  +   c  2     n   )       O    superscript     10   subscript  c  2     n     O(\log^{10+c_{2}}n)    19  For the Atkin–Morain algorithm, the running time stated is      O   (    (   log  N   )    6  +  ϵ    )       O   superscript    N     6  ϵ      O((\log N)^{6+\epsilon})   for some    ϵ  >  0      ϵ  0    \epsilon>0    20  Primes of special form  For some forms of numbers, it is possible to find 'short-cuts' to a primality proof. This is the case for the Mersenne numbers . In fact, due to their special structure, which allows for easier verification of primality, the largest known prime number is a Mersenne number. 21 There has been a method in use for some time to verify primality of Mersenne numbers, known as the Lucas–Lehmer test . This test does not rely on elliptic curves. However we present a result where numbers of the form    N  =     2  k   n   -  1       N       superscript  2  k   n   1     N=2^{k}n-1   where      k  ,  n   ∈  ℤ   ,   k  ≥  2      formulae-sequence     k  n   ℤ     k  2     k,n\in\mathbb{Z},k\geq 2   , n odd can be proven prime (or composite) using elliptic curves. Of course this will also provide a method for proving primality of Mersenne numbers, which correspond to the case where n = 1. It should be noted that there is a method in place for testing this form of number without elliptic curves (with a limitation on the size of k) known as the Lucas–Lehmer–Riesel test . The following method is drawn from the paper Primality Test for      2  k   n   -  1         superscript  2  k   n   1    2^{k}n-1   using Elliptic Curves , by Yu Tsumura. 22  Group structure of E (F N )  We take E as our elliptic curve, where E is of the form     y  2   =    x  3   -   m  x         superscript  y  2      superscript  x  3     m  x      y^{2}=x^{3}-mx   for    m  ∈  ℤ      m  ℤ    m\in\mathbb{Z}   ,    m  ≢   0     (   mod  p   )       not-equivalent-to  m   annotated  0   pmod  p      m\not\equiv 0\;\;(\mathop{{\rm mod}}p)   , where    p  ≡   3     (   mod  4   )        p   annotated  3   pmod  4      p\equiv 3\;\;(\mathop{{\rm mod}}4)   is prime, and      p  +  1   =    2  k   n    ,    k  ∈  ℤ   ,   k  ≥   2  ,  n        formulae-sequence      p  1      superscript  2  k   n     formulae-sequence    k  ℤ     k   2  n       p+1=2^{k}n,k\in\mathbb{Z},k\geq 2,n   odd.  Theorem 1  #E      (   𝔽  p   )   =   p  +  1        subscript  𝔽  p     p  1     (\mathbb{F}_{p})=p+1    23  Theorem 2  E      (   𝔽  p   )   ≅   ℤ    2  k   n         subscript  𝔽  p    subscript  ℤ     superscript  2  k   n      (\mathbb{F}_{p})\cong\mathbb{Z}_{2^{k}n}   or  E      (   𝔽  p   )   ≅    ℤ  2   ⊕   ℤ    2   k  -  1    n          subscript  𝔽  p    direct-sum   subscript  ℤ  2    subscript  ℤ     superscript  2    k  1    n       (\mathbb{F}_{p})\cong\mathbb{Z}_{2}\oplus\mathbb{Z}_{2^{k-1}n}     Depending on whether or not m is a quadratic residue  modulo p .  Theorem 3  Let    p  ≡   3     (   mod  4   )        p   annotated  3   pmod  4      p\equiv 3\;\;(\mathop{{\rm mod}}4)   be prime, E , k , n , m as above. Take Q = ( x , y ) on E , x a quadratic nonresidue modulo p .  Then the order of Q is divisible by    2  k     superscript  2  k    2^{k}   in the cyclic group     E   (   𝔽  p   )    ≅   ℤ    2  k   n          E   subscript  𝔽  p     subscript  ℤ     superscript  2  k   n      E(\mathbb{F}_{p})\cong\mathbb{Z}_{2^{k}n}   .  First we will present the case where n is relatively small with respect to    2  k     superscript  2  k    2^{k}   , and this will require one more theorem.  Theorem 4  Choose a    λ  >  1      λ  1    \lambda>1   . E , k , n , m are specified as above with the added restrictions that      n  ≤    p   /  λ       n      p   λ     n\leq\sqrt{p}/\lambda   and     λ   p    >     (    p   1  /  4    +  1   )   2          λ    p     superscript     superscript  p    1  4    1   2     \lambda\sqrt{p}>(p^{1/4}+1)^{2}\,     p is a prime if and only if there exists a Q = ( x , y ) which is on E , such that the       gcd   (   S  i   ,  p  )    =  1         subscript  S  i   p   1    \gcd{(S_{i},p)}=1   for i = 1, 2, ..., k − 1 and     S  k   ≡   0     (   mod  p   )         subscript  S  k    annotated  0   pmod  p      S_{k}\equiv 0\;\;(\mathop{{\rm mod}}p)     where    S  i     subscript  S  i    S_{i}   is a sequence with initial value     S  0   =  x       subscript  S  0   x    S_{0}=x     The algorithm  We provide the following algorithm, which relies mainly on Theorems 3 and 4. To verify the primality of a given number N , perform the following steps:  (1) Chose    x  ∈  ℤ      x  ℤ    x\in\mathbb{Z}   such that     (   x  N   )   =   -  1         x  N     1     (\frac{x}{N})=-1   , and find y such that     (     x  3   -   y  2    N   )   =  1           superscript  x  3    superscript  y  2    N   1    (\frac{x^{3}-y^{2}}{N})=1     Take    m  =      x  3   -   y  2    x      (   mod  N   )        m   annotated       superscript  x  3    superscript  y  2    x    pmod  N      m=\frac{x^{3}-y^{2}}{x}\;\;(\mathop{{\rm mod}}N)     Then Q ' = ( x , y ) is on E      y  2   =    x  3   -   m  x         superscript  y  2      superscript  x  3     m  x      y^{2}=x^{3}-mx   where    m  ≢   0     (   mod  N   )       not-equivalent-to  m   annotated  0   pmod  N      m\not\equiv 0\;\;(\mathop{{\rm mod}}N)     Calculate Q = nQ '. If    Q  =   P  ∞       Q   subscript  P      Q=P_{\infty}   then N is composite, otherwise proceed to (2).  (2) Set    S  i     subscript  S  i    S_{i}   as the sequence with initial value Q . Calculate    S  i     subscript  S  i    S_{i}   for i = 1,2,..., k − 1  If     gcd   (   S  i   ,  N  )    >  1         subscript  S  i   N   1    \gcd({S_{i},N})>1   for an i , where    1  ≤  i  ≤   k  -  1         1  i         k  1      1\leq i\leq k-1   then N is composite. Otherwise, proceed to (3).  (3) If     S  k   ≡   0     (   mod  N   )         subscript  S  k    annotated  0   pmod  N      S_{k}\equiv 0\;\;(\mathop{{\rm mod}}N)   then N is prime. Otherwise, N is composite. This completes the test.  Justification of the algorithm  In (1), and elliptic curve, E is picked, along with a point Q on E , such that the x -coordinate of Q is a quadratic nonresidue. We can say       (   m  N   )   =   (      x  3   -   y  2    x   N   )   =    (   x  N   )    (     x  3   -   y  2    N   )    =   -   1  ⋅  1    =   -  1.           m  N          superscript  x  3    superscript  y  2    x   N            x  N        superscript  x  3    superscript  y  2    N            normal-⋅  1  1           1.      \left(\frac{m}{N}\right)=\left(\frac{\frac{x^{3}-y^{2}}{x}}{N}\right)=\left(%
 \frac{x}{N}\right)\left(\frac{x^{3}-y^{2}}{N}\right)=-1\cdot 1=-1.     Thus, if N is prime, Q ' has order divisible by    2  k     superscript  2  k    2^{k}   , by Theorem 3, and therefore the order of Q ' is     2  k   d       superscript  2  k   d    2^{k}d    d | n .  This means Q = nQ ' has order    2  k     superscript  2  k    2^{k}   . Therefore, if (1) concludes that N is composite, it truly is composite. (2) and (3) check if Q has order    2  k     superscript  2  k    2^{k}   . Thus, if (2) or (3) conclude N is composite, it is composite.  Now, if the algorithm concludes that N is prime, then that means    S  1     subscript  S  1    S_{1}   satisfies the condition of Theorem 4, and so N is truly prime.  There is an algorithm as well for when n is large, however for this we refer to the aforementioned article. 24  References  External links   Elliptic Curves and Primality Proving by Atkin and Morain.   Chris Caldwell, "Primality Proving 4.2: Elliptic curves and the ECPP test" at the Prime Pages .  François Morain, "The ECPP home page" (includes old ECPP software for some architectures).  Marcel Martin, "Primo" (binary for Linux 64-bit)  GMP-ECPP , a free ECPP implementation  LiDIA , a free C++ library with ECPP support   "  Category:Primality tests     ↩  Top, Jaap, Elliptic Curve Primality Proving , http://www.math.rug.nl/~top/atkin.pdf ↩  Atkin, A.O.L., Morain, F., Elliptic Curves and Primality Proving , http://www.iai.uni-bonn.de/~adrian/ecpp/1992-atkin-morain-elliptic.pdf ↩  Washington, Lawrence C. , Elliptic Curves: Number Theory and Cryptography , Chapman & Hall/CRC, 2003 ↩  ↩  Caldwell, Chris. The Top Twenty: Elliptic Curve Primality Proof from the Prime Pages . ↩  Koblitz, Neal, Introduction to Number Theory and Cryptography , 2nd Ed, Springer, 1994 ↩  http://www.mast.queensu.ca/~math418/m418oh/m418oh27.pdf ↩  Blake, Ian F., Seroussi, Gadiel, Smart, Nigel Paul, Elliptic Curves in Cryptography , Cambridge University Press, 1999 ↩   Lenstra, Hendrik W., Efficient Algorithms in Number Theory , https://openaccess.leidenuniv.nl/bitstream/1887/2141/1/346_081.pdf ↩      http://algo.inria.fr/seminars/sem97-98/morain.html ↩  Morain, Francois, Implementation of the Atkin–Goldwasser–Kilian Primality Testing Algorithm, https://eprints.kfupm.edu.sa/44864/1/44864.pdf ↩  Goldwasser, Shafi, Kilian, Joe, Almost All Primes Can Be Quickly Certified , http://www.iai.uni-bonn.de/~adrian/ecpp/p316-goldwasser.pdf ↩    http://primes.utm.edu/notes/by_year.html ↩  Tsumura, Yu, ''Primality Tests for      2  k   n   -  1         superscript  2  k   n   1    2^{k}n-1   Using Elliptic Curves, ↩       