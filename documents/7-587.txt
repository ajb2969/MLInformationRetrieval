


Dynamization




Dynamization

In computer science, dynamization is the process of transforming a static data structure into a dynamic one. Although static data structures may provide very good functionality and fast queries, their utility is limited because of their inability to grow/shrink fast, thus making them inapplicable for the solution of dynamic problems, where the amount of the input data changes. Dynamization techniques provide uniform ways of creating dynamic data structures.
Decomposable search problems
We define problem 
 
 
 
  of searching for the predicate 
 
 
 
  match in the set 
 
 
 
  as 
 
 
 
 . Problem 
 
 
 
  is decomposable if the set 
 
 
 
  can be decomposed into subsets 
 
 
 
  and there exists an operation 
 
 
 
  of result unification such that 
 
 
 
 .
Decomposition
Decomposition is a term used in computer science to break static data structures into smaller units of unequal size. The basic principle is the idea that any decimal number can be translated into a representation in any other base. For more details about the topic see Decomposition (computer science). For simplicity, binary system will be used in this article but any other base (as well as other possibilities such as Fibonacci numbers) can also be utilized.
If using the binary system, a set of 
 
 
 
  elements is broken down into subsets of sizes with



elements where 
 
 
 
  is the 
 
 
 
 -th bit of 
 
 
 
  in binary. This means that if 
 
 
 
  has 
 
 
 
 -th bit equal to 0, the corresponding set does not contain any elements. Each of the subset has the same property as the original static data structure. Operations performed on the new dynamic data structure may involve traversing 
 
 
 
  sets formed by decomposition. As a result, this will add 
 
 
 
  factor as opposed to the static data structure operations but will allow insert/delete operation to be added.
Kurt Mehlhorn proved several equations for time complexity of operations on the data structures dynamized according to this idea. Some of these equalities are listed.
If


 = time to build the static data structure

 = time to query the static data structure

 = time to query the dynamic data structure formed by decomposition

 = amortized insertion time
then
 





If 
 
 
 
  is at least polynomial, then 
 
 
 
 .
Further reading

Kurt Mehlhorn, Data structures and algorithms 3, . An EATCS Series, vol. 3, Springer, 1984.

"
Category:Data structures


