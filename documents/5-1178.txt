   Silhouette edge      Silhouette edge   In computer graphics, a silhouette edge on a 3D body projected onto a 2D plane (display plane) is the collection of points whose outwards surface normal is perpendicular to the view vector . Due to discontinuities in the surface normal, a silhouette edge is also an edge which separates a front facing face from a back facing face. Without loss of generality , this edge is usually chosen to be the closest one on a face, so that in parallel view this edge corresponds to the same one in a perspective view. Hence, if there is an edge between a front facing face and a side facing face, and another edge between a side facing face and back facing face, the closer one is chosen. The easy example is looking at a cube in the direction where the face normal is collinear with the view vector.  The first type of silhouette edge is sometimes troublesome to handle because it does not necessarily correspond to a physical edge in the CAD model. The reason that this can be an issue is that a programmer might corrupt the original model by introducing the new silhouette edge into the problem. Also, given that the edge strongly depends upon the orientation of the model and view vector, this can introduce numerical instabilities into the algorithm (such as when a trick like dilution of precision is considered).  Computation  To determine the silhouette edge of an object, we first have to know the plane equation of all faces. Then, by examining the sign of the point-plane distance from the light-source to each face        a  x   +   b  y   +   c  z   +  d   =   {       >  0     front facing        =  0     parallel        <  0     back facing              a  x     b  y     c  z   d    cases    absent  0   front facing    absent  0   parallel    absent  0   back facing     ax+by+cz+d=\begin{cases}>0&\text{front facing}\\
 =0&\text{parallel}\\
 <0&\text{back facing}\end{cases}   Using this result, we can determine if the face is front- or back facing.  The silhouette edge(s) consist of all edges separating a front facing face from a back facing face .  Similar Technique  A convenient and practical implementation of front/back facing detection is to use the unit normal of the plane (which is commonly precomputed for lighting effects anyway), then simply applying the dot product of the light position to the plane's unit normal and adding the D component of the plane equation (a scalar value):        𝐧𝐨𝐫𝐦𝐚𝐥  ⋅   (  light position  )    +   plane  D    =     ⟨  a  ,  b  ,  c  ,  d  ⟩   ⋅   ⟨   L  x   ,   L  y   ,   L  z   ,   L  w   ⟩    +   plane  D           normal-⋅  normal  light position    subscript  plane  D       normal-⋅   a  b  c  d     subscript  L  x    subscript  L  y    subscript  L  z    subscript  L  w      subscript  plane  D      \textbf{normal}\cdot(\textbf{light position})+\text{plane}_{D}=\langle a,b,c,d%
 \rangle\cdot\langle L_{x},L_{y},L_{z},L_{w}\rangle+\text{plane}_{D}           a   L  x    +   b   L  y    +   c   L  z    +   d   L  w    +   plane  D    =  indicator          a   subscript  L  x      b   subscript  L  y      c   subscript  L  z      d   subscript  L  w     subscript  plane  D    indicator    aL_{x}+bL_{y}+cL_{z}+dL_{w}+\text{plane}_{D}=\text{indicator}     Where plane_D is easily calculated as a point on the plane dot product with the unit normal of the plane:       plane  D   =   PointOnPlane  ⋅   (  𝐧𝐨𝐫𝐦𝐚𝐥  )         subscript  plane  D    normal-⋅  PointOnPlane  normal     \text{plane}_{D}=\text{PointOnPlane}\cdot(\textbf{normal})     Note: The homogeneous coordinates , L_w and d, are not always needed for this computation.  After doing this calculation, you may notice indicator is actually the signed distance from the plane to the light position. This distance indicator will be negative if it is behind the face, and positive if it is in front of the face.      indicator  =   {       >  0     front-facing        =  0     parallel        <  0     back-facing          indicator   cases    absent  0   front-facing    absent  0   parallel    absent  0   back-facing     \text{indicator}=\begin{cases}>0&\text{front-facing}\\
 =0&\text{parallel}\\
 <0&\text{back-facing}\end{cases}     This is also the technique used in the 2002 SIGGRAPH paper, "Practical and Robust Stenciled Shadow Volumes for Hardware-Accelerated Rendering"  External links   http://wheger.tripod.com/vhl/vhl.htm   "  Category:3D computer graphics   