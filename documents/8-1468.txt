   Aberth method      Aberth method   The Aberth method , or Aberth–Ehrlich method , named after Oliver Aberth 1 and Louis W. Ehrlich, 2 is a root-finding algorithm for simultaneous approximation of all the roots of a univariate polynomial .  The fundamental theorem of algebra states that for each polynomial with complex coefficients there are as many roots as the degree of the polynomial. Numerical algorithms that approximate all roots at once include the Weierstrass–(Durand–Kerner) method and the Aberth–Ehrlich method.  Description  Let     p   (  x  )    =     p  n    x  n    +    p   n  -  1     x   n  -  1     +  ⋯  +    p  1   x   +   p  0          p  x        subscript  p  n    superscript  x  n       subscript  p    n  1     superscript  x    n  1     normal-⋯     subscript  p  1   x    subscript  p  0      p(x)=p_{n}x^{n}+p_{n-1}x^{n-1}+\cdots+p_{1}x+p_{0}   be a univariate polynomial of degree n with real or complex coefficients. Then there exist complex numbers     z  1  *   ,   z  2  *   ,  …  ,   z  n  *       subscript   superscript  z    1    subscript   superscript  z    2   normal-…   subscript   superscript  z    n     z^{*}_{1},\,z^{*}_{2},\dots,z^{*}_{n}   , the roots of p(x) , that give the factorisation :        p   (  x  )    =     p  n   ⋅   (   x  -   z  1  *    )   ⋅   (   x  -   z  2  *    )    ⋯   (   x  -   z  n  *    )     .        p  x      normal-⋅   subscript  p  n     x   subscript   superscript  z    1      x   subscript   superscript  z    2     normal-⋯    x   subscript   superscript  z    n       p(x)=p_{n}\cdot(x-z^{*}_{1})\cdot(x-z^{*}_{2})\cdots(x-z^{*}_{n}).     Although those numbers are unknown, upper and lower bounds for their absolute values are computable from the coefficients of the polynomial. Now one can pick n distinct numbers in the complex plane—randomly or evenly distributed—such that their absolute values are within the same bounds. A set of such numbers is called an initial approximation of the set of roots of p(x) . This approximation can be iteratively improved using the following procedure.  Let      z  1   ,  …  ,   z  n    ∈  ℂ        subscript  z  1   normal-…   subscript  z  n    ℂ    z_{1},\dots,z_{n}\in\mathbb{C}   be the current approximations of the zeros of p(x) . Then offset numbers      w  1   ,  …  ,   w  n    ∈  ℂ        subscript  w  1   normal-…   subscript  w  n    ℂ    w_{1},\dots,w_{n}\in\mathbb{C}   are computed as        w  k   =   -     p   (   z  k   )      p  ′    (   z  k   )      1  -     p   (   z  k   )      p  ′    (   z  k   )     ⋅    ∑   j  ≠  k     1    z  k   -   z  j           ,       subscript  w  k           p   subscript  z  k       superscript  p  normal-′    subscript  z  k       1   normal-⋅      p   subscript  z  k       superscript  p  normal-′    subscript  z  k       subscript     j  k      1     subscript  z  k    subscript  z  j            w_{k}=-\frac{\frac{p(z_{k})}{p^{\prime}(z_{k})}}{1-\frac{p(z_{k})}{p^{\prime}(%
 z_{k})}\cdot\sum_{j\neq k}\frac{1}{z_{k}-z_{j}}},     where p'(z) is the polynomial derivative of p evaluated in the point z .  The next set of approximations of roots of p(x) is then      z  1   +   w  1    ,  …  ,    z  n   +   w  n          subscript  z  1    subscript  w  1    normal-…     subscript  z  n    subscript  w  n      z_{1}+w_{1},\dots,z_{n}+w_{n}   . One can measure the quality of the current approximation by the values of the polynomial or by the size of the offsets.  Inside the formula of the Aberth method one can find elements of Newton's method and the Weierstrass–(Durand–Kerner) method. Details for an efficient implementation, esp. on the choice of good initial approximations, can be found in Bini (1996). 3  Derivation from Newton's method  The iteration formula is the univariate Newton iteration for the function       F   (  x  )    =    p   (  x  )      ∏    j  =  0   ;   j  ≠  k    n    (   x  -   z  j    )           F  x       p  x     superscript   subscript  product   formulae-sequence    j  0     j  k     n     x   subscript  z  j        F(x)=\frac{p(x)}{\prod_{j=0;\,j\neq k}^{n}(x-z_{j})}     If the values     z  1   ,  …  ,   z  n       subscript  z  1   normal-…   subscript  z  n     z_{1},\dots,z_{n}   are already close to the roots of p ( x ), then the rational function F ( x ) is almost linear with a dominant root close to    z  k     subscript  z  k    z_{k}   and poles at     z  1   ,  …  ,   z   k  -  1    ,   z   k  +  1    ,  …  ,   z  n       subscript  z  1   normal-…   subscript  z    k  1     subscript  z    k  1    normal-…   subscript  z  n     z_{1},\dots,z_{k-1},z_{k+1},\dots,z_{n}   that direct the Newton iteration away from the roots of p(x) that are close to them. That is, the corresponding basins of attraction get rather small, while the root close to    z  k     subscript  z  k    z_{k}   has a wide region of attraction.  The Newton step     F   (  x  )      F  ′    (  x  )          F  x      superscript  F  normal-′   x     \tfrac{F(x)}{F^{\prime}(x)}   in the univariate case is the reciprocal value to the logarithmic derivative         F  ′    (  x  )     F   (  x  )            superscript  F  normal-′   x     F  x     \displaystyle\frac{F^{\prime}(x)}{F(x)}     Thus, the new approximation is computed as        z  k  ′   =    z  k   -    F   (   z  k   )      F  ′    (   z  k   )      =    z  k   -    1      p  ′    (   z  k   )     p   (   z  k   )     -    ∑    j  =  0   ;   j  ≠  k    n    1    z  k   -   z  j           ,         superscript   subscript  z  k   normal-′      subscript  z  k       F   subscript  z  k       superscript  F  normal-′    subscript  z  k              subscript  z  k     1         superscript  p  normal-′    subscript  z  k      p   subscript  z  k       superscript   subscript    formulae-sequence    j  0     j  k     n     1     subscript  z  k    subscript  z  j            z_{k}^{\prime}=z_{k}-\frac{F(z_{k})}{F^{\prime}(z_{k})}=z_{k}-\frac{1}{\frac{p%
 ^{\prime}(z_{k})}{p(z_{k})}-\sum_{j=0;\,j\neq k}^{n}\frac{1}{z_{k}-z_{j}}}\,,   which is the update formula of the Aberth–Ehrlich method.  The updates of the roots may be executed as a simultaneous Jacobi -like iteration where first all new approximations are computed from the old approximations or as a sequential Gauss–Seidel -like iteration that uses each new approximation from the time it is computed.  Literature    See also   MPSolve A package for numerical computation of polynomial roots. Free usage for scientific purpose.   "  Category:Root-finding algorithms     ↩  ↩  ↩     