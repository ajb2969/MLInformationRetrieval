   Schulze method      Schulze method  table.sourceCode, tr.sourceCode, td.lineNumbers, td.sourceCode {
   margin: 0; padding: 0; vertical-align: baseline; border: none; }
 <style>
 table.sourceCode { width: 100%; line-height: 100%; }
 td.lineNumbers { text-align: right; padding-right: 4px; padding-left: 4px; color: #aaaaaa; border-right: 1px solid #aaaaaa; }
 td.sourceCode { padding-left: 5px; }
 code > span.kw { color: #007020; font-weight: bold; } /* Keyword */
 code > span.dt { color: #902000; } /* DataType */
 code > span.dv { color: #40a070; } /* DecVal */
 code > span.bn { color: #40a070; } /* BaseN */
 code > span.fl { color: #40a070; } /* Float */
 code > span.ch { color: #4070a0; } /* Char */
 code > span.st { color: #4070a0; } /* String */
 code > span.co { color: #60a0b0; font-style: italic; } /* Comment */
 code > span.ot { color: #007020; } /* Other */
 code > span.al { color: #ff0000; font-weight: bold; } /* Alert */
 code > span.fu { color: #06287e; } /* Function */
 code > span.er { color: #ff0000; font-weight: bold; } /* Error */
 code > span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */
 code > span.cn { color: #880000; } /* Constant */
 code > span.sc { color: #4070a0; } /* SpecialChar */
 code > span.vs { color: #4070a0; } /* VerbatimString */
 code > span.ss { color: #bb6688; } /* SpecialString */
 code > span.im { } /* Import */
 code > span.va { color: #19177c; } /* Variable */
 code > span.cf { color: #007020; font-weight: bold; } /* ControlFlow */
 code > span.op { color: #666666; } /* Operator */
 code > span.bu { } /* BuiltIn */
 code > span.ex { } /* Extension */
 code > span.pp { color: #bc7a00; } /* Preprocessor */
 code > span.at { color: #7d9029; } /* Attribute */
 code > span.do { color: #ba2121; font-style: italic; } /* Documentation */
 code > span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */
 code > span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */
 code > span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */     The Schulze method is a voting system developed in 1997 by Markus Schulze that selects a single winner using votes that express preferences . The method can also be used to create a sorted list of winners. The Schulze method is also known as Schwartz Sequential Dropping ( SSD ), Cloneproof Schwartz Sequential Dropping ( CSSD ), the Beatpath Method , Beatpath Winner , Path Voting , and Path Winner .  The Schulze method is a Condorcet method , which means the following: if there is a candidate who is preferred over every other candidate in pairwise comparisons, then this candidate will be the winner when the Schulze method is applied.  The output of the Schulze method (defined below) gives an ordering of candidates. Therefore, if several positions are available, the method can be used for this purpose without modification, by letting the k top-ranked candidates win the k available seats. Furthermore, for proportional representation elections, a single transferable vote variant has been proposed.  The Schulze method is used by several organizations including Debian , Ubuntu , Gentoo , Software in the Public Interest , Free Software Foundation Europe , Pirate Party political parties and many others .  Description of the method  Ballot  The input to the Schulze method is the same as for other ranked  single-winner election methods : each voter must furnish an ordered preference list on candidates where ties are allowed ( a strict weak order ). 1  One typical way for voters to specify their preferences on a ballot (see right) is as follows. Each ballot lists all the candidates, and each voter ranks this list in order of preference using numbers: the voter places a '1' beside the most preferred candidate(s), a '2' beside the second-most preferred, and so forth. Each voter may optionally:   give the same preference to more than one candidate. This indicates that this voter is indifferent between these candidates.  use non-consecutive numbers to express preferences. This has no impact on the result of the elections, since only the order in which the candidates are ranked by the voter matters, and not the absolute numbers of the preferences.  keep candidates unranked. When a voter doesn't rank all candidates, then this is interpreted as if this voter (i) strictly prefers all ranked to all unranked candidates, and (ii) is indifferent among all unranked candidates.   Computation  Let    d   [  V  ,  W  ]       d   V  W     d[V,W]   be the number of voters who prefer candidate   V   V   V   to candidate   W   W   W   .  A path from candidate   X   X   X   to candidate   Y   Y   Y   of strength    p   p   p   is a sequence of candidates     C   (  1  )    ,  …  ,   C   (  n  )         C  1   normal-…    C  n     C(1),...,C(n)   with the following properties:        C   (  1  )    =  X        C  1   X    C(1)=X   and     C   (  n  )    =  Y        C  n   Y    C(n)=Y   .  For all     i  =   1  ,  …  ,   (   n  -  1   )     :    d   [   C   (  i  )    ,   C   (   i  +  1   )    ]    >   d   [   C   (   i  +  1   )    ,   C   (  i  )    ]        normal-:    i   1  normal-…    n  1         d     C  i     C    i  1        d     C    i  1      C  i        i=1,...,(n-1):d[C(i),C(i+1)]>d[C(i+1),C(i)]   .  For all     i  =   1  ,  …  ,   (   n  -  1   )     :   d   [   C   (  i  )    ,   C   (   i  +  1   )    ]   ≥  p      normal-:    i   1  normal-…    n  1       d     C  i     C    i  1     ≥  p     i=1,...,(n-1):d[C(i),C(i+1)]\text{≥}p   .   Let    p   [  A  ,  B  ]       p   A  B     p[A,B]   , the strength of the strongest path from candidate   A   A   A   to candidate   B   B   B   , be the maximum value such that there is a path from candidate   A   A   A   to candidate   B   B   B   of that strength. If there is no path from candidate   A   A   A   to candidate   B   B   B   at all, then     p   [  A  ,  B  ]    =  0        p   A  B    0    p[A,B]=0   .  Candidate   D   D   D   is better than candidate   E   E   E   if and only if     p   [  D  ,  E  ]    >   p   [  E  ,  D  ]          p   D  E      p   E  D      p[D,E]>p[E,D]   .  Candidate   D   D   D   is a potential winner if and only if    p   [  D  ,  E  ]   ≥  p   [  E  ,  D  ]       p   D  E   ≥  p   E  D     p[D,E]\text{≥}p[E,D]   for every other candidate   E   E   E   .  It can be proven that     p   [  X  ,  Y  ]    >   p   [  Y  ,  X  ]          p   X  Y      p   Y  X      p[X,Y]>p[Y,X]   and     p   [  Y  ,  Z  ]    >   p   [  Z  ,  Y  ]          p   Y  Z      p   Z  Y      p[Y,Z]>p[Z,Y]   together imply     p   [  X  ,  Z  ]    >   p   [  Z  ,  X  ]          p   X  Z      p   Z  X      p[X,Z]>p[Z,X]   . 2 Therefore, it is guaranteed (1) that the above definition of " better " really defines a transitive relation and (2) that there is always at least one candidate   D   D   D   with    p   [  D  ,  E  ]   ≥  p   [  E  ,  D  ]       p   D  E   ≥  p   E  D     p[D,E]\text{≥}p[E,D]   for every other candidate   E   E   E   .  Example  In the following example 45 voters rank 5 candidates.   5    A  C  B  E  D      A  C  B  E  D    ACBED   (meaning, 5 voters have order of preference    A  >  C  >  B  >  E  >  D        A  C       B       E       D     A>C>B>E>D   )  5    A  D  E  C  B      A  D  E  C  B    ADECB     8    B  E  D  A  C      B  E  D  A  C    BEDAC     3    C  A  B  E  D      C  A  B  E  D    CABED     7    C  A  E  B  D      C  A  E  B  D    CAEBD     2    C  B  A  D  E      C  B  A  D  E    CBADE     7    D  C  E  B  A      D  C  E  B  A    DCEBA     8    E  B  A  D  C      E  B  A  D  C    EBADC      The pairwise preferences have to be computed first. For example, when comparing   A   A   A   and   B   B   B   pairwise, there are     5  +  5  +  3  +  7   =  20        5  5  3  7   20    5+5+3+7=20   voters who prefer   A   A   A   to   B   B   B   , and     8  +  2  +  7  +  8   =  25        8  2  7  8   25    8+2+7+8=25   voters who prefer   B   B   B   to   A   A   A   . So     d   [  A  ,  B  ]    =  20        d   A  B    20    d[A,B]=20   and     d   [  B  ,  A  ]    =  25        d   B  A    25    d[B,A]=25   . The full set of pairwise preferences is:      Matrix of pairwise preferences        d[A,*]     d[B,*]     d[C,*]     d[D,*]     d[E,*]     The cells for d[X, Y] have a light green background if d[X, Y] > d[Y, X], otherwise the background is light red. There is no undisputed winner by only looking at the pairwise differences here.  Now the strongest paths have to be identified. To help visualize the strongest paths, the set of pairwise preferences is depicted in the diagram on the right in the form of a directed graph . An arrow from the node representing a candidate X to the one representing a candidate Y is labelled with d[X, Y]. To avoid cluttering the diagram, an arrow has only been drawn from X to Y when d[X, Y] > d[Y, X] (i.e. the table cells with light green background), omitting the one in the opposite direction (the table cells with light red background).  One example of computing the strongest path strength is p[B, D] = 33: the strongest path from B to D is the direct path (B, D) which has strength 33. But when computing p[A, C], the strongest path from A to C is not the direct path (A, C) of strength 26, rather the strongest path is the indirect path (A, D, C) which has strength min(30, 28) = 28.The strength of a path is the strength of its weakest link.  For each pair of candidates X and Y, the following table shows the strongest path from candidate X to candidate Y in red, with the weakest link underlined .      Strongest paths        from A ...     from B ...     from C ...     from D ...     from E ...            Strengths of the strongest paths        p[A,*]     p[B,*]     p[C,*]     p[D,*]     p[E,*]     Now the output of the Schulze method can be determined. For example, when comparing A and B, since 28 = p[A,B] > p[B,A] = 25, for the Schulze method candidate A is better than candidate B. Another example is that 31 = p[E,D] > p[D,E] = 24, so candidate E is better than candidate D. Continuing in this way, the result is that the Schulze ranking is E > A > C > B > D, and E wins. In other words, E wins since p[E,X] ≥ p[X,E] for every other candidate X.  Implementation  The only difficult step in implementing the Schulze method is computing the strongest path strengths. However, this is a well-known problem in graph theory sometimes called the widest path problem . One simple way to compute the strengths therefore is a variant of the Floyd–Warshall algorithm . The following pseudocode illustrates the algorithm.  1
 2
 3
 4
 5
 6
 7
 8
 9
 10
 11
 12
 13
 14
 15
 16
 17 # Input: d[i,j], the number of voters who prefer candidate i to candidate j.
 # Output: p[i,j], the strength of the strongest path from candidate i to candidate j.
 
 for i from 1 to C
    for j from 1 to C
       if (i ≠ j) then
          if (d[i,j] > d[j,i]) then
             p[i,j] := d[i,j]
          else
             p[i,j] := 0
 
 for i from 1 to C
    for j from 1 to C
       if (i ≠ j) then
          for k from 1 to C
             if (i ≠ k and j ≠ k) then
                p[j,k] := max ( p[j,k], min ( p[j,i], p[i,k] ) )  This algorithm is efficient , and has running time proportional to C 3 where C is the number of candidates. (This does not account for the running time of computing the d[*,*] values, which can be implemented in a straightforward way to take time proportional to C 2 times the number of voters.)  Ties and alternative implementations  When allowing users to have ties in their preferences, the outcome of the Schulze method naturally depends on how these ties are interpreted in defining d[*,*]. Two natural choices are that d[A, B] represents either the number of voters who strictly prefer A to B (A>B), or the margin of (voters with A>B) minus (voters with B>A). But no matter how the d s are defined, the Schulze ranking has no cycles, and assuming the d s are unique it has no ties. 3  Although ties in the Schulze ranking are unlikely, 4 they are possible. Schulze's original paper 5 proposed breaking ties in accordance with a voter selected at random, and iterating as needed.  An alternative, slower, way to describe the winner of the Schulze method is the following procedure:   draw a complete directed graph with all candidates, and all possible edges between candidates  iteratively [a] delete all candidates not in the Schwartz set (i.e. any candidate which cannot reach all others) and [b] delete the weakest link  the winner is the last non-deleted candidate.   Satisfied and failed criteria  Satisfied criteria  The Schulze method satisfies the following criteria:   Unrestricted domain  Non-imposition ( a.k.a.  citizen sovereignty )  Non-dictatorship  Pareto criterion 6  Monotonicity criterion 7  Majority criterion  Majority loser criterion  Condorcet criterion  Condorcet loser criterion  Schwartz criterion  Smith criterion 8  Independence of Smith-dominated alternatives 9  Mutual majority criterion  Independence of clones 10  Reversal symmetry 11  Mono-append 12  Mono-add-plump 13  Resolvability criterion 14  Polynomial runtime 15  prudence 16  MinMax sets 17  Woodall's plurality criterion if winning votes are used for d[X,Y]  Symmetric-completion 18 if margins are used for d[X,Y]   Failed criteria  Since the Schulze method satisfies the Condorcet criterion , it automatically fails the following criteria:   Participation 19  Consistency  Invulnerability to compromising  Invulnerability to burying  Later-no-harm   Likewise, since the Schulze method is not a dictatorship and agrees with unanimous votes, Arrow's Theorem implies it fails the criterion   Independence of irrelevant alternatives   The Schulze method also fails   Peyton Young 's criterion Local Independence of Irrelevant Alternatives .   Comparison table  The following table compares the Schulze method with other preferential  single-winner election methods :  The main difference between the Schulze method and the ranked pairs method can be seen in this example:  Suppose the MinMax score of a set X of candidates is the strength of the strongest pairwise win of a candidate A ∉ X against a candidate B ∈ X . Then the Schulze method, but not Ranked Pairs, guarantees that the winner is always a candidate of the set with minimum MinMax score. 20 So, in some sense, the Schulze method minimizes the largest majority that has to be reversed when determining the winner.  On the other hand, Ranked Pairs minimizes the largest majority that has to be reversed to determine the order of finish, in the minlexmax sense. 21 In other words, when Ranked Pairs and the Schulze method produce different orders of finish, for the majorities on which the two orders of finish disagree, the Schulze order reverses a larger majority than the Ranked Pairs order.  History  The Schulze method was developed by Markus Schulze in 1997. It was first discussed in public mailing lists in 1997–1998 See:   Markus Schulze, Condorect sub-cycle rule , October 1997  Mike Ossipoff, Party List P.S. , July 1998  Markus Schulze, Tiebreakers, Subcycle Rules , August 1998  Markus Schulze, Maybe Schulze is decisive , August 1998  Norman Petry, Schulze Method - Simpler Definition , September 1998  Markus Schulze, Schulze Method , November 1998 and in 2000. See:  Anthony Towns, Disambiguation of 4.1.5 , November 2000  Norman Petry, Constitutional voting, definition of cumulative preference , December 2000 Subsequently, Schulze method users included Software in the Public Interest (2003), 22  Debian (2003), See:  Constitutional Amendment: Condorcet/Clone Proof SSD Voting Method , June 2003  Constitution for the Debian Project , appendix A6  Debian Voting Information  Gentoo (2005), See:  Gentoo Foundation Charter  Aron Griffis, 2005 Gentoo Trustees Election Results , May 2005  Lars Weiler, Gentoo Weekly Newsletter 23 May 2005  Daniel Drake, Gentoo metastructure reform poll is open , June 2005  Grant Goodyear, Results now more official , September 2006  2007 Gentoo Council Election Results , September 2007  2008 Gentoo Council Election Results , June 2008  2008 Gentoo Council Election Results , November 2008  2009 Gentoo Council Election Results , June 2009  2009 Gentoo Council Election Results , December 2009  2010 Gentoo Council Election Results , June 2010 TopCoder (2005),   [ https://community.topcoder.com/tc?module=Static&d1; ;=tournaments&d2;=tccc07&d3;=blog&d4;=description 2007 TopCoder Collegiate Challenge], September 2007 Wikimedia (2008), See:   Jesse Plamondon-Willard, Board election to use preference voting , May 2008  Mark Ryan, 2008 Wikimedia Board Election results , June 2008  2008 Board Elections , June 2008  2009 Board Elections , August 2009 KDE (2008), 23 the Free Software Foundation Europe (2008), See:  article 6 section 3 of the constitution  Fellowship vote for General Assembly seats , March 2009  And the winner of the election for FSFE's Fellowship GA seat is ... , June 2009 the Pirate Party of Sweden (2009), See:  Inför primärvalen , October 2009  Dags att kandidera till riksdagen , October 2009  Råresultat primärvalet , January 2010 and the Pirate Party of Germany (2010). 24 In the French Wikipedia, the Schulze method was one of two multi-candidate methods approved by a majority in 2005, 25 and it has been used several times. 26   In 2011, Schulze published the method in the academic journal Social Choice and Welfare . 27  Users  (Figure)  sample ballot for Wikimedia's Board of Trustees elections   The Schulze method is not currently used in parliamentary elections. However, it has been used for parliamentary primaries in the Swedish Pirate Party . It is also starting to receive support in other public organizations. Organizations which currently use the Schulze method are:   Alternative for Germany 28  Annodex Association 29  Associated Student Government at Northwestern University 30  Associated Student Government at University of Freiburg  31  Berufsverband der Kinder- und Jugendärzte (BVKJ) 32  BoardGameGeek See:  Important notice for Golden Geek voters , September 2007  Golden Geek Awards 2008 - Nominations Open , August 2008  Golden Geek Awards 2009 - Nominations Open , August 2009  Golden Geek Awards 2010 - Nominations Open , September 2010  Golden Geek Awards 2011 - Nominations Open , September 2011  Cassandra 33  Codex Alpe Adria 34  Collective Agency 35  Computer Science Departmental Society for York University (HackSoc) 36  County Highpointers 37  Debian 38  EuroBillTracker See:  [ http://forum.eurobilltracker.eu/viewtopic.php?t=4920&highlight; ;=condorcet+beatpath+ssd Candidate cities for EBTM05], December 2004  [ http://forum.eurobilltracker.eu/viewtopic.php?t=4921&highlight; ;=condorcet Meeting location preferences], December 2004  [ http://forum.eurobilltracker.eu/viewtopic.php?t=9353&highlight; ;=condorcet+beatpath Date for EBTM07 Berlin], January 2007  [ http://forum.eurobilltracker.eu/viewtopic.php?t=10564&highlight; ;=condorcet+beatpath Vote the date of the Summer EBTM08 in Ljubljana], January 2008  [ http://forum.eurobilltracker.com/viewtopic.php?f=26&t; ;=17919&start;=15#p714947 New Logo for EBT], August 2009  European Democratic Education Community (EUDEC) 39  FFmpeg 40  Five Star Movement of Campobasso , 41  Fondi , 42  Monte Compatri , 43  Montemurlo , 44  Pescara , 45 and San Cesareo 46  Flemish Student Society of Leuven 47  Free Geek 48  Free Hardware Foundation of Italy See:  Eletto il nuovo Consiglio nella Free Hardware Foundation , June 2008  Poll Results , June 2008  Free Software Foundation Europe (FSFE) 49  Gentoo Foundation 50  GNU Privacy Guard (GnuPG) 51  Gothenburg Hacker Space (GHS) 52  Graduate Student Organization at the State University of New York: Computer Science (GSOCS) 53  Haskell 54  Hillegass Parker House 55  Ithaca Generator 56  Kanawha Valley Scrabble Club 57  KDE e.V. 58  Kingman Hall See:  Ka-Ping Yee, Condorcet elections , March 2005  Ka-Ping Yee, Kingman adopts Condorcet voting , April 2005  Knight Foundation 59  Kubuntu 60  Kumoricon See:  Mascot 2007 contest , July 2006  Mascot 2008 and cover 2007 contests , May 2007  Mascot 2009 and program cover 2008 contests , April 2008  Mascot 2010 and program cover 2009 contests , May 2009  Mascot 2011 and book cover 2010 contests , May 2010  Mascot 2012 and book cover 2011 contests , May 2011  League of Professional System Administrators (LOPSA) 61  LiquidFeedback 62  Lumiera/Cinelerra 63  Madisonium 64  Mathematical Knowledge Management Interest Group (MKM-IG) The MKM-IG uses Condorcet with dual dropping . That means: The Schulze ranking and the ranked pairs ranking are calculated and the winner is the top-ranked candidate of that of these two rankings that has the better Kemeny score. See:  MKM-IG Charter  Michael Kohlhase , MKM-IG Trustees Election Details & Ballot , November 2004  Andrew A. Adams, MKM-IG Trustees Election 2005 , December 2005  Lionel Elie Mamane, Elections 2007: Ballot , August 2007  Metalab 65  Music Television (MTV) 66  Neo See:  Wahlen zum Neo-2-Freeze: Formalitäten , February 2010  Hinweise zur Stimmabgabe , March 2010  Ergebnisse , March 2010  New Liberals 67  Noisebridge 68  North Shore Cyclists (NSC) 69  OpenEmbedded 70  OpenStack See:  [ http://www.cs.cornell.edu/w8/~andru/cgi-perl/civs/results.pl?id=E_f35052f9f6d58f36&rkey; ;=4603fbf32e182e6c 2010 OpenStack Community Election], November 2010  OpenStack Governance Elections Spring 2012 , February 2012  Pirate Party Australia 71  Pirate Party of Austria 72  Pirate Party of Belgium 73  Pirate Party of Brazil  Pirate Party of Germany 74  Pirate Party of Iceland 75  Pirate Party of Italy 76  Pirate Party of the Netherlands 77  Pirate Party of New Zealand 78  Pirate Party of Sweden 79  Pirate Party of Switzerland 80  Pirate Party of the United States 81  Pittsburgh Ultimate 82  Platform Brandenburg  83  RLLMUK 84  RPMrepo 85  Sender Policy Framework (SPF) See:  SPF Council Election Procedures  2006 SPF Council Election , January 2006  2007 SPF Council Election , January 2007  Software in the Public Interest (SPI) 86  Squeak 87  Students for Free Culture See:  Bylaws of the Students for Free Culture , article V, section 1.1.1  Free Culture Student Board Elected Using Selectricity , February 2008  Sugar Labs 88  SustainableUnion 89  Sverok 90  Technology House 91  TestPAC 92  TopCoder 93  Ubuntu 94  University of British Columbia Math Club 95  Vidya Gaem Awards 96  Wikipedia in French , 97  Hebrew , 98  Hungarian , 99 and Russian . 100   Notes  External links    Condorcet Computations by Johannes Grabmeier  Spieltheorie by Bernhard Nebel  Accurate Democracy by Rob Loring  Christoph Börgers (2009), [ http://books.google.com/books?id=dccBaphP1G4C&pg; ;=PA37 Mathematics of Social Choice: Voting, Compensation, and Division] , SIAM, ISBN 0-89871-695-0  Nicolaus Tideman (2006), [ http://books.google.com/books?id=RN5q_LuByUoC&pg; ;=PA228 Collective Decisions and Voting: The Potential for Public Choice] , Burlington: Ashgate, ISBN 0-7546-4717-X  preftools by the Public Software Group  Condorcet PHP  PHP  library supporting multiple Condorcet methods, including that of Schulze.  Arizonans for Condorcet Ranked Voting   "  Category:Articles with example pseudocode  Category:Debian  Category:Electoral reform  Category:Electoral systems  Category:Monotonic Condorcet methods  Category:Single-winner electoral systems  Category:Voting systems        Under reasonable probabilistic assumptions when the number of voters is much larger than the number of candidates ↩         Douglas R. Woodall, Properties of Preferential Election Rules , Voting Matters , issue 3, pages 8-15, December 1994 ↩          Tideman, T. Nicolaus, "Independence of clones as a criterion for voting rules," Social Choice and Welfare vol 4 #3 (1987), pp 185-206. ↩  Process for adding new board members , January 2003 ↩  section 3.4.1 of the Rules of Procedures for Online Voting ↩  11 of the 16 regional sections and the federal section of the Pirate Party of Germany are using LiquidFeedback for unbinding internal opinion polls. In 2010/2011, the Pirate Parties of Neukölln ( link ), Mitte ( link ), Steglitz-Zehlendorf ( link ), Lichtenberg ( link ), and Tempelhof-Schöneberg ( link ) adopted the Schulze method for its primaries. Furthermore, the Pirate Party of Berlin (in 2011) ( link ) and the Pirate Party of Regensburg (in 2012) ( link ) adopted this method for their primaries. ↩  Choix dans les votes ↩  :fr:Spécial:Pages liées/Méthode Schulze ↩  Markus Schulze, A new monotonic, clone-independent, reversal symmetric, and condorcet-consistent single-winner election method , Social Choice and Welfare, volume 36, number 2, page 267–303, 2011. Preliminary version in Voting Matters , 17:9-19, 2003. ↩  §12(4), §12(15), and §14(3) of the bylaws , April 2013 ↩  Election of the Annodex Association committee for 2007 , February 2007 ↩  Ajith, Van Atta win ASG election , April 2013 ↩  §6 and §7 of its bylaws , May 2014 ↩  §9a of the bylaws , October 2013 ↩  Project Logo , October 2009 ↩  ↩  Civics Meeting Minutes , March 2012 ↩  Report on HackSoc Elections , December 2008 ↩  Adam Helman, Family Affair Voting Scheme - Schulze Method ↩   ↩  Democratic election of the server admins , July 2010 ↩  Campobasso. Comunali, scattano le primarie a 5 Stelle , February 2014 ↩  Fondi, il punto sui candidati a sindaco. Certezze, novità e colpi di scena , March 2015 ↩  article 25(5) of the bylaws , October 2013 ↩  2° Step Comunarie di Montemurlo , November 2013 ↩  article 12 of the bylaws , January 2015 ↩  Ridefinizione della lista di San Cesareo con Metodo Schulze , February 2014 ↩  article 51 of the statutory rules ↩  Voters Guide , September 2011 ↩    GnuPG Logo Vote , November 2006 ↩  §14 of the bylaws ↩  ↩  [ http://www.cs.cornell.edu/w8/~andru/cgi-perl/civs/results.pl?num_winners=1&id; ;=E_d21b0256a4fd5ed7&algorithm;=beatpath Haskell Logo Competition], March 2009 ↩  ↩  article VI section 10 of the bylaws , November 2012 ↩  A club by any other name ... , April 2009 ↩   Knight Foundation awards $5000 to best created-on-the-spot projects , June 2009 ↩  Kubuntu Council 2013 , May 2013 ↩  article 8.3 of the bylaws ↩  ↩  Lumiera Logo Contest , January 2009 ↩  ↩  ↩  Benjamin Mako Hill , Voting Machinery for the Masses , July 2008 ↩  bylaws , September 2014 ↩  ↩  NSC Jersey election , NSC Jersey vote , September 2007 ↩  ↩  National Congress 2011 Results , November 2011 ↩  §6(10) of the bylaws ↩  The Belgian Pirate Party Announces Top Candidates for the European Elections , January 2014 ↩   article 7.5 of the bylaws ↩  Rules adopted on 18 December 2011 ↩  Verslag ledenraadpleging 4 januari , January 2015 ↩  ↩   Piratenversammlung der Piratenpartei Schweiz , September 2010 ↩  Article IV Section 3 of the bylaws , April 2013 ↩  2006 Community for Pittsburgh Ultimate Board Election , September 2006 ↩  §16(4) of the bylaws , November 2014 ↩  Committee Elections , April 2012 ↩  LogoVoting , December 2007 ↩   [ http://www.cs.cornell.edu/w8/~andru/cgi-perl/civs/results.pl?num_winners=7&id; ;=E_716d8c257e6cf36b&algorithm;=beatpath Squeak Oversight Board Election 2010], March 2010 ↩  Election status update , September 2009 ↩  §10 III of its bylaws , June 2013 ↩  Minutes of the 2010 Annual Sverok Meeting , November 2010 ↩  constitution , December 2010 ↩  article VI section 6 of the bylaws ↩   Ubuntu IRC Council Position , May 2012 ↩  See this mail . ↩  ↩   See e.g. here [ http://he.wikipedia.org/w/index.php?title=ויקיפדיה:פרלמנט&oldid; ;=7014412] (May 2009), here [ http://he.wikipedia.org/w/index.php?title=ויקיפדיה:סדנה_לגרפיקה/סמליל&oldid; ;=7388447] (August 2009), and here [ http://he.wikipedia.org/w/index.php?title=ויקיפדיה:סדנה_לגרפיקה/100,000/הצבעה&oldid; ;=8057743] (December 2009). ↩  See here and here . ↩  ↩    