   ELEMENTARY      ELEMENTARY   In computational complexity theory , the complexity class  ELEMENTARY of elementary recursive functions is the union of the classes     ELEMENTARY   ELEMENTARY   \displaystyle\mathrm{ELEMENTARY}     The name was coined by László Kalmár , in the context of recursive functions and undecidability ; most problems in it are far from elementary. Some natural recursive problems lie outside ELEMENTARY, and are thus NONELEMENTARY . Most notably, there are primitive recursive problems that are not in ELEMENTARY. We know   LOWER-ELEMENTARY   ⊊     \subsetneq    EXPTIME    ⊊     \subsetneq   ELEMENTARY   ⊊     \subsetneq    PR    ⊊     \subsetneq    R    Whereas ELEMENTARY contains bounded applications of exponentiation (for example,    O   (   2   2  n    )       O   superscript  2   superscript  2  n      O(2^{2^{n}})   ), PR allows more general hyper operators (for example, tetration ) which are not contained in ELEMENTARY.  Definition  The definitions of elementary recursive functions are the same as for primitive recursive functions , except that primitive recursion is replaced by bounded summation and bounded product. All functions work over the natural numbers. The basic functions, all of them elementary recursive, are:   Zero function . Returns zero: f (x) = 0.  Successor function : f ( x ) = x + 1. Often this is denoted by S , as in S ( x ). Via repeated application of a successor function, one can achieve addition.  Projection functions : these are used for ignoring arguments. For example, f ( a , b ) = a is a projection function.  Subtraction function : f ( x , y ) = x − y if y < x , or 0 if y ≥ x . This function is used to define conditionals and iteration.   From these basic functions, we can build other elementary recursive functions.   Composition : applying values from some elementary recursive function as an argument to another elementary recursive function. In f ( x 1 , ..., x n ) = h ( g 1 ( x 1 , ..., x n ), ..., g m ( x 1 , ..., x n )) is elementary recursive if h is elementary recursive and each g i is elementary recursive.  Bounded summation      f   (  m  ,   x  1   ,  …  ,   x  n   )    =    ∑   i  =  0   m    g   (  i  ,   x  1   ,  …  ,   x  n   )           f   m   subscript  x  1   normal-…   subscript  x  n       superscript   subscript     i  0    m     g   i   subscript  x  1   normal-…   subscript  x  n        f(m,x_{1},\ldots,x_{n})=\sum\limits_{i=0}^{m}g(i,x_{1},\ldots,x_{n})   is elementary recursive if g is elementary recursive.  Bounded product      f   (  m  ,   x  1   ,  …  ,   x  n   )    =    ∏   i  =  0   m    g   (  i  ,   x  1   ,  …  ,   x  n   )           f   m   subscript  x  1   normal-…   subscript  x  n       superscript   subscript  product    i  0    m     g   i   subscript  x  1   normal-…   subscript  x  n        f(m,x_{1},\ldots,x_{n})=\prod\limits_{i=0}^{m}g(i,x_{1},\ldots,x_{n})   is elementary recursive if g is elementary recursive.   Lower elementary recursive functions  Lower elementary recursive functions follow the definitions as above, except that bounded product is disallowed. That is, a lower elementary recursive function must be a zero, successor, or projection function, a composition of other lower elementary recursive functions, or the bounded sum of another lower elementary recursive function.  Whereas elementary recursive functions have potentially more than exponential growth, the lower elementary recursive functions have polynomial growth.  Basis for ELEMENTARY  The class of elementary functions coincides with the closure with respect to composition of the projections and one of the following function sets    {      n  +  1   ,   n      -  .    m   ,    ⌊   n  /  m   ⌋   ,   n  m     }      formulae-sequence    superscript   normal-.      n  1   n   m        n  m     superscript  n  m       \{n+1,n\,\stackrel{.}{-}\,m,\lfloor n/m\rfloor,n^{m}\}   ,    {      n  +  m   ,   n      -  .    m   ,    ⌊   n  /  m   ⌋   ,   2  n     }      formulae-sequence    superscript   normal-.      n  m   n   m        n  m     superscript  2  n       \{n+m,n\,\stackrel{.}{-}\,m,\lfloor n/m\rfloor,2^{n}\}   ,    {   n  +  m   ,   n  2   ,    n   mod  m   ,   2  n   }       n  m    superscript  n  2    modulo  n  m    superscript  2  n     \{n+m,n^{2},n\,\bmod\,m,2^{n}\}   , where     n     -  .    m  =   max   {   n  -  m   ,  0  }          superscript   normal-.   n  m           n  m   0      n\,\stackrel{.}{-}\,m=\max\{n-m,0\}   is the subtraction function defined above. 1 2  Descriptive characterization  In descriptive complexity , ELEMENTARY is equal to the class of high order queries . 3 This means that every language in the ELEMENTARY complexity class can be written as a high order formula that is true only for the elements on the language. More precisely,     NTIME   (   2   2   ⋯   2   O   (  n  )        )    =   ∃   H   O  i           NTIME   superscript  2   superscript  2    normal-⋯   superscript  2    O  n            H   superscript  O  i       \mathrm{NTIME}(2^{2^{\cdots{2^{O(n)}}}})=\exists{}HO^{i}   , where   ⋯   normal-⋯   \cdots   indicates a tower of   i   i   i   exponentiations and    ∃   H   O  i          H   superscript  O  i      \exists{}HO^{i}   is the class of queries that begin with existential quantifiers of   i   i   i   th order and then a formula of ( i − 1)th order.  See also   Elementary function arithmetic  Primitive recursive function  Grzegorczyk hierarchy  EXPTIME   References   Rose, H.E., "Subrecursion: Functions and hierarchies", Oxford University Press, New York, USA, 1984. ISBN 0-19-853189-3   "  Category:Complexity classes  Category:Computability theory     Mazzanti, S., "Plain Bases for Classes of Primitive Recursive Functions", Mathematical Logic Quarterly, 48 (2002) 93–104 ↩  "Superpositions of elementary arithmetic functions", S. S. Marchenkov, Journal of Applied and Industrial Mathematics , September 2007, Volume 1, Issue 3, pp 351-360, . ↩  ↩     