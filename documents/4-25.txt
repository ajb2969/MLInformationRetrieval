


Continuously variable slope delta modulation




Continuously variable slope delta modulation

Continuously variable slope delta modulation (CVSD or CVSDM) is a voice coding method. It is a delta modulation with variable step size (i.e., special case of adaptive delta modulation), first proposed by Greefkes and Riemens in 1970.
CVSD encodes at 1 bit per sample, so that audio sampled at 16 kHz is encoded at 16 kbit/s.
The encoder maintains a reference sample and a step size. Each input sample is compared to the reference sample. If the input sample is larger, the encoder emits a 1 bit and adds the step size to the reference sample. If the input sample is smaller, the encoder emits a 0 bit and subtracts the step size from the reference sample. The encoder also keeps the previous N bits of output (N = 3 or N = 4 are very common) to determine adjustments to the step size; if the previous N bits are all 1s or 0s, the step size is increased. Otherwise, the step size is decreased (usually in an exponential manner, with 
 
 
 
  being in the range of 5 ms). The step size is adjusted for every input sample processed.
To allow for bit errors to fade out and to allow (re)synchronization to an ongoing bitstream, the output register (which keeps the reference sample) is normally realized as a leaky integrator with a time constant (
 
 
 
 ) of about 1 ms.
The decoder reverses this process, starting with the reference sample, and adding or subtracting the step size according to the bit stream. The sequence of adjusted reference samples are the reconstructed waveform, and the step size is adjusted according to the same all-1s-or-0s logic as in the encoder.
Adaptation of step size allows one to avoid slope overload (step of quantization increases when the signal rapidly changes) and decreases granular noise when the signal is constant (decrease of step of quantisation).
CVSD is sometimes called a compromise between simplicity, low bitrate, and quality. Common bitrates are 9.6–128 kbit/s.
Like other delta-modulation techniques, the output of the decoder does not exactly match the original input to the encoder.
Applications
12 kbit/s CVSD is used by Motorola's SECURENET line of digitally encrypted two-way radio products.
16 and 32 kbit/s CVSD were used by military TRI-TAC digital telephones (DNVT, DSVT) for use in deployed areas to provide voice recognition quality audio. 16 kbit/s rates were typically used by US Army forces to conserve bandwidth over tactical links. 32 kbit/s rates were typically used by US Air Force forces for improved voice quality.
64 kbit/s CVSD is one of the options to encode voice signals in telephony-related Bluetooth service profiles; e.g., between mobile phones and wireless headsets. The other options are PCM with logarithmic a-law or μ-law quantization.
Numerous arcade games, such as Sinistar and Smash TV, play pre-recorded speech through an HC-55516 CVSD decoder.12
SBS application 24 kbit/s delta modulation
Delta modulation was used by Satellite Business Systems or SBS for its voice ports to provide long-distance phone service to large domestic corporations with a significant inter-corporation communications need (such as IBM). This system was in service throughout the 1980s. The voice ports used digitally implemented 24 kbit/s delta modulation with voice activity compression (VAC) and echo suppressors to control the half second echo path through the satellite. Listening tests were conducted to verify that the 24 kbit/s Delta Modulator achieved "full voice quality" with no discernible degradation as compared to a high quality phone line or the standard 64 kbit/s µ-law companded PCM. This provided an 8:3 improvement in satellite channel capacity. IBM developed the Satellite Communications Controller and the voice port functions.
The original proposal in 1974 used a state-of-the-art 24 kbit/s Delta Modulator with a single integrator and a Shindler compander modified for gain error recovery. This proved to have less than full phone line speech quality. In 1977, one engineer with two assistants in the IBM Research Triangle Park, NC laboratory was assigned to improve the quality.
The final implementation replaced the integrator with a predictor implemented with a two-pole complex-pair low-pass filter designed to approximate the long-term average speech spectrum. The theory was that ideally the integrator should be a predictor designed to match the signal spectrum. A nearly perfect Shindler compander replaced the modified version. It was found the modified compander resulted in a less than perfect step size at most signal levels and the fast gain error recovery increased the noise as determined by actual listening tests as compared to simple signal to noise measurements. The final compander achieved a very mild gain error recovery due to the natural truncation rounding error caused by 12-bit arithmetic.
The complete function of delta modulation, VAC, and echo control for 6 ports was implemented in a single digital integrated circuit chip with 12-bit arithmetic. A single DAC was shared by all 6 ports providing voltage compare functions for the modulators and feeding sample and hold circuits for the demodulator outputs. A single card held the chip, DAC, and all the analog circuits for the phone line interface including transformers.
References

J. A. Greefkes and K. Riemens, "Code Modulation with Digitally Controlled Companding for Speech Transmission," Philips Tech. Rev., pp. 335-353, 1970.
N.S. Jayant, "Digital coding of speech waveforms: PCM, DPCM, and DM quantizers," Proc. IEEE, vol. 62, no. 5, pp. 61 1-632, May 1974.
R. Steele, Delta Modulation Systems, Pentech Press, London, England, 1975.
N. S. Jayant and P. Noll, Digital Coding of Waveforms: Principles and Applications to Speech and Video, Prentice-Hall, Englewood Cliffs, N. J., 1984.
A description of the algorithm, plus speech samples
Specification of the Bluetooth System 2.0 + EDR, Core System Package, Part B "Baseband Specification", Section 9 "Audio", November 2004

"
Category:Audio codecs Category:Speech codecs



MAME 0.36b7 changelog↩
Williams/Midway Y-Unit games↩




