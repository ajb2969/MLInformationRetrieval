   Elliptic curve cryptography      Elliptic curve cryptography   Elliptic curve cryptography ( ECC ) is an approach to public-key cryptography based on the algebraic structure of elliptic curves over finite fields . One of the main benefits in comparison with non-ECC cryptography (with plain Galois fields as a basis) is the same level of security provided by keys of smaller size.  Elliptic curves are applicable for encryption , digital signatures , pseudo-random generators and other tasks. They are also used in several integer factorization  algorithms that have applications in cryptography, such as Lenstra elliptic curve factorization .  Rationale  Public-key cryptography is based on the intractability of certain mathematical problems . Early public-key systems are secure assuming that it is difficult to factor a large integer composed of two or more large prime factors. For elliptic-curve-based protocols, it is assumed that finding the discrete logarithm of a random elliptic curve element with respect to a publicly known base point is infeasible: this is the "elliptic curve discrete logarithm problem" or ECDLP. The entire security of ECC depends on the ability to compute a point multiplication and the inability to compute the multiplicand given the original and product points. The size of the elliptic curve determines the difficulty of the problem.  The primary benefit promised by ECC is a smaller key size, reducing storage and transmission requirements, i.e. that an elliptic curve group could provide the same level of security afforded by an RSA-based system with a large modulus and correspondingly larger key: for example, a 256-bit ECC public key should provide comparable security to a 3072-bit RSA public key.  History  The use of elliptic curves in cryptography was suggested independently by Neal Koblitz 1 and Victor S. Miller 2 in 1985. Elliptic curve cryptography algorithms entered wide use in 2004 to 2005.  Theory  For current cryptographic purposes, an elliptic curve is a plane curve over a finite field (rather than the real numbers) which consists of the points satisfying the equation        y  2   =    x  3   +   a  x   +  b    ,       superscript  y  2      superscript  x  3     a  x   b     y^{2}=x^{3}+ax+b,\,     along with a distinguished point at infinity , denoted ‚àû. (The coordinates here are to be chosen from a fixed finite field of characteristic not equal to 2 or 3, or the curve equation will be somewhat more complicated.)  This set together with the group operation of elliptic curves is an Abelian group , with the point at infinity as identity element. The structure of the group is inherited from the divisor group of the underlying algebraic variety . As is the case for other popular public key cryptosystems, no mathematical proof of security has been published for ECC .  The U.S. National Institute of Standards and Technology (NIST) has endorsed ECC in its Suite B set of recommended algorithms, specifically Elliptic Curve Diffie‚ÄìHellman (ECDH) for key exchange and Elliptic Curve Digital Signature Algorithm (ECDSA) for digital signature. The U.S. National Security Agency (NSA) allows their use for protecting information classified up to top secret with 384-bit keys. 3  While the RSA patent expired in 2000, there may be patents in force covering certain aspects of ECC technology , though some (including RSA Laboratories 4 and Daniel J. Bernstein 5 ) argue that the Federal elliptic curve digital signature standard (ECDSA; NIST FIPS 186-3) and certain practical ECC-based key exchange schemes (including ECDH) can be implemented without infringing them.  Cryptographic schemes  Several discrete logarithm -based protocols have been adapted to elliptic curves, replacing the group     (   ‚Ñ§  p   )   √ó     superscript   subscript  ‚Ñ§  p      (\mathbb{Z}_{p})^{\times}   with an elliptic curve:   The elliptic curve Diffie‚ÄìHellman (ECDH) key agreement scheme is based on the Diffie‚ÄìHellman scheme,  The Elliptic Curve Integrated Encryption Scheme (ECIES), also known as Elliptic Curve Augmented Encryption Scheme or simply the Elliptic Curve Encryption Scheme,  The Elliptic Curve Digital Signature Algorithm (ECDSA) is based on the Digital Signature Algorithm ,  The Edwards-curve Digital Signature Algorithm (EdDSA) is based on Schnorr signature and uses twisted Edwards curves ,  The ECMQV key agreement scheme is based on the MQV key agreement scheme,  The ECQV implicit certificate scheme.   At the RSA Conference 2005, the National Security Agency (NSA) announced Suite B which exclusively uses ECC for digital signature generation and key exchange. The suite is intended to protect both classified and unclassified national security systems and information. 6  Recently, a large number of cryptographic primitives based on bilinear mappings on various elliptic curve groups, such as the Weil and Tate pairings , have been introduced. Schemes based on these primitives provide efficient identity-based encryption as well as pairing-based signatures, signcryption , key agreement , and proxy re-encryption .  Implementation  Some common implementation considerations include:  Domain parameters  To use ECC all parties must agree on all the elements defining the elliptic curve, that is, the domain parameters of the scheme. The field is defined by p in the prime case and the pair of m and f in the binary case. The elliptic curve is defined by the constants a and b used in its defining equation. Finally, the cyclic subgroup is defined by its generator (a.k.a. base point ) G . For cryptographic application the order of G , that is the smallest positive number n such that     n  G   =  ‚àû        n  G      nG=\infty   , is normally prime. Since n is the size of a subgroup of    E   (   ùîΩ  p   )       E   subscript  ùîΩ  p     E(\mathbb{F}_{p})   it follows from Lagrange's theorem that the number    h  =    1  n    |   E   (   ùîΩ  p   )    |        h      1  n       E   subscript  ùîΩ  p        h=\frac{1}{n}|E(\mathbb{F}_{p})|   is an integer. In cryptographic applications this number h , called the cofactor , must be small (    h  ‚â§  4      h  4    h\leq 4   ) and, preferably,    h  =  1      h  1    h=1   . Let us summarize: in the prime case the domain parameters are    (  p  ,  a  ,  b  ,  G  ,  n  ,  h  )     p  a  b  G  n  h    (p,a,b,G,n,h)   and in the binary case they are    (  m  ,  f  ,  a  ,  b  ,  G  ,  n  ,  h  )     m  f  a  b  G  n  h    (m,f,a,b,G,n,h)   .  Unless there is an assurance that domain parameters were generated by a party trusted with respect to their use, the domain parameters must be validated before use.  The generation of domain parameters is not usually done by each participant since this involves computing the number of points on a curve which is time-consuming and troublesome to implement. As a result several standard bodies published domain parameters of elliptic curves for several common field sizes. Such domain parameters are commonly known as "standard curves" or "named curves"; a named curve can be referenced either by name or by the unique object identifier defined in the standard documents:   NIST, Recommended Elliptic Curves for Government Use  SECG, SEC 2: Recommended Elliptic Curve Domain Parameters  ECC Brainpool, ECC Brainpool Standard Curves and Curve Generation   SECG test vectors are also available. 7 NIST has approved many SECG curves, so there is a significant overlap between the specifications published by NIST and SECG. EC domain parameters may be either specified by value or by name.  If one (despite the above) wants to construct one's own domain parameters, one should select the underlying field and then use one of the following strategies to find a curve with appropriate (i.e., near prime) number of points using one of the following methods:   Select a random curve and use a general point-counting algorithm, for example, Schoof's algorithm or Schoof‚ÄìElkies‚ÄìAtkin algorithm ,  Select a random curve from a family which allows easy calculation of the number of points (e.g., Koblitz curves), or  Select the number of points and generate a curve with this number of points using complex multiplication technique. 8   Several classes of curves are weak and should be avoided:   Curves over    ùîΩ   2  m      subscript  ùîΩ   superscript  2  m     \mathbb{F}_{2^{m}}   with non-prime m are vulnerable to Weil descent attacks. 9 10  Curves such that n divides     p  B   -  1       superscript  p  B   1    p^{B}-1   (where p is the characteristic of the field¬†‚Äì q for a prime field, or   2   2   2   for a binary field) for sufficiently small B are vulnerable to Menezes‚ÄìOkamoto‚ÄìVanstone (MOV) attack 11 12 which applies usual Discrete Logarithm Problem (DLP) in a small degree extension field of    ùîΩ  p     subscript  ùîΩ  p    \mathbb{F}_{p}   to solve ECDLP. The bound B should be chosen so that discrete logarithms in the field    ùîΩ   p  B      subscript  ùîΩ   superscript  p  B     \mathbb{F}_{p^{B}}   are at least as difficult to compute as discrete logs on the elliptic curve    E   (   ùîΩ  q   )       E   subscript  ùîΩ  q     E(\mathbb{F}_{q})   . 13  Curves such that     |   E   (   ùîΩ  q   )    |   =  q          E   subscript  ùîΩ  q     q    |E(\mathbb{F}_{q})|=q   are vulnerable to the attack that maps the points on the curve to the additive group of    ùîΩ  q     subscript  ùîΩ  q    \mathbb{F}_{q}    14 15 16   Key sizes  Since all the fastest known algorithms that allow one to solve the ECDLP ( baby-step giant-step , Pollard's rho , etc.), need    O   (   n   )       O    n     O(\sqrt{n})   steps, it follows that the size of the underlying field should be roughly twice the security parameter. For example, for 128-bit security one needs a curve over    ùîΩ  q     subscript  ùîΩ  q    \mathbb{F}_{q}   , where    q  ‚âà   2  256       q   superscript  2  256     q\approx 2^{256}   . This can be contrasted with finite-field cryptography (e.g., DSA ) which requires 17 3072-bit public keys and 256-bit private keys, and integer factorization cryptography (e.g., RSA ) which requires a 3072-bit value of n , where the private key should be just as large. However the public key may be smaller to accommodate efficient encryption, especially when processing power is limited.  The hardest ECC scheme (publicly) broken to date had a 112-bit key for the prime field case and a 109-bit key for the binary field case. For the prime field case this was broken in July 2009 using a cluster of over 200 PlayStation 3 game consoles and could have been finished in 3.5 months using this cluster when running continuously. 18 The binary field case was broken in April 2004 using 2600 computers over 17 months. 19  A current project is aiming at breaking the ECC2K-130 challenge by Certicom, by using a wide range of different hardware: CPUs, GPUs, FPGA. 20  Projective coordinates  A close examination of the addition rules shows that in order to add two points one needs not only several additions and multiplications in    ùîΩ  q     subscript  ùîΩ  q    \mathbb{F}_{q}   but also an inversion operation. The inversion (for given    x  ‚àà   ùîΩ  q       x   subscript  ùîΩ  q     x\in\mathbb{F}_{q}   find    y  ‚àà   ùîΩ  q       y   subscript  ùîΩ  q     y\in\mathbb{F}_{q}   such that     x  y   =  1        x  y   1    xy=1   ) is one to two orders of magnitude slower 21 than multiplication. Fortunately, points on a curve can be represented in different coordinate systems which do not require an inversion operation to add two points. Several such systems were proposed: in the projective system each point is represented by three coordinates    (  X  ,  Y  ,  Z  )     X  Y  Z    (X,Y,Z)   using the following relation    x  =   X  Z       x    X  Z     x=\frac{X}{Z}   ,    y  =   Y  Z       y    Y  Z     y=\frac{Y}{Z}   ; in the Jacobian system a point is also represented with three coordinates    (  X  ,  Y  ,  Z  )     X  Y  Z    (X,Y,Z)   , but a different relation is used    x  =   X   Z  2        x    X   superscript  Z  2      x=\frac{X}{Z^{2}}   ,    y  =   Y   Z  3        y    Y   superscript  Z  3      y=\frac{Y}{Z^{3}}   ; in the L√≥pez‚ÄìDahab system the relation is    x  =   X  Z       x    X  Z     x=\frac{X}{Z}   ,    y  =   Y   Z  2        y    Y   superscript  Z  2      y=\frac{Y}{Z^{2}}   ; in the modified Jacobian system the same relations are used but four coordinates are stored and used for calculations    (  X  ,  Y  ,  Z  ,   a   Z  4    )     X  Y  Z    a   superscript  Z  4      (X,Y,Z,aZ^{4})   ; and in the Chudnovsky Jacobian system five coordinates are used    (  X  ,  Y  ,  Z  ,   Z  2   ,   Z  3   )     X  Y  Z   superscript  Z  2    superscript  Z  3     (X,Y,Z,Z^{2},Z^{3})   . Note that there may be different naming conventions, for example, IEEE P1363 -2000 standard uses "projective coordinates" to refer to what is commonly called Jacobian coordinates. An additional speed-up is possible if mixed coordinates are used. 22  Fast reduction (NIST curves)  Reduction modulo p (which is needed for addition and multiplication) can be executed much faster if the prime p is a pseudo- Mersenne prime , that is    p  ‚âà   2  d       p   superscript  2  d     p\approx 2^{d}   ; for example,    p  =    2  521   -  1       p     superscript  2  521   1     p=2^{521}-1   or    p  =    2  256   -   2  32   -   2  9   -   2  8   -   2  7   -   2  6   -   2  4   -  1.       p     superscript  2  256    superscript  2  32    superscript  2  9    superscript  2  8    superscript  2  7    superscript  2  6    superscript  2  4   1.     p=2^{256}-2^{32}-2^{9}-2^{8}-2^{7}-2^{6}-2^{4}-1.   Compared to Barrett reduction there can be an order of magnitude speed up. 23 The speed up here is a practical rather than theoretical one, and derives from the fact that the moduli of numbers against numbers near powers of two can be performed efficiently by computers operating on binary numbers with bitwise operations .  The curves over    ùîΩ  p     subscript  ùîΩ  p    \mathbb{F}_{p}   with pseudo-Mersenne p are recommended by NIST. Yet another advantage of the NIST curves is the fact that they use a =¬†‚àí3, which improves addition in Jacobian coordinates.  Many of the efficiency-related decisions in NIST FIPS 186-2 are sub-optimal. Other curves are more secure and run just as fast. 24  Applications  Elliptic curves are applicable for encryption , digital signatures , pseudo-random generators and other tasks. They are also used in several integer factorization  algorithms that have applications in cryptography, such as Lenstra elliptic curve factorization .  NIST recommended fifteen elliptic curves. Specifically, FIPS 186-3 has ten recommended finite fields:   Five prime fields    ùîΩ  p     subscript  ùîΩ  p    \mathbb{F}_{p}   for certain primes p of sizes 192, 224, 256, 384, and 521 25 bits. For each of the prime fields, one elliptic curve is recommended.  Five binary fields    ùîΩ   2  m      subscript  ùîΩ   superscript  2  m     \mathbb{F}_{2^{m}}   for m equal 163, 233, 283, 409, and 571. For each of the binary fields, one elliptic curve and one Koblitz curve was selected.   The NIST recommendation thus contains a total of five prime curves and ten binary curves. The curves were ostensibly chosen for optimal security and implementation efficiency. 26  In 2013, the New York Times stated that Dual Elliptic Curve Deterministic Random Bit Generation (or Dual_EC_DRBG) had been included as a NIST national standard due to the influence of NSA , which had included a deliberate weakness in the algorithm and the recommended elliptic curve. RSA Security in September 2013 issued an advisory recommending that its customers discontinue using any software based on Dual_EC_DRBG. 27 28 In the wake of the exposure of Dual_EC_DRBG as "an NSA undercover operation", cryptography experts have also expressed concern over the security of the NIST recommended elliptic curves, 29 suggesting a return to encryption based on non-elliptic-curve groups.  Security  Side-channel attacks  Unlike most other DLP systems (where it is possible to use the same procedure for squaring and multiplication) the EC addition is significantly different for doubling (    P  =  Q      P  Q    P=Q   ) and general addition (    P  ‚â†  Q      P  Q    P\neq Q   ) depending on the coordinate system used. Consequently, it is important to counteract side channel attacks (e.g., timing or simple/differential power analysis attacks ) using, for example, fixed pattern window (a.k.a. comb) methods 30 (note that this does not increase the computation time). Another concern for ECC-systems is the danger of fault attacks , especially when running on smart cards . 31  Cryptographic experts have also expressed concerns that the National Security Agency has inserted a backdoor into at least one elliptic curve-based pseudo random generator. 32 One analysis of the possible backdoor concluded that an adversary in possession of the algorithm's secret key could obtain encryption keys given only 32 bytes of ciphertext. 33  Quantum computing attacks  Elliptic curve cryptography is vulnerable to a modified Shor's algorithm for solving the discrete logarithm problem on elliptic curves. 34 A quantum computer to attack elliptic curve cryptography can be less than half the size of a quantum computer to break an equivalently classically secure version of RSA . This is due to the fact that smaller key sizes of elliptic curves are needed to match the classical security of RSA. The work of Proos and Zalka show how a quantum computer to break 2048-bit RSA requires roughly 4096 qubits while a quantum computer to break the equivalently secure 224-bit Elliptic Curve Cryptography requires between 1300 and 1600 qubits. Depending on the growth rate of quantum computers in the future, elliptic curve cryptosystems may become attackable by a quantum computer many years before an equivalently secure RSA scheme. 35  To avoid quantum computing concerns, an elliptic curve based alternative to Elliptic Curve Diffie Hellman which is not susceptible to Shor's attack is the Supersingular Isogeny Diffie‚ÄìHellman Key Exchange of De Feo, Jao and Plut. They use elliptic curve isogenies to create a drop in replacement for the quantum attackable Diffie‚ÄìHellman and Elliptic curve Diffie‚ÄìHellman key exchanges. This key exchange utilizes the same elliptic curve computational primitives of existing elliptic curve cryptography and requires computational and transmission overhead similar to many currently used public key systems. 36  Patents  At least one ECC scheme ( ECMQV ) and some implementation techniques are covered by patents.  Alternative representations  Alternative representations of elliptic curves include:   Hessian curves  Edwards curves  Twisted curves  Twisted Hessian curves  Twisted Edwards curve  Doubling-oriented Doche‚ÄìIcart‚ÄìKohel curve  Tripling-oriented Doche‚ÄìIcart‚ÄìKohel curve  Jacobian curve  Montgomery curve   See also   Cryptocurrency  Curve25519  DNSCurve  ECC patents  ECDH  Elliptic Curve Digital Signature Algorithm  ECMQV  Elliptic curve point multiplication  Homomorphic Signatures for Network Coding  Pairing-based cryptography  Public-key cryptography  Quantum cryptography   Notes  References   Standards for Efficient Cryptography Group (SECG) , SEC 1: Elliptic Curve Cryptography , Version 1.0, September 20, 2000.  D. Hankerson, A. Menezes, and S.A. Vanstone, Guide to Elliptic Curve Cryptography , Springer-Verlag, 2004.  I. Blake, G. Seroussi, and N. Smart, Elliptic Curves in Cryptography , London Mathematical Society 265, Cambridge University Press, 1999.  I. Blake, G. Seroussi, and N. Smart, editors, Advances in Elliptic Curve Cryptography , London Mathematical Society 317, Cambridge University Press, 2005.  L. Washington, Elliptic Curves: Number Theory and Cryptography , Chapman & Hall / CRC, 2003.  The Case for Elliptic Curve Cryptography , National Security Agency  Online Elliptic Curve Cryptography Tutorial , Certicom Corp.  K. Malhotra, S. Gardner, and R. Patz, Implementation of Elliptic-Curve Cryptography on Mobile Healthcare Devices, Networking, Sensing and Control, 2007 IEEE International Conference on, London, 15‚Äì17 April 2007 Page(s):239‚Äì244  Saikat Basu, A New Parallel Window-Based Implementation of the Elliptic Curve Point Multiplication in Multi-Core Architectures , International Journal of Network Security, Vol. 13, No. 3, 2011, Page(s):234‚Äì241  Christof Paar, Jan Pelzl, "Elliptic Curve Cryptosystems" , Chapter 9 of "Understanding Cryptography, A Textbook for Students and Practitioners". (companion web site contains online cryptography course that covers elliptic curve cryptography), Springer, 2009.  Luca De Feo, David Jao, Jerome Plut, Towards quantum-resistant cryptosystems from supersingular elliptic curve isogenies , Springer 2011.    Jacques V√©lu, Courbes elliptiques (...) , Soci√©t√© Math√©matique de France, 57 , 1-152, Paris, 1978.   External links   Certicom ECC Tutorial  a relatively easy to understand primer on elliptic curve cryptography  Elliptic curves and their implementation by Adam Langley (OpenSSL dev).  Interactive introduction to elliptic curves and elliptic curve cryptography with SAGE  How did the NSA hack our e-mails? explained by Mathematician Edward Frenkel  How to design an elliptic-curve signature system by Daniel J. Bernstein   "  Category:Elliptic curve cryptography  Category:Public-key cryptography  Category:Finite fields     ‚Ü©  ‚Ü©  ‚Ü©  ‚Ü©  ‚Ü©  ‚Ü©  http://www.secg.org/download/aid-390/gec2.pdf ‚Ü©  ‚Ü©  ‚Ü©  ‚Ü©  ‚Ü©  ‚Ü©  IEEE P1363 , section A.12.1 ‚Ü©  ‚Ü©  ‚Ü©  ‚Ü©  NIST, Recommendation for Key Management‚ÄîPart 1: general , Special Publication 800-57, August 2005. ‚Ü©  http://lacal.epfl.ch/page81774.html ‚Ü©  ‚Ü©  http://www.ecc-challenge.info/ ‚Ü©  ‚Ü©  ‚Ü©  ‚Ü©  ‚Ü©  The sequence may seem suggestive of a typographic error. Nevertheless, the last value is 521 and not 512 bits. ‚Ü©  FIPS PUB 186-3, Digital Signature Standard (DSS) . ‚Ü©  Kim Zetter, RSA Tells Its Developer Customers: Stop Using NSA-Linked Algorithm  Wired , 19 September 2013. "Recommending against the use of SP 800-90A Dual Elliptic Curve Deterministic Random Bit Generation: NIST strongly recommends that, pending the resolution of the security concerns and the re-issuance of SP 800-90A, the Dual_EC_DRBG, as specified in the January 2012 version of SP 800-90A, no longer be used." ‚Ü©  "Due to the debate around the Dual EC DRBG standard highlighted recently by the National Institute of Standards and Technology (NIST), NIST re-opened for public comment its SP 800-90 standard which covers Pseudo-random Number Generators (PRNG)." csrc.nist.gov ‚Ü©  Bruce Schneier (5 September) "I no longer trust the constants. I believe the NSA has manipulated them through their relationships with industry." See [ http://it.slashdot.org/firehose.pl?op=view&type; ;=story&sid;=13/09/11/1224252 Are the NIST Standard Elliptic Curves Back-doored?], Slashdot , 11 September 2013. ‚Ü©  ‚Ü©  See, for example, ‚Ü©  https://www.schneier.com/essay-198.html ‚Ü©  http://rump2007.cr.yp.to/15-shumow.pdf ‚Ü©  ‚Ü©  ‚Ü©  ‚Ü©     