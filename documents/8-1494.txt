


Lehmer mean




Lehmer mean

 table.sourceCode, tr.sourceCode, td.lineNumbers, td.sourceCode {
   margin: 0; padding: 0; vertical-align: baseline; border: none; }
 <style>
 table.sourceCode { width: 100%; line-height: 100%; }
 td.lineNumbers { text-align: right; padding-right: 4px; padding-left: 4px; color: #aaaaaa; border-right: 1px solid #aaaaaa; }
 td.sourceCode { padding-left: 5px; }
 code > span.kw { color: #007020; font-weight: bold; } /* Keyword */
 code > span.dt { color: #902000; } /* DataType */
 code > span.dv { color: #40a070; } /* DecVal */
 code > span.bn { color: #40a070; } /* BaseN */
 code > span.fl { color: #40a070; } /* Float */
 code > span.ch { color: #4070a0; } /* Char */
 code > span.st { color: #4070a0; } /* String */
 code > span.co { color: #60a0b0; font-style: italic; } /* Comment */
 code > span.ot { color: #007020; } /* Other */
 code > span.al { color: #ff0000; font-weight: bold; } /* Alert */
 code > span.fu { color: #06287e; } /* Function */
 code > span.er { color: #ff0000; font-weight: bold; } /* Error */
 code > span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */
 code > span.cn { color: #880000; } /* Constant */
 code > span.sc { color: #4070a0; } /* SpecialChar */
 code > span.vs { color: #4070a0; } /* VerbatimString */
 code > span.ss { color: #bb6688; } /* SpecialString */
 code > span.im { } /* Import */
 code > span.va { color: #19177c; } /* Variable */
 code > span.cf { color: #007020; font-weight: bold; } /* ControlFlow */
 code > span.op { color: #666666; } /* Operator */
 code > span.bu { } /* BuiltIn */
 code > span.ex { } /* Extension */
 code > span.pp { color: #bc7a00; } /* Preprocessor */
 code > span.at { color: #7d9029; } /* Attribute */
 code > span.do { color: #ba2121; font-style: italic; } /* Documentation */
 code > span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */
 code > span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */
 code > span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */
   



In mathematics, the Lehmer mean of a tuple

 
  of positive real numbers, named after Derrick Henry Lehmer,1 is defined as:



The weighted Lehmer mean with respect to a tuple 
 
 
 
  of positive weights is defined as:



The Lehmer mean is an alternative to power means for interpolating between minimum and maximum via arithmetic mean and harmonic mean.
Properties
The derivative of 
 
 
 
  is non-negative


 
  thus this function is monotonic and the inequality


 
  holds.
Special cases



 
  is the minimum of the elements of 
 
 
 
 .


 
  is the harmonic mean.


 
  is the geometric mean of the two values 
 
 
 
  and 
 
 
 
 .


 
  is the arithmetic mean.


 
  is the contraharmonic mean.


 
  is the maximum of the elements of 
 
 
 
 .


Sketch of a proof: Without loss of generality let 
 
 
 
  be the values which equal the maximum. Then 
 
 


Applications
Signal processing
Like a power mean, a Lehmer mean serves a non-linear moving average which is shifted towards small signal values for small 
 
 
 
  and emphasizes big signal values for big 
 
 
 
 . Given an efficient implementation of a moving arithmetic mean called smooth you can implement a moving Lehmer mean according to the following Haskell code.
 lehmerSmooth :: Floating a => ([a] -> [a]) -> a -> [a] -> [a]
  lehmerSmooth smooth p xs = zipWith (/)
                                      (smooth (map (**p) xs))
                                      (smooth (map (**(p-1)) xs))

For big 
 
 
 
  it can serve an envelope detector on a rectified signal.
For small 
 
 
 
  it can serve an baseline detector on a mass spectrum.

See also

mean
power mean

Notes
External links

Lehmer Mean at MathWorld

"
Category:Means Category:Articles with example Haskell code



P. S. Bullen. Handbook of means and their inequalities. Springer, 1987.



