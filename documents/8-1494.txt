   Lehmer mean      Lehmer mean  table.sourceCode, tr.sourceCode, td.lineNumbers, td.sourceCode {
   margin: 0; padding: 0; vertical-align: baseline; border: none; }
 <style>
 table.sourceCode { width: 100%; line-height: 100%; }
 td.lineNumbers { text-align: right; padding-right: 4px; padding-left: 4px; color: #aaaaaa; border-right: 1px solid #aaaaaa; }
 td.sourceCode { padding-left: 5px; }
 code > span.kw { color: #007020; font-weight: bold; } /* Keyword */
 code > span.dt { color: #902000; } /* DataType */
 code > span.dv { color: #40a070; } /* DecVal */
 code > span.bn { color: #40a070; } /* BaseN */
 code > span.fl { color: #40a070; } /* Float */
 code > span.ch { color: #4070a0; } /* Char */
 code > span.st { color: #4070a0; } /* String */
 code > span.co { color: #60a0b0; font-style: italic; } /* Comment */
 code > span.ot { color: #007020; } /* Other */
 code > span.al { color: #ff0000; font-weight: bold; } /* Alert */
 code > span.fu { color: #06287e; } /* Function */
 code > span.er { color: #ff0000; font-weight: bold; } /* Error */
 code > span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */
 code > span.cn { color: #880000; } /* Constant */
 code > span.sc { color: #4070a0; } /* SpecialChar */
 code > span.vs { color: #4070a0; } /* VerbatimString */
 code > span.ss { color: #bb6688; } /* SpecialString */
 code > span.im { } /* Import */
 code > span.va { color: #19177c; } /* Variable */
 code > span.cf { color: #007020; font-weight: bold; } /* ControlFlow */
 code > span.op { color: #666666; } /* Operator */
 code > span.bu { } /* BuiltIn */
 code > span.ex { } /* Extension */
 code > span.pp { color: #bc7a00; } /* Preprocessor */
 code > span.at { color: #7d9029; } /* Attribute */
 code > span.do { color: #ba2121; font-style: italic; } /* Documentation */
 code > span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */
 code > span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */
 code > span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */     In mathematics, the Lehmer mean of a tuple    x   x   x   of positive real numbers , named after Derrick Henry Lehmer , 1 is defined as:         L  p    (  x  )    =     ∑   k  =  1   n    x  k  p      ∑   k  =  1   n    x  k   p  -  1       .         subscript  L  p   x       superscript   subscript     k  1    n    superscript   subscript  x  k   p      superscript   subscript     k  1    n    superscript   subscript  x  k     p  1        L_{p}(x)=\frac{\sum_{k=1}^{n}x_{k}^{p}}{\sum_{k=1}^{n}x_{k}^{p-1}}.     The weighted Lehmer mean with respect to a tuple   w   w   w   of positive weights is defined as:         L   p  ,  w     (  x  )    =     ∑   k  =  1   n     w  k   ⋅   x  k  p       ∑   k  =  1   n     w  k   ⋅   x  k   p  -  1        .         subscript  L   p  w    x       superscript   subscript     k  1    n    normal-⋅   subscript  w  k    superscript   subscript  x  k   p       superscript   subscript     k  1    n    normal-⋅   subscript  w  k    superscript   subscript  x  k     p  1         L_{p,w}(x)=\frac{\sum_{k=1}^{n}w_{k}\cdot x_{k}^{p}}{\sum_{k=1}^{n}w_{k}\cdot x%
 _{k}^{p-1}}.     The Lehmer mean is an alternative to power means for interpolating between minimum and maximum via arithmetic mean and harmonic mean .  Properties  The derivative of    p  ↦    L  p    (  x  )       maps-to  p     subscript  L  p   x     p\mapsto L_{p}(x)   is non-negative         ∂   ∂  p     L  p    (  x  )    =     ∑   j  =  1   n     ∑   k  =   j  +  1    n     (    x  j   -   x  k    )   ⋅   (    ln   x  j    -   ln   x  k     )   ⋅    (    x  j   ⋅   x  k    )    p  -  1         (    ∑   k  =  1   n    x  k   p  -  1     )   2     ,             p     subscript  L  p   x       superscript   subscript     j  1    n     superscript   subscript     k    j  1     n    normal-⋅     subscript  x  j    subscript  x  k         subscript  x  j       subscript  x  k      superscript   normal-⋅   subscript  x  j    subscript  x  k      p  1        superscript    superscript   subscript     k  1    n    superscript   subscript  x  k     p  1     2      \frac{\partial}{\partial p}L_{p}(x)=\frac{\sum_{j=1}^{n}\sum_{k=j+1}^{n}(x_{j}%
 -x_{k})\cdot(\ln x_{j}-\ln x_{k})\cdot(x_{j}\cdot x_{k})^{p-1}}{\left(\sum_{k=%
 1}^{n}x_{k}^{p-1}\right)^{2}},   thus this function is monotonic and the inequality      p  ≤  q  ⇒    L  p    (  x  )    ≤    L  q    (  x  )          p  q    normal-⇒       subscript  L  p   x           subscript  L  q   x      p\leq q\Rightarrow L_{p}(x)\leq L_{q}(x)   holds.  Special cases        lim   p  →   -  ∞       L  p    (  x  )        subscript    normal-→  p           subscript  L  p   x     \lim_{p\to-\infty}L_{p}(x)   is the minimum of the elements of   x   x   x   .       L  0    (  x  )        subscript  L  0   x    L_{0}(x)   is the harmonic mean .       L   1  2     (   (   x  0   ,   x  1   )   )        subscript  L    1  2      subscript  x  0    subscript  x  1      L_{\frac{1}{2}}\left((x_{0},x_{1})\right)   is the geometric mean of the two values    x  0     subscript  x  0    x_{0}   and    x  1     subscript  x  1    x_{1}   .       L  1    (  x  )        subscript  L  1   x    L_{1}(x)   is the arithmetic mean .       L  2    (  x  )        subscript  L  2   x    L_{2}(x)   is the contraharmonic mean .       lim   p  →  ∞      L  p    (  x  )        subscript    normal-→  p        subscript  L  p   x     \lim_{p\to\infty}L_{p}(x)   is the maximum of the elements of   x   x   x   .    Sketch of a proof: Without loss of generality let     x  1   ,  …  ,   x  k       subscript  x  1   normal-…   subscript  x  k     x_{1},\dots,x_{k}   be the values which equal the maximum. Then      L  p    (  x  )    =    x  1   ⋅    k  +    (    x   k  +  1     x  1    )   p   +  ⋯  +    (    x  n    x  1    )   p     k  +    (    x   k  +  1     x  1    )    p  -  1    +  ⋯  +    (    x  n    x  1    )    p  -  1              subscript  L  p   x    normal-⋅   subscript  x  1       k   superscript     subscript  x    k  1     subscript  x  1    p   normal-⋯   superscript     subscript  x  n    subscript  x  1    p      k   superscript     subscript  x    k  1     subscript  x  1      p  1    normal-⋯   superscript     subscript  x  n    subscript  x  1      p  1         L_{p}(x)=x_{1}\cdot\frac{k+\left(\frac{x_{k+1}}{x_{1}}\right)^{p}+\cdots+\left%
 (\frac{x_{n}}{x_{1}}\right)^{p}}{k+\left(\frac{x_{k+1}}{x_{1}}\right)^{p-1}+%
 \cdots+\left(\frac{x_{n}}{x_{1}}\right)^{p-1}}      Applications  Signal processing  Like a power mean , a Lehmer mean serves a non-linear moving average which is shifted towards small signal values for small   p   p   p   and emphasizes big signal values for big   p   p   p   . Given an efficient implementation of a moving arithmetic mean called smooth you can implement a moving Lehmer mean according to the following Haskell code.  lehmerSmooth ::  Floating a => ([a] -> [a]) -> a -> [a] -> [a]
  lehmerSmooth smooth p xs = zipWith ( / )
                                      (smooth (map ( ** p) xs))
                                      (smooth (map ( ** (p - 1 )) xs))   For big   p   p   p   it can serve an envelope detector on a rectified signal.  For small   p   p   p   it can serve an baseline detector on a mass spectrum .   See also   mean  power mean   Notes  External links   Lehmer Mean at MathWorld   "  Category:Means  Category:Articles with example Haskell code     P. S. Bullen. Handbook of means and their inequalities . Springer, 1987. ↩    