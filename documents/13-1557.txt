   Movable cellular automaton      Movable cellular automaton   The Movable cellular automaton (MCA) method is a method in computational solid mechanics based on the discrete concept. It provides advantages both of classical cellular automaton and discrete element methods. Important advantage of the МСА method is a possibility of direct simulation of materials fracture including damage generation, crack propagation, fragmentation and mass mixing. It is difficult to simulate these processes by means of continuum mechanics methods (For example: finite element method , finite difference method , etc.), so some new concepts like peridynamics are required. Discrete element method is very effective to simulate granular materials, but mutual forces among movable cellular automata provides simulating solids behavior. If size of automaton will be close to zero then MCA behavior becomes like classical continuum mechanics methods.  Keystone of the movable cellular automaton method  [[ File:MCA elements.png|thumb|left|   Object (at left) is described as set of interacted automata (at center). At right is shown velocity field of automata.   ]] In framework of the MCA approach an object under modeling is considered as a set of interacting elements/automata. The dynamics of the set of automata are defined by their mutual forces and rules for their relationships. This system exists and operates in time and space. Its evolution in time and space is governed by the equations of motion. The mutual forces and rules for inter-elements relationships are defined by the function of the automaton response. This function has to be specified for each automaton. Due to mobility of automata the following new parameters of cellular automata have to be included into consideration: R i – radius-vector of automaton; V i – velocity of automaton; ω i – rotation velocity of automaton; θ i – rotation vector of automaton; m i – mass of automaton; J i – moment of inertia of automaton.  New concept: neighbours  [[ File:MCA neighbors.gif|thumb|   Each automaton has some neighbors   ]] The new concept of the MCA method is based on the introducing of the state of the pair of automata (relation of interacting pairs of automata) in addition to the conventional one – the state of a separate automaton. Note that the introduction of this definition allows to go from the static net concept to the concept of neighbours . As a result of this, the automata have the ability to change their neighbors by switching the states (relationships) of the pairs.  Definition of the parameter of pair state  The introducing of new type of states leads to new parameter to use it as criteria for switching relationships . It is defined as an automaton overlapping parameters h ij . So the relationship of the cellular automata is characterised by the value of their overlapping .    The initial structure is formed by setting up certain relationships among each pair of neighboring elements.  Criterion of switching of the state of pair relationships  [[ File:MCA switch.gif|thumb|   At left pair of automata ij is linked. At right pair of automata ij is unlinked.   ]] In contrast to the classical cellular automaton method in the MCA method not only a single automaton but also a relationship of pair of automata can be switched . According with the bistable automata concept there are two types of the pair states (relationships):      linked   – both automata belong to a solid     unlinked   – each automaton of the pair belongs to different bodies or parts of damaged body.     So the changing of the state of pair relationships is controlled by relative movements of the automata and the media formed by such pairs can be considered as bistable media.  Equations of MCA motion  The evolution of MCA media is described by the following equations of motion for translation :         d  2    h   i  j      d   t  2     =     (    1   m  i    +   1   m  j     )    p   i  j     +    ∑   k  ≠  j     C   (   i  j   ,   i  k   )   ψ   (   α    i  j   ,   i  k     )    1   m  i     p   i  k      +    ∑   l  ≠  i     C   (   i  j   ,   j  l   )   ψ   (   α    i  j   ,   j  l     )    1   m  j     p   j  l                superscript  d  2    superscript  h    i  j       d   superscript  t  2             1   superscript  m  i      1   superscript  m  j      superscript  p    i  j       subscript     k  j      C     i  j     i  k    ψ   subscript  α     i  j     i  k       1   superscript  m  i     superscript  p    i  k        subscript     l  i      C     i  j     j  l    ψ   subscript  α     i  j     j  l       1   superscript  m  j     superscript  p    j  l         {d^{2}h^{ij}\over dt^{2}}=\left({1\over m^{i}}+{1\over m^{j}}\right)p^{ij}+%
 \sum_{k\neq j}C(ij,ik)\psi(\alpha_{ij,ik}){1\over m^{i}}p^{ik}+\sum_{l\neq i}C%
 (ij,jl)\psi(\alpha_{ij,jl}){1\over m^{j}}p^{jl}     [[ File:MCA neighbour in pair.png|thumb|   Forces between automata ij coming from their neighbors.   ]] Here m i is the mass of automaton i, p ij is central force acting between automata i and j, C(ij,ik) is certain coefficient associated with transferring the h parameter from pair ij to pair ik , ψ(α ij,ik ) is angle between directions ij and ik .  Due to finite size of movable automata the rotation effects have to be taken into account. The equations of motion for rotation can be written as follows:         d  2    θ   i  j      d   t  2     =     (     q   i  j     J  i    +    q   j  i     J  j     )    τ   i  j     +    ∑   k  ≠  j     S   (   i  j   ,   i  k   )     q   i  k     J  i     τ   i  k      +    ∑   l  ≠  j     S   (   i  j   ,   j  l   )     q   j  l     J  j     τ   j  l                superscript  d  2    superscript  θ    i  j       d   superscript  t  2              superscript  q    i  j     superscript  J  i       superscript  q    j  i     superscript  J  j      superscript  τ    i  j       subscript     k  j      S     i  j     i  k       superscript  q    i  k     superscript  J  i     superscript  τ    i  k        subscript     l  j      S     i  j     j  l       superscript  q    j  l     superscript  J  j     superscript  τ    j  l         {d^{2}\theta^{ij}\over dt^{2}}=\left({q^{ij}\over J^{i}}+{q^{ji}\over J^{j}}%
 \right)\tau^{ij}+\sum_{k\neq j}S(ij,ik){q^{ik}\over J^{i}}\tau^{ik}+\sum_{l%
 \neq j}S(ij,jl){q^{jl}\over J^{j}}\tau^{jl}     Here Θ ij is the angle of relative rotation (it is a switching parameter like h ij for translation), q ij is the distance from center of automaton i to contact point of automaton j (moment arm), τ ij is the pair tangential interaction, S(ij,ik) is certain coefficient associated with transferring the Θ parameter from one pair to other (it is similar to C(ij,ik) from the equation for translation).  It should be noted that these equations are completely similar to the equations of motion for the many–particle approach.  Definition of deformation in pair of automata  [[ File:MCA Deformation in Pair of Automata.gif|thumb|left|   Rotation of body as whole not caused to deformation in pair of automata   ]] Translation of the pair automata The dimensionless deformation parameter for translation of the i j automata pair can be presented as:       ε   i  j    =    h   i  j     r  0   i  j     =     (    q   i  j    +   q   j  i     )   -    (    d  i   +   d  j    )   /  2      (    d  i   +   d  j    )   /  2           superscript  ε    i  j       superscript  h    i  j     superscript   subscript  r  0     i  j                 superscript  q    i  j     superscript  q    j  i          superscript  d  i    superscript  d  j    2         superscript  d  i    superscript  d  j    2       \varepsilon^{ij}={h^{ij}\over r_{0}^{ij}}={\left(q^{ij}+q^{ji}\right)-\left(d^%
 {i}+d^{j}\right)\big/2\over\left(d^{i}+d^{j}\right)\big/2}     In this case:        (    Δ   ε   i   (  j  )      +   Δ   ε   j   (  i  )       )     (    d  i   +   d  j    )   2    =    V  n   i  j    Δ  t             normal-Δ   superscript  ε    i  j       normal-Δ   superscript  ε    j  i           superscript  d  i    superscript  d  j    2       superscript   subscript  V  n     i  j    normal-Δ  t     \left(\Delta{\varepsilon^{i(j)}}+\Delta{\varepsilon^{j(i)}}\right){\left(d^{i}%
 +d^{j}\right)\over 2}=V_{n}^{ij}\Delta{t}     where Δt time step, V n ij – relative velocity.  Rotation of the pair automata can be calculated by analogy with the last translation relationships.  Modeling of irreversible deformation in the MCA method  [[ File:MCA Irreversible Deformation.gif|thumb|   Deformation is determine by value of distance from the center of automaton   ]] [[ File:MCA response function of automata.gif|thumb|   There are two types of the response function of automata   ]]  The ε ij parameter is used as a measure of deformation of automaton i under its interaction with automaton j . Where q ij – is a distance from the center of automaton i to its contact point with automaton j ; R i = d i /2 ( d i – is the size of automaton i ).  As an example the titanium specimen under cyclic loading (tension – compression) is considered. The loading diagram is shown in the next figure:      Scheme of loading   Loading diagram      (Figure)  MCA cyclic schem.gif   (Figure)  MCA cyclic diag.gif       ( Red marks are the experimental data)     Advantages of MCA method  Due to mobility of each automaton the MCA method allows to take into account directly such actions as:   mass mixing  penetration effects  chemical reactions  intensive deformation  phase transformations  accumulation of damages  fragmentation and fracture  cracks generation and development   Using boundary conditions of different types (fixed, elastic, viscous-elastic, etc.) it is possible to imitate different properties of surrounding medium, containing the simulated system. It is possible to model different modes of mechanical loading (tension, compression, shear strain, etc.) by setting up additional conditions at the boundaries.  See also   Continuum mechanics  Solid mechanics  Fracture mechanics  Peridynamics  Computer simulation  Discrete element method  Cellular automaton  Finite element method  Finite difference method   References     ()   ()        ()     ()   ()   Software   MCA software package  Software for simulation of materials in discrete-continuous approach «FEM+MCA»: Number of state registration in Applied Research Foundation of Algorithms and Software (AFAS): 50208802297 / Smolin A.Y., Zelepugin S.A., Dobrynin S.A.; applicant and development center is Tomsk State University. – register date 28.11.2008; certificate AFAS N 11826 date 01.12.2008.   "  Category:Solid mechanics  Category:Numerical analysis  Category:Cellular automata  Category:Condensed matter physics  Category:Mathematical modeling   