


Background subtraction




Background subtraction
'''Background subtraction''', also known as Foreground Detection, is a technique in the fields of [[image processing]] and [[computer vision]] wherein an image's foreground is extracted for further processing (object recognition etc.). Generally an image's regions of interest are objects (humans, cars, text etc.) in its foreground. After the stage of image preprocessing (which may include [[image denoising]], post process
 ing like morphology etc.) object localisation is required which may make use of this technique. Background subtraction is a widely used approach for detecting moving objects in videos from static cameras. The rationale in the approach is that of detecting the moving objects from the difference between the current frame and a reference frame, often called “background image”, or “background model”. Background subtraction is mostly done if the image in question is a part of a video stream. Background subtraction provides important cues for numerous applications in computer vision, for example surveillance tracking or human poses estimation. However, background subtraction is generally based on a static background hypothesis which is often not applicable in real environments. With indoor scenes, reflections or animated images on screens lead to background changes. In a same way, due to wind, rain or illumination changes brought by weather, static backgrounds methods have difficulties with outdoor scenes. 1
Conventional Approaches
A robust background subtraction algorithm should be able to handle lighting changes, repetitive motions from clutter and long-term scene changes.2 The following analyses make use of the function of V(x,y,t) as a video sequence where t is the time dimension, x and y are the pixel location variables. e.g. V(1,2,3) is the pixel intensity at (1,2) pixel location of the image at t = 3 in the video sequence.
Using frame differencing
A motion detection algorithm begins with the segmentation part where foreground or moving objects are segmented from the background. The simplest way to implement this is to take an image as background and take the frames obtained at the time t, denoted by I(t) to compare with the background image denoted by B. Here using simple arithmetic calculations, we can segment out the objects simply by using image subtraction technique of computer vision meaning for each pixels in I(t), take the pixel value denoted by P[I(t)] and subtract it with the corresponding pixels at the same position on the background image denoted as P[B].
In mathematical equation, it is written as:



The background is assumed to be the frame at time t. This difference image would only show some intensity for the pixel locations which have changed in the two frames. Though we have seemingly removed the background, this approach will only work for cases where all foreground pixels are moving and all background pixels are static.3 4 A threshold "Threshold" is put on this difference image to improve the subtraction (see Image thresholding).



This means that the difference image's pixels' intensities are 'thresholded' or filtered on the basis of value of Threshold. 5 The accuracy of this approach is dependent on speed of movement in the scene. Faster movements may require higher thresholds.
Mean filter
For calculating the image containing only the background, a series of preceding images are averaged. For calculating the background image at the instant t,



where N is the number of preceding images taken for averaging. This averaging refers to averaging corresponding pixels in the given images. N would depend on the video speed (number of images per second in the video) and the amount of movement in the video.6 After calculating the background B(x,y) we can then subtract it from the image V(x,y,t) at time t=t and threshold it. Thus the foreground is



where Th is threshold. Similarly we can also use median instead of mean in the above calculation of B(x,y).
Usage of global and time-independent Thresholds (same Th value for all pixels in the image) may limit the accuracy of the above two approaches.7
Running Gaussian average
For this method, Wren et al.8 propose fitting a Gaussian probabilistic density function (pdf) on the most recent 
 
 
 
  frames. In order to avoid fitting the pdf from scratch at each new frame time 
 
 
 
 , a running (or on-line cumulative) average is computed.
The pdf of every pixel is characterized by mean

 
  and variance 

. The following is a possible initial condition (assuming that initially every pixel is background):



 
  some default value 
 
 

where 

 is the value of the pixel's intensity at time 
 
 
 
 . In order to initialize variance, we can, for example, use the variance in x and y from a small window around each pixel.
Note that background may change over time (e.g. due to illumination changes or non-static background objects). To accommodate for that change, at every frame 
 
 
 
 , every pixel's mean and variance must be updated, as follows:





Where 
 
 
 
  determines the size of the temporal window that is used to fit the pdf (usually 
 
 
 
  ) and 

 is the Euclidean distance between the mean and the value of the pixel.
(Figure)
Gaussian distribution for each pixel.

We can now classify a pixel as background if its current intensity lies within some confidence interval of its distribution's mean:




where the parameter 

 is a free threshold (usually 

). A larger value for 
 
 
 
  allows for more dynamic background, while a smaller 
 
 
 
  increases the probability of a transition from background to foreground due to more subtle changes.
In a variant of the method, a pixel's distribution is only updated if it is classified as background. This is to prevent newly introduced foreground objects from fading into the background. The update formula for the mean is changed accordingly:



where 

 when 
 
 
 
  is considered foreground and 

 otherwise. So when 

, that is, when the pixel is detected as foreground, the mean will stay the same. As a result, a pixel, once it has become foreground, can only become background again when the intensity value gets close to what it was before turning foreground. This method, however, has several issues: It only works if all pixels are initially background pixels (or foreground pixels are annotated as such). Also, it cannot cope with gradual background changes: If a pixel is categorized as foreground for a too long period of time, the background intensity in that location might have changed (because illumination has changed etc.). As a result, once the foreground object is gone, the new background intensity might not be recognized as such anymore.
Background mixture models
In this technique, it is assumed that every pixel's intensity values in the video can be modeled using a Gaussian mixture model.9 A simple heuristic determines which intensities are most probably of the background. Then the pixels which do not match to these are called the foreground pixels. Foreground pixels are grouped using 2D connected component analysis.10
At any time t, a particular pixel (
 
 
 
 )'s history is



This history is modeled by a mixture of K Gaussian distributions:



where



An on-line K-means approximation is used to update the Gaussians. Numerous improvements of this original method developed by Stauffer and Grimson 11 have been proposed and a complete survey can be found in Bouwmans et al.12
Surveys
Several surveys which concern categories or sub-categories of models can be found as follows:

MOG Background Subtraction

First, each pixel is characterized by its intensity in RGB color space. Then probability of observing the current pixel is given by the following formula in the multidimensional case



Where the parameters are K is the number of distributions, ω is a weight associated to the ith Gaussian at time t with mean µ and standard deviation Σ .



Once the parameters initialization is made, a first foreground detection can be made then the parameters are updated. The first B Gaussian distribution which exceeds the threshold T is re-tained for a background distribution



The other distributions are considered to represent a foreground distribution. Then, when the new frame incomes at times 
 
 
 
 , a match test is made of each pixel. A pixel matches a Gaussian distribution if the Mahalanobis distance


 
 .Then, two cases can occur:
Case 1: A match is found with one of the K Gaussians. For the matched component, the update is done as follows13



Power and Schoonees [3] used the same algorithm to segment the foreground of the image



The essential approximation to 
 
 
 
  is given by 
 
 
14



Case 2: No match is found with any of the
 
 
 
 Gaussians. In this case, the least probable distribu-tion 
 
 
 
  is replaced with a new one with parameters






$$k_{i.t+1}= Large Initial Weight$$
Once the parameter maintenance is made, foreground detection can be made and so on.15
Relative OPEN CV background /foreground segmentation algorithm can be found in the link below:
http://docs.opencv.org/trunk/doc/py_tutorials/py_video/py_bg_subtraction/py_bg_subtraction.html

Subspace Learning Background Subtraction 16


Statistical Background Subtraction 1718


Fuzzy Background Subtraction 19


RPCA Background Subtraction 2021 (See Robust principal component analysis for more details)


Traditional and Recent Approaches for Background Subtraction 2223

Books, Journals and Workshops
Books
T. Bouwmans, F. Porikli, B. Horferlin, A. Vacavant, Handbook on "Background Modeling and Foreground Detection for Video Surveillance: Traditional and Recent Approaches, Implementations, Benchmarking and Evaluation", CRC Press, Taylor and Francis Group, June 2014. (For more information: http://www.crcpress.com/product/isbn/9781482205374)
Journals

T. Bouwmans, L. Davis, J. Gonzalez, M. Piccardi, C. Shan, Special Issue on "Background Modeling for Foreground Detection in Real-World Dynamic Scenes", Special Issue in Machine Vision and Applications, July 2014.
A. Vacavant, L. Tougne, T. Chateau, "Special section on background models comparison", Computer Vision and Image Understanding, CVIU 2014, May 2014.

Workshops

Scene Background Modeling and Initialization (SBMI 2015) Workshop in conjunction with ICIAP 2015.
IEEE on Change Detection Workshop in conjunction with CVPR 2014.
Workshop on Background Model Challenges (BMC 2012) in conjunction with ACCV 2012.

Resources, Datasets and Codes
BGS Web Site
The Background Subtraction Web Site (T. Bouwmans, Univ. La Rochelle, France) contains a full list of the references in the field, links to available datasets and codes. (For more information: http://sites.google.com/site/backgroundsubtraction/overview)
BGS Datasets

ChangeDetection.net (For more information: http://www.changedetection.net/)
Background Models Challenge (For more information: http://bmc.univ-bpclermont.fr/)
Stuttgart Artificial Background Subtraction Dataset (For more information: http://www.vis.uni-stuttgart.de/index.php?id=sabs)
SBMI dataset (For more information: http://sbmi2015.na.icar.cnr.it/)

BGS Libraries

BGS Library

The BGS Library (A. Sobral, Univ. La Rochelle, France) provides a C++ framework to perform background subtraction algorithms. The code works either on Windows or on Linux. Currently the library offers 29 BGS algorithms. (For more information: http://github.com/andrewssobral/bgslibrary)

LRS Library - Low-Rank and Sparse tools for Background Modeling and Subtraction in Videos

The LRSLibrary (A. Sobral, Univ. La Rochelle, France) provides a collection of low-rank and sparse decomposition algorithms in MATLAB. The library was designed for motion segmentation in videos, but it can be also used or adapted for other computer vision problems. Currently the LRSLibrary contains a total of 64 matrix-based and tensor-based algorithms. The LRSLibrary was tested successfully in MATLAB R2013b both x86 and x64 versions. (For more information: https://github.com/andrewssobral/lrslibrary#lrslibrary)
Applications

Video Surveillance
Optical Motion Capture
Human Computer Interaction
Content based Video Coding

See also

ViBe
PBAS
SOBS

References



"
Category:Articles created via the Article Wizard Category:Mathematical examples Category:Image processing Category:Computer vision






























