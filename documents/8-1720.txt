   Maximal pair      Maximal pair   In computer science , a maximal pair is a tuple     (   p  1   ,   p  2   ,  l  )      subscript  p  1    subscript  p  2   l    (p_{1},p_{2},l)   , such that, given a string   S   S   S   of length   n   n   n   ,    S   [   p  1   .  .   p  1   +  l  -  1  ]   =  S   [   p  2   .  .   p  2   +  l  -  1  ]      fragments  S   fragments  normal-[   subscript  p  1   normal-.  normal-.   subscript  p  1    l   1  normal-]    S   fragments  normal-[   subscript  p  2   normal-.  normal-.   subscript  p  2    l   1  normal-]     S[p_{1}..p_{1}+l-1]=S[p_{2}..p_{2}+l-1]   , but     S   [    p  1   -  1   ]    ≠   S   [    p  2   -  1   ]          S   delimited-[]     subscript  p  1   1       S   delimited-[]     subscript  p  2   1       S[p_{1}-1]\neq S[p_{2}-1]   and     S   [    p  1   +  l   ]    ≠   S   [    p  2   +  l   ]          S   delimited-[]     subscript  p  1   l       S   delimited-[]     subscript  p  2   l       S[p_{1}+l]\neq S[p_{2}+l]   . A maximal repeat is a string represented by such tuple. A supermaximal repeat is a maximal repeat never occurring as a proper substring of another maximal repeat. Both maximal pairs, maximal repeats and supermaximal repeats can be found in    Θ   (   n  +  z   )       normal-Θ    n  z     \Theta(n+z)   time using a suffix tree , 1 if there are   z   z   z   such structures.  Example  12345678901234  xabcyabcwabcyz      (  2  ,  6  ,  3  )     2  6  3    (2,6,3)   and    (  6  ,  10  ,  3  )     6  10  3    (6,10,3)   are maximal pairs, but    (  2  ,  10  ,  3  )     2  10  3    (2,10,3)   is not, as y follows both substrings. abc and abcy are maximal repeats, but only abcy is a supermaximal repeat.  References    External links   Project for the computation of all maximal repeats in one ore more strings in Python , using suffix array .   "  Category:String (computer science)  Category:Formal languages     ↩     