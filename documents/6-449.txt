


Bijective numeration




Bijective numeration

Bijective numeration is any numeral system in which every non-negative integer can be represented in exactly one way using a finite string of digits. The name derives from this bijection (one-to-one correspondence) between the set of non-negative integers and the set of finite strings using a finite set of symbols (the "digits").
Most ordinary numeral systems, such as the common decimal system, are not bijective because more than one string of digits can represent the same positive integer. In particular, adding leading zeroes does not change the value represented, so "1", "01" and "001" all represent the number one. Even though only the first is usual, the fact that the others are possible means that decimal is not bijective. However, unary, with only one digit, is bijective.
A bijective base-k numeration is a bijective positional notation. It uses a string of digits from the set {1, 2, ..., k} (where k ≥ 1) to encode each positive integer; a digit's position in the string defines its value as a multiple of a power of k.  calls this notation k-adic, but it should not be confused with the p-adic numbers: bijective numerals are a system for representing ordinary integers by finite strings of nonzero digits, whereas the p-adic numbers are a system of mathematical values that contain the integers as a subset and may need infinite sequences of digits in any numerical representation.
Definition
The base-k bijective numeration system uses the digit-set {1, 2, ..., k} (k ≥ 1) to uniquely represent every non-negative integer, as follows:

The integer zero is represented by the empty string.


The integer represented by the nonempty digit-string



anan−1 ... a1a0



is
 
an kn + an−1 kn−1 + ... + a1 k1 + a0 k0.
 




The digit-string representing the integer m > 0 is



anan−1 ... a1a0





where
 







\begin{align} a_0 & = & m - q_0 k , & & q_0 & = & f\left(\frac m k \right) & \\ a_1 & = & q_0 - q_1 k , & & q_1 & = & f\left(\frac {q_0} k \right) & \\ a_2 & = & q_1 - q_2 k , & & q_2 & = & f\left(\frac {q_1} k \right) & \\
   & \vdots &          & &     & \vdots & & \\
a_n & = & q_{n-1} - 0 k , & & q_n & = & f\left(\frac {q_{n-1}} k \right) & = 0 \end{align} 

and
 





 
 ,
 





 
  being the least integer not less than x (the ceiling function).
Properties of bijective base-k numerals
For a given base k ≥ 1,

there are exactly kn bijective base-k numerals of length n ≥ 0.


if k > 1, the number of digits in the bijective base-k numeral representing a nonnegative integer n is 

, in contrast to 

 for ordinary base-k numerals; if k = 1 (i.e., unary), then the number of digits is just n;


a list of bijective base-k numerals, in natural order of the integers represented, is automatically in shortlex order (shortest first, lexicographical within each length). Thus, using ε to denote the empty string, the base-1, -2, -3, and -10 numerals are as follows (where the ordinary binary and decimal representations are listed for comparison):





bijective base-1:

 ε 

 1 

 11 

 111 

 1111 

 11111 

 ... 

(unary numeral system)





bijective base-2:

 ε 

 1 

 2 

 11 

 12 

 21 

 22 

 111 



binary:

 0 

 1 

 10 

 11 

 100 

 101 

 110 

 111 



bijective base-3:

 ε 

 1 

 2 

 3 

 11 

 12 

 13 

 21 



bijective base-10:

 ε 

 1 

 2 

 3 

 4 

 5 

 6 

 7 



decimal:

 0 

 1 

 2 

 3 

 4 

 5 

 6 

 7 



Examples

34152 (in bijective base-5) = 3×54 + 4×53 + 1×52 + 5×51 + 2×1 = 2427 (in decimal).
 


119A (in bijective base-10, with "A" representing the digit value ten) = 1×103 + 1×102 + 9×101 + 10×1 = 1200 (in decimal).
 

The bijective base-10 system
The bijective base-10 system is a base ten positional numeral system that does not use a digit to represent zero. It instead has a digit to represent ten, such as A.
As with conventional decimal, each digit position represents a power of ten, so for example 123 is "one hundred, plus two tens, plus three units." All positive integers that are represented solely with non-zero digits in conventional decimal (such as 123) have the same representation in decimal without a zero. Those that use a zero must be rewritten, so for example 10 becomes A, conventional 20 becomes 1A, conventional 100 becomes 9A, conventional 101 becomes A1, conventional 302 becomes 2A2, conventional 1000 becomes 99A, conventional 1110 becomes AAA, conventional 2010 becomes 19AA, and so on.
Addition and multiplication in decimal without a zero are essentially the same as with conventional decimal, except that carries occur when a position exceeds ten, rather than when it exceeds nine. So to calculate 643 + 759, there are twelve units (write 2 at the right and carry 1 to the tens), ten tens (write A with no need to carry to the hundreds), thirteen hundreds (write 3 and carry 1 to the thousands), and one thousand (write 1), to give the result 13A2 rather than the conventional 1402.
The bijective base-26 system
In the bijective base-26 system one may uses the Roman alphabet letters "A" to "Z" to represent the 26 digit values one to twenty-six.
With this choice of notation, the number sequence (starting from 1) begins A, B, C, ..., X, Y, Z, AA, AB, AC, ..., AX, AY, AZ, BA, BB, BC, ...
Each digit position represents a power of twenty-six, so for example, the numeral ABC represents the value 
 
 
 
 .
Many spreadsheets including Microsoft Excel use this system to assign labels to the columns of a spreadsheet, starting A, B, C, ..., Z, AA, AB, ..., AZ, BA, ..., ZZ, AAA, etc. For instance, in Excel 2013, there can be up to 16384 columns, labeled from A to XFD.1 A variant of this system is used to name variable stars.2 It can be applied to any problem where a systematic naming using letters is desired, while using the shortest possible strings.
Historical notes
The fact that every non-negative integer has a unique representation in bijective base-k (k ≥ 1), is a "folk theorem" that has been rediscovered many times. Early instances are  for the case k = 10, and  and  for all k ≥ 1. Smullyan uses this system to provide a Gödel numbering of the strings of symbols in a logical system; Böhm uses these representations to perform computations in the programming language P′′.  mentions the special case of k = 10, and  discusses the cases k ≥ 2.  appears to be another rediscovery, and hypothesizes that if ancient numeration systems used bijective base-k, they might not be recognized as such in archaeological documents, due to general unfamiliarity with this system.
Notes
References


.

.

.

. (Discusses bijective base-10.)

. (Discusses bijective base-k for all k ≥ 2.)

.

"
Category:Numeral systems Category:Non-standard positional numeral systems



.↩
.↩




