   Happy number      Happy number  table.sourceCode, tr.sourceCode, td.lineNumbers, td.sourceCode {
   margin: 0; padding: 0; vertical-align: baseline; border: none; }
 <style>
 table.sourceCode { width: 100%; line-height: 100%; }
 td.lineNumbers { text-align: right; padding-right: 4px; padding-left: 4px; color: #aaaaaa; border-right: 1px solid #aaaaaa; }
 td.sourceCode { padding-left: 5px; }
 code > span.kw { color: #007020; font-weight: bold; } /* Keyword */
 code > span.dt { color: #902000; } /* DataType */
 code > span.dv { color: #40a070; } /* DecVal */
 code > span.bn { color: #40a070; } /* BaseN */
 code > span.fl { color: #40a070; } /* Float */
 code > span.ch { color: #4070a0; } /* Char */
 code > span.st { color: #4070a0; } /* String */
 code > span.co { color: #60a0b0; font-style: italic; } /* Comment */
 code > span.ot { color: #007020; } /* Other */
 code > span.al { color: #ff0000; font-weight: bold; } /* Alert */
 code > span.fu { color: #06287e; } /* Function */
 code > span.er { color: #ff0000; font-weight: bold; } /* Error */
 code > span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */
 code > span.cn { color: #880000; } /* Constant */
 code > span.sc { color: #4070a0; } /* SpecialChar */
 code > span.vs { color: #4070a0; } /* VerbatimString */
 code > span.ss { color: #bb6688; } /* SpecialString */
 code > span.im { } /* Import */
 code > span.va { color: #19177c; } /* Variable */
 code > span.cf { color: #007020; font-weight: bold; } /* ControlFlow */
 code > span.op { color: #666666; } /* Operator */
 code > span.bu { } /* BuiltIn */
 code > span.ex { } /* Extension */
 code > span.pp { color: #bc7a00; } /* Preprocessor */
 code > span.at { color: #7d9029; } /* Attribute */
 code > span.do { color: #ba2121; font-style: italic; } /* Documentation */
 code > span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */
 code > span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */
 code > span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */     A happy number is a number defined by the following process: Starting with any positive  integer , replace the number by the sum of the squares of its digits , and repeat the process until the number either equals 1 (where it will stay), or it loops endlessly in a cycle which does not include 1. Those numbers for which this process ends in 1 are happy numbers , while those that do not end in 1 are unhappy numbers (or sad numbers ). 1  Overview  More formally, given a number    n  =   n  0       n   subscript  n  0     n=n_{0}   , define a sequence    n  1     subscript  n  1    n_{1}   ,    n  2     subscript  n  2    n_{2}   , ... where    n   i  +  1      subscript  n    i  1     n_{i+1}   is the sum of the squares of the digits of    n  i     subscript  n  i    n_{i}   . Then n is happy if and only if there exists i such that     n  i   =  1       subscript  n  i   1    n_{i}=1   .  If a number is happy, then all members of its sequence are happy; if a number is unhappy, all members of the sequence are unhappy.  For example, 19 is happy, as the associated sequence is:   1 2 + 9 2 = 82  8 2 + 2 2 = 68  6 2 + 8 2 = 100  1 2 + 0 2 + 0 2 = 1.   The 143 happy numbers up to 1,000 are:   1, 7, 10, 13, 19, 23, 28, 31, 32, 44, 49, 68, 70, 79, 82, 86, 91, 94, 97, 100, 103, 109, 129, 130, 133, 139, 167, 176, 188, 190, 192, 193, 203, 208, 219, 226, 230, 236, 239, 262, 263, 280, 291, 293, 301, 302, 310, 313, 319, 320, 326, 329, 331, 338, 356, 362, 365, 367, 368, 376, 379, 383, 386, 391, 392, 397, 404, 409, 440, 446, 464, 469, 478, 487, 490, 496, 536, 556, 563, 565, 566, 608, 617, 622, 623, 632, 635, 637, 638, 644, 649, 653, 655, 656, 665, 671, 673, 680, 683, 694, 700, 709, 716, 736, 739, 748, 761, 763, 784, 790, 793, 802, 806, 818, 820, 833, 836, 847, 860, 863, 874, 881, 888, 899, 901, 904, 907, 910, 912, 913, 921, 923, 931, 932, 937, 940, 946, 964, 970, 973, 989, 998, 1000 .   The happiness of a number is unaffected by rearranging the digits, and by inserting or removing any number of zeros anywhere in the number.  The distinct combinations of digits that form happy numbers below 1,000 follow (the rest are just rearrangements and/or insertions of zero digits):   1, 7, 13, 19, 23, 28, 44, 49, 68, 79, 129, 133, 139, 167, 188, 226, 236, 239, 338, 356, 367, 368, 379, 446, 469, 478, 556, 566, 888, 899. .   Sequence behavior  Numbers that are happy, follow a sequence that ends in 1. All non-happy numbers follow sequences that reach the cycle:   4, 16, 37, 58, 89, 145, 42, 20, 4, ...   To see this fact, first note that if n has m digits, then the sum of the squares of its digits is at most     9  2   m       superscript  9  2   m    9^{2}m   , or    81  m      81  m    81m   .  For    m  =  4      m  4    m=4   and above,      n  ≥   10   m  -  1    >   81  m         n   superscript  10    m  1           81  m      n\geq 10^{m-1}>81m   so any number over 1000 gets smaller under this process and in particular becomes a number with strictly fewer digits. Once we are under 1000, the number for which the sum of squares of digits is largest is 999, and the result is 3 times 81, that is, 243.   In the range 100 to 243, the number 199 produces the largest next value, of 163.  In the range 100 to 163, the number 159 produces the largest next value, of 107.  In the range 100 to 107, the number 107 produces the largest next value, of 50.   Considering more precisely the intervals [244,999], [164,243], [108,163] and [100,107], we see that every number above 99 gets strictly smaller under this process. Thus, no matter what number we start with, we eventually drop below 100. An exhaustive search then shows that every number in the interval [1,99] either is happy or goes to the above cycle.  The above work produces the interesting result that no positive integer other than 1 is the sum of the squares of its own digits, since any such number would be a fixed point of the described process.  There are infinitely many happy numbers and infinitely many unhappy numbers. Consider the following proof:   1 is a happy number, and for every n , 10 n is happy since its sum is 1  and for every n , 2 × 10 n is unhappy since its sum is 4 and 4 is an unhappy number.   Indeed, the happiness of a number is preserved by removing or inserting zeroes at will, since they do not contribute to the cross sum. And as in the proof, especially by appending zeroes on the end of the number (by multiplying with 10 n ).  The first pair of consecutive happy numbers is 31, 32. 2 The first set of triplets is 1880, 1881, and 1882. 3  An interesting question is to wonder about the density of happy numbers. In the interval    [  1  ,   10  122   ]     1   superscript  10  122     [1,10^{122}]   , 15.5% (to three significant figures) are happy.  Happy primes  A happy prime is a number that is both happy and prime . The happy primes below 500 are   7, 13, 19, 23, 31, 79, 97, 103, 109, 139, 167, 193, 239, 263, 293, 313, 331, 367, 379, 383, 397, 409, 487 .   All numbers, and therefore all primes, of the form 10 n + 3 or 10 n + 9 for n greater than 0 are happy (This does not mean that these are the only happy primes, as evidenced by the sequence above). To see this, note that   All such numbers will have at least two digits;  The first digit will always be 1 due to the 10 n  The last digit will always be either 3 or 9 .  Any other digits will always be ''0 ''(and therefore will not contribute to the sum of squares of the digits).  The sequence for numbers ending in 3 is: 1 2 + 3 2 = 10 → 1 2 = 1  The sequence for numbers ending in 9 is: 1 2 + 9 2 = 82 → 8 2 + 2 2 = 64 + 4 = 68 → 6 2 + 8 2 = 36 + 64 = 100 -> 1    The palindromic prime 10 150006 + 7426247     ×    10  7   5000       absent     superscript  10  7   5000     \times 10^{7}5000   + 1 is also a happy prime with 150,007 digits because the many 0's do not contribute to the sum of squared digits, and      1  2   +   7  2   +   4  2   +   2  2   +   6  2   +   2  2   +   4  2   +   7  2   +   1  2    =  176         superscript  1  2    superscript  7  2    superscript  4  2    superscript  2  2    superscript  6  2    superscript  2  2    superscript  4  2    superscript  7  2    superscript  1  2    176    1^{2}+7^{2}+4^{2}+2^{2}+6^{2}+2^{2}+4^{2}+7^{2}+1^{2}=176   , which is a happy number. Paul Jobling discovered the prime in 2005. 4 , the largest known happy prime is     2  42643801   -  1       superscript  2  42643801   1    2^{42643801}-1   ( Mersenne prime ). Its decimal expansion has 12,837,064 digits. 5  Happy numbers in other bases  The definition of happy numbers depends on the decimal (i.e., base 10) representation of the numbers. The definition can be extended to other bases .  To represent numbers in other bases, we may use a subscript to the right to indicate the base. For instance,    100  2     subscript  100  2    100_{2}   represents the number 4, and       123  5   =    1  ⋅   5  2    +   2  ⋅  5   +  3   =  38.         subscript  123  5      normal-⋅  1   superscript  5  2     normal-⋅  2  5   3        38.     123_{5}=1\cdot 5^{2}+2\cdot 5+3=38.   Then, it is easy to see that there are happy numbers in every base. For instance, the numbers       1  b   ,   10  b   ,   100  b   ,   1000  b   ,  …      subscript  1  b    subscript  10  b    subscript  100  b    subscript  1000  b   normal-…    1_{b},10_{b},100_{b},1000_{b},...   are all happy, for any base b .  By a similar argument to the one above for decimal happy numbers, unhappy numbers in base b lead to cycles of numbers less than    1000  b     subscript  1000  b    1000_{b}   . If    n  <   1000  b       n   subscript  1000  b     n<1000_{b}   , then the sum of the squares of the base- b digits of n is less than or equal to      3    (   b  -  1   )   2       3   superscript    b  1   2     3(b-1)^{2}   which can be shown to be less than    b  3     superscript  b  3    b^{3}   , for    b  ≥  5      b  5    b\geq 5   . This shows that once the sequence reaches a number less than    1000  b     subscript  1000  b    1000_{b}   , it stays below    1000  b     subscript  1000  b    1000_{b}   , and hence must cycle or reach 1.  In base 2, all numbers are happy. All binary numbers larger than 1000 2 decay into a value equal to or less than 1000 2 , and all such values are happy: The following four sequences contain all numbers less than    1000  2     subscript  1000  2    1000_{2}   :       111  2   →   11  2   →   10  2   →  1       normal-→   subscript  111  2    subscript  11  2     normal-→     subscript  10  2     normal-→    1     111_{2}\rightarrow 11_{2}\rightarrow 10_{2}\rightarrow 1          110  2   →   10  2   →  1       normal-→   subscript  110  2    subscript  10  2     normal-→    1     110_{2}\rightarrow 10_{2}\rightarrow 1          101  2   →   10  2   →  1       normal-→   subscript  101  2    subscript  10  2     normal-→    1     101_{2}\rightarrow 10_{2}\rightarrow 1          100  2   →  1.     normal-→   subscript  100  2   1.    100_{2}\rightarrow 1.   Since all sequences end in 1, we conclude that all numbers are happy in base 2. This makes base 2 a happy base .  The only known happy bases are 2 and 4. There are no others less than 500,000,000. 6  Base 3 is also a special case in that the Happiness (or Sadness) of a number is an indication also of being odd (or Even). Specifically, because 3 - 1 = 2, the sum of every digit of a base 3 number will indicate divisibility by 2 IFF the sum of digits ends in 0 or 2. This is the general application of the test for 9-divisibility in base 10. Recall too that in Balanced Ternary , the digits are 1, -1 and 0. The square of both 1 and -1 are 1, and 1 + 1 is 2, which is the only Balanced Ternary cycle. For every pair of digits 1 or -1, their sum is 0 and the sum of their squares is 2 and if there are an even number of 1, -1 sets, the number divisible by 2 and Sad and if odd, it's Happy. In this case, the result always end in a one-digit cycle of 0, 1 or 2, repeated infinitely. In Unbalanced Ternary , the digits square to 1 and 4, and in this case there are 5 loops: 0, 1, 2→4→2, 5 and 8. While all even numbers are Sad because they end in the 0, 2 or 8 cycle, some odd numbers are also Sad because they end in 5 or 1, and are thus occasionally sad.  Cubing the digits rather than squaring  A variation to the happy numbers problem is to find the sum of the cubes of the digits rather than the sum of the squares of the digits. For example, working in base 10, 1579 is happy, since:   1 3 +5 3 +7 3 +9 3 =1+125+343+729=1198  1 3 +1 3 +9 3 +8 3 =1+1+729+512=1243  1 3 +2 3 +4 3 +3 3 =1+8+64+27=100  1 3 +0 3 +0 3 =1   In the same way that when summing the squares of the digits (and working in base 10) each number above 243(=3*81) produces a number which is strictly smaller, when summing the cubes of the digits each number above 2916(=4*729) produces a number which is strictly smaller.  By conducting an exhaustive search of [1,2916] one finds that for summing the cubes of digits base 10 there are happy numbers and eight different types of unhappy number:  those that eventually reach     153  ,  370  ,  371   ,     153  370  371    153,370,371,   or   407   407   407   which perpetually produce themselves.  those that eventually reach the loops:      133  →  55  →  250  →  133  →  55  →  250...       normal-→  133  55    normal-→    250    normal-→    133    normal-→    55    normal-→    250...     133\rightarrow 55\rightarrow 250\rightarrow 133\rightarrow 55\rightarrow 250...       217  →  352  →  160  →  217  →  352  →  160...       normal-→  217  352    normal-→    160    normal-→    217    normal-→    352    normal-→    160...     217\rightarrow 352\rightarrow 160\rightarrow 217\rightarrow 352\rightarrow 160%
 ...   ,  as well as those that alternate between   1459   1459   1459   and   919   919   919   or between   136   136   136   and   244   244   244   .  All multiples of three end in 153. This fact can be proved by the exhaustive search up and noting that a number is a multiple of three if and only if the sum of digits is a multiple of three if and only if the sum of its cubed digits are a multiple of three. By similar reasoning, all happy numbers when summing up odd powers (e.g. cubes, 5th powers, 7th powers, etc) of their digits must have a remainder of 1 when dividing by 3.  All numbers that are congruent to 2 (mod 3) end in either 371 or 407.  The only positive whole numbers which are the sum of the cubes of their digits are 1, 153, 370, 371 and 407 .  Higher powers  For higher powers, not many happy numbers exist.  For fourth powers, at least, in the range 1 through 100, for example, only 1 and 10 are happy.  Taking the sum of the fourth powers of the digits, one can find that most numbers end in the loop:  13139, 6725, 4338, 4514, 1138, 4179, 9219, 13139, 6725, 4338, 4514, 1138, 4179, 9219, etc.  as well as those that end in 2178, 6514, 2178, 6514... as well as    1634  ,  8208     1634  8208    1634,8208   , or   9474   9474   9474   which perpetually produce themselves.  Origin  The origin of happy numbers is not clear. Happy numbers were brought to the attention of Reg Allenby (a British author and Senior Lecturer in pure mathematics at Leeds University ) by his daughter, who had learned of them at school. However, they "may have originated in Russia" .  Popular culture  In the 2007 Doctor Who episode " 42 ", a sequence of happy primes (313, 331, 367, 379) is used as a code for unlocking a sealed door on a spaceship about to collide with a star. When the Doctor learns that nobody on the spaceship besides himself has heard of happy numbers, he asks, "Don't they teach recreational mathematics anymore?"  The contestants in the 2012 University Challenge final were asked to identify a sequence of numbers as happy primes in a picture round.  Programming example  The examples below apply the 'happy' process described in the definition of happy given at the top of this article, repeatedly; after each time, they check for both halt conditions: reaching 1, and repeating a number. Everything else is book-keeping (for example, the Python example precomputes the squares of all 10 digits).  A simple test in Python to check if a number is happy: 7  def square(x): return  int (x) *  int (x) def happy(number): return  sum ( map (square, list ( str (number)))) def is_happy(number):
     seen_numbers =  set () while number >  1  and (number not  in seen_numbers):
         seen_numbers.add(number)
         number = happy(number) return number ==  1  When the algorithm ends in a cycle of repeating numbers, this cycle always includes the number 4, so it is not even necessary to store previous numbers in the sequence:  def is_happy(number): if number ==  1 : return  True  elif number ==  4 : return  False  else : return is_happy(happy(number))  See also   Fortunate number  Harshad number  Lucky number   References  Literature     External links   Schneider, Walter: Mathews: Happy Numbers.   Happy Numbers at The Math Forum.  145 and the Melancoil at Numberphile.    "  Category:Base-dependent integer sequences  Category:Recreational mathematics     ↩  ↩  ↩  ↩  ↩  ↩  Happy Number Rosetta Code ↩    