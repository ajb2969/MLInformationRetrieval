   Frank–Wolfe algorithm      Frank–Wolfe algorithm   The Frank–Wolfe algorithm is an iterative  first-order  optimization  algorithm for constrained  convex optimization . Also known as the conditional gradient method , 1  reduced gradient algorithm and the convex combination algorithm , the method was originally proposed by Marguerite Frank and Philip Wolfe in 1956. 2 In each iteration, the Frank–Wolfe algorithm considers a linear approximation of the objective function, and moves slightly towards a minimizer of this linear function (taken over the same domain).  Problem statement  Suppose   𝒟   𝒟   \mathcal{D}   is a compact  convex set in a vector space and    f  :   𝒟  →  ℝ      normal-:  f   normal-→  𝒟  ℝ     f\colon\mathcal{D}\to\mathbb{R}   is a convex  differentiable  real-valued function . The Frank–Wolfe algorithm solves the optimization problem   Minimize    f   (  𝐱  )       f  𝐱    f(\mathbf{x})     subject to    𝐱  ∈  𝒟      𝐱  𝒟    \mathbf{x}\in\mathcal{D}   .   Algorithm  (Figure)  A step of the Frank–Wolfe algorithm    Initialization: Let    k  ←  0     normal-←  k  0    k\leftarrow 0   , and let     𝐱  0      subscript  𝐱  0    \mathbf{x}_{0}\!   be any point in   𝒟   𝒟   \mathcal{D}   .    Step 1.  Direction-finding subproblem: Find    𝐬  k     subscript  𝐬  k    \mathbf{s}_{k}   solving  Minimize     𝐬  T    ∇  f    (   𝐱  k   )        superscript  𝐬  T    normal-∇  f    subscript  𝐱  k     \mathbf{s}^{T}\nabla f(\mathbf{x}_{k})     Subject to    𝐬  ∈  𝒟      𝐬  𝒟    \mathbf{s}\in\mathcal{D}       (Interpretation: Minimize the linear approximation of the problem given by the first-order Taylor approximation of   f   f   f   around     𝐱  k      subscript  𝐱  k    \mathbf{x}_{k}\!   .)     Step 2.  Step size determination: Set    γ  ←   2   k  +  2       normal-←  γ    2    k  2      \gamma\leftarrow\frac{2}{k+2}   , or alternatively find   γ   γ   \gamma   that minimizes    f   (    𝐱  k   +   γ   (    𝐬  k   -   𝐱  k    )     )       f     subscript  𝐱  k     γ     subscript  𝐬  k    subscript  𝐱  k        f(\mathbf{x}_{k}+\gamma(\mathbf{s}_{k}-\mathbf{x}_{k}))   subject to    0  ≤  γ  ≤  1        0  γ       1     0\leq\gamma\leq 1   .    Step 3.  Update: Let     𝐱   k  +  1    ←    𝐱  k   +   γ   (    𝐬  k   -   𝐱  k    )        normal-←   subscript  𝐱    k  1       subscript  𝐱  k     γ     subscript  𝐬  k    subscript  𝐱  k        \mathbf{x}_{k+1}\leftarrow\mathbf{x}_{k}+\gamma(\mathbf{s}_{k}-\mathbf{x}_{k})   , let    k  ←   k  +  1      normal-←  k    k  1     k\leftarrow k+1   and go to Step 1.   Properties  While competing methods such as gradient descent for constrained optimization require a projection step back to the feasible set in each iteration, the Frank–Wolfe algorithm only needs the solution of a linear problem over the same set in each iteration, and automatically stays in the feasible set.  The convergence of the Frank–Wolfe algorithm is sublinear in general: the error to the optimum is    O   (   1  /  k   )       O    1  k     O(1/k)   after k iterations. The same convergence rate can also be shown if the sub-problems are only solved approximately. 3  The iterates of the algorithm can always be represented as a sparse convex combination of the extreme points of the feasible set, which has helped to the popularity of the algorithm for sparse greedy optimization in machine learning and signal processing problems, 4 as well as for example the optimization of minimum–cost flows in transportation networks . 5  If the feasible set is given by a set of linear constraints, then the subproblem to be solved in each iteration becomes a linear program .  While the worst-case convergence rate with    O   (   1  /  k   )       O    1  k     O(1/k)   can not be improved in general, faster convergence can be obtained for special problem classes, such as some strongly convex problems. 6  Lower bounds on the solution value, and primal-dual analysis  Since   f   f   f   is convex,    f   (  𝐲  )       f  𝐲    f(\mathbf{y})   is always above the tangent plane of   f   f   f   at any point    𝐱  ∈  𝒟      𝐱  𝒟    \mathbf{x}\in\mathcal{D}   :       f   (  𝐲  )    ≥    f   (  𝐱  )    +     (   𝐲  -  𝐱   )   T    ∇  f    (  𝐱  )           f  𝐲       f  𝐱      superscript    𝐲  𝐱   T    normal-∇  f   𝐱      f(\mathbf{y})\geq f(\mathbf{x})+(\mathbf{y}-\mathbf{x})^{T}\nabla f(\mathbf{x})     This holds in particular for the (unknown) optimal solution    𝐱  *     superscript  𝐱     \mathbf{x}^{*}   . The best lower bound with respect to a given point   𝐱   𝐱   \mathbf{x}   is given by       f   (   𝐱  *   )    ≥      min   𝐲  ∈  D    f    (  𝐱  )    +     (   𝐲  -  𝐱   )   T    ∇  f    (  𝐱  )     =     f   (  𝐱  )    -    𝐱  T    ∇  f    (  𝐱  )     +     min   𝐲  ∈  D     𝐲  T     ∇  f    (  𝐱  )             f   superscript  𝐱           subscript     𝐲  D    f   𝐱      superscript    𝐲  𝐱   T    normal-∇  f   𝐱               f  𝐱      superscript  𝐱  T    normal-∇  f   𝐱        subscript     𝐲  D     superscript  𝐲  T     normal-∇  f   𝐱       f(\mathbf{x}^{*})\geq\min_{\mathbf{y}\in D}f(\mathbf{x})+(\mathbf{y}-\mathbf{x%
 })^{T}\nabla f(\mathbf{x})=f(\mathbf{x})-\mathbf{x}^{T}\nabla f(\mathbf{x})+%
 \min_{\mathbf{y}\in D}\mathbf{y}^{T}\nabla f(\mathbf{x})     The latter optimization problem is solved in every iteration of the Frank–Wolfe algorithm, therefore the solution    𝐬  k     subscript  𝐬  k    \mathbf{s}_{k}   of the direction-finding subproblem of the   k   k   k   -th iteration can be used to determine increasing lower bounds    l  k     subscript  l  k    l_{k}   during each iteration by setting     l  0   =   -  ∞        subscript  l  0         l_{0}=-\infty   and       l  k   :=   max   (   l   k  -  1    ,    f   (   𝐱  k   )    +     (    𝐬  k   -   𝐱  k    )   T    ∇  f    (   𝐱  k   )     )       assign   subscript  l  k      subscript  l    k  1        f   subscript  𝐱  k       superscript     subscript  𝐬  k    subscript  𝐱  k    T    normal-∇  f    subscript  𝐱  k        l_{k}:=\max(l_{k-1},f(\mathbf{x}_{k})+(\mathbf{s}_{k}-\mathbf{x}_{k})^{T}%
 \nabla f(\mathbf{x}_{k}))   Such lower bounds on the unknown optimal value are important in practice because they can be used as a stopping criterion, and give an efficient certificate of the approximation quality in every iteration, since always     l  k   ≤   f   (   𝐱  *   )    ≤   f   (   𝐱  k   )           subscript  l  k     f   superscript  𝐱            f   subscript  𝐱  k       l_{k}\leq f(\mathbf{x}^{*})\leq f(\mathbf{x}_{k})   .  It has been shown that this corresponding duality gap , that is the difference between    f   (   𝐱  k   )       f   subscript  𝐱  k     f(\mathbf{x}_{k})   and the lower bound    l  k     subscript  l  k    l_{k}   , decreases with the same convergence rate, i.e.       f   (   𝐱  k   )    -   l  k    =   O   (   1  /  k   )     .          f   subscript  𝐱  k     subscript  l  k      O    1  k      f(\mathbf{x}_{k})-l_{k}=O(1/k).     Notes  Bibliography    (Overview paper)  The Frank–Wolfe algorithm description   External links   Marguerite Frank giving a personal account of the history of the algorithm   See also   Proximal gradient methods   "  Category:Optimization algorithms and methods  Category:Iterative methods  Category:First order methods  Category:Gradient methods     ↩  ↩  ↩  ↩  ↩  ↩     