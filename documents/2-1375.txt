


Window function




Window function

In signal processing, a window function (also known as an apodization function or tapering function1) is a mathematical function that is zero-valued outside of some chosen interval. For instance, a function that is constant inside the interval and zero elsewhere is called a rectangular window, which describes the shape of its graphical representation. When another function or waveform/data-sequence is multiplied by a window function, the product is also zero-valued outside the interval: all that is left is the part where they overlap, the "view through the window".
Applications of window functions include spectral analysis, filter design, and beamforming. In typical applications, the window functions used are non-negative smooth "bell-shaped" curves,2 though rectangle, triangle, and other functions can be used.
A more general definition of window functions does not require them to be identically zero outside an interval, as long as the product of the window multiplied by its argument is square integrable, and, more specifically, that the function goes sufficiently rapidly toward zero.3
Applications
Applications of window functions include spectral analysis and the design of finite impulse response filters.
Spectral analysis
The Fourier transform of the function cos ωt is zero, except at frequency ±ω. However, many other functions and waveforms do not have convenient closed form transforms. Alternatively, one might be interested in their spectral content only during a certain time period.
In either case, the Fourier transform (or something similar) can be applied on one or more finite intervals of the waveform. In general, the transform is applied to the product of the waveform and a window function. Any window (including rectangular) affects the spectral estimate computed by this method.
(Figure)
Figure 1: Zoomed view of spectral leakage

Windowing
Windowing of a simple waveform like cos ωt causes its Fourier transform to develop non-zero values (commonly called spectral leakage) at frequencies other than ω. The leakage tends to be worst (highest) near ω and least at frequencies farthest from ω.
If the waveform under analysis comprises two sinusoids of different frequencies, leakage can interfere with the ability to distinguish them spectrally. If their frequencies are dissimilar and one component is weaker, then leakage from the larger component can obscure the weaker one’s presence. But if the frequencies are similar, leakage can render them unresolvable even when the sinusoids are of equal strength. The rectangular window has excellent resolution characteristics for sinusoids of comparable strength, but it is a poor choice for sinusoids of disparate amplitudes. This characteristic is sometimes described as low-dynamic-range.
At the other extreme of dynamic range are the windows with the poorest resolution and sensitivity, which is the ability to reveal relatively weak sinusoids in the presence of additive random noise. That is because the noise produces a stronger response with high-dynamic-range windows than with high-resolution windows. Therefore, high-dynamic-range windows are most often justified in wideband applications, where the spectrum being analyzed is expected to contain many different components of various amplitudes.
In between the extremes are moderate windows, such as Hamming and Hann. They are commonly used in narrowband applications, such as the spectrum of a telephone channel. In summary, spectral analysis involves a tradeoff between resolving comparable strength components with similar frequencies and resolving disparate strength components with dissimilar frequencies. That tradeoff occurs when the window function is chosen.
Discrete-time signals
When the input waveform is time-sampled, instead of continuous, the analysis is usually done by applying a window function and then a discrete Fourier transform (DFT). But the DFT provides only a coarse sampling of the actual DTFT spectrum. Figure 1 shows a portion of the DTFT for a rectangularly windowed sinusoid. The actual frequency of the sinusoid is indicated as "0" on the horizontal axis. Everything else is leakage, exaggerated by the use of a logarithmic presentation. The unit of frequency is "DFT bins"; that is, the integer values on the frequency axis correspond to the frequencies sampled by the DFT. So the figure depicts a case where the actual frequency of the sinusoid happens to coincide with a DFT sample,4 and the maximum value of the spectrum is accurately measured by that sample. When it misses the maximum value by some amount (up to 1/2 bin), the measurement error is referred to as scalloping loss (inspired by the shape of the peak). But the most interesting thing about this case is that all the other samples coincide with nulls in the true spectrum. (The nulls are actually zero-crossings, which cannot be shown on a logarithmic scale such as this.) So in this case, the DFT creates the illusion of no leakage. Despite the unlikely conditions of this example, it is a common misconception that visible leakage is some sort of artifact of the DFT. But since any window function causes leakage, its apparent absence (in this contrived example) is actually the DFT artifact.
(Figure)
This figure compares the processing losses of three window functions for sinusoidal inputs, with both minimum and maximum scalloping loss.

Noise bandwidth
The concepts of resolution and dynamic range tend to be somewhat subjective, depending on what the user is actually trying to do. But they also tend to be highly correlated with the total leakage, which is quantifiable. It is usually expressed as an equivalent bandwidth, B. It can be thought of as redistributing the DTFT into a rectangular shape with height equal to the spectral maximum and width B.Mathematically, the noise equivalent bandwidth of transfer function H is the bandwidth of an ideal rectangular filter with the same peak gain as H that would pass the same power with white noise input. In the units of frequency f (e.g. hertz), it is given by:


5 The more the leakage, the greater the bandwidth. It is sometimes called noise equivalent bandwidth or equivalent noise bandwidth, because it is proportional to the average power that will be registered by each DFT bin when the input signal contains a random noise component (or is just random noise). A graph of the power spectrum, averaged over time, typically reveals a flat noise floor, caused by this effect. The height of the noise floor is proportional to B. So two different window functions can produce different noise floors.
Processing gain and losses
In signal processing, operations are chosen to improve some aspect of quality of a signal by exploiting the differences between the signal and the corrupting influences. When the signal is a sinusoid corrupted by additive random noise, spectral analysis distributes the signal and noise components differently, often making it easier to detect the signal's presence or measure certain characteristics, such as amplitude and frequency. Effectively, the signal to noise ratio (SNR) is improved by distributing the noise uniformly, while concentrating most of the sinusoid's energy around one frequency. Processing gain is a term often used to describe an SNR improvement. The processing gain of spectral analysis depends on the window function, both its noise bandwidth (B) and its potential scalloping loss. These effects partially offset, because windows with the least scalloping naturally have the most leakage.
The figure at right depicts the effects of three different window functions on the same data set, comprising two equal strength sinusoids in additive noise. The frequencies of the sinusoids are chosen such that one encounters no scalloping and the other encounters maximum scalloping. Both sinusoids suffer less SNR loss under the Hann window than under the Blackman–Harris window. In general (as mentioned earlier), this is a deterrent to using high-dynamic-range windows in low-dynamic-range applications.
 
Filter design
Windows are sometimes used in the design of digital filters, in particular to convert an "ideal" impulse response of infinite duration, such as a sinc function, to a finite impulse response (FIR) filter design. That is called the window method.67
Symmetry and asymmetry
Window functions generated for digital filter design are symmetrical sequences, usually an odd length with a single maximum at the center. Windows for DFT/FFT usage, such as in spectral analysis, are often created by deleting the right-most coefficient of an odd-length, symmetrical window. Such truncated sequences are known as periodic.8 The deleted coefficient is effectively restored (by a virtual copy of the symmetrical left-most coefficient) when the truncated sequence is periodically extended (which is the time-domain equivalent of sampling the DTFT). A different way of saying the same thing is that the DFT "samples" the DTFT of the window at the exact points that are not affected by spectral leakage from the discontinuity. The advantage of this trick is that a 512 length window (for example) enjoys the slightly better performance metrics of a 513 length design. Such a window is generated by the Matlab function hann(512,'periodic'), for instance. To generate it with the formula in this article (below), the window length (N) is 513, and the 513th coefficient of the generated sequence is discarded.
Another type of asymmetric window, called DFT-even,9 is limited to even length sequences. The generated sequence is offset (cyclically) from its zero-phase counterpart by exactly half the sequence length. In the frequency domain, that corresponds to a multiplication by the trivial sequence (-1)k, which can have implementation advantages for windows defined by their frequency domain form. Compared to a symmetrical window, the DFT-even sequence has an offset of ½ sample. As illustrated in the figure at right, that means the asymmetry is limited to just one missing coefficient. Therefore, as in the periodic case, it is effectively restored (by a virtual copy of the symmetrical left-most coefficient) when the truncated sequence is periodically extended.
Applications for which windows should not be used
In some applications, it is preferable not to use a window function. For example:

In impact modal testing, when analyzing transient signals such as an excitation signal from hammer blow (see Impulse excitation technique), where most of the energy is located at the beginning of the recording. Using a non-rectangular window would attenuate most of the energy and spread the frequency response unnecessarily.10
A generalization of above, when measuring a self-windowing signal, such as an impulse, a shock response, a sine burst, a chirp burst, noise burst. Such signals are used in modal analysis. Applying a window function in this case would just deteriorate the signal-to-noise ratio.11
When measuring a pseudo-random noise (PRN) excitation signal with period T, and using the same recording period T. A PRN signal is periodic and therefore all spectral components of the signal will coincide with FFT bin centers with no leakage.12
When measuring a repetitive signal locked-in to the sampling frequency, for example measuring the vibration spectrum analysis during Shaft alignment, fault diagnosis of bearings, engines, gearboxes etc. Since the signal is repetitive, all spectral energy is confined to multiples of the base repetition frequency.
In an OFDM receiver, the input signal is directly multiplied by FFT without a window function. The frequency sub-carriers (aka symbols) are designed to align exactly to the FFT frequency bins. A cyclic prefix is usually added to the transmitted signal, allowing frequency-selective fading due to multipath to be modeled as circular convolution, thus avoiding intersymbol interference, which in OFDM is equivalent to spectral leakage.

A list of window functions
Terminology:

N represents the width, in samples, of a discrete-time, symmetrical window function  
 
 
 
   When N is an odd number, the non-flat windows have a singular maximum point. When N is even, they have a double maximum.


It is sometimes useful to express  
 
 
 
   as a sequence of samples of the lagged version of a zero-phase function:



 
   13

For instance, for even values of N we can describe the related DFT-even window as  
 
 
 
   as discussed in the previous section. The DFT of such a sequence, in terms of the DFT of the  
 
 
 
   sequence, is  
 
 



Each figure label includes the corresponding noise equivalent bandwidth metric (B),14 in units of DFT bins.

B-spline windows
B-spline windows can be obtained as k-fold convolutions of the rectangular window. They include the rectangular window itself (k = 1), the triangular window (k = 2) and the Parzen window (k = 4).15 Alternative definitions sample the appropriate normalized B-spline basis functions instead of convolving discrete-time windows. A kth order B-spline basis function is a piece-wise polynomial function of degree k−1 that is obtained by k-fold self-convolution of the rectangular function.
Rectangular window
(Figure)
Rectangular window; B = 1.0000.16

The rectangular window (sometimes known as the boxcar or Dirichlet window) is the simplest window, equivalent to replacing all but N values of a data sequence by zeros, making it appear as though the waveform suddenly turns on and off:



Other windows are designed to moderate these sudden changes because discontinuities have undesirable effects on the discrete-time Fourier transform (DTFT) and/or the algorithms that produce samples of the DTFT.1718
The rectangular window is the 1st order B-spline window as well as the 0th power cosine window. 
(Figure)
Triangular window (with L=N-1) or equivalently the Bartlett window; B = 1.3333.19

Triangular window
Triangular windows are given by:



where L can be N,2021 N+1,22 or N-1.23 The last one is also known as Bartlett window or Fejér window. All three definitions converge at large N.
The triangular window is the 2nd order B-spline window and can be seen as the convolution of two N/2 width rectangular windows. The Fourier transform of the result is the squared values of the transform of the half-width rectangular window. 
Parzen window
(Figure)
Parzen window; B = 1.92.24

The Parzen window, also known as the de la Vallée Poussin window,25 is the 4th order B-spline window given by:



Other polynomial windows
Welch window
 The Welch window consists of a single parabolic section:


 
 .26
The defining quadratic polynomial reaches a value of zero at the samples just outside the span of the window.
Generalized Hamming windows
Generalized Hamming windows are of the form:


 
 . They have only three non-zero DFT coefficients and share the benefits of a sparse frequency domain representation with higher-order generalized cosine windows.
Hann (Hanning) window
 
The Hann window named after Julius von Hann and also known as the Hanning (for being similar in name and form to the Hamming window), von Hann and the raised cosine window is defined by:2728




zero-phase version:



 
  The ends of the cosine just touch zero, so the side-lobes roll off at about 18 dB per octave.29 
Hamming window
(Figure)
Hamming window, α = 0.53836 and β = 0.46164; B = 1.37. The original Hamming window would have α = 0.54 and β = 0.46; B = 1.3628.30

The window with these particular coefficients was proposed by Richard W. Hamming. The window is optimized to minimize the maximum (nearest) side lobe, giving it a height of about one-fifth that of the Hann window.3132


 
  with


 
  instead of both constants being equal to 1/2 in the Hann window. The constants are approximations of values α = 25/46 and β = 21/46, which cancel the first sidelobe of the Hann window by placing a zero at frequency 5π/(N − 1).33 Approximation of the constants to two decimal places substantially lowers the level of sidelobes,34 to a nearly equiripple condition.35 In the equiripple sense, the optimal values for the coefficients are α = 0.53836 and β = 0.46164.3637

zero-phase version:




Higher-order generalized cosine windows
Windows of the form:


 
  have only 2K + 1 non-zero DFT coefficients, which makes them good choices for applications that require windowing by convolution in the frequency-domain. In those applications, the DFT of the unwindowed data vector is needed for a different purpose than spectral analysis. (see Overlap-save method). Generalized cosine windows with just two terms (K = 1) belong in the subfamily generalized Hamming windows.
Blackman windows
(Figure)
Blackman window; α = 0.16; B = 1.73.38

Blackman windows are defined as:






By common convention, the unqualified term Blackman window refers to α = 0.16, as this most closely approximates the "exact Blackman",39 with a0 = 7938/18608 ≈ 0.42659, a1 = 9240/18608 ≈ 0.49656, and a2 = 1430/18608 ≈ 0.076849.40 These exact values place zeros at the third and fourth sidelobes.41 
Nuttall window, continuous first derivative
(Figure)
Nuttall window, continuous first derivative; B = 2.0212.42

Considering n as a real number, the Nuttall window function and its first derivative are continuous everywhere. That is, the function goes to 0 at n = 0, unlike the Blackman–Nuttall and Blackman–Harris windows, which have a small positive value at zero (at "step" from the zero outside the window), like the Hamming window. The Blackman window defined via α is also continuous with continuous derivative at the edge, but the described "exact Blackman window" is not.






Blackman–Nuttall window
(Figure)
Blackman–Nuttall window; B = 1.9761.43







Blackman–Harris window
(Figure)
Blackman–Harris window; B = 2.0044.44

A generalization of the Hamming family, produced by adding more shifted sinc functions, meant to minimize side-lobe levels4546






Flat top window
 A flat top window is a partially negative-valued window that has a flat top in the frequency domain.47 Such windows have been made available in spectrum analyzers for the measurement of amplitudes of sinusoidal frequency components.48 They have a low amplitude measurement error suitable for this purpose, achieved by the spreading of the energy of a sine wave over multiple bins in the spectrum.4950 This ensures that the unattenuated amplitude of the sinusoid can be found on at least one of the neighboring bins.51 The drawback of the broad bandwidth is poor frequency resolution.5253 To compensate, a longer window length may be chosen.54
Flat top windows can be designed using low-pass filter design methods,55 or they may be of the usual sum-of-cosine-terms variety.56 An example of the latter is the flat top window available in the Stanford Research Systems (SRS) SR785 spectrum analyzer:





57 
Rife–Vincent window
Rife and Vincent define three classes of windows constructed as sums of cosines; the classes are generalizations of the Hanning window.58 Their order-P windows are of the form (normalized to have unity average as opposed to unity max as the windows above are):


 
 .
For order 1, this formula can match the Hanning window for a1 = −1; this is the Rife–Vincent class-I window, defined by minimizing the high-order sidelobe amplitude. The class-I order-2 Rife–Vincent window has a1 = −4/3 and a2 = 1/3. Coefficients for orders up to 4 are tabulated.59 For orders greater than 1, the Rife–Vincent window coefficients can be optimized for class II, meaning minimized main-lobe width for a given maximum side-lobe, or for class III, a compromise for which order 2 resembles Blackmann's window.6061 Given the wide variety of Rife–Vincent windows, plots are not given here.
Power-of-cosine windows
Window functions in the power-of-cosine family are of the form:



The rectangular window (α = 0), the cosine window (α = 1), and the Hann window (α = 2) are members of this family.
Cosine window
(Figure)
Cosine window; B = 1.23.62




The cosine window is also known as the sine window. Cosine window describes the shape of 
 
 

A cosine window convolved by itself is known as the Bohman window.
Adjustable windows
Gaussian window
 The Fourier transform of a Gaussian is also a Gaussian (it is an eigenfunction of the Fourier Transform). Since the Gaussian function extends to infinity, it must either be truncated at the ends of the window, or itself windowed with another zero-ended window.63
Since the log of a Gaussian produces a parabola, this can be used for nearly exact quadratic interpolation in frequency estimation.646566






The standard deviation of the Gaussian function is σ(N−1)/2 sampling periods. 
(Figure)
Confined Gaussian window, σt = 0.1N; B = 1.9982.

Confined Gaussian window
The confined Gaussian window yields the smallest possible root mean square frequency width σω for a given temporal width σt.67 These windows optimize the RMS time-frequency bandwidth products. They are computed as the minimum eigenvectors of a parameter-dependent matrix. The confined Gaussian window family contains the cosine window and the Gaussian window in the limiting cases of large and small σt, respectively. 
(Figure)
Approximate confined Gaussian window, σt = 0.1N; B = 1.9979.

Approximate confined Gaussian window
A confined Gaussian window of temporal width σt is well approximated by:68



with the Gaussian:



The temporal width of the approximate window is asymptotically equal to σt for σt  
Generalized normal window
A more generalized version of the Gaussian window is the generalized normal window.69 Retaining the notation from the Gaussian window above, we can represent this window as


 
  for any even 
 
 
 
 . At 
 
 
 
 , this is a Gaussian window and as 
 
 
 
  approaches 
 
 
 
 , this approximates to a rectangular window. The Fourier transform of this window does not exist in a closed form for a general 
 
 
 
 . However, it demonstrates the other benefits of being smooth, adjustable bandwidth. Like the Tukey window discussed later, this window naturally offers a "flat top" to control the amplitude attenuation of a time-series (on which we don't have a control with Gaussian window). In essence, it offers a good (controllable) compromise, in terms of spectral leakage, frequency resolution and amplitude attenuation, between the Gaussian window and the rectangular window. See also 70 for a study on time-frequency representation of this window (or function).
Tukey window
(Figure)
Tukey window, α = 0.5; B = 1.22.71

The Tukey window,7273 also known as the tapered cosine window, can be regarded as a cosine lobe of width αN/2 that is convolved with a rectangular window of width (1 − α/2)N.


 
  At α = 0 it becomes rectangular, and at α = 1 it becomes a Hann window. 
Planck-taper window
(Figure)
Planck-taper window, ε = 0.1; B = 1.10.

The so-called "Planck-taper" window is a bump function that has been widely used74 in the theory of partitions of unity in manifolds. It is a 

 
  function everywhere, but is exactly zero outside of a compact region, exactly one over an interval within that region, and varies smoothly and monotonically between those limits. Its use as a window function in signal processing was first suggested in the context of gravitational-wave astronomy, inspired by the Planck distribution.75 It is defined as a piecewise function:


 
  where


 
  The amount of tapering (the region over which the function is exactly 1) is controlled by the parameter ε, with smaller values giving sharper transitions.
DPSS or Slepian window
 
The DPSS (discrete prolate spheroidal sequence) or Slepian window is used to maximize the energy concentration in the main lobe.76
The main lobe ends at a bin given by the parameter α.77 
Kaiser window
 
The Kaiser, or Kaiser-Bessel, window is a simple approximation of the DPSS window using Bessel functions, discovered by Jim Kaiser.7879



where I0 is the zero-th order modified Bessel function of the first kind. Variable parameter α determines the tradeoff between main lobe width and side lobe levels of the spectral leakage pattern. The main lobe width, in between the nulls, is given by  
 
 
 
   in units of DFT bins,80  and a typical value of α is 3.

Sometimes the formula for w(n) is written in terms of a parameter 
 
 
81


zero-phase version:




Dolph–Chebyshev window
(Figure)
Dolph–Chebyshev window, α = 5; B = 1.94.

Minimizes the Chebyshev norm of the side-lobes for a given main lobe width.82
The zero-phase Dolph–Chebyshev window function w0(n) is usually defined in terms of its real-valued discrete Fourier transform, W0(k):



where the parameter α sets the Chebyshev norm of the sidelobes to −20α decibels.83
The window function can be calculated from W0(k) by an inverse discrete Fourier transform (DFT):84



The lagged version of the window, with 0 ≤ n ≤ N−1, can be obtained by:



which for even values of N must be computed as follows:



which is an inverse DFT of  
 
 

Variations:

The DFT-even sequence (for even values of N) is given by  
 
 
 
   which is the inverse DFT of  
 
 
 
  85
Due to the equiripple condition, the time-domain window has discontinuities at the edges. An approximation that avoids them, by allowing the equiripples to drop off at the edges, is a Taylor window.
An alternative to the inverse DFT definition is also available.1. It isn't clear if it is the symmetric 
 
 
 
   or DFT-even  
 
 
 
 
  definition. But for typical values of N found in practice, the difference is negligible.

Ultraspherical window
 The Ultraspherical window was introduced in 1984 by Roy Streit86 and has application in antenna array design,87 non-recursive filter design,88 and spectrum analysis.89
Like other adjustable windows, the Ultraspherical window has parameters that can be used to control its Fourier transform main-lobe width and relative side-lobe amplitude. Uncommon to other windows, it has an additional parameter which can be used to set the rate at which side-lobes decrease (or increase) in amplitude.9091
The window can be expressed in the time-domain as follows:92



where 
 
 
 
  is the Ultraspherical polynomial of degree N, and 
 
 
 
  and 
 
 
 
  control the side-lobe patterns.93
Certain specific values of 
 
 
 
  yield other well-known windows
 
 
 
  and 
 
 
 
  give the Dolph–Chebyshev and Saramäki windows respectively.94 See here for illustration of Ultraspherical windows with varied parametrization. 
Exponential or Poisson window
 
The Poisson window, or more generically the exponential window increases exponentially towards the center of the window and decreases exponentially in the second half. Since the exponential function never reaches zero, the values of the window at its limits are non-zero (it can be seen as the multiplication of an exponential function by a rectangular window 95). It is defined by



where τ is the time constant of the function. The exponential function decays as e ≃ 2.71828 or approximately 8.69 dB per time constant.96 This means that for a targeted decay of D dB over half of the window length, the time constant τ is given by



Hybrid windows
Window functions have also been constructed as multiplicative or additive combinations of other windows.
Bartlett–Hann window
(Figure)
Bartlett–Hann window; B = 1.46.







Planck–Bessel window
(Figure)
Planck–Bessel window, ε = 0.1, α = 4.45; B = 2.16.

A Planck-taper window multiplied by a Kaiser window which is defined in terms of a modified Bessel function. This hybrid window function was introduced to decrease the peak side-lobe level of the Planck-taper window while still exploiting its good asymptotic decay.97 It has two tunable parameters, ε from the Planck-taper and α from the Kaiser window, so it can be adjusted to fit the requirements of a given signal.
Hann–Poisson window
 A Hann window multiplied by a Poisson window, which has no side-lobes, in the sense that its Fourier transform drops off forever away from the main lobe. It can thus be used in hill climbing algorithms like Newton's method.98 The Hann–Poisson window is defined by:



where α is a parameter that controls the slope of the exponential. 
Other windows
Lanczos window
(Figure)
Sinc or Lanczos window; B = 1.30.99





used in Lanczos resampling
for the Lanczos window, sinc(x) is defined as sin(πx)/(πx)
also known as a sinc window, because:





 
  is the main lobe of a normalized sinc function




Comparison of windows
(Figure)
Window functions in the frequency domain ("spectral leakage")

When selecting an appropriate window function for an application, this comparison graph may be useful. The frequency axis has units of FFT "bins" when the window of length N is applied to data and a transform of length N is computed. For instance, the value at frequency ½ "bin" (third tick mark) is the response that would be measured in bins k and k+1 to a sinusoidal signal at frequency k+½. It is relative to the maximum possible response, which occurs when the signal frequency is an integer number of bins. The value at frequency ½ is referred to as the maximum scalloping loss of the window, which is one metric used to compare windows. The rectangular window is noticeably worse than the others in terms of that metric.
Other metrics that can be seen are the width of the main lobe and the peak level of the sidelobes, which respectively determine the ability to resolve comparable strength signals and disparate strength signals. The rectangular window (for instance) is the best choice for the former and the worst choice for the latter. What cannot be seen from the graphs is that the rectangular window has the best noise bandwidth, which makes it a good candidate for detecting low-level sinusoids in an otherwise white noise environment. Interpolation techniques, such as zero-padding and frequency-shifting, are available to mitigate its potential scalloping loss.

Overlapping windows
When the length of a data set to be transformed is larger than necessary to provide the desired frequency resolution, a common practice is to subdivide it into smaller sets and window them individually. To mitigate the "loss" at the edges of the window, the individual sets may overlap in time. See Welch method of power spectral analysis and the modified discrete cosine transform.
Two-dimensional windows
Two-dimensional windows are used in, e.g., image processing. They can be constructed from one-dimensional windows in either of two forms.100
The separable form, 
 
 
 
  is trivial to compute. The radial form, 
 
 
 
 , which involves the radius 
 
 
 
 , is isotropic, independent on the orientation of the coordinate axes. Only the Gaussian function is both separable and isotropic.101 The separable forms of all other window functions have corners that depend on the choice of the coordinate axes. The isotropy/anisotropy of a two-dimensional window function is shared by its two-dimensional Fourier transform. The difference between the separable and radial forms is akin to the result of diffraction from rectangular vs. circular appertures, which can be visualized in terms of the product of two sinc functions vs. an Airy function, respectively.
See also

Spectral leakage
Multitaper
Apodization
Welch method
Short-time Fourier transform
Window design method
Kolmogorov–Zurbenko filter

Notes
References
Further reading


Extends Harris' paper, covering all the window functions known at the time, along with key metric comparisons.






External links

LabView Help, Characteristics of Smoothing Filters, http://zone.ni.com/reference/en-XX/help/371361B-01/lvanlsconcepts/char_smoothing_windows/


Evaluation of Various Window Function using Multi-Instrument, http://www.multi-instrument.com/doc/D1003/Evaluation_of_Various_Window_Functions_using_Multi-Instrument_D1003.pdf

"
Category:Statistical theory Category:Data analysis Category:Time series analysis Category:Fourier analysis Category:Signal processing Category:Digital signal processing Category:Types of functions






Another way of stating that condition is that the sinusoid happens to have an exact integer number of cycles within the length of the rectangular window. The periodic repetition of such a segment contains no discontinuities.

http://www.labbookpages.co.uk/audio/firWindowing.html
Mastering Windows: Improving Reconstruction
http://www.mathworks.com/help/signal/ref/hann.html

http://www.hpmemoryproject.org/an/pdf/an_243.pdf The Fundamentals of Signal Analysis Application Note 243

http://www.bksv.com/doc/bv0031.pdf Technical Review 1987-3 Use of Weighting Functions in DFT/FFT Analysis (Part I); Signals and Units




https://ccrma.stanford.edu/~jos/sasp/Properties.html
https://ccrma.stanford.edu/~jos/sasp/Rectangular_window_properties.html


http://www.mathworks.com/help/signal/ref/triang.html

https://ccrma.stanford.edu/~jos/sasp/Bartlett_Triangular_Window.html



http://www.mathworks.com/help/toolbox/signal/ref/hann.html
http://zone.ni.com/reference/en-XX/help/371361E-01/lvanls/hanning_window/
https://ccrma.stanford.edu/~jos/sasp/Hann_or_Hanning_or.html


https://ccrma.stanford.edu/~jos/sasp/Hamming_Window.html






http://mathworld.wolfram.com/BlackmanFunction.html
http://zone.ni.com/reference/en-XX/help/371361E-01/lvanlsconcepts/char_smoothing_windows/#Exact_Blackman




https://ccrma.stanford.edu/~jos/sasp/Blackman_Harris_Window_Family.html
https://ccrma.stanford.edu/~jos/sasp/Three_Term_Blackman_Harris_Window.html
















https://ccrma.stanford.edu/~jos/sasp/Gaussian_Window_Transform.html
https://ccrma.stanford.edu/~jos/sasp/Matlab_Gaussian_Window.html
https://ccrma.stanford.edu/~jos/sasp/Quadratic_Interpolation_Spectral_Peaks.html
https://ccrma.stanford.edu/~jos/sasp/Gaussian_Window_Transform_I.html


Debejyo Chakraborty and Narayan Kovvali Generalized Normal Window for Digital Signal Processing in IEEE International Conference on Acoustics, Speech and Signal Processing (ICASSP) 2013 6083 -- 6087 
Diethorn, E.J., "The generalized exponential time-frequency distribution," Signal Processing, IEEE Transactions on , vol.42, no.5, pp.1028,1037, May 1994 doi: 10.1109/78.295214

 The fundamental 1978 paper on FFT windows by Harris, which specified many windows and introduced key metrics used to compare them.



https://ccrma.stanford.edu/~jos/sasp/Slepian_DPSS_Window.html
https://ccrma.stanford.edu/~jos/sasp/Kaiser_DPSS_Windows_Compared.html

https://ccrma.stanford.edu/~jos/sasp/Kaiser_Window.html



https://ccrma.stanford.edu/~jos/sasp/Dolph_Chebyshev_Window.html














https://ccrma.stanford.edu/~jos/sasp/Hann_Poisson_Window.html

Matt A. Bernstein, Kevin Franklin King, Xiaohong Joe Zhou (2007), Handbook of MRI Pulse Sequences, Elsevier; p.495-499. [http://books.google.com/books?id=d6PLHcyejEIC&lpg;;=PA495&ots;=tcBHi9Obfy&dq;=image%20tapering%20tukey&pg;=PA496#v=onepage&q;&f;=false]





