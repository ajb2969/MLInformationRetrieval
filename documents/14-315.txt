   Multivariate kernel density estimation      Multivariate kernel density estimation  [[Kernel density estimation]] is a [[nonparametric]] technique for  [[density estimation]] i.e., estimation of [[probability density function]]s, which is one of the fundamental questions in [[statistics]]. It can be viewed as a generalisation of [[histogram]] density estimation with improved statistical properties. Apart from histograms, other types of density estimators include [[parametric statistics|parametric]], [[spline interpolation|spline]], [[wavelet]] and [[Fourier series]]. Kernel density estimators were first introduced in the scientific literature table.sourceCode, tr.sourceCode, td.lineNumbers, td.sourceCode {
   margin: 0; padding: 0; vertical-align: baseline; border: none; }
 <style>
 table.sourceCode { width: 100%; line-height: 100%; }
 td.lineNumbers { text-align: right; padding-right: 4px; padding-left: 4px; color: #aaaaaa; border-right: 1px solid #aaaaaa; }
 td.sourceCode { padding-left: 5px; }
 code > span.kw { color: #007020; font-weight: bold; } /* Keyword */
 code > span.dt { color: #902000; } /* DataType */
 code > span.dv { color: #40a070; } /* DecVal */
 code > span.bn { color: #40a070; } /* BaseN */
 code > span.fl { color: #40a070; } /* Float */
 code > span.ch { color: #4070a0; } /* Char */
 code > span.st { color: #4070a0; } /* String */
 code > span.co { color: #60a0b0; font-style: italic; } /* Comment */
 code > span.ot { color: #007020; } /* Other */
 code > span.al { color: #ff0000; font-weight: bold; } /* Alert */
 code > span.fu { color: #06287e; } /* Function */
 code > span.er { color: #ff0000; font-weight: bold; } /* Error */
 code > span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */
 code > span.cn { color: #880000; } /* Constant */
 code > span.sc { color: #4070a0; } /* SpecialChar */
 code > span.vs { color: #4070a0; } /* VerbatimString */
 code > span.ss { color: #bb6688; } /* SpecialString */
 code > span.im { } /* Import */
 code > span.va { color: #19177c; } /* Variable */
 code > span.cf { color: #007020; font-weight: bold; } /* ControlFlow */
 code > span.op { color: #666666; } /* Operator */
 code > span.bu { } /* BuiltIn */
 code > span.ex { } /* Extension */
 code > span.pp { color: #bc7a00; } /* Preprocessor */
 code > span.at { color: #7d9029; } /* Attribute */
 code > span.do { color: #ba2121; font-style: italic; } /* Documentation */
 code > span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */
 code > span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */
 code > span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */    for univariate data in the 1950s and 1960s 1 2 and subsequently have been widely adopted. It was soon recognised that analogous estimators for multivariate data would be an important addition to multivariate statistics . Based on research carried out in the 1990s and 2000s, multivariate kernel density estimation has reached a level of maturity comparable to its univariate counterparts. 3  Motivation  We take an illustrative synthetic  bivariate data set of 50 points to illustrate the construction of histograms. This requires the choice of an anchor point (the lower left corner of the histogram grid). For the histogram on the left, we choose (−1.5, −1.5): for the one on the right, we shift the anchor point by 0.125 in both directions to (−1.625, −1.625). Both histograms have a binwidth of 0.25, so any differences are due to the change in the anchor point only. The colour-coding indicates the number of data points which fall into a bin: 0=white, 1=pale yellow, 2=bright yellow, 3=orange, 4=red. The left histogram appears to indicate that the upper half has a higher density than the lower half, whereas it is the reverse is the case for the right-hand histogram, confirming that histograms are highly sensitive to the placement of the anchor point. 4  (Figure)  Comparison of 2D histograms. Left. Histogram with anchor point at (−1.5, -1.5). Right. Histogram with anchor point at (−1.625, −1.625). Both histograms have a bin width of 0.5, so differences in appearances of the two histograms are due to the placement of the anchor point.   One possible solution to this anchor point placement problem is to remove the histogram binning grid completely. In the left figure below, a kernel (represented by the grey lines) is centred at each of the 50 data points above. The result of summing these kernels is given on the right figure, which is a kernel density estimate. The most striking difference between kernel density estimates and histograms is that the former are easier to interpret since they do not contain artifices induced by a binning grid. The coloured contours correspond to the smallest region which contains the respective probability mass: red = 25%, orange + red = 50%, yellow + orange + red = 75%, thus indicating that a single central region contains the highest density.  (Figure)  Construction of 2D kernel density estimate. Left. Individual kernels. Right. Kernel density estimate.   The goal of density estimation is to take a finite sample of data and to make inferences about the underlying probability density function everywhere, including where no data are observed. In kernel density estimation, the contribution of each data point is smoothed out from a single point into a region of space surrounding it. Aggregating the individually smoothed contributions gives an overall picture of the structure of the data and its density function. In the details to follow, we show that this approach leads to a reasonable estimate of the underlying density function.  Definition  The previous figure is a graphical representation of kernel density estimate, which we now define in an exact manner. Let x 1 , x 2 , …, x n be a sample of d -variate random vectors drawn from a common distribution described by the density function  ƒ . The kernel density estimate is defined to be         f  ^   ℍ    (  𝕩  )    =    1  n     ∑   i  =  1   n     K  ℍ    (   𝕩  -   𝕩  i    )             subscript   normal-^  f   ℍ   𝕩       1  n     superscript   subscript     i  1    n      subscript  K  ℍ     𝕩   subscript  𝕩  i         \hat{f}_{\mathbb{H}}(\mathbb{x})=\frac{1}{n}\sum_{i=1}^{n}K_{\mathbb{H}}(%
 \mathbb{x}-\mathbb{x}_{i})   where   ( x 1 , x 2 , …, x d ) T }} , ( x i 1 , x i 2 , …, x id ) T , i {{=}} 1, 2, …, n }} are d -vectors;  H is the bandwidth (or smoothing) d×d matrix which is symmetric and positive definite ;  K is the kernel function which is a symmetric multivariate density;  {{!}} H {{!}} −1/2  K ( H −1/2 x )}} .   The choice of the kernel function K is not crucial to the accuracy of kernel density estimators, so we use the standard multivariate normal kernel throughout: (2 π ) − d /2 exp(− x T x )}} . On the other hand, the choice of the bandwidth matrix H is the single most important factor affecting its accuracy since it controls the amount and orientation of smoothing induced. 5 That the bandwidth matrix also induces an orientation is a basic difference between multivariate kernel density estimation from its univariate analogue since orientation is not defined for 1D kernels. This leads to the choice of the parametrisation of this bandwidth matrix. The three main parametrisation classes (in increasing order of complexity) are S , the class of positive scalars times the identity matrix; D , diagonal matrices with positive entries on the main diagonal; and F , symmetric positive definite matrices. The S class kernels have the same amount of smoothing applied in all coordinate directions, D kernels allow different amounts of smoothing in each of the coordinates, and F kernels allow arbitrary amounts and orientation of the smoothing. Historically S and D kernels are the most widespread due to computational reasons, but research indicates that important gains in accuracy can be obtained using the more general F class kernels. 6 7  (Figure)  Comparison of the three main bandwidth matrix parametrisation classes. Left. S positive scalar times the identity matrix. Centre. D diagonal matrix with positive entries on the main diagonal. Right. F symmetric positive definite matrix.   Optimal bandwidth matrix selection  The most commonly used optimality criterion for selecting a bandwidth matrix is the MISE or mean integrated squared error        MISE   (  ℍ  )    =   E   [   ∫      (      f  ^   ℍ    (  𝕩  )    -   f   (  𝕩  )     )   2    d   𝕩     ]     .       MISE  ℍ    normal-E       superscript       subscript   normal-^  f   ℍ   𝕩     f  𝕩    2   d  𝕩       \operatorname{MISE}(\mathbb{H})=\operatorname{E}\!\left[\,\int(\hat{f}_{%
 \mathbb{H}}(\mathbb{x})-f(\mathbb{x}))^{2}\,d\mathbb{x}\;\right].     This in general does not possess a closed-form expression , so it is usual to use its asymptotic approximation (AMISE) as a proxy       AMISE   (  ℍ  )    =     n   -  1      |  ℍ  |    -   1  /  2     R   (  K  )    +     1  4     m  2     (  K  )   2    (    vec  T   ℍ   )    Ψ  4    (   vec  ℍ   )          AMISE  ℍ        superscript  n    1     superscript    ℍ       1  2     R  K       1  4    subscript  m  2    superscript  K  2     superscript  vec  T   ℍ    subscript  double-struck-Ψ  4    vec  ℍ       \operatorname{AMISE}(\mathbb{H})=n^{-1}|\mathbb{H}|^{-1/2}R(K)+\tfrac{1}{4}m_{%
 2}(K)^{2}(\operatorname{vec}^{T}\mathbb{H})\mathbb{\Psi}_{4}(\operatorname{vec%
 }\mathbb{H})     where        R   (  K  )    =   ∫   K     (  𝕩  )   2    d  𝕩          R  K       K   superscript  𝕩  2   d  𝕩      R(K)=\int K(\mathbb{x})^{2}\,d\mathbb{x}   , with (4 π ) −d /2 }} when K is a normal kernel       ∫   𝕩   𝕩  T   K   (  𝕩  )   d  𝕩    =    m  2    (  K  )    𝕀  d            𝕩   superscript  𝕩  T   K  𝕩  d  𝕩       subscript  m  2   K   subscript  𝕀  d      \int\mathbb{x}\mathbb{x}^{T}K(\mathbb{x})\,d\mathbb{x}=m_{2}(K)\mathbb{I}_{d}   ,    with I d being the d × d  identity matrix , with m 2 = 1 for the normal kernel    D 2 ƒ is the d × d Hessian matrix of second order partial derivatives of ƒ       Ψ  4   =   ∫    (     vec   D  2    f    (  𝕩  )    )    (      vec  T    D  2    f    (  𝕩  )    )   d  𝕩         subscript  double-struck-Ψ  4           vec   superscript  normal-D  2    f   𝕩        superscript  vec  T    superscript  normal-D  2    f   𝕩   d  𝕩      \mathbb{\Psi}_{4}=\int(\operatorname{vec}\,\operatorname{D}^{2}f(\mathbb{x}))(%
 \operatorname{vec}^{T}\operatorname{D}^{2}f(\mathbb{x}))\,d\mathbb{x}   is a d 2 × d 2 matrix of integrated fourth order partial derivatives of ƒ  vec is the vector operator which stacks the columns of a matrix into a single vector e.g.      vec   [     a    c      b    d     ]    =    [     a    b    c    d     ]   T    .       vec    a  c    b  d      superscript    a  b  c  d    T     \operatorname{vec}\begin{bmatrix}a&c\\
 b&d\end{bmatrix}=\begin{bmatrix}a&b&c&d\end{bmatrix}^{T}.      The quality of the AMISE approximation to the MISE 8 is given by       MISE   (  ℍ  )    =    AMISE   (  ℍ  )    +   o   (     n   -  1      |  ℍ  |    -   1  /  2      +   tr   ℍ  2     )          MISE  ℍ      AMISE  ℍ     o       superscript  n    1     superscript    ℍ       1  2       tr   superscript  ℍ  2         \operatorname{MISE}(\mathbb{H})=\operatorname{AMISE}(\mathbb{H})+o(n^{-1}|%
 \mathbb{H}|^{-1/2}+\operatorname{tr}\,\mathbb{H}^{2})     where o indicates the usual small o notation . Heuristically this statement implies that the AMISE is a 'good' approximation of the MISE as the sample size n → ∞ .  It can be shown that any reasonable bandwidth selector H has H = O(n −2/(d+4) ) where the big O notation is applied elementwise. Substituting this into the MISE formula yields that the optimal MISE is O(n −4/(d+4) ). 9 Thus as n → ∞ , the MISE → 0, i.e. the kernel density estimate converges in mean square and thus also in probability to the true density f . These modes of convergence are confirmation of the statement in the motivation section that kernel methods lead to reasonable density estimators. An ideal optimal bandwidth selector is        ℍ  AMISE   =     argmin   ℍ  ∈  F      AMISE   (  ℍ  )      .       subscript  ℍ  AMISE     subscript  argmin    ℍ  F     AMISE  ℍ      \mathbb{H}_{\operatorname{AMISE}}=\operatorname{argmin}_{\mathbb{H}\in F}\,%
 \operatorname{AMISE}(\mathbb{H}).     Since this ideal selector contains the unknown density function ƒ , it cannot be used directly. The many different varieties of data-based bandwidth selectors arise from the different estimators of the AMISE. We concentrate on two classes of selectors which have been shown to be the most widely applicable in practise: smoothed cross validation and plug-in selectors.  Plug-in  The plug-in (PI) estimate of the AMISE is formed by replacing Ψ 4 by its estimator     Ψ  ^   4     subscript   normal-^  double-struck-Ψ   4    \hat{\mathbb{\Psi}}_{4}          PI   (  ℍ  )    =     n   -  1      |  ℍ  |    -   1  /  2     R   (  K  )    +     1  4     m  2     (  K  )   2    (    vec  T   ℍ   )     Ψ  ^   4    (  𝔾  )    (   vec  ℍ   )          PI  ℍ        superscript  n    1     superscript    ℍ       1  2     R  K       1  4    subscript  m  2    superscript  K  2     superscript  vec  T   ℍ    subscript   normal-^  double-struck-Ψ   4   𝔾   vec  ℍ       \operatorname{PI}(\mathbb{H})=n^{-1}|\mathbb{H}|^{-1/2}R(K)+\tfrac{1}{4}m_{2}(%
 K)^{2}(\operatorname{vec}^{T}\mathbb{H})\hat{\mathbb{\Psi}}_{4}(\mathbb{G})(%
 \operatorname{vec}\,\mathbb{H})     where       Ψ  ^   4    (  𝔾  )    =    n   -  2      ∑   i  =  1   n     ∑   j  =  1   n     [    (   vec   D  2    )    (    vec  T    D  2    )    ]    K  𝔾    (    𝕏  i   -   𝕏  j    )              subscript   normal-^  double-struck-Ψ   4   𝔾      superscript  n    2      superscript   subscript     i  1    n     superscript   subscript     j  1    n      delimited-[]     vec   superscript  normal-D  2      superscript  vec  T    superscript  normal-D  2       subscript  K  𝔾      subscript  𝕏  i    subscript  𝕏  j          \hat{\mathbb{\Psi}}_{4}(\mathbb{G})=n^{-2}\sum_{i=1}^{n}\sum_{j=1}^{n}[(%
 \operatorname{vec}\,\operatorname{D}^{2})(\operatorname{vec}^{T}\operatorname{%
 D}^{2})]K_{\mathbb{G}}(\mathbb{X}_{i}-\mathbb{X}_{j})   . Thus      ℍ  ^   PI   =     argmin   ℍ  ∈  F      PI   (  ℍ  )          subscript   normal-^  ℍ   PI     subscript  argmin    ℍ  F     PI  ℍ      \hat{\mathbb{H}}_{\operatorname{PI}}=\operatorname{argmin}_{\mathbb{H}\in F}\,%
 \operatorname{PI}(\mathbb{H})   is the plug-in selector. 10 11 These references also contain algorithms on optimal estimation of the pilot bandwidth matrix G and establish that     ℍ  ^   PI     subscript   normal-^  ℍ   PI    \hat{\mathbb{H}}_{\operatorname{PI}}    converges in probability to H AMISE .  Smoothed cross validation  Smoothed cross validation (SCV) is a subset of a larger class of cross validation techniques. The SCV estimator differs from the plug-in estimator in the second term       SCV   (  ℍ  )    =     n   -  1      |  ℍ  |    -   1  /  2     R   (  K  )    +    n   -  2      ∑   i  =  1   n     ∑   j  =  1   n     (     K    2  ℍ   +   2  𝔾     -   2   K   ℍ  +   2  𝔾       +   K   2  𝔾     )    (    𝕏  i   -   𝕏  j    )             SCV  ℍ        superscript  n    1     superscript    ℍ       1  2     R  K      superscript  n    2      superscript   subscript     i  1    n     superscript   subscript     j  1    n          subscript  K      2  ℍ     2  𝔾       2   subscript  K    ℍ    2  𝔾        subscript  K    2  𝔾        subscript  𝕏  i    subscript  𝕏  j           \operatorname{SCV}(\mathbb{H})=n^{-1}|\mathbb{H}|^{-1/2}R(K)+n^{-2}\sum_{i=1}^%
 {n}\sum_{j=1}^{n}(K_{2\mathbb{H}+2\mathbb{G}}-2K_{\mathbb{H}+2\mathbb{G}}+K_{2%
 \mathbb{G}})(\mathbb{X}_{i}-\mathbb{X}_{j})     Thus      ℍ  ^   SCV   =     argmin   ℍ  ∈  F      SCV   (  ℍ  )          subscript   normal-^  ℍ   SCV     subscript  argmin    ℍ  F     SCV  ℍ      \hat{\mathbb{H}}_{\operatorname{SCV}}=\operatorname{argmin}_{\mathbb{H}\in F}%
 \,\operatorname{SCV}(\mathbb{H})   is the SCV selector. 12 13 These references also contain algorithms on optimal estimation of the pilot bandwidth matrix G and establish that     ℍ  ^   SCV     subscript   normal-^  ℍ   SCV    \hat{\mathbb{H}}_{\operatorname{SCV}}   converges in probability to H AMISE .  Rule of thumb  Silverman's rule of thumb suggests using      𝐇   i  i     =     (   4   d  +  2    )    1   d  +  4      n    -  1    d  +  4      σ  i           subscript  𝐇    i  i        superscript    4    d  2      1    d  4      superscript  n      1     d  4      subscript  σ  i      \sqrt{\mathbf{H}_{ii}}=\left(\frac{4}{d+2}\right)^{\frac{1}{d+4}}n^{\frac{-1}{%
 d+4}}\sigma_{i}   where    σ  i     subscript  σ  i    \sigma_{i}   is the standard deviation of the ith variable and      𝐇   i  j    =  0   ,   i  ≠  j      formulae-sequence     subscript  𝐇    i  j    0     i  j     \mathbf{H}_{ij}=0,i\neq j   . Scott's rule is      𝐇   i  i     =    n    -  1    d  +  4      σ  i           subscript  𝐇    i  i        superscript  n      1     d  4      subscript  σ  i      \sqrt{\mathbf{H}_{ii}}=n^{\frac{-1}{d+4}}\sigma_{i}   .  Asymptotic analysis  In the optimal bandwidth selection section, we introduced the MISE. Its construction relies on the expected value and the variance of the density estimator 14        E   f  ^     (  𝕩  ;  ℍ  )    =     K  ℍ   *  f    (  𝕩  )    =    f   (  𝕩  )    +    1  2    m  2    (  K  )    ∫    tr   (   ℍ    D  2   f    (  𝕩  )    )     d  𝕩      +   O   (   tr   ℍ  2    )              normal-E   normal-^  f     𝕩  ℍ         subscript  K  ℍ   f   𝕩            f  𝕩       1  2    subscript  m  2   K      tr    ℍ    superscript  normal-D  2   f   𝕩      d  𝕩        O   tr   superscript  ℍ  2         \operatorname{E}\hat{f}(\mathbb{x};\mathbb{H})=K_{\mathbb{H}}*f(\mathbb{x})=f(%
 \mathbb{x})+\frac{1}{2}m_{2}(K)\int\operatorname{tr}(\mathbb{H}\operatorname{D%
 }^{2}f(\mathbb{x}))\,d\mathbb{x}+O(\operatorname{tr}\,\mathbb{H}^{2})     where * is the convolution operator between two functions, and         Var   f  ^     (  𝕩  ;  ℍ  )    =     n   -  1      |  ℍ  |    -   1  /  2     R   (  K  )    +   o   (    n   -  1      |  ℍ  |    -   1  /  2      )      .         Var   normal-^  f     𝕩  ℍ         superscript  n    1     superscript    ℍ       1  2     R  K     o     superscript  n    1     superscript    ℍ       1  2          \operatorname{Var}\hat{f}(\mathbb{x};\mathbb{H})=n^{-1}|\mathbb{H}|^{-1/2}R(K)%
 +o(n^{-1}|\mathbb{H}|^{-1/2}).     For these two expressions to be well-defined, we require that all elements of H tend to 0 and that n −1 | H | −1/2 tends to 0 as n tends to infinity. Assuming these two conditions, we see that the expected value tends to the true density f i.e. the kernel density estimator is asymptotically unbiased ; and that the variance tends to zero. Using the standard mean squared value decomposition        MSE   f  ^     (  𝕩  ;  ℍ  )    =     Var   f  ^     (  𝕩  ;  ℍ  )    +    [     E   f  ^     (  𝕩  ;  ℍ  )    -   f   (  𝕩  )     ]   2           MSE   normal-^  f     𝕩  ℍ         Var   normal-^  f     𝕩  ℍ     superscript   delimited-[]       normal-E   normal-^  f     𝕩  ℍ      f  𝕩     2      \operatorname{MSE}\,\hat{f}(\mathbb{x};\mathbb{H})=\operatorname{Var}\hat{f}(%
 \mathbb{x};\mathbb{H})+[\operatorname{E}\hat{f}(\mathbb{x};\mathbb{H})-f(%
 \mathbb{x})]^{2}     we have that the MSE tends to 0, implying that the kernel density estimator is (mean square) consistent and hence converges in probability to the true density f . The rate of convergence of the MSE to 0 is the necessarily the same as the MISE rate noted previously O(n −4/(d+4) ) , hence the covergence rate of the density estimator to f is O p (n −2/(d+4) ) where O p denotes order in probability . This establishes pointwise convergence. The functional covergence is established similarly by considering the behaviour of the MISE, and noting that under sufficient regularity, integration does not affect the convergence rates.  For the data-based bandwidth selectors considered, the target is the AMISE bandwidth matrix. We say that a data-based selector converges to the AMISE selector at relative rate O p (n −α ), α > 0 if        vec   (    ℍ  ^   -   ℍ  AMISE    )    =   O   (   n   -   2  α     )    vec   ℍ  AMISE      .       vec     normal-^  ℍ    subscript  ℍ  AMISE       O   superscript  n      2  α      vec   subscript  ℍ  AMISE       \operatorname{vec}(\hat{\mathbb{H}}-\mathbb{H}_{\operatorname{AMISE}})=O(n^{-2%
 \alpha})\operatorname{vec}\mathbb{H}_{\operatorname{AMISE}}.     It has been established that the plug-in and smoothed cross validation selectors (given a single pilot bandwidth G ) both converge at a relative rate of O p (n −2/(d+6) )  15 16 i.e., both these data-based selectors are consistent estimators.  Density estimation in R with a full bandwidth matrix  (Figure)  Old Faithful Geyser data kernel density estimate with plug-in bandwidth matrix.   The ks package 17 in R implements the plug-in and smoothed cross validation selectors (amongst others). This dataset (included in the base distribution of R) contains 272 records with two measurements each: the duration time of an eruption (minutes) and the waiting time until the next eruption (minutes) of the Old Faithful Geyser in Yellowstone National Park, USA.  The code fragment computes the kernel density estimate with the plug-in bandwidth matrix       ℍ  ^   PI   =   [     0.052    0.510      0.510    8.882     ]    .       subscript   normal-^  ℍ   PI     0.052  0.510    0.510  8.882      \hat{\mathbb{H}}_{\operatorname{PI}}=\begin{bmatrix}0.052&0.510\\
 0.510&8.882\end{bmatrix}.   Again, the coloured contours correspond to the smallest region which contains the respective probability mass: red = 25%, orange + red = 50%, yellow + orange + red = 75%. To compute the SCV selector, Hpi is replaced with Hscv . This is not displayed here since it is mostly similar to the plug-in estimate for this example.  library(ks)
 data(faithful)
 H <- Hpi(x=faithful)
 fhat <- kde(x=faithful, H=H)
 plot(fhat, display="filled.contour2")
 points(faithful, cex=0.5, pch=16)  Density estimation in R with a diagonal bandwidth matrix  (Figure)  Old Faithful Geyser data kernel density estimate with diagonal bandwidth matrix.   This example is again based on the Old Faithful Geyser, but this time we use the R np package that employs automatic (data-driven) bandwidth selection for a diagonal bandwidth matrix; see the np vignette for an introduction to the np package. The figure below shows the joint density estimate using a second order Gaussian kernel.  R script for the example  The following commands of the R programming language use the  function to deliver optimal smoothing and to create the figure given above. These commands can be entered at the command prompt by using copy and paste.  library(np)
  library(datasets)
  data(faithful)
  f <- npudens(~eruptions+waiting,data=faithful)
  plot(f,view="fixed",neval=100,phi=30,main="",xtrim=-0.2)  Computing kernel density estimates with diagonal bandwidth selectors is also available in the  library, using the  function. To produce a 3D plot similar to that from , the option  is added.  library(ks)
  data(faithful)
  H <- Hpi.diag(x=faithful)
  fhat <- kde(x=faithful, H=H)
  plot(fhat, display="persp")  Density estimation in Matlab with a diagonal bandwidth matrix  (Figure)  Kernel density estimate with diagonal bandwidth for synthetic normal mixture data.   We consider estimating the density of the Gaussian mixture , from 500 randomly generated points. We employ the Matlab routine for 2-dimensional data . The routine is an automatic bandwidth selection method specifically designed for a second order Gaussian kernel. 18 The figure shows the joint density estimate that results from using the automatically selected bandwidth.  Matlab script for the example  Type the following commands in Matlab after downloading and saving the function kde2d.m in the current directory.  clear all % generate synthetic data data=[randn( 500 , 2 );
       randn( 500 , 1 )+ 3.5 , randn( 500 , 1 );]; % call the routine, which has been saved in the current directory [bandwidth,density,X,Y]=kde2d(data); % plot the data and the density estimate contour3(X,Y,density, 50 ), hold on
     plot(data(:, 1 ),data(:, 2 ), 'r.' , 'MarkerSize' , 5 )  Alternative optimality criteria  The MISE is the expected integrated L 2 distance between the density estimate and the true density function f . It is the most widely used, mostly due to its tractability and most software implement MISE-based bandwidth selectors. There are alternative optimality criteria, which attempt to cover cases where MISE is not an appropriate measure. 19 The equivalent L 1 measure, Mean Integrated Absolute Error, is        MIAE   (  ℍ  )    =   E   ∫    |      f  ^   ℍ    (  𝕩  )    -   f   (  𝕩  )     |   d  𝕩      .       MIAE  ℍ     normal-E             subscript   normal-^  f   ℍ   𝕩     f  𝕩     d  𝕩       \operatorname{MIAE}(\mathbb{H})=\operatorname{E}\,\int|\hat{f}_{\mathbb{H}}(%
 \mathbb{x})-f(\mathbb{x})|\,d\mathbb{x}.     Its mathematical analysis is considerably more difficult than the MISE ones. In practise, the gain appears not to be significant. 20 The L ∞ norm is the Mean Uniform Absolute Error        MUAE   (  ℍ  )    =    E   sup  𝕩     |      f  ^   ℍ    (  𝕩  )    -   f   (  𝕩  )     |     .       MUAE  ℍ     normal-E   subscript  sup  𝕩           subscript   normal-^  f   ℍ   𝕩     f  𝕩        \operatorname{MUAE}(\mathbb{H})=\operatorname{E}\,\operatorname{sup}_{\mathbb{%
 x}}|\hat{f}_{\mathbb{H}}(\mathbb{x})-f(\mathbb{x})|.     which has been investigated only briefly. 21 Likelihood error criteria include those based on the Mean Kullback-Leibler distance       MKL   (  ℍ  )    =    ∫   f   (  𝕩  )     log   [   f   (  𝕩  )    ]     d  𝕩      -   E   ∫   f   (  𝕩  )     log   [    f  ^    (  𝕩  ;  ℍ  )    ]     d  𝕩             MKL  ℍ         f  𝕩    log    f  𝕩      d  𝕩        normal-E      f  𝕩    log     normal-^  f    𝕩  ℍ       d  𝕩          \operatorname{MKL}(\mathbb{H})=\int f(\mathbb{x})\,\operatorname{log}[f(%
 \mathbb{x})]\,d\mathbb{x}-\operatorname{E}\int f(\mathbb{x})\,\operatorname{%
 log}[\hat{f}(\mathbb{x};\mathbb{H})]\,d\mathbb{x}     and the Mean Hellinger distance        MH   (  ℍ  )    =   E   ∫      (      f  ^   ℍ     (  𝕩  )    1  /  2     -   f    (  𝕩  )    1  /  2      )   2    d  𝕩      .       MH  ℍ     normal-E       superscript       subscript   normal-^  f   ℍ    superscript  𝕩    1  2       f   superscript  𝕩    1  2      2   d  𝕩       \operatorname{MH}(\mathbb{H})=\operatorname{E}\int(\hat{f}_{\mathbb{H}}(%
 \mathbb{x})^{1/2}-f(\mathbb{x})^{1/2})^{2}\,d\mathbb{x}.     The KL can be estimated using a cross-validation method, although KL cross-validation selectors can be sub-optimal even if it remains consistent for bounded density functions. 22 MH selectors have been briefly examined in the literature. 23  All these optimality criteria are distance based measures, and do not always correspond to more intuitive notions of closeness, so more visual criteria have been developed in response to this concern. 24  See also   Kernel density estimation – univariate kernel density estimation.  Variable kernel density estimation – estimation of multivariate densities using the kernel with variable bandwidth   References  External links   mvstat.net A collection of peer-reviewed articles of the mathematical details of multivariate kernel density estimation and their bandwidth selectors on an  web page.  libagf A C++ library for multivariate, variable bandwidth kernel density estimation .   "  Category:Estimation of densities  Category:Non-parametric statistics  Category:Computational statistics  Category:Multivariate statistics  Category:Articles with example MATLAB/Octave code     ↩  ↩  ↩  ↩  ↩  ↩  ↩    ↩   ↩  ↩    ↩  ↩  ↩   ↩  ↩  ↩  ↩  ↩    