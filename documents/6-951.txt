   Creative and productive sets      Creative and productive sets   In computability theory , productive sets and creative sets are types of sets of natural numbers that have important applications in mathematical logic . They are a standard topic in mathematical logic textbooks such as  and .  Definition and example  For the remainder of this article, assume that    φ  i     subscript  φ  i    \varphi_{i}   is an acceptable numbering of the computable functions and W i the corresponding numbering of the recursively enumerable sets.  A set A of natural numbers is called productive if there exists a total recursive (computable) function   f   f   f   so that for all    i  ∈  ℕ      i  ℕ    i\in\mathbb{N}   , if     W  i   ⊆  A       subscript  W  i   A    W_{i}\subseteq A   then      f   (  i  )    ∈   A  ∖   W  i     .        f  i     A   subscript  W  i      f(i)\in A\setminus W_{i}.   The function   f   f   f   is called the productive function for    A  .    A   A.     A set A of natural numbers is called creative if A is recursively enumerable and its complement    ℕ  ∖  A      ℕ  A    \mathbb{N}\setminus A   is productive. Not every productive set has a recursively enumerable complement, however, as illustrated below.  The archetypal creative set is    K  =   {  i  ∣   i  ∈   W  i    }       K   conditional-set  i    i   subscript  W  i       K=\{i\mid i\in W_{i}\}   , the set representing the halting problem . Its complement     K  ¯   =   {  i  ∣   i  ∉   W  i    }        normal-¯  K    conditional-set  i    i   subscript  W  i       \bar{K}=\{i\mid i\not\in W_{i}\}   is productive with productive function f ( i ) = i (the identity function).  To see this, we apply the definition of productivity function and show separately that    i  ∈   K  ¯       i   normal-¯  K     i\in\bar{K}   and    i  ∉   W  i       i   subscript  W  i     i\not\in W_{i}   :       i  ∈   K  ¯       i   normal-¯  K     i\in\bar{K}   : suppose    i  ∈  K      i  K    i\in K   , then    i  ∈   W  i       i   subscript  W  i     i\in W_{i}   , now given that     W  i   ⊆   K  ¯        subscript  W  i    normal-¯  K     W_{i}\subseteq\bar{K}   we have    i  ∈   K  ¯       i   normal-¯  K     i\in\bar{K}   , this leads to a contradiction. So    i  ∈   K  ¯       i   normal-¯  K     i\in\bar{K}   .      i  ∉   W  i       i   subscript  W  i     i\not\in W_{i}   : in fact if    i  ∈   W  i       i   subscript  W  i     i\in W_{i}   , then it would be true that    i  ∈  K      i  K    i\in K   , but we have demonstrated the contrary in the previous point. So    i  ∉   W  i       i   subscript  W  i     i\not\in W_{i}   .   Properties  No productive set A can be recursively enumerable, because whenever A contains every number in an r.e. set W i it contains other numbers, and moreover there is an effective procedure to produce an example of such a number from the index i . Similarly, no creative set can be decidable , because this would imply that its complement, a productive set, is recursively enumerable.  Any productive set has a productive function that is injective and total .  The following theorems, due to Myhill (1955), show that in a sense all creative sets are like   K   K   K   and all productive sets are like    K  ¯     normal-¯  K    \bar{K}   . 1  Theorem. Let P be a set of natural numbers. The following are equivalent:   P is productive.      K  ¯     normal-¯  K    \bar{K}   is 1-reducible to P .      K  ¯     normal-¯  K    \bar{K}   is m-reducible to P .   Theorem. Let C be a set of natural numbers. The following are equivalent:   C is creative.  C is 1-complete  C is recursively isomorphic to K , that is, there is a total computable bijection  f on the natural numbers such that f ( C ) = K .   Applications in mathematical logic  The set of all provable sentences in an effective axiomatic system is always a recursively enumerable set . If the system is suitably complex, like first-order arithmetic , then the set T of Gödel numbers of true sentences in the system will be a productive set, which means that whenever W is a recursively enumerable set of true sentences, there is at least one true sentence that is not in W . This can be used to give a rigorous proof of Gödel's first incompleteness theorem , because no recursively enumerable set is productive. The complement of the set T will not be recursively enumerable, and thus T is an example of a productive set whose complement is not creative.  History  The seminal paper of  defined the concept he called a Creative set . Reiterating, the set   K   K   K   referenced above and defined as the domain of the function     d   (  x  )    =     [   [  x  ]   ]    (  x  )    +  1         d  x        delimited-[]   delimited-[]  x    x   1     d(x)=[[x]](x)+1   that takes the diagonal of all enumerated 1-place computable partial functions and adds 1 to them is an example of a creative set. 2 Post gave a version of Gödel's Incompleteness Theorem using his creative sets, where originally Gödel had in some sense constructed a sentence that could be freely translated as saying "I am unprovable in this axiomatic theory." However, Gödel's proof did not work from the concept of true sentences, and rather used the concept of a consistent theory, which led to the Second incompleteness theorem . After Post completed his version of incompleteness he then added the following:  "The conclusion is unescapable that even for such a fixed, well defined body of mathematical propositions, mathematical thinking is, and must remain, essentially creative." 3  The usual creative set   K   K   K   defined using the diagonal function    d   (  x  )       d  x    d(x)   has its own historical development. Alan Turing in a 1936 article on the Turing machine showed the existence of a universal computer that computes the   Φ   normal-Φ   \Phi   function. The function   Φ   normal-Φ   \Phi   is defined such that     Φ   (  w  ,  x  )    =         normal-Φ   w  x    absent    \Phi(w,x)=   ( the result of applying the instructions coded by    w   w   w    to the input    x   x   x   ), and is universal in the sense that any calculable partial function   f   f   f   is given by     f   (  x  )    =   Φ   (  e  ,  x  )          f  x     normal-Φ   e  x      f(x)=\Phi(e,x)   for all   x   x   x   where   e   e   e   codes the instructions for   f   f   f   . Using the above notation     Φ   (  e  ,  x  )    =    [   [  e  ]   ]    (  x  )          normal-Φ   e  x       delimited-[]   delimited-[]  e    x     \Phi(e,x)=[[e]](x)   , and the diagonal function arises quite naturally as     d   (  x  )    =     [   [  x  ]   ]    (  x  )    +  1         d  x        delimited-[]   delimited-[]  x    x   1     d(x)=[[x]](x)+1   . Ultimately, these ideas are connected to Church's thesis that says the mathematical notion of computable partial functions is the correct formalization of an effectively calculable partial function, which can neither be proved or disproved. Church used Lambda calculus , Turing an idealized computer, and later Emil Post in his approach, all of which are equivalent.  Notes  References    . Reprinted in 1982 by Dover Publications.   .   . Reprint of the 1967 original, Wiley, .   .    .   .   "  Category:Computability theory     ; . ↩  , pp. 79, 80, 120. ↩      