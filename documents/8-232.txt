   Linear-quadratic regulator      Linear-quadratic regulator   The theory of optimal control is concerned with operating a dynamic system at minimum cost. The case where the system dynamics are described by a set of linear differential equations and the cost is described by a quadratic  function is called the LQ problem. One of the main results in the theory is that the solution is provided by the linear-quadratic regulator (LQR) , a feedback controller whose equations are given below. The LQR is an important part of the solution to the LQG (Linear-Quadratic-Gaussian) problem . Like the LQR problem itself, the LQG problem is one of the most fundamental problems in control theory .  General description  This means that the settings of a (regulating) controller governing either a machine or process (like an airplane or chemical reactor) are found by using a mathematical algorithm that minimizes a cost function with weighting factors supplied by a human (engineer). The "cost" (function) is often defined as a sum of the deviations of key measurements from their desired values. In effect this algorithm finds those controller settings that minimize the undesired deviations, like deviations from desired altitude or process temperature. Often the magnitude of the control action itself is included in this sum so as to keep the energy expended by the control action itself limited.  In effect, the LQR algorithm takes care of the tedious work done by the control systems engineer in optimizing the controller. However, the engineer still needs to specify the weighting factors and compare the results with the specified design goals. Often this means that controller synthesis will still be an iterative process where the engineer judges the produced "optimal" controllers through simulation and then adjusts the weighting factors to get a controller more in line with the specified design goals.  The LQR algorithm is, at its core, just an automated way of finding an appropriate state-feedback controller . As such it is not uncommon to find that control engineers prefer alternative methods like full state feedback (also known as pole placement) to find a controller over the use of the LQR algorithm. With these the engineer has a much clearer linkage between adjusted parameters and the resulting changes in controller behavior. Difficulty in finding the right weighting factors limits the application of the LQR based controller synthesis.  Finite-horizon, continuous-time LQR  For a continuous-time linear system, defined on    t  ‚àà   [   t  0   ,   t  1   ]       t    subscript  t  0    subscript  t  1      t\in[t_{0},t_{1}]   , described by       x  Àô   =    A  x   +   B  u         normal-Àô  x       A  x     B  u      \dot{x}=Ax+Bu     with a quadratic cost function defined as      J  =     1  2    x  T    (   t  1   )   F   (   t  1   )   x   (   t  1   )    +    ‚à´   t  0    t  1      (     x  T   Q  x   +    u  T   R  u   +   2   x  T   N  u    )   d  t         J        1  2    superscript  x  T    subscript  t  1   F   subscript  t  1   x   subscript  t  1      superscript   subscript    subscript  t  0     subscript  t  1           superscript  x  T   Q  x      superscript  u  T   R  u     2   superscript  x  T   N  u    d  t       J=\frac{1}{2}x^{T}(t_{1})F(t_{1})x(t_{1})+\int\limits_{t_{0}}^{t_{1}}\left(x^{%
 T}Qx+u^{T}Ru+2x^{T}Nu\right)dt     the feedback control law that minimizes the value of the cost is      u  =   -   K   x         u      K  x      u=-Kx\,     where   K   K   K   is given by      K  =    R   -  1     (     B  T   P   (  t  )    +   N  T    )        K     superscript  R    1         superscript  B  T   P  t    superscript  N  T       K=R^{-1}(B^{T}P(t)+N^{T})\,     and   P   P   P   is found by solving the continuous time Riccati differential equation .           A  T   P   (  t  )    +   P   (  t  )   A    -    (    P   (  t  )   B   +  N   )    R   -  1     (     B  T   P   (  t  )    +   N  T    )     +  Q   =   -    P  Àô    (  t  )                  superscript  A  T   P  t     P  t  A          P  t  B   N    superscript  R    1         superscript  B  T   P  t    superscript  N  T      Q        normal-Àô  P   t      A^{T}P(t)+P(t)A-(P(t)B+N)R^{-1}(B^{T}P(t)+N^{T})+Q=-\dot{P}(t)\,     with the boundary condition        P   (   t  1   )    =   F   (   t  1   )     .        P   subscript  t  1      F   subscript  t  1      P(t_{1})=F(t_{1}).     The first order conditions for J min are  (i) State equation       x  Àô   =    A  x   +   B  u         normal-Àô  x       A  x     B  u      \dot{x}=Ax+Bu     (ii) Co-state equation       -   Œª  Àô    =    Q  x   +   N  u   +    A  T   Œª           normal-Àô  Œª        Q  x     N  u      superscript  A  T   Œª      -\dot{\lambda}=Qx+Nu+A^{T}\lambda     (iii) Stationary equation      0  =    R  u   +    N  T   x   +    B  T   Œª        0      R  u      superscript  N  T   x      superscript  B  T   Œª      0=Ru+N^{T}x+B^{T}\lambda     (iv) Boundary conditions       x   (   t  0   )    =   x  0         x   subscript  t  0     subscript  x  0     x(t_{0})=x_{0}   and     Œª   (   t  1   )    =   F   (   t  1   )   x   (   t  1   )          Œª   subscript  t  1      F   subscript  t  1   x   subscript  t  1      \lambda(t_{1})=F(t_{1})x(t_{1})     Infinite-horizon, continuous-time LQR  For a continuous-time linear system described by       x  Àô   =    A  x   +   B  u         normal-Àô  x       A  x     B  u      \dot{x}=Ax+Bu     with a cost functional defined as      J  =    ‚à´  0  ‚àû     (     x  T   Q  x   +    u  T   R  u   +   2   x  T   N  u    )   d  t        J    superscript   subscript   0            superscript  x  T   Q  x      superscript  u  T   R  u     2   superscript  x  T   N  u    d  t      J=\int_{0}^{\infty}\left(x^{T}Qx+u^{T}Ru+2x^{T}Nu\right)dt     the feedback control law that minimizes the value of the cost is      u  =   -   K   x         u      K  x      u=-Kx\,     where   K   K   K   is given by      K  =    R   -  1     (     B  T   P   +   N  T    )        K     superscript  R    1         superscript  B  T   P    superscript  N  T       K=R^{-1}(B^{T}P+N^{T})\,     and   P   P   P   is found by solving the continuous time algebraic Riccati equation           A  T   P   +   P  A    -    (    P  B   +  N   )    R   -  1     (     B  T   P   +   N  T    )     +  Q   =   0                superscript  A  T   P     P  A          P  B   N    superscript  R    1         superscript  B  T   P    superscript  N  T      Q   0    A^{T}P+PA-(PB+N)R^{-1}(B^{T}P+N^{T})+Q=0\,     This can be also written as           ùíú  T   P   +   P  ùíú    -   P  B   R   -  1     B  T   P    +  ùí¨   =   0                superscript  ùíú  T   P     P  ùíú      P  B   superscript  R    1     superscript  B  T   P    ùí¨   0    \mathcal{A}^{T}P+P\mathcal{A}-PBR^{-1}B^{T}P+\mathcal{Q}=0\,     with       ùíú  =   A  -   B   R   -  1     N  T       ùí¨  =   Q  -   N   R   -  1      N  T          formulae-sequence    ùíú    A    B   superscript  R    1     superscript  N  T        ùí¨    Q    N   superscript  R    1     superscript  N  T        \mathcal{A}=A-BR^{-1}N^{T}\qquad\mathcal{Q}=Q-NR^{-1}N^{T}\,     Finite-horizon, discrete-time LQR  For a discrete-time linear system described by 1       x   k  +  1    =    A   x  k    +   B    u  k           subscript  x    k  1        A   subscript  x  k      B   subscript  u  k       x_{k+1}=Ax_{k}+Bu_{k}\,     with a performance index defined as      J  =    ‚àë   k  =  0   N    (     x  k  T   Q   x  k    +    u  k  T   R   u  k    +   2   x  k  T   N   u  k     )        J    superscript   subscript     k  0    N        superscript   subscript  x  k   T   Q   subscript  x  k       superscript   subscript  u  k   T   R   subscript  u  k      2   superscript   subscript  x  k   T   N   subscript  u  k        J=\sum\limits_{k=0}^{N}\left(x_{k}^{T}Qx_{k}+u_{k}^{T}Ru_{k}+2x_{k}^{T}Nu_{k}\right)     the optimal control sequence minimizing the performance index is given by       u  k   =   -    F  k     x  k           subscript  u  k        subscript  F  k    subscript  x  k       u_{k}=-F_{k}x_{k}\,     where       F  k   =     (   R  +    B  T    P  k   B    )    -  1     (     B  T    P  k   A   +   N  T    )         subscript  F  k      superscript    R     superscript  B  T    subscript  P  k   B      1         superscript  B  T    subscript  P  k   A    superscript  N  T       F_{k}=(R+B^{T}P_{k}B)^{-1}(B^{T}P_{k}A+N^{T})\,     and    P  k     subscript  P  k    P_{k}   is found iteratively backwards in time by the dynamic Riccati equation       P   k  -  1    =      A  T    P  k   A   -    (     A  T    P  k   B   +  N   )     (   R  +    B  T    P  k   B    )    -  1     (     B  T    P  k   A   +   N  T    )     +  Q        subscript  P    k  1           superscript  A  T    subscript  P  k   A          superscript  A  T    subscript  P  k   B   N    superscript    R     superscript  B  T    subscript  P  k   B      1         superscript  B  T    subscript  P  k   A    superscript  N  T      Q     P_{k-1}=A^{T}P_{k}A-(A^{T}P_{k}B+N)\left(R+B^{T}P_{k}B\right)^{-1}(B^{T}P_{k}A%
 +N^{T})+Q     from terminal condition     P  N   =  Q       subscript  P  N   Q    P_{N}=Q   . Note that    u  N     subscript  u  N    u_{N}   is not defined, since   x   x   x   is driven to its final state    x  N     subscript  x  N    x_{N}   by     A   x   N  -  1     +   B   u   N  -  1           A   subscript  x    N  1       B   subscript  u    N  1       Ax_{N-1}+Bu_{N-1}   .  Infinite-horizon, discrete-time LQR  For a discrete-time linear system described by       x   k  +  1    =    A   x  k    +   B    u  k           subscript  x    k  1        A   subscript  x  k      B   subscript  u  k       x_{k+1}=Ax_{k}+Bu_{k}\,     with a performance index defined as      J  =    ‚àë   k  =  0   ‚àû    (     x  k  T   Q   x  k    +    u  k  T   R   u  k    +   2   x  k  T   N   u  k     )        J    superscript   subscript     k  0           superscript   subscript  x  k   T   Q   subscript  x  k       superscript   subscript  u  k   T   R   subscript  u  k      2   superscript   subscript  x  k   T   N   subscript  u  k        J=\sum\limits_{k=0}^{\infty}\left(x_{k}^{T}Qx_{k}+u_{k}^{T}Ru_{k}+2x_{k}^{T}Nu%
 _{k}\right)     the optimal control sequence minimizing the performance index is given by       u  k   =   -   F    x  k           subscript  u  k       F   subscript  x  k       u_{k}=-Fx_{k}\,     where      F  =     (   R  +    B  T   P  B    )    -  1     (     B  T   P  A   +   N  T    )        F     superscript    R     superscript  B  T   P  B      1         superscript  B  T   P  A    superscript  N  T       F=(R+B^{T}PB)^{-1}(B^{T}PA+N^{T})\,     and   P   P   P   is the unique positive definite solution to the discrete time algebraic Riccati equation (DARE)      P  =      A  T   P  A   -    (     A  T   P  B   +  N   )     (   R  +    B  T   P  B    )    -  1     (     B  T   P  A   +   N  T    )     +  Q       P         superscript  A  T   P  A          superscript  A  T   P  B   N    superscript    R     superscript  B  T   P  B      1         superscript  B  T   P  A    superscript  N  T      Q     P=A^{T}PA-(A^{T}PB+N)\left(R+B^{T}PB\right)^{-1}(B^{T}PA+N^{T})+Q   .  This can be also written as      P  =      ùíú  T   P  ùíú   -    ùíú  T   P  B    (   R  +    B  T   P  B    )    -  1     B  T   P  ùíú    +  ùí¨       P         superscript  ùíú  T   P  ùíú      superscript  ùíú  T   P  B   superscript    R     superscript  B  T   P  B      1     superscript  B  T   P  ùíú    ùí¨     P=\mathcal{A}^{T}P\mathcal{A}-\mathcal{A}^{T}PB\left(R+B^{T}PB\right)^{-1}B^{T%
 }P\mathcal{A}+\mathcal{Q}     with       ùíú  =   A  -   B   R   -  1     N  T       ùí¨  =   Q  -   N   R   -  1     N  T         formulae-sequence    ùíú    A    B   superscript  R    1     superscript  N  T        ùí¨    Q    N   superscript  R    1     superscript  N  T        \mathcal{A}=A-BR^{-1}N^{T}\qquad\mathcal{Q}=Q-NR^{-1}N^{T}   .  Note that one way to solve the algebraic Riccati equation is by iterating the dynamic Riccati equation of the finite-horizon case until it converges.  References    :*  :*  External links   MATLAB function for Linear Quadratic Regulator design  Mathematica function for Linear Quadratic Regulator design   "  Category:Optimal control     ‚Ü©     