


Linear-quadratic regulator




Linear-quadratic regulator

The theory of optimal control is concerned with operating a dynamic system at minimum cost. The case where the system dynamics are described by a set of linear differential equations and the cost is described by a quadratic function is called the LQ problem. One of the main results in the theory is that the solution is provided by the linear-quadratic regulator (LQR), a feedback controller whose equations are given below. The LQR is an important part of the solution to the LQG (Linear-Quadratic-Gaussian) problem. Like the LQR problem itself, the LQG problem is one of the most fundamental problems in control theory.
General description
This means that the settings of a (regulating) controller governing either a machine or process (like an airplane or chemical reactor) are found by using a mathematical algorithm that minimizes a cost function with weighting factors supplied by a human (engineer). The "cost" (function) is often defined as a sum of the deviations of key measurements from their desired values. In effect this algorithm finds those controller settings that minimize the undesired deviations, like deviations from desired altitude or process temperature. Often the magnitude of the control action itself is included in this sum so as to keep the energy expended by the control action itself limited.
In effect, the LQR algorithm takes care of the tedious work done by the control systems engineer in optimizing the controller. However, the engineer still needs to specify the weighting factors and compare the results with the specified design goals. Often this means that controller synthesis will still be an iterative process where the engineer judges the produced "optimal" controllers through simulation and then adjusts the weighting factors to get a controller more in line with the specified design goals.
The LQR algorithm is, at its core, just an automated way of finding an appropriate state-feedback controller. As such it is not uncommon to find that control engineers prefer alternative methods like full state feedback (also known as pole placement) to find a controller over the use of the LQR algorithm. With these the engineer has a much clearer linkage between adjusted parameters and the resulting changes in controller behavior. Difficulty in finding the right weighting factors limits the application of the LQR based controller synthesis.
Finite-horizon, continuous-time LQR
For a continuous-time linear system, defined on 
 
 
 
 , described by



with a quadratic cost function defined as



the feedback control law that minimizes the value of the cost is



where 
 
 
 
  is given by



and 
 
 
 
  is found by solving the continuous time Riccati differential equation.



with the boundary condition



The first order conditions for Jmin are
(i) State equation



(ii)  Co-state equation



(iii) Stationary equation



(iv) Boundary conditions


 
  and 
 
 

Infinite-horizon, continuous-time LQR
For a continuous-time linear system described by



with a cost functional defined as



the feedback control law that minimizes the value of the cost is



where 
 
 
 
  is given by



and 
 
 
 
  is found by solving the continuous time algebraic Riccati equation



This can be also written as



with



Finite-horizon, discrete-time LQR
For a discrete-time linear system described by 1



with a performance index defined as



the optimal control sequence minimizing the performance index is given by



where



and 
 
 
 
  is found iteratively backwards in time by the dynamic Riccati equation



from terminal condition 
 
 
 
 . Note that 
 
 
 
  is not defined, since 
 
 
 
  is driven to its final state 
 
 
 
  by 
 
 
 
 .
Infinite-horizon, discrete-time LQR
For a discrete-time linear system described by



with a performance index defined as



the optimal control sequence minimizing the performance index is given by



where



and 
 
 
 
  is the unique positive definite solution to the discrete time algebraic Riccati equation (DARE)


 
 .
This can be also written as



with


 
 .
Note that one way to solve the algebraic Riccati equation is by iterating the dynamic Riccati equation of the finite-horizon case until it converges.
References


:*
:*
External links

MATLAB function for Linear Quadratic Regulator design
Mathematica function for Linear Quadratic Regulator design

"
Category:Optimal control








