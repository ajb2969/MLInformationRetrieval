   Hom functor      Hom functor   In mathematics , specifically in category theory , hom-sets , i.e. sets of morphisms between objects, give rise to important functors to the category of sets . These functors are called hom-functors and have numerous applications in category theory and other branches of mathematics.  Formal definition  Let C be a locally small category (i.e. a category for which hom-classes are actually sets and not proper classes ).  For all objects A and B in C we define two functors to the category of sets as follows:      Hom( A ,‚Äì) : C ‚Üí Set   Hom(‚Äì, B ) : C ‚Üí Set       This is a covariant functor given by:   Hom( A ,‚Äì) maps each object X in C to the set of morphisms , Hom( A , X )  Hom( A ,‚Äì) maps each morphism f : X ‚Üí Y to the function   Hom( A , f ) : Hom( A , X ) ‚Üí Hom( A , Y ) given by         \definecolor   g  r  a  y  R  G  B  249   ,  249  ,   249   \pagecolor   g  r  a  y  g    ‚Ü¶   f  ‚àò  g      maps-to     \definecolor  g  r  a  y  R  G  B  249   249    249  \pagecolor  g  r  a  y  g      f  g     \definecolor{gray}{RGB}{249,249,249}\pagecolor{gray}g\mapsto f\circ g   for each g in Hom( A , X ).     This is a contravariant functor given by:   Hom(‚Äì, B ) maps each object X in C to the set of morphisms , Hom( X , B )  Hom(‚Äì, B ) maps each morphism h : X ‚Üí Y to the function   Hom( h , B ) : Hom( Y , B ) ‚Üí Hom( X , B ) given by         \definecolor   g  r  a  y  R  G  B  249   ,  249  ,   249   \pagecolor   g  r  a  y  g    ‚Ü¶   g  ‚àò  h      maps-to     \definecolor  g  r  a  y  R  G  B  249   249    249  \pagecolor  g  r  a  y  g      g  h     \definecolor{gray}{RGB}{249,249,249}\pagecolor{gray}g\mapsto g\circ h   for each g in Hom( Y , B ).       The functor Hom(‚Äì, B ) is also called the functor of points of the object B .  Note that fixing the first argument of Hom naturally gives rise to a covariant functor and fixing the second argument naturally gives a contravariant functor. This is an artifact of the way in which one must compose the morphisms.  The pair of functors Hom( A ,‚Äì) and Hom(‚Äì, B ) are related in a natural manner . For any pair of morphisms f : B ‚Üí B ‚Ä≤ and h : A ‚Ä≤ ‚Üí A the following diagram commutes :  Both paths send g : A ‚Üí B to f ‚àò g ‚àò h .  The commutativity of the above diagram implies that Hom(‚Äì,‚Äì) is a bifunctor from C √ó C to Set which is contravariant in the first argument and covariant in the second. Equivalently, we may say that Hom(‚Äì,‚Äì) is a covariant bifunctor   Hom(‚Äì,‚Äì) : C op √ó C ‚Üí Set    where C op is the opposite category to C . The notation Hom C (‚Äì,‚Äì) is sometimes used for Hom(‚Äì,‚Äì) in order to emphasize the category forming the domain.  Yoneda's lemma  Referring to the above commutative diagram, one observes that every morphism   h : A ‚Ä≤ ‚Üí A    gives rise to a natural transformation   Hom( h ,‚Äì) : Hom( A ,‚Äì) ‚Üí Hom( A ‚Ä≤,‚Äì)   and every morphism   f : B ‚Üí B ‚Ä≤   gives rise to a natural transformation   Hom(‚Äì, f ) : Hom(‚Äì, B ) ‚Üí Hom(‚Äì, B ‚Ä≤)   Yoneda's lemma implies that every natural transformation between Hom functors is of this form. In other words, the Hom functors give rise to a full and faithful embedding of the category C into the functor category  Set C Op (covariant or contravariant depending on which Hom functor is used).  Internal Hom functor  Some categories may possess a functor that behaves like a Hom functor, but takes values in the category C itself, rather than Set . Such a functor is referred to as the internal Hom functor , and is often written as       [  -  -  ]   :   C   o  p    √ó  C  ‚Üí  C     fragments   fragments  normal-[    normal-]   normal-:   superscript  C    o  p     C  normal-‚Üí  C    \left[-\ -\right]:C^{op}\times C\to C   to emphasize its product-like nature, or as      ‚áí  :   C   o  p    √ó  C  ‚Üí  C     fragments  normal-‚áí  normal-:   superscript  C    o  p     C  normal-‚Üí  C    \Rightarrow:C^{op}\times C\to C   to emphasize its functorial nature, or sometimes merely in lower-case:       hom   (  -  ,  -  )    :     C   o  p    √ó  C   ‚Üí  C      normal-:    hom        normal-‚Üí     superscript  C    o  p    C   C     \text{hom}(-,-):C^{op}\times C\to C   Categories that possess an internal Hom functor are referred to as closed categories . The forgetful functor     U  :   C  ‚Üí  ùêíùêûùê≠      normal-:  U   normal-‚Üí  C  Set     U:C\to\textbf{Set}   on such categories takes the internal Hom functor to the external Hom functor. That is,        U  ‚àò  hom    (  -  ,  -  )    ‚âÉ   Hom   (  -  ,  -  )       similar-to-or-equals      U  hom          Hom         U\circ\text{hom}(-,-)\simeq\text{Hom}(-,-)   where   ‚âÉ   similar-to-or-equals   \simeq   denotes a natural isomorphism ; the isomorphism is natural in both sites. Alternately, one has that       Hom   (  I  ,   hom   (  -  ,  -  )    )    ‚âÉ   Hom   (  -  ,  -  )       similar-to-or-equals    Hom   I    hom           Hom         \text{Hom}(I,\text{hom}(-,-))\simeq\text{Hom}(-,-)   , where I is the unit object of the closed category. For the case of a closed monoidal category , this extends to the notion of currying , namely, that      Hom   (  X  ,  Y  ‚áí  Z  )   ‚âÉ  Hom   (  X  ‚äó  Y  ,  Z  )      fragments  Hom   fragments  normal-(  X  normal-,  Y  normal-‚áí  Z  normal-)   similar-to-or-equals  Hom   fragments  normal-(  X  tensor-product  Y  normal-,  Z  normal-)     \text{Hom}(X,Y\Rightarrow Z)\simeq\text{Hom}(X\otimes Y,Z)   where   ‚äó   tensor-product   \otimes   is a bifunctor , the internal product functor defining a monoidal category . The isomorphism is natural in both X and Z . In other words, in a closed monoidal category, the internal hom functor is an adjoint functor to the internal product functor. The object    Y  ‚áí  Z     normal-‚áí  Y  Z    Y\Rightarrow Z   is called the internal Hom . When   ‚äó   tensor-product   \otimes   is the Cartesian product    √ó     \times   , the object    Y  ‚áí  Z     normal-‚áí  Y  Z    Y\Rightarrow Z   is called the exponential object , and is often written as    Z  Y     superscript  Z  Y    Z^{Y}   .  Internal Homs, when chained together, form a language, called the internal language of the category. The most famous of these are simply typed lambda calculus , which is the internal language of Cartesian closed categories , and the linear type system , which is the internal language of closed symmetric monoidal categories .  Properties  Note that a functor of the form   Hom(‚Äì, C) : C op ‚Üí Set    is a presheaf ; likewise, Hom(C, ‚Äì) is a copresheaf.  A functor F : C ‚Üí Set that is naturally isomorphic to Hom(C, ‚Äì) is called a representable functor or sometimes a representable copresheaf; likewise, a contravariant functor equivalent to Hom(‚Äì, C) might be called corepresentable.  Note that Hom(‚Äì, ‚Äì) : C op √ó C ‚Üí Set is a profunctor , and, specifically, it is the identity profunctor       id  C   :   C  ‚Üõ  C      normal-:   subscript  id  C    normal-‚Üõ  C  C     \text{id}_{C}\colon C\nrightarrow C   ,  The internal hom functor preserves limits ; that is,     hom   (  X  ,  -  )    :   C  ‚Üí  C      normal-:    hom   X      normal-‚Üí  C  C     \text{hom}(X,-):C\to C   sends limits to limits, while     hom   (  -  ,  X  )    :    C  op   ‚Üí  C      normal-:    hom    X     normal-‚Üí   superscript  C  op   C     \text{hom}(-,X):C^{\text{op}}\to C   sends limits to colimits . In a certain sense, this can be taken as the definition of a limit or colimit.  Other properties  If A is an abelian category and A is an object of A , then Hom A ( A ,‚Äì) is a covariant left-exact functor from A to the category Ab of abelian groups . It is exact if and only if A is projective . 1  Let R be a ring and M a left R - module . The functor Hom Z ( M ,‚Äì): Ab ‚Üí Mod - R is right adjoint to the tensor product functor ‚Äì   ‚äó   tensor-product   \otimes    R M: Mod - R ‚Üí Ab .  See also   Ext functor  Functor category  Representable functor   Notes    References         "  Category:Functors     Jacobson (2009), p. 149, Prop. 3.9. ‚Ü©     