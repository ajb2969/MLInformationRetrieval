   Flux limiter      Flux limiter   Flux limiters are used in high resolution schemes – numerical schemes used to solve problems in science and engineering, particularly fluid dynamics , described by partial differential equations (PDE's). They are used in high resolution schemes, such as the MUSCL scheme , to avoid the spurious oscillations (wiggles) that would otherwise occur with high order spatial discretization schemes due to shocks, discontinuities or sharp changes in the solution domain. Use of flux limiters, together with an appropriate high resolution scheme, make the solutions total variation diminishing (TVD).  Note that flux limiters are also referred to as slope limiters because they both have the same mathematical form, and both have the effect of limiting the solution gradient near shocks or discontinuities. In general, the term flux limiter is used when the limiter acts on system fluxes , and slope limiter is used when the limiter acts on system states (like pressure, velocity etc.).  How they work  The main idea behind the construction of flux limiter schemes is to limit the spatial derivatives to realistic values – for scientific and engineering problems this usually means physically realisable and meaningful values. They are used in high resolution schemes for solving problems described by PDEs and only come into operation when sharp wave fronts are present. For smoothly changing waves, the flux limiters do not operate and the spatial derivatives can be represented by higher order approximations without introducing spurious oscillations. Consider the 1D semi-discrete scheme below,          d   u  i     d  t    +    1   Δ   x  i      [    F   (   u   i  +   1  2     )    -   F   (   u   i  -   1  2     )     ]     =  0   ,            d   subscript  u  i      d  t        1    normal-Δ   subscript  x  i      delimited-[]      F   subscript  u    i    1  2        F   subscript  u    i    1  2          0    \frac{du_{i}}{dt}+\frac{1}{\Delta x_{i}}\left[F\left(u_{i+\frac{1}{2}}\right)-%
 F\left(u_{i-\frac{1}{2}}\right)\right]=0,     where,    F   (   u   i  +   1  2     )       F   subscript  u    i    1  2       F\left(u_{i+\frac{1}{2}}\right)   and    F   (   u   i  -   1  2     )       F   subscript  u    i    1  2       F\left(u_{i-\frac{1}{2}}\right)   represent edge fluxes for the ith cell. If these edge fluxes can be represented by low and high resolution schemes, then a flux limiter can switch between these schemes depending upon the gradients close to the particular cell, as follows,       F   (   u   i  +   1  2     )    =    f   i  +   1  2     l  o  w    -   ϕ   (   r  i   )    (    f   i  +   1  2     l  o  w    -   f   i  +   1  2     h  i  g  h     )           F   subscript  u    i    1  2         subscript   superscript  f    l  o  w      i    1  2       ϕ   subscript  r  i      subscript   superscript  f    l  o  w      i    1  2      subscript   superscript  f    h  i  g  h      i    1  2          F\left(u_{i+\frac{1}{2}}\right)=f^{low}_{i+\frac{1}{2}}-\phi\left(r_{i}\right)%
 \left(f^{low}_{i+\frac{1}{2}}-f^{high}_{i+\frac{1}{2}}\right)   ,       F   (   u   i  -   1  2     )    =    f   i  -   1  2     l  o  w    -   ϕ   (   r   i  -  1    )    (    f   i  -   1  2     l  o  w    -   f   i  -   1  2     h  i  g  h     )           F   subscript  u    i    1  2         subscript   superscript  f    l  o  w      i    1  2       ϕ   subscript  r    i  1       subscript   superscript  f    l  o  w      i    1  2      subscript   superscript  f    h  i  g  h      i    1  2          F\left(u_{i-\frac{1}{2}}\right)=f^{low}_{i-\frac{1}{2}}-\phi\left(r_{i-1}%
 \right)\left(f^{low}_{i-\frac{1}{2}}-f^{high}_{i-\frac{1}{2}}\right)   ,  where       f   l  o  w    =        superscript  f    l  o  w    absent    f^{low}=   low precision, high resolution flux,       f   h  i  g  h    =        superscript  f    h  i  g  h    absent    f^{high}=   high precision, low resolution flux,        ϕ    (  r  )    =         ϕ  r   absent    \phi\ (r)=   flux limiter function,  and   r   r   r   represents the ratio of successive gradients on the solution mesh, i.e.,       r  i   =     u  i   -   u   i  -  1       u   i  +  1    -   u  i          subscript  r  i        subscript  u  i    subscript  u    i  1        subscript  u    i  1     subscript  u  i       r_{i}=\frac{u_{i}-u_{i-1}}{u_{i+1}-u_{i}}   .  The limiter function is constrained to be greater than or equal to zero, i.e.,      ϕ    (  r  )    ≥  0        ϕ  r   0    \phi\ (r)\geq 0   . Therefore, when the limiter is equal to zero (sharp gradient, opposite slopes or zero gradient), the flux is represented by a low resolution scheme . Similarly, when the limiter is equal to 1 (smooth solution), it is represented by a high resolution scheme . The various limiters have differing switching characteristics and are selected according to the particular problem and solution scheme. No particular limiter has been found to work well for all problems, and a particular choice is usually made on a trial and error basis.  Limiter functions  The following are common forms of flux/slope limiter function,     ϕ    (  r  )       ϕ  r    \phi\ (r)   :  CHARM [not 2nd order TVD] (Zhou, 1995)        ϕ   c  m     (  r  )    =   {          r   (    3  r   +  1   )      (   r  +  1   )   2    ,  r   >  0   ,     lim   r  →  ∞      ϕ   c  m     (  r  )     =  3          0  ,  r  ≤  0                subscript  ϕ    c  m    r    cases     formulae-sequence         r      3  r   1     superscript    r  1   2    r   0       subscript    normal-→  r        subscript  ϕ    c  m    r    3     missing-subexpression      fragments  0   normal-,  r   0    missing-subexpression        \phi_{cm}(r)=\left\{\begin{array}[]{ll}\frac{r\left(3r+1\right)}{\left(r+1%
 \right)^{2}},\quad r>0,\quad\lim_{r\rightarrow\infty}\phi_{cm}(r)=3\\
 0\quad\quad\,,\quad r\leq 0\end{array}\right.     HCUS [not 2nd order TVD] (Waterson & Deconinck, 1995)         ϕ   h  c     (  r  )    =    1.5   (   r  +   |  r  |    )     (   r  +  2   )     ;     lim   r  →  ∞      ϕ   h  c     (  r  )     =  3      formulae-sequence       subscript  ϕ    h  c    r       1.5    r    r       r  2         subscript    normal-→  r        subscript  ϕ    h  c    r    3     \phi_{hc}(r)=\frac{1.5\left(r+\left|r\right|\right)}{\left(r+2\right)};\quad%
 \lim_{r\rightarrow\infty}\phi_{hc}(r)=3   .  HQUICK [not 2nd order TVD] (Waterson & Deconinck, 1995)         ϕ   h  q     (  r  )    =    2   (   r  +   |  r  |    )     (   r  +  3   )     ;     lim   r  →  ∞      ϕ   h  q     (  r  )     =  4      formulae-sequence       subscript  ϕ    h  q    r       2    r    r       r  3         subscript    normal-→  r        subscript  ϕ    h  q    r    4     \phi_{hq}(r)=\frac{2\left(r+\left|r\right|\right)}{\left(r+3\right)};\quad\lim%
 _{r\rightarrow\infty}\phi_{hq}(r)=4   .  Koren (Koren, 1993) – third-order accurate for sufficiently smooth data 1         ϕ   k  n     (  r  )    =   max   [  0  ,   min   (   2  r   ,    (   2  +  r   )   /  3   ,  2  )    ]     ;     lim   r  →  ∞      ϕ   k  n     (  r  )     =  2      formulae-sequence       subscript  ϕ    k  n    r     0      2  r       2  r   3   2         subscript    normal-→  r        subscript  ϕ    k  n    r    2     \phi_{kn}(r)=\max\left[0,\min\left(2r,\left(2+r\right)/3,2\right)\right];\quad%
 \lim_{r\rightarrow\infty}\phi_{kn}(r)=2   .  minmod – symmetric ( Roe , 1986)         ϕ   m  m     (  r  )    =   max   [  0  ,   min   (  1  ,  r  )    ]     ;     lim   r  →  ∞      ϕ   m  m     (  r  )     =  1      formulae-sequence       subscript  ϕ    m  m    r     0    1  r         subscript    normal-→  r        subscript  ϕ    m  m    r    1     \phi_{mm}(r)=\max\left[0,\min\left(1,r\right)\right];\quad\lim_{r\rightarrow%
 \infty}\phi_{mm}(r)=1   .  monotonized central (MC) – symmetric (van Leer, 1977)         ϕ   m  c     (  r  )    =   max   [  0  ,   min   (   2  r   ,   0.5   (   1  +  r   )    ,  2  )    ]     ;     lim   r  →  ∞      ϕ   m  c     (  r  )     =  2      formulae-sequence       subscript  ϕ    m  c    r     0      2  r     0.5    1  r    2         subscript    normal-→  r        subscript  ϕ    m  c    r    2     \phi_{mc}(r)=\max\left[0,\min\left(2r,0.5(1+r),2\right)\right];\quad\lim_{r%
 \rightarrow\infty}\phi_{mc}(r)=2   .  Osher (Chatkravathy and Osher , 1983)       ϕ   o  s     (  r  )   =  max   [  0  ,  min   (  r  ,  β  )   ]   ,   (  1  ≤  β  ≤  2  )   ;   lim   r  →  ∞     ϕ   o  s     (  r  )   =  β     fragments   subscript  ϕ    o  s     fragments  normal-(  r  normal-)      fragments  normal-[  0  normal-,    fragments  normal-(  r  normal-,  β  normal-)   normal-]   normal-,   fragments  normal-(  1   β   2  normal-)   normal-;   subscript    normal-→  r      subscript  ϕ    o  s     fragments  normal-(  r  normal-)    β    \phi_{os}(r)=\max\left[0,\min\left(r,\beta\right)\right],\quad\left(1\leq\beta%
 \leq 2\right);\quad\lim_{r\rightarrow\infty}\phi_{os}(r)=\beta   .  ospre – symmetric (Waterson & Deconinck, 1995)         ϕ   o  p     (  r  )    =    1.5   (    r  2   +  r   )     (    r  2   +  r  +  1   )     ;     lim   r  →  ∞      ϕ   o  p     (  r  )     =  1.5      formulae-sequence       subscript  ϕ    o  p    r       1.5     superscript  r  2   r       superscript  r  2   r  1         subscript    normal-→  r        subscript  ϕ    o  p    r    1.5     \phi_{op}(r)=\frac{1.5\left(r^{2}+r\right)}{\left(r^{2}+r+1\right)};\quad\lim_%
 {r\rightarrow\infty}\phi_{op}(r)=1.5   .  smart [not 2nd order TVD] (Gaskell & Lau, 1988)         ϕ   s  m     (  r  )    =   max   [  0  ,   min   (   2  r   ,   (   0.25  +   0.75  r    )   ,  4  )    ]     ;     lim   r  →  ∞      ϕ   s  m     (  r  )     =  4      formulae-sequence       subscript  ϕ    s  m    r     0      2  r     0.25    0.75  r    4         subscript    normal-→  r        subscript  ϕ    s  m    r    4     \phi_{sm}(r)=\max\left[0,\min\left(2r,\left(0.25+0.75r\right),4\right)\right];%
 \quad\lim_{r\rightarrow\infty}\phi_{sm}(r)=4   .  superbee – symmetric (Roe, 1986)         ϕ   s  b     (  r  )    =   max   [  0  ,   min   (   2  r   ,  1  )    ,   min   (  r  ,  2  )    ]     ;     lim   r  →  ∞      ϕ   s  b     (  r  )     =  2      formulae-sequence       subscript  ϕ    s  b    r     0      2  r   1     r  2         subscript    normal-→  r        subscript  ϕ    s  b    r    2     \phi_{sb}(r)=\max\left[0,\min\left(2r,1\right),\min\left(r,2\right)\right];%
 \quad\lim_{r\rightarrow\infty}\phi_{sb}(r)=2   .  Sweby – symmetric (Sweby, 1984)       ϕ   s  w     (  r  )   =  max   [  0  ,  min   (  β  r  ,  1  )   ,  min   (  r  ,  β  )   ]   ,   (  1  ≤  β  ≤  2  )   ;   lim   r  →  ∞     ϕ   s  w     (  r  )   =  β     fragments   subscript  ϕ    s  w     fragments  normal-(  r  normal-)      fragments  normal-[  0  normal-,    fragments  normal-(  β  r  normal-,  1  normal-)   normal-,    fragments  normal-(  r  normal-,  β  normal-)   normal-]   normal-,   fragments  normal-(  1   β   2  normal-)   normal-;   subscript    normal-→  r      subscript  ϕ    s  w     fragments  normal-(  r  normal-)    β    \phi_{sw}(r)=\max\left[0,\min\left(\beta r,1\right),\min\left(r,\beta\right)%
 \right],\quad\left(1\leq\beta\leq 2\right);\quad\lim_{r\rightarrow\infty}\phi_%
 {sw}(r)=\beta   .  UMIST (Lien & Leschziner, 1994)         ϕ   u  m     (  r  )    =   max   [  0  ,   min   (   2  r   ,   (   0.25  +   0.75  r    )   ,   (   0.75  +   0.25  r    )   ,  2  )    ]     ;     lim   r  →  ∞      ϕ   u  m     (  r  )     =  2      formulae-sequence       subscript  ϕ    u  m    r     0      2  r     0.25    0.75  r      0.75    0.25  r    2         subscript    normal-→  r        subscript  ϕ    u  m    r    2     \phi_{um}(r)=\max\left[0,\min\left(2r,\left(0.25+0.75r\right),\left(0.75+0.25r%
 \right),2\right)\right];\quad\lim_{r\rightarrow\infty}\phi_{um}(r)=2   .  van Albada 1 – symmetric (van Albada, et al., 1982)         ϕ   v  a  1     (  r  )    =     r  2   +  r     r  2   +  1     ;     lim   r  →  ∞      ϕ   v  a  1     (  r  )     =  1      formulae-sequence       subscript  ϕ    v  a  1    r        superscript  r  2   r      superscript  r  2   1         subscript    normal-→  r        subscript  ϕ    v  a  1    r    1     \phi_{va1}(r)=\frac{r^{2}+r}{r^{2}+1};\quad\lim_{r\rightarrow\infty}\phi_{va1}%
 (r)=1   .  van Albada 2 – alternative form [not 2nd order TVD] used on high spatial order schemes (Kermani, 2003)         ϕ   v  a  2     (  r  )    =    2  r     r  2   +  1     ;     lim   r  →  ∞      ϕ   v  a  2     (  r  )     =  0      formulae-sequence       subscript  ϕ    v  a  2    r       2  r      superscript  r  2   1         subscript    normal-→  r        subscript  ϕ    v  a  2    r    0     \phi_{va2}(r)=\frac{2r}{r^{2}+1};\quad\lim_{r\rightarrow\infty}\phi_{va2}(r)=0   .  van Leer – symmetric ( van Leer , 1974)         ϕ   v  l     (  r  )    =    r  +   |  r  |     1  +   |  r  |      ;     lim   r  →  ∞      ϕ   v  l     (  r  )     =  2      formulae-sequence       subscript  ϕ    v  l    r       r    r      1    r          subscript    normal-→  r        subscript  ϕ    v  l    r    2     \phi_{vl}(r)=\frac{r+\left|r\right|}{1+\left|r\right|};\quad\lim_{r\rightarrow%
 \infty}\phi_{vl}(r)=2   .  All the above limiters indicated as being symmetric , exhibit the following symmetry property,        ϕ   (  r  )    r   =   ϕ   (   1  r   )            ϕ  r   r     ϕ    1  r      \frac{\phi\left(r\right)}{r}=\phi\left(\frac{1}{r}\right)   .  This is a desirable property as it ensures that the limiting actions for forward and backward gradients operate in the same way.  (Figure)  Admissible limiter region for second-order TVD schemes.|200px|right|Admissible limiter region for second-order TVD schemes.   Unless indicated to the contrary, the above limiter functions are second order TVD . This means that they are designed such that they pass through a certain region of the solution, known as the TVD region, in order to guarantee stability of the scheme. Second-order, TVD limiters satisfy at least the following criteria:       r  ≤  ϕ   (  r  )   ≤  2  r  ,   (  0  ≤  r  ≤  1  )      fragments  r   ϕ   fragments  normal-(  r  normal-)    2  r  normal-,   fragments  normal-(  0   r   1  normal-)     r\leq\phi(r)\leq 2r,\left(0\leq r\leq 1\right)   ,      1  ≤  ϕ   (  r  )   ≤  r  ,   (  1  ≤  r  ≤  2  )      fragments  1   ϕ   fragments  normal-(  r  normal-)    r  normal-,   fragments  normal-(  1   r   2  normal-)     1\leq\phi(r)\leq r,\left(1\leq r\leq 2\right)   ,      1  ≤  ϕ   (  r  )   ≤  2  ,   (  r  >  2  )      fragments  1   ϕ   fragments  normal-(  r  normal-)    2  normal-,   fragments  normal-(  r   2  normal-)     1\leq\phi(r)\leq 2,\left(r>2\right)   ,       ϕ   (  1  )    =  1        ϕ  1   1    \phi(1)=1   ,   The admissible limiter region for second-order TVD schemes is shown in the Sweby Diagram opposite (Sweby, 1984), and plots showing limiter functions overlaid onto the TVD region are shown below. In this image, plots for the Osher and Sweby limiters have been generated using    β  =  1.5      β  1.5    \beta=1.5   .   (Figure)  Limiter functions overlaid onto second-order TVD region.|650px|none|Limiter functions overlaid onto second-order TVD region.    Generalised minmod limiter  An additional limiter that has an interesting form is the van-Leer's one-parameter family of minmod limiters (van Leer, 1979; Harten and Osher, 1987; Kurganov and Tadmor, 2000). It is defined as follows          ϕ   m  g     (  u  ,  θ  )    =   max   (  0  ,   min   (   θ  r   ,    1  +  r   2   ,  θ  )    )     ,   θ  ∈   [  1  ,  2  ]     .     formulae-sequence       subscript  ϕ    m  g     u  θ      0      θ  r       1  r   2   θ       θ   1  2      \phi_{mg}(u,\theta)=\max\left(0,\min\left(\theta r,\frac{1+r}{2},\theta\right)%
 \right),\quad\theta\in\left[1,2\right].     Note:     ϕ   m  g      subscript  ϕ    m  g     \phi_{mg}   is most dissipative for     θ  =  1   ,      θ  1    \theta=1,   when it reduces to     ϕ   m  m    ,     subscript  ϕ    m  m     \phi_{mm},   and is least dissipative for    θ  =  2      θ  2    \theta=2   .  See also   Godunov's theorem  High resolution scheme  MUSCL scheme  Sergei K. Godunov  Total variation diminishing   Notes  References          Available on-line at: CiteSeer .             Further reading           "  Category:Computational fluid dynamics  Category:Numerical differential equations     ↩     