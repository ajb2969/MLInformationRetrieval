   Laguerre's method      Laguerre's method   In numerical analysis , Laguerre's method is a root-finding algorithm tailored to polynomials . In other words, Laguerre's method can be used to numerically solve the equation        p    (  x  )    =  0        p  x   0    \ p(x)=0     for a given polynomial p . One of the most useful properties of this method is that it is, from extensive empirical study, very close to being a "sure-fire" method, meaning that it is almost guaranteed to always converge to some root of the polynomial, no matter what initial guess is chosen. This method is named in honour of Edmond Laguerre , a French mathematician.  Definition  The algorithm of the Laguerre method to find one root of a polynomial p of degree n is:   Choose an initial guess    x  0     subscript  x  0    x_{0}     For k = 0, 1, 2, …  If    p   (   x  k   )       p   subscript  x  k     p(x_{k})   is very small, exit the loop  Calculate    G  =     p  ′    (   x  k   )     p   (   x  k   )         G       superscript  p  normal-′    subscript  x  k      p   subscript  x  k       G=\frac{p^{\prime}(x_{k})}{p(x_{k})}     Calculate    H  =    G  2   -     p  ′′    (   x  k   )     p   (   x  k   )          H     superscript  G  2        superscript  p  ′′    subscript  x  k      p   subscript  x  k        H=G^{2}-\frac{p^{\prime\prime}(x_{k})}{p(x_{k})}     Calculate    a  =   n   G   \plusmn      (   n  -  1   )    (    n  H   -   G  2    )           a    n    G  \plusmn        n  1       n  H    superscript  G  2          a=\frac{n}{G\plusmn\sqrt{(n-1)(nH-G^{2})}}   , where the sign is chosen to give the denominator with the larger absolute value, to avoid loss of significance as iteration proceeds.  Set     x   k  +  1    =    x  k   -  a        subscript  x    k  1       subscript  x  k   a     x_{k+1}=x_{k}-a      Repeat until a is small enough or if the maximum number of iterations has been reached.   If a root has been found, the corresponding linear factor can be removed from p . This deflation step reduces the degree of the polynomial by one, so that eventually, approximations for all roots of p can be found. Note however that deflation can lead to approximate factors that differ significantly from the corresponding exact factors. This error is least if the roots are found in the order of increasing magnitude.  Derivation  The fundamental theorem of algebra states that every n th degree polynomial   p   p   p   can be written in the form        p   (  x  )    =   C   (   x  -   x  1    )    (   x  -   x  2    )   ⋯   (   x  -   x  n    )     ,        p  x     C    x   subscript  x  1      x   subscript  x  2    normal-⋯    x   subscript  x  n       p(x)=C(x-x_{1})(x-x_{2})\cdots(x-x_{n}),     such that    x  k     subscript  x  k    x_{k}   where    (   k  =   1  ,  2  ,  …  ,  n    )      k   1  2  normal-…  n     (k=1,2,...,n)   are the roots of the polynomial. If we take the natural logarithm of both sides, we find that        ln   |   p   (  x  )    |    =    ln   |  C  |    +   ln   |   x  -   x  1    |    +   ln   |   x  -   x  2    |    +  ⋯  +   ln   |   x  -   x  n    |      .            p  x           C          x   subscript  x  1            x   subscript  x  2      normal-⋯        x   subscript  x  n         \ln|p(x)|=\ln|C|+\ln|x-x_{1}|+\ln|x-x_{2}|+\cdots+\ln|x-x_{n}|.     Denote the derivative by       G  =    d   d  x     ln   |   p   (  x  )    |     =    1   x  -   x  1     +   1   x  -   x  2     +  ⋯  +   1   x  -   x  n       ,        G      d    d  x          p  x               1    x   subscript  x  1       1    x   subscript  x  2     normal-⋯    1    x   subscript  x  n         G=\frac{d}{dx}\ln|p(x)|=\frac{1}{x-x_{1}}+\frac{1}{x-x_{2}}+\cdots+\frac{1}{x-%
 x_{n}},     and the negated second derivative by       H  =   -     d  2    d   x  2      ln   |   p   (  x  )    |      =    1    (   x  -   x  1    )   2    +   1    (   x  -   x  2    )   2    +  ⋯  +   1    (   x  -   x  n    )   2      .        H         superscript  d  2     d   superscript  x  2           p  x                1   superscript    x   subscript  x  1    2      1   superscript    x   subscript  x  2    2    normal-⋯    1   superscript    x   subscript  x  n    2        H=-\frac{d^{2}}{dx^{2}}\ln|p(x)|=\frac{1}{(x-x_{1})^{2}}+\frac{1}{(x-x_{2})^{2%
 }}+\cdots+\frac{1}{(x-x_{n})^{2}}.     We then make what Acton calls a 'drastic set of assumptions', that the root we are looking for, say,    x  1     subscript  x  1    x_{1}   is a certain distance away from our guess   x   x   x   , and all the other roots are clustered together some distance away. If we denote these distances by      a  =   x  -    x  1         a    x   subscript  x  1      a=x-x_{1}\,   and       b  =   x  -   x  i     ,   i  =   2  ,  3  ,  …  ,  n       formulae-sequence    b    x   subscript  x  i       i   2  3  normal-…  n      b=x-x_{i},\quad i=2,3,\ldots,n   then our equation for   G   G   G   may be written as      G  =    1  a   +    n  -  1   b        G      1  a       n  1   b      G=\frac{1}{a}+\frac{n-1}{b}   and the expression for   H   H   H   becomes       H  =    1   a  2    +    n  -  1    b  2      .      H      1   superscript  a  2        n  1    superscript  b  2       H=\frac{1}{a^{2}}+\frac{n-1}{b^{2}}.   Solving these equations for   a   a   a   , we find that      a  =   n   G   \plusmn      (   n  -  1   )    (    n  H   -   G  2    )           a    n    G  \plusmn        n  1       n  H    superscript  G  2          a=\frac{n}{G\plusmn\sqrt{(n-1)(nH-G^{2})}}   , where the square root of a complex number is chosen to produce larger absolute value of the denominator, or equivalently, to satisfy:       Re   (    G  ¯       (   n  -  1   )    (    n  H   -   G  2    )       )    >  0       Re     normal-¯  G         n  1       n  H    superscript  G  2        0    \operatorname{Re}\,(\overline{G}\sqrt{(n-1)(nH-G^{2})}\,)>0   , where   Re   Re   \operatorname{Re}   denotes real part of a complex number, and    G  ¯     normal-¯  G    \overline{G}   is a complex conjugation of   G   G   G   ; or      a  =     p   (  x  )      p  ′    (  x  )     ⋅    (    1  n   +      n  -  1   n      1  -     n   n  -  1       p   (  x  )    p  ′′    (  x  )      p  ′     (  x  )   2          )    -  1         a   normal-⋅      p  x      superscript  p  normal-′   x     superscript      1  n         n  1   n       1      n    n  1        p  x   superscript  p  ′′   x      superscript  p  normal-′    superscript  x  2            1       a=\frac{p(x)}{p^{\prime}(x)}\cdot\left(\frac{1}{n}+\frac{n-1}{n}\,\sqrt{1-%
 \frac{n}{n-1}\,\frac{p(x)p^{\prime\prime}(x)}{p^{\prime}(x)^{2}}}\right)^{-1}   , where the square root of a complex number is chosen to have a non-negative real part.  For small values of    p   (  x  )       p  x    p(x)   this formula differs from the offset of the third order Halley's method by an error of    O   (   p    (  x  )   3    )       O    p   superscript  x  3      O(p(x)^{3})   , so convergence close to a root will be cubic as well.  Note that, even if the 'drastic set of assumptions' does not work for some particular polynomial   p   p   p   ,   p   p   p   can be transformed into a related polynomial   r   r   r   for which the assumptions are correct, e.g. by shifting the origin towards a suitable complex number   w   w   w   , giving     q   (  z  )    =   p   (   z  -  w   )          q  z     p    z  w      q(z)=p(z-w)   , to give distinct roots distinct magnitudes if necessary (which it will be if some roots are complex conjugates), and then getting   r   r   r   from   q   q   q   by repeatedly applying the root squaring transformation used in Graeffe's method enough times to make the smaller roots significantly smaller than the largest root (and so, clustered in comparison); the approximate root from Graeffe's method can then be used to start the new iteration for Laguerre's method on   r   r   r   . An approximate root for   p   p   p   may then be obtained straightforwardly from that for   r   r   r   .  If we make the stronger assumption that the terms in   G   G   G   corresponding to the roots       x  i   ,  i   =  2   ,   3  ,  …  ,  n      formulae-sequence      subscript  x  i   i   2    3  normal-…  n     x_{i},\quad i=2,3,\ldots,n   are negligibly small in comparison to the term corresponding to the root    x  1     subscript  x  1    x_{1}   , this leads to Newton's method .  Properties  If x is a simple root of the polynomial p , then Laguerre's method converges cubically whenever the initial guess x 0 is close enough to the root x . On the other hand, if x is a multiple root then the convergence is only linear. This is obtained with the penalty of calculating values for the polynomial and its first and second derivatives at each stage of the iteration.  A major advantage of Laguerre's method is that it is almost guaranteed to converge to some root of the polynomial no matter where the initial approximation is chosen . This is in contrast to other methods such as the Newton–Raphson method which may fail to converge for poorly chosen initial guesses. It may even converge to a complex root of the polynomial, because of the square root being taken in the calculation of a above may be of a negative number. This may be considered an advantage or a liability depending on the application to which the method is being used. Empirical evidence has shown that convergence failure is extremely rare, making this a good candidate for a general purpose polynomial root finding algorithm. However, given the fairly limited theoretical understanding of the algorithm, many numerical analysts are hesitant to use it as such, and prefer better understood methods such as the Jenkins–Traub algorithm , for which more solid theory has been developed. Nevertheless, the algorithm is fairly simple to use compared to these other "sure-fire" methods, easy enough to be used by hand or with the aid of a pocket calculator when an automatic computer is unavailable. The speed at which the method converges means that one is only very rarely required to compute more than a few iterations to get high accuracy.  References          "  Category:Root-finding algorithms   