


UNITY (programming language)




UNITY (programming language)

UNITY is a programming language that was constructed by K. Mani Chandy and Jayadev Misra for their book Parallel Program Design: A Foundation. It is a rather theoretical language, which tries to focus on what, instead of where, when or how. The peculiar thing about the language is that it has no flow control. The statements in the program run in a random order, until none of the statements causes change if run. This allows for programs that run indefinitely (auto-pilot or power plant safety system) as well as programs that would normally terminate (which here converge to a fixed point).
Description
All statements are assignments, and are separated by #. A statement can consist of multiple assignments, of the form a,b,c := x,y,z, or a := x || b := y || c := z. You can also have a quantified statement list, , where x and y are chosen randomly among the values that satisfy expression. A quantified assignment is similar. In , statement is executed simultaneously for all pairs of x and y that satisfy expression.
Examples
Bubble sort
Bubble sort the array by comparing adjacent numbers, and swapping them if they are in the wrong order. Using 
 
 
 
  expected time, 
 
 
 
  processors and 
 
 
 
  expected work. The reason you only have 
 
 
expected time, is that k is always chosen randomly from 
 
 
 
 . This can be fixed by flipping k manually.
Program bubblesort
declare
    n: integer,
    A: array [0..n-1] of integer
initially
    n = 20 #
    
assign
     A[i+1] > >
end
Rank-sort
You can sort in 
 
 
 
  time with rank-sort. You need 
 
 
 
  processors, and do 
 
 
 
  work.
Program ranksort
declare
    n: integer,
    A,R: array [0..n-1] of integer
initially
    n = 15 #
    
assign
     >
    #
    
end
Floyd–Warshall algorithm
Using the Floyd–Warshall algorithm all pairs shortest path algorithm, we include intermediate nodes iteratively, and get 
 
 
 
  time, using 
 
 
 
  processors and 
 
 
 
  work.
Program shortestpath
declare
    n,k: integer,
    D: array [0..n-1, 0..n-1] of integer
initially
    n = 10 #
    k = 0 #
    
assign
     ||
    k := k + 1 if k \Theta(\log^2 n) time, using 

 processors and 

 work.
Program shortestpath2
declare
    n: integer,
    D: array [0..n-1, 0..n-1] of integer
initially
    n = 10 #
    
assign
    ) >
end
After round 
 
 
 
 , D[i,j] contains the length of the shortest path from 
 
 
 
  to 
 
 
 
  of length 
 
 
 
 . In the next round, of length 
 
 
 
 , and so on.
References

K. Mani Chandy and Jayadev Misra (1988) Parallel Program Design: A Foundation.

"
Category:Experimental programming languages


