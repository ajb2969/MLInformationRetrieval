


Symbolic integration




Symbolic integration

In calculus, symbolic integration is the problem of finding a formula for the antiderivative, or indefinite integral, of a given function f(x), i.e. to find a differentiable function F(x) such that



This is also denoted



Discussion
The term symbolic is used to distinguish this problem from that of numerical integration, where the value of F at a particular input or set of inputs, rather than a general formula for F, is sought.
Both problems were held to be of practical and theoretical importance long before the time of digital computers, but they are now generally considered the domain of computer science, as computers are most often used currently to tackle individual instances.
Finding the derivative of an expression is a straightforward process for which it is easy to construct an algorithm. The reverse question of finding the integral is much more difficult. Many expressions which are relatively simple do not have integrals that can be expressed in closed form. See antiderivative for more details.
A procedure called the Risch algorithm exists which is capable of determining if the integral of an elementary function (function built from a finite number of exponentials, logarithms, constants, and nth roots through composition and combinations using the four elementary operations) is elementary and returning it if it does. In its original form, Risch algorithm was not suitable for a direct implementation, and its complete implementation took a long time. It was first implemented in Reduce in the case of purely transcendental functions; the case of purely algebraic functions was solved and implemented in Reduce by James H. Davenport; the general case was solved and implemented in Axiom by Manuel Bronstein.
However, the Risch algorithm applies only to indefinite integrals and most of the integrals of interest to physicists, theoretical chemists and engineers, are definite integrals often related to Laplace transforms, Fourier transforms and Mellin transforms. Lacking of a general algorithm, the developers of computer algebra systems, have implemented heuristics based on pattern-matching and the exploitation of special functions, in particular the incomplete gamma function.1 Although this approach is heuristic rather than algorithmic, it is nonetheless an effective method for solving many definite integrals encountered by practical engineering applications. Earlier systems such as Macsyma had a few definite integrals related to special functions within a look-up table. However this particular method, involving differentiation of special functions with respect to its parameters, variable transformation, pattern matching and other manipulations, was pioneered by developers of the Maple2 system then later emulated by Mathematica, Axiom, MuPAD and other systems.
Example
For example:



is a symbolic result for an indefinite integral (here C is a constant of integration),



is a symbolic result for a definite integral, and



is a numerical result for the same definite integral.
See also

Definite integral
Elementary function
Indefinite integral
Risch algorithm
Symbolic computation

References






External links


Wolfram Integrator — Free online symbolic integration with Mathematica

"
Category:Computer algebra Category:Differential algebra



K.O Geddes, M.L. Glasser, R.A. Moore and T.C. Scott, Evaluation of Classes of Definite Integrals Involving Elementary Functions via Differentiation of Special Functions, AAECC (Applicable Algebra in Engineering, Communication and Computing), vol. 1, (1990), pp. 149–165, 1
K.O. Geddes and T.C. Scott, Recipes for Classes of Definite Integrals Involving Exponentials and Logarithms, Proceedings of the 1989 Computers and Mathematics conference, (held at MIT June 12, 1989), edited by E. Kaltofen and S.M. Watt, Springer-Verlag, New York, (1989), pp. 192–201. 2




