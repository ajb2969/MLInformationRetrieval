   Simultaneous perturbation stochastic approximation      Simultaneous perturbation stochastic approximation   Simultaneous perturbation stochastic approximation (SPSA) is an algorithmic method for optimizing systems with multiple unknown parameters . It is a type of stochastic approximation algorithm. As an optimization method, it is appropriately suited to large-scale population models, adaptive modeling, simulation optimization , and atmospheric modeling . Many examples are presented at the SPSA website http://www.jhuapl.edu/SPSA . A comprehensive recent book on the subject is Bhatnagar et al. (2013). An early paper on the subject is Spall (1987) and the foundational paper providing the key theory and justification is Spall (1992).  SPSA is a descent method capable of finding global minima, sharing this property with other methods as simulated annealing. Its main feature is the gradient approximation that requires only two measurements of the objective function, regardless of the dimension of the optimization problem. Recall that we want to find the optimal control    u  *     superscript  u     u^{*}   with loss function    J   (  u  )       J  u    J(u)   :        u  *   =    arg    min   u  ∈  U    J     (  u  )     .       superscript  u          subscript     u  U    J    u     u^{*}=\arg\min_{u\in U}J(u).     Both Finite Differences Stochastic Approximation (FDSA) and SPSA use the same iterative process:        u   n  +  1    =    u  n   -    a  n     g  ^   n    (   u  n   )      ,       subscript  u    n  1       subscript  u  n      subscript  a  n    subscript   normal-^  g   n    subscript  u  n       u_{n+1}=u_{n}-a_{n}\hat{g}_{n}(u_{n}),     where     u  n   =    (    (   u  n   )   1   ,    (   u  n   )   2   ,  …  ,    (   u  n   )   p   )   T        subscript  u  n    superscript    subscript   subscript  u  n   1    subscript   subscript  u  n   2   normal-…   subscript   subscript  u  n   p    T     u_{n}=((u_{n})_{1},(u_{n})_{2},\ldots,(u_{n})_{p})^{T}   represents the    n   t  h      superscript  n    t  h     n^{th}   iterate,      g  ^   n    (   u  n   )        subscript   normal-^  g   n    subscript  u  n     \hat{g}_{n}(u_{n})   is the estimate of the gradient of the objective function     g   (  u  )    =    ∂   ∂  u    J   (  u  )          g  u          u    J  u     g(u)=\frac{\partial}{\partial u}J(u)   evaluated at    u  n     subscript  u  n    {u_{n}}   , and    {   a  n   }      subscript  a  n     \{a_{n}\}   is a positive number sequence converging to 0. If    u  n     subscript  u  n    u_{n}   is a p -dimensional vector, the    i   t  h      superscript  i    t  h     i^{th}   component of the symmetric finite difference gradient estimator is:   FD:        (     g  n   ^    (   u  n   )    )   i   =     J   (    u  n   +    c  n    e  i     )    -   J   (    u  n   -    c  n    e  i     )      2   c  n      ,       subscript     normal-^   subscript  g  n     subscript  u  n    i         J     subscript  u  n      subscript  c  n    subscript  e  i        J     subscript  u  n      subscript  c  n    subscript  e  i         2   subscript  c  n       (\hat{g_{n}}(u_{n}))_{i}=\frac{J(u_{n}+c_{n}e_{i})-J(u_{n}-c_{n}e_{i})}{2c_{n}},      1 ≤i ≤p , where    e  i     subscript  e  i    e_{i}   is the unit vector with a 1 in the    i   t  h      superscript  i    t  h     i^{th}   place, and    c  n     subscript  c  n    c_{n}   is a small positive number that decreases with n . With this method, 2p evaluations of J for each    g  n     subscript  g  n    g_{n}   are needed. Clearly, when p is large, this estimator loses efficiency.  Let now    Δ  n     subscript  normal-Δ  n    \Delta_{n}   be a random perturbation vector. The    i   t  h      superscript  i    t  h     i^{th}   component of the stochastic perturbation gradient estimator is:   SP:        (     g  n   ^    (   u  n   )    )   i   =     J   (    u  n   +    c  n    Δ  n     )    -   J   (    u  n   -    c  n    Δ  n     )      2   c  n     (   Δ  n   )   i      .       subscript     normal-^   subscript  g  n     subscript  u  n    i         J     subscript  u  n      subscript  c  n    subscript  normal-Δ  n        J     subscript  u  n      subscript  c  n    subscript  normal-Δ  n         2   subscript  c  n    subscript   subscript  normal-Δ  n   i       (\hat{g_{n}}(u_{n}))_{i}=\frac{J(u_{n}+c_{n}\Delta_{n})-J(u_{n}-c_{n}\Delta_{n%
 })}{2c_{n}(\Delta_{n})_{i}}.      Remark that FD perturbs only one direction at a time, while the SP estimator disturbs all directions at the same time (the numerator is identical in all p components). The number of loss function measurements needed in the SPSA method for each    g  n     subscript  g  n    g_{n}   is always 2, independent of the dimension  p . Thus, SPSA uses p times fewer function evaluations than FDSA, which makes it a lot more efficient.  Simple experiments with p=2 showed that SPSA converges in the same number of iterations as FDSA. The latter follows approximately the steepest descent direction, behaving like the gradient method. On the other hand, SPSA, with the random search direction, does not follow exactly the gradient path. In average though, it tracks it nearly because the gradient approximation is an almost unbiased estimator of the gradient, as shown in the following lemma.  Convergence lemma  Denote by       b  n   =  E   [    g  ^   n   |   u  n   ]   -  ∇  J   (   u  n   )      fragments   subscript  b  n    E   fragments  normal-[   subscript   normal-^  g   n   normal-|   subscript  u  n   normal-]    normal-∇  J   fragments  normal-(   subscript  u  n   normal-)     b_{n}=E[\hat{g}_{n}|u_{n}]-\nabla J(u_{n})     the bias in the estimator     g  ^   n     subscript   normal-^  g   n    \hat{g}_{n}   . Assume that    {    (   Δ  n   )   i   }      subscript   subscript  normal-Δ  n   i     \{(\Delta_{n})_{i}\}   are all mutually independent with zero-mean, bounded second moments, and    E   (    |    (   Δ  n   )   i   |    -  1    )       E   superscript     subscript   subscript  normal-Δ  n   i      1      E(|(\Delta_{n})_{i}|^{-1})   uniformly bounded. Then    b  n     subscript  b  n    b_{n}   →0 w.p. 1.  Sketch of the proof  The main idea is to use conditioning on    Δ  n     subscript  normal-Δ  n    \Delta_{n}   to express    E   [    (    g  ^   n   )   i   ]       E   delimited-[]   subscript   subscript   normal-^  g   n   i      E[(\hat{g}_{n})_{i}]   and then to use a second order Taylor expansion of    J    (    u  n   +    c  n    Δ  n     )   i       J   subscript     subscript  u  n      subscript  c  n    subscript  normal-Δ  n     i     J(u_{n}+c_{n}\Delta_{n})_{i}   and    J    (    u  n   -    c  n    Δ  n     )   i       J   subscript     subscript  u  n      subscript  c  n    subscript  normal-Δ  n     i     J(u_{n}-c_{n}\Delta_{n})_{i}   . After algebraic manipulations using the zero mean and the independence of    {    (   Δ  n   )   i   }      subscript   subscript  normal-Δ  n   i     \{(\Delta_{n})_{i}\}   , we get       E   [    (    g  ^   n   )   i   ]    =     (   g  n   )   i   +   O   (   c  n  2   )           E   delimited-[]   subscript   subscript   normal-^  g   n   i        subscript   subscript  g  n   i     O   superscript   subscript  c  n   2       E[(\hat{g}_{n})_{i}]=(g_{n})_{i}+O(c_{n}^{2})     The result follows from the hypothesis that    c  n     subscript  c  n    c_{n}   →0.  Next we resume some of the hypotheses under which    u  t     subscript  u  t    u_{t}   converges in probability to the set of global minima of    J   (  u  )       J  u    J(u)   . The efficiency of the method depends on the shape of    J   (  u  )       J  u    J(u)   , the values of the parameters    a  k     subscript  a  k    a_{k}   and    c  k     subscript  c  k    c_{k}   and the distribution of the perturbation terms    Δ   k  i      subscript  normal-Δ    k  i     \Delta_{ki}   . First, the algorithm parameters must satisfy the following conditions:       a  t     subscript  a  t    a_{t}   >0,    a  t     subscript  a  t    a_{t}   →0 when t→∝ and      ∑   t  =  1   ∞    a  t    =  ∞        superscript   subscript     t  1       subscript  a  t       \sum_{t=1}^{\infty}a_{t}=\infty   . A good choice would be      a  t   =   a  t    ;       subscript  a  t     a  t     a_{t}=\frac{a}{t};   a>0;       c  t   =   c   t  γ         subscript  c  t     c   superscript  t  γ      c_{t}=\frac{c}{t^{\gamma}}   , where c>0,    γ  ∈   [   1  6   ,   1  2   ]       γ     1  6     1  2      \gamma\in\left[\frac{1}{6},\frac{1}{2}\right]   ;        ∑   t  =  1   ∞     (    a  t    c  t    )   2    <  ∞        superscript   subscript     t  1       superscript     subscript  a  t    subscript  c  t    2       \sum_{t=1}^{\infty}(\frac{a_{t}}{c_{t}})^{2}<\infty         Δ   t  i      subscript  normal-Δ    t  i     \Delta_{ti}   must be mutually independent zero-mean random variables, symmetrically distributed about zero, with     Δ   k  i    <   a  1   <  ∞         subscript  normal-Δ    k  i     subscript  a  1            \Delta_{ki}   . The inverse first and second moments of the    Δ   t  i      subscript  normal-Δ    t  i     \Delta_{ti}   must be finite.   A good choice for    Δ   k  i      subscript  normal-Δ    k  i     \Delta_{ki}   is Bernoulli +-1 with probability 0.5 (other choices are possible too). The uniform and normal distributions do not satisfy the finite inverse moment conditions, so can not be used.  The loss function J(u) must be thrice continuously differentiable and the individual elements of the third derivative must be bounded     |    J   (  3  )     (  u  )    |   <   a  3   <  ∞             superscript  J  3   u     subscript  a  3            |J^{(3)}(u)|   . Also, |J(u)|→∝ as u→∝ .  In addition,    ∇  J     normal-∇  J    \nabla J   must be Lipschitz continuous, bounded and the ODE     u  ˙   =   g   (  u  )         normal-˙  u     g  u     \dot{u}=g(u)   must have a unique solution for each initial condition. Under these conditions and a few others,    u  k     subscript  u  k    u_{k}    converges in probability to the set of global minima of J(u) (see Maryak and Chin, 2008).  References   Bhatnagar, S., Prasad, H. L., and Prashanth, L. A. (2013), Stochastic Recursive Algorithms for Optimization: Simultaneous Perturbation Methods , Springer 1 .  Hirokami, T., Maeda, Y., Tsukada, H. (2006) "Parameter estimation using simultaneous perturbation stochastic approximation", Electrical Engineering in Japan, 154 (2), 30–3 2  Maryak, J.L., and Chin, D.C. (2008), "Global Random Optimization by Simultaneous Perturbation Stochastic Approximation," IEEE Transactions on Automatic Control , vol. 53, pp. 780-783.  Spall, J. C. (1987), “A Stochastic Approximation Technique for Generating Maximum Likelihood Parameter Estimates,” Proceedings of the American Control Conference , Minneapolis, MN, June 1987, pp. 1161–1167.  Spall, J. C. (1992), “Multivariate Stochastic Approximation Using a Simultaneous Perturbation Gradient Approximation,” IEEE Transactions on Automatic Control , vol. 37(3), pp. 332–341.  Spall, J.C. (1998). "Overview of the Simultaneous Perturbation Method for Efficient Optimization" 2 . Johns Hopkins APL Technical Digest , 19(4), 482–492.  Spall, J.C. (2003) Introduction to Stochastic Search and Optimization: Estimation, Simulation, and Control , Wiley. ISBN 0-471-33052-3 (Chapter 7)     "  Category:Numerical climate and weather models  Category:Stochastic algorithms  Category:Optimization algorithms and methods   