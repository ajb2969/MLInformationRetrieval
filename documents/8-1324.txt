   Feige–Fiat–Shamir identification scheme      Feige–Fiat–Shamir identification scheme   In cryptography , the Feige–Fiat–Shamir identification scheme is a type of parallel zero-knowledge proof developed by Uriel Feige , Amos Fiat , and Adi Shamir in 1988. Like all zero-knowledge proofs, it allows one party, Peggy, to prove to another party, Victor, that she possesses secret information without revealing to Victor what that secret information is. The Feige–Fiat–Shamir identification scheme, however, uses modular arithmetic and a parallel verification process that limits the number of communications between Peggy and Victor.  Setup  Choose two large prime integers p and q and compute the product n = pq . Create secret numbers     s  1   ,  ⋯  ,   s  k       subscript  s  1   normal-⋯   subscript  s  k     s_{1},\cdots,s_{k}   with gcd(    s  i     subscript  s  i    s_{i}   ,   n   n   n   ) = 1. Compute     v  i   ≡    s  i  2      (   mod  n   )         subscript  v  i    annotated   superscript   subscript  s  i   2    pmod  n      v_{i}\equiv s_{i}^{2}\;\;(\mathop{{\rm mod}}n)   . Peggy and Victor both receive   n   n   n   while   p   p   p   and   q   q   q   are kept secret. Peggy is then sent the numbers    s  i     subscript  s  i    s_{i}   . These are her secret login numbers. Victor is sent the numbers    v  i     subscript  v  i    v_{i}   by Peggy when she wishes to identify herself to Victor. Victor is unable to recover Peggy's    s  i     subscript  s  i    s_{i}   numbers from his    v  i     subscript  v  i    v_{i}   numbers due to the difficulty in determining a modular square root when the modulus' factorization is unknown.  Procedure   Peggy chooses a random integer   r   r   r   , a random sign    s  ∈   {   -  1   ,  1  }       s     1   1     s\in\{-1,1\}   and computes    x  ≡    s  ⋅   r  2       (   mod  n   )        x   annotated   normal-⋅  s   superscript  r  2     pmod  n      x\equiv s\cdot r^{2}\;\;(\mathop{{\rm mod}}n)   . Peggy sends   x   x   x   to Victor.  Victor chooses numbers     a  1   ,  ⋯  ,   a  k       subscript  a  1   normal-⋯   subscript  a  k     a_{1},\cdots,a_{k}   where    a  i     subscript  a  i    a_{i}   equals 0 or 1. Victor sends these numbers to Peggy.  Peggy computes    y  ≡    r   s  1   a  1     s  2   a  2    ⋯   s  k   a  k        (   mod  n   )        y   annotated    r   superscript   subscript  s  1    subscript  a  1     superscript   subscript  s  2    subscript  a  2    normal-⋯   superscript   subscript  s  k    subscript  a  k      pmod  n      y\equiv rs_{1}^{a_{1}}s_{2}^{a_{2}}\cdots s_{k}^{a_{k}}\;\;(\mathop{{\rm mod}}n)   . Peggy sends this number to Victor.  Victor checks that      y  2   ≡    ±   x   v  1   a  1     v  2   a  2    ⋯   v  k   a  k         (   mod  n   )     .       superscript  y  2    annotated   plus-or-minus    x   superscript   subscript  v  1    subscript  a  1     superscript   subscript  v  2    subscript  a  2    normal-⋯   superscript   subscript  v  k    subscript  a  k       pmod  n      y^{2}\equiv\pm\,xv_{1}^{a_{1}}v_{2}^{a_{2}}\cdots v_{k}^{a_{k}}\;\;(\mathop{{%
 \rm mod}}n).      This procedure is repeated with different   r   r   r   and    a  i     subscript  a  i    a_{i}   values until Victor is satisfied that Peggy does indeed possess the modular square roots (    s  i     subscript  s  i    s_{i}   ) of his    v  i     subscript  v  i    v_{i}   numbers.  Security  In the procedure, Peggy does not give any useful information to Victor. She merely proves to Victor that she has the secret numbers without revealing what those numbers are. Anyone who intercepts the communication between each Peggy and Victor would only learn the same information. The eavesdropper would not learn anything useful about Peggy's secret numbers.  In an early version, the Fiat–Shamir identification scheme , one bit of information was leaked. By the introduction of the sign   s   s   s   even this bit was concealed resulting in a zero-knowledge-protocol.  Suppose Eve has intercepted Victor's    v  i     subscript  v  i    v_{i}   numbers but does not know what Peggy's    s  i     subscript  s  i    s_{i}   numbers are. If Eve wants to try to convince Victor that she is Peggy, she would have to correctly guess what Victor's    a  i     subscript  a  i    a_{i}   numbers will be. She then picks a random   y   y   y   , calculates    x  ≡     y  2    v  1   -   a  1      v  2   -   a  2     ⋯   v  k   -   a  k         (   mod  n   )        x   annotated     superscript  y  2    superscript   subscript  v  1      subscript  a  1      superscript   subscript  v  2      subscript  a  2     normal-⋯   superscript   subscript  v  k      subscript  a  k       pmod  n      x\equiv y^{2}v_{1}^{-a_{1}}v_{2}^{-a_{2}}\cdots v_{k}^{-a_{k}}\;\;(\mathop{{%
 \rm mod}}n)   and sends   x   x   x   to Victor. When Victor sends    a  i     subscript  a  i    a_{i}   , Eve simply returns her   y   y   y   . Victor is satisfied and concludes that Eve has the secret numbers. However, the probability of Eve correctly guessing what Victor's    a  i     subscript  a  i    a_{i}   will be is 1 in    2  k     superscript  2  k    2^{k}   . By repeating the procedure   t   t   t   times, the probability drops to 1 in    2   k  t      superscript  2    k  t     2^{kt}   . For    k  =  5      k  5    k=5   and    t  =  4      t  4    t=4   the probability of successfully posing as Peggy is less than 1 in 1 million.  References      "  Category:Zero-knowledge protocols   