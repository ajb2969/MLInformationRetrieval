   Graph bandwidth      Graph bandwidth   In graph theory , the graph bandwidth problem is to label the n vertices v i of a graph G with distinct integers f ( v i ) so that the quantity    max   {    |    f   (   v  i   )    -   f   (   v  j   )     |   :     v  i    v  j    ∈   E     }        normal-:        f   subscript  v  i      f   subscript  v  j           subscript  v  i    subscript  v  j    E      \max\{\,|f(v_{i})-f(v_{j})|:v_{i}v_{j}\in E\,\}   is minimized ( E is the edge set of G ). 1 The problem may be visualized as placing the vertices of a graph at distinct integer points along the x -axis so that the length of the longest edge is minimized. Such placement is called linear graph arrangement , linear graph layout or linear graph placement . 2  The weighted graph bandwidth problem is a generalization wherein the edges are assigned weights w ij and the cost function to be minimized is    max   {     w   i  j     |    f   (   v  i   )    -   f   (   v  j   )     |    :     v  i    v  j    ∈   E     }        normal-:     subscript  w    i  j          f   subscript  v  i      f   subscript  v  j            subscript  v  i    subscript  v  j    E      \max\{\,w_{ij}|f(v_{i})-f(v_{j})|:v_{i}v_{j}\in E\,\}   .  In terms of matrices, the (unweighted) graph bandwidth is the bandwidth of the symmetric matrix which is the adjacency matrix of the graph. The bandwidth may also be defined as one less than the maximum clique size in a proper interval supergraph of the given graph, chosen to minimize its clique size .  Bandwidth formulas for some graphs  For several families of graphs, the bandwidth    φ   (  G  )       φ  G    \varphi(G)   is given by an explicit formula.  The bandwidth of a path graph  P n on n vertices is 1, and for a complete graph K m we have     φ   (   K  n   )    =   n  -  1         φ   subscript  K  n      n  1     \varphi(K_{n})=n-1   . For the complete bipartite graph  K m , n ,       φ   (   K   m  ,  n    )    =    ⌊    (   m  -  1   )   /  2   ⌋   +  n         φ   subscript  K   m  n             m  1   2    n     \varphi(K_{m,n})=\lfloor(m-1)/2\rfloor+n   , assuming     m  ≥  n  ≥  1   ,        m  n       1     m\geq n\geq 1,     which was proved by Chvátal. 3 As a special case of this formula, the star graph      S  k   =   K   k  ,  1         subscript  S  k    subscript  K   k  1      S_{k}=K_{k,1}   on k + 1 vertices has bandwidth     φ   (   S  k   )    =    ⌊    (   k  -  1   )   /  2   ⌋   +  1         φ   subscript  S  k            k  1   2    1     \varphi(S_{k})=\lfloor(k-1)/2\rfloor+1   .  For the hypercube graph     Q  n     subscript  Q  n    Q_{n}   on    2  n     superscript  2  n    2^{n}   vertices the bandwidth was determined by  to be        φ   (   Q  n   )    =    ∑   m  =  0    n  -  1     (     m       ⌊   m  /  2   ⌋      )     .        φ   subscript  Q  n      superscript   subscript     m  0      n  1     binomial  m      m  2        \varphi(Q_{n})=\sum_{m=0}^{n-1}{\left({{m}\atop{\lfloor m/2\rfloor}}\right)}.     Chvatálová showed 4 that the bandwidth of the ( m × n )  square grid graph      P  m   ×   P  n        subscript  P  m    subscript  P  n     P_{m}\times P_{n}   , that is, the Cartesian product of two path graphs on   m   m   m   and   n   n   n   vertices, is equal to min{ m , n }.  Bounds  The bandwidth of a graph can be bounded in terms of various other graph parameters. For instance, letting χ( G ) denote the chromatic number of G ,        φ   (  G  )    ≥    χ   (  G  )    -  1    ;        φ  G       χ  G   1     \varphi(G)\geq\chi(G)-1;     letting diam( G ) denote the diameter of G , the following inequalities hold: 5        ⌈    (   n  -  1   )   /   diam   (  G  )     ⌉   ≤   φ   (  G  )    ≤   n  -   diam   (  G  )      ,              n  1    diam  G       φ  G          n   diam  G       \lceil(n-1)/\operatorname{diam}(G)\rceil\leq\varphi(G)\leq n-\operatorname{%
 diam}(G),     where   n   n   n   is the number of vertices in   G   G   G   .  If a graph G has bandwidth k , then its pathwidth is at most k , and its tree-depth is at most k log( n / k ) . In contrast, as noted in the previous section, the star graph S k , a structurally very simple example of a tree , has comparatively large bandwidth. Observe that the pathwidth of S k is 1, and its tree-depth is 2.  Some graph families of bounded degree have sublinear bandwidth:  proved that if T is a tree of maximum degree at most ∆, then        φ   (  T  )    ≤    5  n     log  Δ   n     .        φ  T       5  n     subscript   normal-Δ   n      \varphi(T)\leq\frac{5n}{\log_{\Delta}n}.     More generally, for planar graphs of bounded maximum degree at most ∆ , a similar bound holds (cf. ):        φ   (  G  )    ≤    20  n     log  Δ   n     .        φ  G       20  n     subscript   normal-Δ   n      \varphi(G)\leq\frac{20n}{\log_{\Delta}n}.     Computing the bandwidth  Both the unweighted and weighted versions are special cases of the quadratic bottleneck assignment problem . The bandwidth problem is NP-hard , even for some special cases. 6 Regarding the existence of efficient approximation algorithms , it is known that the bandwidth is NP-hard to approximate within any constant, and this even holds when the input graphs are restricted to caterpillar trees . On the other hand, a number of polynomially-solvable special cases are known. 7 A heuristic algorithm for obtaining linear graph layouts of low bandwidth is the Cuthill–McKee algorithm . Fast multilevel algorithm for graph bandwidth computation was proposed in. 8  Applications  The interest in this problem comes from some application areas.  One area is sparse matrix / band matrix handling, and general algorithms from this area, such as Cuthill–McKee algorithm , may be applied to find approximate solutions for the graph bandwidth problem.  Another application domain is in electronic design automation . In standard cell design methodology, typically standard cells have the same height, and their placement is arranged in a number of rows. In this context, graph bandwidth problem models the problem of placement of a set of standard cells in a singe row with the goal of minimizing the maximal propagation delay (which is assumed to be proportional to wire length).  See also   Pathwidth , a different NP-complete optimization problem involving linear layouts of graphs.   References             External links   Minimum bandwidth problem , in: Pierluigi Crescenzi and Viggo Kann (eds.), A compendium of NP optimization problems. Accessed May 26, 2010.   "  Category:Graph algorithms  Category:Combinatorial optimization  Category:NP-hard problems  Category:Graph invariants     ↩   A remark on a problem of Harary. V. Chvátal, Czechoslovak Mathematical Journal  20 (1):109–111, 1970. http://dml.cz/dmlcz/100949 ↩  Optimal Labelling of a product of two paths. J. Chvatálová, Discrete Mathematics  11 , 249–253, 1975. ↩  ↩  Garey–Johnson: GT40 ↩  "Coping with the NP-Hardness of the Graph Bandwidth Problem", Uriel Feige, Lecture Notes in Computer Science , Volume 1851, 2000, pp. 129-145, ↩  ↩     