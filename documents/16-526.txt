


Draft:Murray polygon




Draft:Murray polygon


In geometry and computer science, a murray polygon is a space-filling curve family invented by Jack Cole.123 The name is a shortening of "multiple radix arithmetic" (and is hence not capitalized). The curve has the property that it can fill a rectangular area as long as the length of the sides factor into odd integers, and that it can be rapidly calculated without recursion. It has been applied to dithering4 and connected component labelling.5
Construction
The curve is constructed using "murray integers", variable radix integers that are incremented, and their Gray code split into a horizontal and a vertical parts that act as coordinates for the curve. Since Gray codes only change one digit at a time, the next point will be adjacent to the previous point.
Murray integers
Let $[r_n,r_{n-1}, \ldots, r_2, r_1]$ be a sequence of non-negative integers: this is the radix.
Let $[d_n,d_{n-1}, \ldots, d_2, d_1]$ be a sequence of non-negative integers such that $0 \leq d_i < r_i$ for $i=1,2,\ldots, n$. This can be viewed as a mixed radix representation of an integer $d$, unlike the single radix representations (base-10, base-8 etc.) normally used.
The murray integer representing the number $N$ can be found by starting from $d_1$, setting $d_i := N \mod r_i$ and $N := \lfloor N/r_i \rfloor$ until N = 0. Converting a murray integer representation back is done similarly to converting a fixed radix number: N is set to $d_n$, and for each digit from $d_{n-1}$ to $d_1$ $N:=N\cdot r_i + d_i$.
Addition works as normal, except that each digit produces a carry when $a_i + b_i > r_i$, and the new digit will be $d_i = (a_i+b_i) \mod r_i$. Other arithmetic operations can be defined similarly.
Cole also introduces reduced radix complementation: if $d =[ d_n,d_{n-1}, \ldots, d_2, d_1]$ is a murray integer, then $e = [e_n,e_{n-1}, \ldots, e_2, e_1]$ is the reduced radix complement of d if $e_i=r_i-1-d_i$.
The polygon algorithm also use Gray code murray integers; this can be viewed as an n-ary Gray code with the number of digits varying between places. Cole only uses odd parity radices, which allows a simple conversion algorithm replacing $d_i :=  r_i-1-d_i$ if the sum of all its leftmost digits is odd, otherwise leaving it unaltered.
Example: let the radix be $r = [5,3,5,3]$. Then the first 15 integers will be represented as $[1],[2],[10],[11],[12],[20],[21],[22],[30],[31],[32],[40],[41],[42],[100]$. The integer $d=[1230]$ corresponds to $N=(((1)\cdot 3 + 2)\cdot 5 + 3)\cdot 3 + 0=84$ and has complement $e=[3012]$.
Curve traversal
Given a rectangle with sides $m,n$ where the sides have $j$ factors $m=\prod_{k=1}^j m_k$, $n=\prod_{k=1}^j n_k$ (the factors do not have to be prime, and can be set to 1), the algorithm to transform an integer $0\leq d \leq mn-1$ into a point $(x,y)$ in a rectangle of sides $m-1,n-1$ is:

Convert d to murray integer form $p = [p_n,p_{n-1},\ldots,p_2,p_1]$ where $n=2j$ and the radix $r_i (1 of digit   is $m_k$ if $i = 2k - 1$ and $n_k$ if $i = 2k$.
 


Convert p to the equivalent murray Gray-coded integer $e=G(p)=[e_n,e_{n-1},\ldots,e_2,e_1]_g$.
 


Split the even and odd digits e into two parts$$f=[e_{n-1},e_{n-3},\ldots,e_3,e_1]_g$$, $g=[e_{n},e_{n-2},\ldots,e_4,e_2]_g$.
 


Convert f and g back to murray integers$$x=G^{-1}(f)=[x_n,x_{n-1},\ldots,x_2,x_1]$$ , $y=G^{-1}(g)=[y_n,y_{n-1},\ldots,y_2,y_1]$. These are the coordinates of the point.
 

The above algorithm is somewhat computationally inefficient. By combining the steps it can be improved, especially since previous results can be re-used as d is incremented.
External links

S-Algol code for the algorithm: http://alb.host.cs.st-andrews.ac.uk/cole/code.html

Referencess
:Category:Continuous mappings :Category:Fractal curves :Category:Numeral systems "



http://alb.host.cs.st-andrews.ac.uk/cole/poly.html↩
A. J. Cole, A note on Peano polygons and Gray codes. Int. J. Comput. Math. 18, 3–13 (1985).↩
A. J. Cole, Direct transformations between sets of integers and Hilbert polygons. Int. J. Comput. Math. (1985).↩
A. J. Cole. Halftoning without dither or edge enhancement. The Visual Computer 1991, Volume 7, Issue 5-6, pp 232–246↩
B. Pharasi. Connected components labelling using murray polygons. Computers & Graphics Volume 19, Issue 3, May–June 1995, Pages 405–411↩




