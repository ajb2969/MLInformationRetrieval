   Navigation function      Navigation function   Navigation function usually refers to a function of position, velocity, acceleration and time which is used to plan robot trajectories through the environment. Generally, the goal of a navigation function is to create feasible, safe paths that avoid obstacles while allowing a robot to move from its starting configuration to its goal configuration.  Potential functions as navigation functions  (Figure)  A potential function. Imagine dropping a marble on the surface. It will avoid the three obstacles and eventually reach the goal position in the center.   Potential functions assume that the environment or work space is known. Obstacles are assigned a high potential value, and the goal position is assigned a low potential. To reach the goal position, a robot only needs to follow the negative gradient of the surface.  We can formalize this concept mathematically as following: Let   X   X   X   be the state space of all possible configurations of a robot. Let     X  g   ⊂  X       subscript  X  g   X    X_{g}\subset X   denote the goal region of the state space.  Then a potential function    ϕ   (  x  )       ϕ  x    \phi(x)   is called a (feasible) navigation function if 1        ϕ   (  x  )    =    0    ∀  x    ∈   X  g           ϕ  x     0   for-all  x          subscript  X  g      \phi(x)=0\ \forall x\in X_{g}          ϕ   (  x  )    =  ∞        ϕ  x      \phi(x)=\infty   if and only if no point in    X  G     subscript  X  G    {X_{G}}   is reachable from   x   x   x   .  For every reachable state,    x  ∈   X  ∖   X  G        x    X   subscript  X  G      x\in X\setminus{X_{G}}   , the local operator produces a state    x  ′     superscript  x  normal-′    x^{\prime}   for which     ϕ   (   x  ′   )    <   ϕ   (  x  )          ϕ   superscript  x  normal-′      ϕ  x     \phi(x^{\prime})<\phi(x)   .   Navigation Function in Optimal Control  While for certain applications, it suffices to have a feasible navigation function, in many cases it is desirable to have an optimal navigation function with respect to a given cost functional    J   J   J   . Formalized as an optimal control problem, we can write       minimize  J   (   x   1  :  T    ,   u   1  :  T    )    =    ∫  T    L   (   x  t   ,   u  t   ,  t  )   d  t          minimize  J    subscript  x   normal-:  1  T     subscript  u   normal-:  1  T        subscript   T     L    subscript  x  t    subscript  u  t   t   d  t      \text{minimize }J(x_{1:T},u_{1:T})=\int\limits_{T}L(x_{t},u_{t},t)dt          subject to    x  t   ˙    =   f   (   x  t   ,   u  t   )          subject to   normal-˙   subscript  x  t       f    subscript  x  t    subscript  u  t       \text{subject to }\dot{x_{t}}=f(x_{t},u_{t})   whereby   x   x   x   is the state,   u   u   u   is the control to apply,   L   L   L   is a cost at a certain state   x   x   x   if we apply a control   u   u   u   , and   f   f   f   models the transition dynamics of the system.  Applying Bellman's principle of optimality the optimal cost-to-go function is defined as       ϕ   (   x  t   )    =    min    u  t   ∈   U   (   x  t   )       {    L   (   x  t   ,   u  t   )    +   ϕ   (   f   (   x  t   ,   u  t   )    )     }          ϕ   subscript  x  t      subscript      subscript  u  t     U   subscript  x  t          L    subscript  x  t    subscript  u  t       ϕ    f    subscript  x  t    subscript  u  t          \displaystyle\phi(x_{t})=\min_{u_{t}\in U(x_{t})}\Big\{L(x_{t},u_{t})+\phi(f(x%
 _{t},u_{t}))\Big\}     Together with the above defined axioms we can define the optimal navigation function as        ϕ   (  x  )    =    0    ∀  x    ∈   X  g           ϕ  x     0   for-all  x          subscript  X  g      \phi(x)=0\ \forall x\in X_{g}          ϕ   (  x  )    =  ∞        ϕ  x      \phi(x)=\infty   if and only if no point in    X  G     subscript  X  G    {X_{G}}   is reachable from   x   x   x   .  For every reachable state,    x  ∈   X  ∖   X  G        x    X   subscript  X  G      x\in X\setminus{X_{G}}   , the local operator produces a state    x  ′     superscript  x  normal-′    x^{\prime}   for which     ϕ   (   x  ′   )    <   ϕ   (  x  )          ϕ   superscript  x  normal-′      ϕ  x     \phi(x^{\prime})<\phi(x)   .       ϕ   (   x  t   )    =    min    u  t   ∈   U   (   x  t   )       {    L   (   x  t   ,   u  t   )    +   ϕ   (   f   (   x  t   ,   u  t   )    )     }          ϕ   subscript  x  t      subscript      subscript  u  t     U   subscript  x  t          L    subscript  x  t    subscript  u  t       ϕ    f    subscript  x  t    subscript  u  t          \displaystyle\phi(x_{t})=\min_{u_{t}\in U(x_{t})}\Big\{L(x_{t},u_{t})+\phi(f(x%
 _{t},u_{t}))\Big\}      Stochastic Navigation Function  If we assume the transition dynamics of the system or the cost function as subjected to noise, we obtain a stochastic optimal control problem with a cost    J   (   x  t   ,   u  t   )       J    subscript  x  t    subscript  u  t      J(x_{t},u_{t})   and dynamics   f   f   f   . In the field of reinforcement learning the cost is replaced by a reward function    R   (   x  t   ,   u  t   )       R    subscript  x  t    subscript  u  t      R(x_{t},u_{t})   and the dynamics by the transition probabilities    P   (   x   t  +  1    |   x  t   ,   u  t   )      fragments  P   fragments  normal-(   subscript  x    t  1    normal-|   subscript  x  t   normal-,   subscript  u  t   normal-)     P(x_{t+1}|x_{t},u_{t})   .  See also   Control Theory  Optimal Control  Robot Control  Motion Planning  Reinforcement Learning   References      External links   NFsim : MATLAB Toolbox for motion planning using Navigation Functions.   References  "  Category:Robot control     Lavalle, Steven, Planning Algorithms Chapter 8 ↩     