   Random walker algorithm      Random walker algorithm  The '''random walker algorithm''' is an algorithm for [[image segmentation]].  In the first description of the algorithm, L. Grady: [http://www.cns.bu.edu/~lgrady/grady2006random.pdf Random Walks for Image Segmentation], IEEE Trans. on Pattern Analysis and Machine Intelligence, Vol. 28, No. 11, pp. 1768–1783, Nov., 2006. a user interactively labels a small number of pixels with known labels (called seeds), e.g., "object" and "background". The unlabeled pixels are each imagined to release a random walker, and the probability is computed that each pixel's random walker first arrives at a seed bearing each label, i.e., if a user places K seeds, each with a different label, then it is necessary to compute, for each pixel, the probability that a random walker leaving the pixel will first arrive at each seed. This computation may be determined analytically by solving a system of linear equations. After computing these probabilities for each pixel, the pixel is assigned to the label for which it is most likely to send a random walker. The image is modeled as a graph , in which each pixel corresponds to a node which is connected to neighboring pixels by edges, and the edges are weighted to reflect the similarity between the pixels. Therefore, the random walk occurs on the weighted graph (see Doyle and Snell for an introduction to random walks on graphs 1 ).  Although the initial algorithm was formulated as an interactive method for image segmentation, it has been extended to be a fully automatic algorithm, given a data fidelity term (e.g., an intensity prior). 2 It has also been extended to other applications.  The algorithm was initially published as a conference paper 3 and later as a journal paper. 4  Mathematics  Although the algorithm was described in terms of random walks, the probability that each node sends a random walker to the seeds may be calculated analytically by solving a sparse, positive-definite system of linear equations with the graph Laplacian matrix , which we may represent with the variable   L   L   L   . The algorithm was shown to apply to an arbitrary number of labels (objects), but the exposition here is in terms of two labels (for simplicity of exposition).  Assume that the image is represented by a graph , with each node    v  i     subscript  v  i    v_{i}   associated with a pixel and each edge    e   i  j      subscript  e    i  j     e_{ij}   connecting neighboring pixels    v  i     subscript  v  i    v_{i}   and    v  j     subscript  v  j    v_{j}   . The edge weights are used to encode node similarity, which may be derived from differences in image intensity, color, texture or any other meaningful features. For example, using image intensity    g  i     subscript  g  i    g_{i}   at node    v  i     subscript  v  i    v_{i}   , it is common to use the edge weighting function        w   i  j    =   exp   (   -   β    (    g  i   -   g  j    )   2     )     .       subscript  w    i  j          β   superscript     subscript  g  i    subscript  g  j    2        w_{ij}=\exp{\left(-\beta(g_{i}-g_{j})^{2}\right)}.     The nodes, edges and weights can then be used to construct the graph Laplacian matrix .  The random walker algorithm optimizes the energy       Q   (  x  )    =    x  T   L  x   =    ∑   e   i  j       w   i  j      (    x  i   -   x  j    )   2             Q  x      superscript  x  T   L  x          subscript    subscript  e    i  j        subscript  w    i  j     superscript     subscript  x  i    subscript  x  j    2        Q(x)=x^{T}Lx=\sum_{e_{ij}}w_{ij}\left(x_{i}-x_{j}\right)^{2}   where    x  i     subscript  x  i    x_{i}   represents a real-valued variable associated with each node in the graph and the optimization is constrained by     x  i   =  1       subscript  x  i   1    x_{i}=1   for     v  i   ∈  F       subscript  v  i   F    v_{i}\in F   and     x  i   =  0       subscript  x  i   0    x_{i}=0   for     v  i   ∈  B       subscript  v  i   B    v_{i}\in B   , where   F   F   F   and   B   B   B   represent the sets of foreground and background seeds, respectively. If we let   S   S   S   represent the set of nodes which are seeded (i.e.,    S  =   F  ∪  B       S    F  B     S=F\cup B   ) and    S  ¯     normal-¯  S    \overline{S}   represent the set of unseeded nodes (i.e.,     S  ∪   S  ¯    =  V        S   normal-¯  S    V    S\cup\overline{S}=V   where   V   V   V   is the set of all nodes), then the optimum of the energy minimization problem is given by the solution to         L    S  ¯   ,   S  ¯      x   S  ¯     =   -    L    S  ¯   ,  S     x  S      ,         subscript  L    normal-¯  S    normal-¯  S      subscript  x   normal-¯  S          subscript  L    normal-¯  S   S     subscript  x  S       L_{\overline{S},\overline{S}}x_{\overline{S}}=-L_{\overline{S},S}x_{S},   where the subscripts are used to indicate the portion of the graph Laplacian matrix   L   L   L   indexed by the respective sets.  To incorporate likelihood (unary) terms into the algorithm, it was shown in 5 that one may optimize the energy        Q   (  x  )    =     x  T   L  x   +   γ   (      (   1  -  x   )   T   F   (   1  -  x   )    +    x  T   B  x    )     =     ∑   e   i  j       w   i  j      (    x  i   -   x  j    )   2     +   γ   (     ∑   v  i      f  i     (   1  -   x  i    )   2     +    ∑   v  i      b  i    x  i  2      )      ,          Q  x        superscript  x  T   L  x     γ       superscript    1  x   T   F    1  x       superscript  x  T   B  x               subscript    subscript  e    i  j        subscript  w    i  j     superscript     subscript  x  i    subscript  x  j    2       γ      subscript    subscript  v  i       subscript  f  i    superscript    1   subscript  x  i    2       subscript    subscript  v  i       subscript  b  i    superscript   subscript  x  i   2           Q(x)=x^{T}Lx+\gamma\left((1-x)^{T}F(1-x)+x^{T}Bx\right)=\sum_{e_{ij}}w_{ij}%
 \left(x_{i}-x_{j}\right)^{2}+\gamma\left(\sum_{v_{i}}f_{i}(1-x_{i})^{2}+\sum_{%
 v_{i}}b_{i}x_{i}^{2}\right),   for positive, diagonal matrices   F   F   F   and   B   B   B   . Optimizing this energy leads to the system of linear equations         (    L    S  ¯   ,   S  ¯     +   γ   F    S  ¯   ,   S  ¯      +   γ   B    S  ¯   ,   S  ¯       )    x   S  ¯     =    -    L    S  ¯   ,  S     x  S     -   γ   F    S  ¯   ,   S  ¯        .           subscript  L    normal-¯  S    normal-¯  S       γ   subscript  F    normal-¯  S    normal-¯  S        γ   subscript  B    normal-¯  S    normal-¯  S        subscript  x   normal-¯  S            subscript  L    normal-¯  S   S     subscript  x  S       γ   subscript  F    normal-¯  S    normal-¯  S         \left(L_{\overline{S},\overline{S}}+\gamma F_{\overline{S},\overline{S}}+%
 \gamma B_{\overline{S},\overline{S}}\right)x_{\overline{S}}=-L_{\overline{S},S%
 }x_{S}-\gamma F_{\overline{S},\overline{S}}.   The set of seeded nodes,   S   S   S   , may be empty in this case (i.e.,     S  ¯   =  V       normal-¯  S   V    \overline{S}=V   ), but the presence of the positive diagonal matrices allows for a unique solution to this linear system.  For example, if the likelihood/unary terms are used to incorporate a color model of the object, then    f  i     subscript  f  i    f_{i}   would represent the confidence that the color at node    v  i     subscript  v  i    v_{i}   would belong to object (i.e., a larger value of    f  i     subscript  f  i    f_{i}   indicates greater confidence that    v  i     subscript  v  i    v_{i}   belonged to the object label) and    b  i     subscript  b  i    b_{i}   would represent the confidence that the color at node    v  i     subscript  v  i    v_{i}   belongs to the background.  Algorithm interpretations  The random walker algorithm was initially motivated by labeling a pixel as object/background based on the probability that a random walker dropped at the pixel would first reach an object (foreground) seed or a background seed. However, there are several other interpretations of this same algorithm which have appeared in. 6  Circuit theory interpretations  There are well-known connections between electrical circuit theory and random walks on graphs. 7 Consequently, the random walker algorithm has two different interpretations in terms of an electric circuit. In both cases, the graph is viewed as an electric circuit in which each edge is replaced by a passive linear resistor . The resistance,    r   i  j      subscript  r    i  j     r_{ij}   , associated with edge    e   i  j      subscript  e    i  j     e_{ij}   is set equal to     r   i  j    =   1   w   i  j          subscript  r    i  j      1   subscript  w    i  j       r_{ij}=\frac{1}{w_{ij}}   (i.e., the edge weight equals electrical conductance ).  In the first interpretation, each node associated with a background seed,     v  i   ∈  B       subscript  v  i   B    v_{i}\in B   , is tied directly to ground while each node associated with an object/foreground seed,     v  i   ∈  F       subscript  v  i   F    v_{i}\in F   is attached to a unit direct current ideal voltage source tied to ground (i.e., to establish a unit potential at each     v  i   ∈  F       subscript  v  i   F    v_{i}\in F   ). The steady-state electrical circuit potentials established at each node by this circuit configuration will exactly equal the random walker probabilities. Specifically, the electrical potential,    x  i     subscript  x  i    x_{i}   at node    v  i     subscript  v  i    v_{i}   will equal the probability that a random walker dropped at node    v  i     subscript  v  i    v_{i}   will reach an object/foreground node before reaching a background node.  In the second interpretation, labeling a node as object or background by thresholding the random walker probability at 0.5 is equivalent to labeling a node as object or background based on the relative effective conductance between the node and the object or background seeds. Specifically, if a node has a higher effective conductance (lower effective resistance) to the object seeds than to the background seeds, then node is labeled as object. If a node has a higher effective conductance (lower effective resistance) to the background seeds than to the object seeds, then node is labeled as background.  Extensions  The traditional random walker algorithm described above has been extended in several ways:   Random walks with restart 8  Alpha matting 9  Threshold selection 10  Soft inputs 11  Run on a presegmented image 12  Scale space random walk 13  Fast random walker using offline precomputation  L. Grady, A.K. Sinop: Fast approximate random walker segmentation using eigenvector   precomputation. In IEEE Conf. CVPR, pp. 1–8, 2008 14   Generalized random walks allowing flexible compatibility functions 15  Power watersheds unifying graph cuts, random walker and shortest path 16  Random walker watersheds 17  Multivariate Gaussian conditional random field 18   Applications  Beyond image segmentation, the random walker algorithm or its extensions has been additionally applied to several problems in computer vision and graphics:   Image Colorization 19  Interactive rotoscoping 20  Medical image segmentation S. P. Dakua, J. S. Sahambi: LV Contour Extraction from Cardiac MR   Images Using Random Walks Approach, Int. Journal of Recent Trends in Engineering, Vol 1, No. 3, May 2009 21 22   Merging multiple segmentations 23  Mesh segmentation 24 25  Mesh denoising 26  Segmentation editing 27  Shadow elimination 28  Stereo matching (i.e., one-dimensional image registration) 29  Image fusion 30 31   References  External links   Matlab code implementing the original random walker algorithm  Matlab code implementing the random walker algorithm with precomputation  Python implementation of the original random walker algorithm in the image processing toolbox scikit-image   "  Category:Image segmentation     P. Doyle, J. L. Snell: Random Walks and Electric Networks, Mathematical Association of America, 1984 ↩  Leo Grady: Multilabel Random Walker Image Segmentation Using Prior Models, Proc. of CVPR, Vol. 1, pp. 763–770, 2005. 1 ↩  Leo Grady, Gareth Funka-Lea: Multi-Label Image Segmentation for Medical Applications Based on Graph-Theoretic Electrical Potentials, Proc. of the 8th ECCV Workshop on Computer Vision Approaches to Medical Image Analysis and Mathematical Methods in Biomedical Image Analysis, pp. 230–245, 2004. ↩     P. G. Doyle, J. L. Snell: Random Walks and Electrical Networks, Carus Mathematical Monographs, 1984 ↩  T. H. Kim, K. M. Lee, S. U. Lee: Generative Image Segmentation Using Random Walks with Restart, Proc. of ECCV 2008, pp. 264–275 ↩  J. Wang, M. Agrawala, M. F. Cohen: Soft scissors: an interactive tool for realtime high quality matting, Proc. of SIGGRAPH 2007 ↩  S. Rysavy, A. Flores, R. Enciso, K. Okada: Classifiability Criteria for Refining of Random Walks Segmentation, Proc. of ICPR 2008 ↩  W. Yang, J. Cai, J. Zheng, J. Luo: User-friendly Interactive Image Segmentation through Unified Combinatorial User Inputs, IEEE Trans. on Image Proc., 2010 ↩  C. Chefd'hotel, A. Sebbane: Random walk and front propagation on watershed adjacency graphs for multilabel image segmentation, Proc. of ICV 2007 ↩  R. Rzeszutek, T. El-Maraghi, D. Androutsos: Image segmentation using scale-space random walks, Proc. of the 16th international conference on Digital Signal Processing, pp. 458–461, 2009 ↩  S. Andrews, G. Hamarneh, A. Saad. Fast random walker with priors using precomputation for interactive medical image segmentation, Proc. of MICCAI 2010 ↩  R. Shen, I. Cheng, J. Shi, A. Basu: Generalized Random Walks for Fusion of Multi-exposure Images, IEEE Trans. on Image Processing, 2011. ↩  C. Couprie, L. Grady, L. Najman, H. Talbot: Power Watershed: A Unifying Graph-Based Optimization Framework, IEEE Trans. on Pattern Analysis and Machine Intelligence, 2011. ↩  S. Ram, J. J. Rodriguez: Random Walker Watersheds: A New Image Segmentation Approach, in IEEE International Conference on Acoustics, Speech, and Signal Processing (ICASSP), pp. 1473-1477, Vancouver, Canada, May 2013 ↩  R. Shen, I. Cheng, A. Basu: QoE-Based Multi-Exposure Fusion in Hierarchical Multivariate Gaussian CRF, IEEE Trans. on Image Processing, 2013. ↩  X. Liu, J. Liu, Z. Feng: Colorization Using Segmentation with Random Walk, Computer Analysis of Images and Patterns, pp. 468–475, 2009 ↩  R. Rzeszutek, T. El-Maraghi, D. Androutsos: Interactive rotoscoping through scale-space random walks, Proc. of the 2009 IEEE international conference on Multimedia and Expo ↩  F. Maier, A. Wimmer, G. Soza, J. N. Kaftan, D. Fritz, R. Dillmann: Automatic Liver Segmentation Using the Random Walker Algorithm, Bildverarbeitung für die Medizin 2008 ↩  P. Wighton, M. Sadeghi, T. K. Lee, M. S. Atkins: A Fully Automatic Random Walker Segmentation for Skin Lesions in a Supervised Setting, Proc. of MICCAI 2009 ↩  P. Wattuya, K. Rothaus, J. S. Prassni, X. Jiang: A random walker based approach to combining multiple segmentations, Proc. of ICPR 2008 ↩  Y.-K. Lai, S.-M. Hu, R. R. Martin, P. L. Rosin: Fast mesh segmentation using random walks, Proc. of the 2008 ACM symposium on Solid and physical modeling ↩  J. Zhang, J. Zheng, J. Cai: Interactive Mesh Cutting Using Constrained Random Walks, IEEE Trans. on Visualization and Computer Graphics, 2010. ↩  X. Sun, P. L. Rosin, R. R. Martin, F. C. Langbein: Random walks for feature-preserving mesh denoising, Computer Aided Geometric Design, Vol. 25, No. 7, Oct. 2008, pp. 437–456 ↩  L. Grady, G. Funka-Lea: An Energy Minimization Approach to the Data Driven Editing of Presegmented Images/Volumes, Proc. of MICCAI, Vol. 2, 2006, pp. 888–895 ↩  G. Li, L. Qingsheng, Q. Xiaoxu: Moving Vehicle Shadow Elimination Based on Random Walk and Edge Features, Proc. of IITA 2008 ↩  R. Shen, I. Cheng, X. Li, A. Basu: Stereo matching using random walks, Proc. of ICPR 2008 ↩       