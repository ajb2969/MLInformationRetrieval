


Domain relational calculus




Domain relational calculus

In computer science, domain relational calculus (DRC) is a calculus that was introduced by Michel Lacroix and Alain Pirotte as a declarative database query language for the relational data model.1
In DRC, queries have the form:



where each Xi is either a domain variable or constant, and 
 
 
 
  denotes a DRC formula. The result of the query is the set of tuples X1 to Xn which makes the DRC formula true.
This language uses the same operators as tuple calculus, the logical connectives ∧ (and), ∨ (or) and ¬ (not). The existential quantifier (∃) and the universal quantifier (∀) can be used to bind the variables.
Its computational expressiveness is equivalent to that of Relational algebra.2
Examples
Let (A, B, C) mean (Rank, Name, ID) in the Enterprise relation
and let (D, E, F) mean (Name, DeptName, ID) in the Department relation
Find all captains of the starship USS Enterprise:



In this example, A, B, C denotes both the result set and a set in the table Enterprise.
Find names of Enterprise crew members who are in Stellar Cartography:



In this example, we're only looking for the name, and that's B. F = C is a requirement, because we need to find Enterprise crew members AND they are in the Stellar Cartography Department.
An alternate representation of the previous example would be:



In this example, the value of the requested F domain is directly placed in the formula and the C domain variable is re-used in the query for the existence of a department, since it already holds a crew member's id.
Relational Data Model: The Relational model uses relation (table) to represent both entities and relationships among entities. A relation may be visualized as a table. However table is just one of the way, among many, to represent a relation.
See also

Relational algebra
Relational calculus

Tuple relational calculus (TRC)

Aldat Relational Algebra
Domain algebra

References


"
Category:Relational model Category:Logical calculi



Michel Lacroix, Alain Pirotte: Domain-Oriented Relational Languages. VLDB 1977: 370-378↩
E. F. Codd: Relational Completeness of Data Base Sub-languages. In R. Rustin, editor, Data Base Systems. Prentice Hall, 1972↩




