   Beta normal form      Beta normal form   In the lambda calculus , a term is in beta normal form if no beta reduction is possible. 1 A term is in beta-eta normal form if neither a beta reduction nor an eta reduction is possible. A term is in head normal form if there is no beta-redex in head position .  Beta reduction  In the lambda calculus, a beta redex is a term of the form      (   (  λ  x  .  A   (  x  )   )   t  )     fragments  normal-(   fragments  normal-(  λ  x  normal-.  A   fragments  normal-(  x  normal-)   normal-)   t  normal-)    ((\mathbf{\lambda}x.A(x))t)     where    A   (  x  )       A  x    A(x)   is a term (possibly) involving variable   x   x   x   .  A beta reduction is an application of the following rewrite rule to a beta redex       (   (  λ  x  .  A   (  x  )   )   t  )   →  A   (  t  )      fragments   fragments  normal-(   fragments  normal-(  λ  x  normal-.  A   fragments  normal-(  x  normal-)   normal-)   t  normal-)   normal-→  A   fragments  normal-(  t  normal-)     ((\mathbf{\lambda}x.A(x))t)\rightarrow A(t)     where    A   (  t  )       A  t    A(t)   is the result of substituting the term   t   t   t   for the variable   x   x   x   in the term    A   (  x  )       A  x    A(x)   .  A beta reduction is in head position if it is of the following form:   \lambda x_0 \ldots \lambda x_{i-1} . (\lambda x_i . A(x_i)) M_1 M_2 \ldots M_n \rightarrow   \lambda x_0 \ldots \lambda x_{i-1} . A(M_1) M_2 \ldots M_n , where      i  ≥  0   ,   n  ≥  1      formulae-sequence    i  0     n  1     i\geq 0,n\geq 1    .  Any reduction not in this form is an internal beta reduction.  Reduction strategies  In general, there can be several different beta reductions possible for a given term. Normal-order reduction is the evaluation strategy in which one continually applies the rule for beta reduction in head position until no more such reductions are possible. At that point, the resulting term is in normal form .  In contrast, in applicative order reduction , one applies the internal reductions first, and then only applies the head reduction when no more internal reductions are possible.  Normal-order reduction is complete, in the sense that if a term has a head normal form, then normal order reduction will eventually reach it. In contrast, applicative order reduction may not terminate, even when the term has a normal form. For example, using applicative order reduction, the following sequence of reductions is possible:       (  λ  x  .  z  )    (   (  λ  w  .  w  w  w  )    (  λ  w  .  w  w  w  )   )      fragments   fragments  normal-(  λ  x  normal-.  z  normal-)    fragments  normal-(   fragments  normal-(  λ  w  normal-.  w  w  w  normal-)    fragments  normal-(  λ  w  normal-.  w  w  w  normal-)   normal-)     (\mathbf{\lambda}x.z)((\lambda w.www)(\lambda w.www))         →   (  λ  x  .  z  )    (   (  λ  w  .  w  w  w  )    (  λ  w  .  w  w  w  )    (  λ  w  .  w  w  w  )   )      fragments  normal-→   fragments  normal-(  λ  x  normal-.  z  normal-)    fragments  normal-(   fragments  normal-(  λ  w  normal-.  w  w  w  normal-)    fragments  normal-(  λ  w  normal-.  w  w  w  normal-)    fragments  normal-(  λ  w  normal-.  w  w  w  normal-)   normal-)     \rightarrow(\lambda x.z)((\lambda w.www)(\lambda w.www)(\lambda w.www))         →   (  λ  x  .  z  )    (   (  λ  w  .  w  w  w  )    (  λ  w  .  w  w  w  )    (  λ  w  .  w  w  w  )    (  λ  w  .  w  w  w  )   )      fragments  normal-→   fragments  normal-(  λ  x  normal-.  z  normal-)    fragments  normal-(   fragments  normal-(  λ  w  normal-.  w  w  w  normal-)    fragments  normal-(  λ  w  normal-.  w  w  w  normal-)    fragments  normal-(  λ  w  normal-.  w  w  w  normal-)    fragments  normal-(  λ  w  normal-.  w  w  w  normal-)   normal-)     \rightarrow(\lambda x.z)((\lambda w.www)(\lambda w.www)(\lambda w.www)(\lambda
 w%
 .www))         →   (  λ  x  .  z  )    (   (  λ  w  .  w  w  w  )    (  λ  w  .  w  w  w  )    (  λ  w  .  w  w  w  )    (  λ  w  .  w  w  w  )    (  λ  w  .  w  w  w  )   )      fragments  normal-→   fragments  normal-(  λ  x  normal-.  z  normal-)    fragments  normal-(   fragments  normal-(  λ  w  normal-.  w  w  w  normal-)    fragments  normal-(  λ  w  normal-.  w  w  w  normal-)    fragments  normal-(  λ  w  normal-.  w  w  w  normal-)    fragments  normal-(  λ  w  normal-.  w  w  w  normal-)    fragments  normal-(  λ  w  normal-.  w  w  w  normal-)   normal-)     \rightarrow(\lambda x.z)((\lambda w.www)(\lambda w.www)(\lambda w.www)(\lambda
 w%
 .www)(\lambda w.www))        …   normal-…   \ldots     But using normal-order reduction, the same starting point reduces quickly to normal form:       (  λ  x  .  z  )    (   (  λ  w  .  w  w  w  )    (  λ  w  .  w  w  w  )   )      fragments   fragments  normal-(  λ  x  normal-.  z  normal-)    fragments  normal-(   fragments  normal-(  λ  w  normal-.  w  w  w  normal-)    fragments  normal-(  λ  w  normal-.  w  w  w  normal-)   normal-)     (\mathbf{\lambda}x.z)((\lambda w.www)(\lambda w.www))          →  z     normal-→  absent  z    \rightarrow z     Sinot's director strings is one method by which the computational complexity of beta reduction can be optimized.  See also   Lambda calculus  Normal form (disambiguation)   References  "  Category:Lambda calculus  Category:Normal forms (logic)     ↩     