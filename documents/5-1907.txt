   Savitzky–Golay filter      Savitzky–Golay filter   (Figure)  Animation showing smoothing being applied, passing through the data from left to right. The red line represents the local polynomial being used to fit a sub-set of the data. The smoothed values are shown as circles.   A Savitzky–Golay filter is a digital filter that can be applied to a set of digital data points for the purpose of smoothing the data, that is, to increase the signal-to-noise ratio without greatly distorting the signal. This is achieved, in a process known as convolution , by fitting successive sub-sets of adjacent data points with a low-degree polynomial by the method of linear least squares . When the data points are equally spaced an analytical solution to the least-squares equations can be found, in the form of a single set of "convolution coefficients" that can be applied to all data sub-sets, to give estimates of the smoothed signal, (or derivatives of the smoothed signal) at the central point of each sub-set. The method, based on established mathematical procedures, 1 2 was popularized by Abraham Savitzky and Marcel J. E. Golay who published tables of convolution coefficients for various polynomials and sub-set sizes in 1964. 3 4 Some errors in the tables have been corrected. 5 The method has been extended for the treatment of 2- and 3-dimensional data.  Savitzky and Golay's paper is one of the most widely cited papers in the journal Analytical Chemistry 6 and is classed by that journal as one of its "10 seminal papers" saying "it can be argued that the dawn of the computer-controlled analytical instrument can be traced to this article". 7  Applications  The data consists of a set of n { x j , y j } points ( j = 1, ..., n ), where x is an independent variable and y j is an observed value. They are treated with a set of m convolution coefficients, C i according to the expression        Y  j   =    ∑   i  =   -    (   m  -  1   )   /  2      i  =    (   m  -  1   )   /  2        C  i     y   j  +  i          m  +  1   2   ≤  j  ≤   n  -    m  -  1   2        formulae-sequence     subscript  Y  j     superscript   subscript     i        m  1   2        i      m  1   2        subscript  C  i    subscript  y    j  i               m  1   2   j         n      m  1   2        Y_{j}=\sum_{i=-(m-1)/2}^{i=(m-1)/2}C_{i}\,y_{j+i}\qquad\frac{m+1}{2}\leq j\leq
 n%
 -\frac{m-1}{2}   It is easy to apply this formula in a spreadsheet . Selected convolution coefficients are shown in the tables, below . For example, for smoothing by a 5-point quadratic polynomial, m = 5, i = −2, −1, 0, 1, 2 and the j th smoothed data point, Y j , is given by       Y  j   =    1  35    (     -   3  ×   y   j  -  2      +   12  ×   y   j  -  1     +   17  ×   y  j    +   12  ×   y   j  +  1      -   3  ×   y   j  +  2      )         subscript  Y  j       1  35           3   subscript  y    j  2        12   subscript  y    j  1       17   subscript  y  j      12   subscript  y    j  1        3   subscript  y    j  2         Y_{j}=\frac{1}{35}(-3\times y_{j-2}+12\times y_{j-1}+17\times y_{j}+12\times y%
 _{j+1}-3\times y_{j+2})   ,  where, C −2 = −3/35, C −1 = 12 / 35, etc. There are numerous applications of smoothing, which is performed primarily to make the data appear to be less noisy than it really is. The following are applications of numerical differentiation of data. 8     Location of maxima and minima in experimental data curves. This was the application that first motivated Savitzky. 9 The first derivative of a function is zero at a maximum or minimum. The diagram shows data points belonging to a synthetic Lorentzian curve, with added noise (blue diamonds). Data are plotted on a scale of half width, relative to the peak maximum at zero. The smoothed curve (red line) and 1st. derivative (green) were calculated with 7-point cubic Savitzky–Golay filters. Linear interpolation of the first derivative values at positions either side of the zero-crossing gives the position of the peak maximum. 3rd. derivatives can also be used for this purpose.  Location of an end-point in a titration curve . An end-point is an inflection point where the second derivative of the function is zero. 10 The titration curve for malonic acid illustrates the power of the method. The first end-point at 4 ml is barely visible, but the second derivative allows its value to be easily determined by linear interpolation to find the zero crossing.  Baseline flattening. In analytical chemistry it is sometimes necessary to measure the height of an absorption band against a curved baseline. 11 Because the curvature of the baseline is much less than the curvature of the absorption band, the second derivative effectively flattens the baseline. Three measures of the derivative height, which is proportional to the absorption band height, are the "peak-to-valley" distances h1 and h2, and the height from baseline, h3. 12  Resolution enhancement in spectroscopy. Bands in the second derivative of a spectroscopic curve are narrower than the bands in the spectrum: they have reduced half-width . This allows partially overlapping bands to be "resolved" into separate (negative) peaks. 13 The diagram illustrates how this may be used also for chemical analysis , using measurement of "peak-to-valley" distances. In this case the valleys are a property of the 2nd. derivative of a Lorentzian. ( x -axis position is relative to the position of the peak maximum on a scale of half width at half height ).  Resolution enhancement with 4th. derivative (positive peaks). The minima are a property of the 4th derivative of a Lorentzian.   Moving average  A moving average filter is commonly used with time series data to smooth out short-term fluctuations and highlight longer-term trends or cycles. It is often used in technical analysis of financial data, like stock prices, returns or trading volumes. It is also used in economics to examine gross domestic product, employment or other macroeconomic time series.  An unweighted moving average filter is the simplest convolution filter. Each subset of the data set is fitted by a straight line. It was not included in the Savitzsky-Golay tables of convolution coefficients as all the coefficient values are simply equal to 1/ m .  Derivation of convolution coefficients  When the data points are equally spaced, an analytical solution to the least-squares equations can be found. 14 This solution forms the basis of the convolution method of numerical smoothing and differentiation. Suppose that the data consists of a set of n { x j , y j } points ( j = 1, ..., n ), where x is an independent variable and y j is a datum value. A polynomial will be fitted by linear least squares to a set of m (an odd number) adjacent data points, each separated by an interval h . Firstly, a change of variable is made      z  =    x  -   x  ¯    h       z      x   normal-¯  x    h     z={{x-\bar{x}}\over h}   where    x  ¯     normal-¯  x    {\bar{x}}   is the value of the central point. z takes the values      1  -  m   2   ,  …  ,  0  ,  …  ,    m  -  1   2          1  m   2   normal-…  0  normal-…      m  1   2     {1-m\over 2},\ldots,0,\ldots,{m-1\over 2}   (e.g. m = 5 → z = −2, −1, 0, 1, 2). 15 The polynomial, of degree k is defined as       Y  =    a  0   +    a  1   z   +    a  2    z  2   ⋯   +    a  k    z  k      .      Y     subscript  a  0      subscript  a  1   z      subscript  a  2    superscript  z  2   normal-⋯      subscript  a  k    superscript  z  k       Y=a_{0}+a_{1}z+a_{2}z^{2}\cdots+a_{k}z^{k}.    16 The coefficients a 0 , a 1 etc. are obtained by solving the normal equations      𝐚  =     (    𝐉  𝐓   𝐉   )    -  𝟏     𝐉  𝐓   𝐲       𝐚     superscript     superscript  𝐉  𝐓   𝐉     1     superscript  𝐉  𝐓   𝐲     {\mathbf{a}}=\left({{\mathbf{J}}^{\mathbf{T}}{\mathbf{J}}}\right)^{-{\mathbf{1%
 }}}{\mathbf{J}}^{\mathbf{T}}{\mathbf{y}}   where the i th row of the Jacobian matrix ,    𝐉  =    ∂  𝐘    ∂  𝐚        𝐉      𝐘     𝐚      \mathbf{J}=\mathbf{{\partial Y\over\partial a}}   , has values 1, z i , z i 2 , .. .  For example, for a cubic polynomial fitted to 5 points, z = −2, −1, 0, 1, 2 the normal equations are solved as follows.      𝐉  =   (     1     -  2     4     -  8       1     -  1     1     -  1       1    0    0    0      1    1    1    1      1    2    4    8     )       𝐉    1    2   4    8     1    1   1    1     1  0  0  0    1  1  1  1    1  2  4  8      \mathbf{J}=\begin{pmatrix}1&-2&4&-8\\
 1&-1&1&-1\\
 1&0&0&0\\
 1&1&1&1\\
 1&2&4&8\end{pmatrix}           𝐉  𝐓   𝐉   =   (     m      ∑  z        ∑   z  2         ∑   z  3           ∑  z        ∑   z  2         ∑   z  3         ∑   z  4           ∑   z  2         ∑   z  3         ∑   z  4         ∑   z  5           ∑   z  3         ∑   z  4         ∑   z  5         ∑   z  6             )   =   (     m    0      ∑   z  2       0      0      ∑   z  2       0      ∑   z  4           ∑   z  2       0      ∑   z  4       0      0      ∑   z  4       0      ∑   z  6        )   =   (     5    0    10    0      0    10    0    34      10    0    34    0      0    34    0    130     )            superscript  𝐉  𝐓   𝐉     m    z      superscript  z  2       superscript  z  3        z      superscript  z  2       superscript  z  3       superscript  z  4         superscript  z  2       superscript  z  3       superscript  z  4       superscript  z  5         superscript  z  3       superscript  z  4       superscript  z  5       superscript  z  6      absent           m  0     superscript  z  2    0    0     superscript  z  2    0     superscript  z  4         superscript  z  2    0     superscript  z  4    0    0     superscript  z  4    0     superscript  z  6             5  0  10  0    0  10  0  34    10  0  34  0    0  34  0  130       \mathbf{J^{T}J}=\begin{pmatrix}m&\sum z&\sum z^{2}&\sum z^{3}\\
 \sum z&\sum z^{2}&\sum z^{3}&\sum z^{4}\\
 \sum z^{2}&\sum z^{3}&\sum z^{4}&\sum z^{5}\\
 \sum z^{3}&\sum z^{4}&\sum z^{5}&\sum z^{6}\\
 \par
 \end{pmatrix}=\begin{pmatrix}m&0&\sum z^{2}&0\\
 0&\sum z^{2}&0&\sum z^{4}\\
 \sum z^{2}&0&\sum z^{4}&0\\
 0&\sum z^{4}&0&\sum z^{6}\\
 \end{pmatrix}=\begin{pmatrix}5&0&10&0\\
 0&10&0&34\\
 10&0&34&0\\
 0&34&0&130\\
 \end{pmatrix}     Now, the normal equations can be factored into two separate sets of equations, by rearranging rows and columns, with         𝐉  𝐓    𝐉   e  v  e  n     =    (     5    10      10    34     )   and       𝐉  𝐓    𝐉   o  d  d     =   (     10    34      34    130     )       formulae-sequence       superscript  𝐉  𝐓    subscript  𝐉    e  v  e  n        5  10    10  34    and         superscript  𝐉  𝐓    subscript  𝐉    o  d  d       10  34    34  130       \mathbf{J^{T}J}_{even}=\begin{pmatrix}5&10\\
 10&34\\
 \end{pmatrix}\quad\mathrm{and}\quad\mathbf{J^{T}J}_{odd}=\begin{pmatrix}10&34%
 \\
 34&130\\
 \end{pmatrix}   Expressions for the inverse of each of these matrices can be obtained using Cramer's rule         (    𝐉  𝐓   𝐉   )   even   -  1    =     1  70    (     34     -  10        -  10     5     )    and       (    𝐉  𝐓   𝐉   )   odd   -  1    =    1  144    (     130     -  34        -  34     10     )        formulae-sequence     subscript   superscript     superscript  𝐉  𝐓   𝐉     1    even        1  70     34    10       10   5     and       subscript   superscript     superscript  𝐉  𝐓   𝐉     1    odd       1  144     130    34       34   10        (\mathbf{J^{T}J})^{-1}_{\text{even}}={1\over 70}\begin{pmatrix}34&-10\\
 -10&5\\
 \end{pmatrix}\quad\mathrm{and}\quad(\mathbf{J^{T}J})^{-1}_{\text{odd}}={1\over
 1%
 44}\begin{pmatrix}130&-34\\
 -34&10\\
 \end{pmatrix}   The normal equations become        (      a  0        a  2      )   j   =    1  70    (     34     -  10        -  10     5     )    (     1    1    1    1    1      4    1    0    1    4     )    (      y   j  -  2         y   j  -  1         y  j        y   j  +  1         y   j  +  2       )         subscript     subscript  a  0      subscript  a  2     j       1  70     34    10       10   5      1  1  1  1  1    4  1  0  1  4       subscript  y    j  2       subscript  y    j  1       subscript  y  j      subscript  y    j  1       subscript  y    j  2         \begin{pmatrix}{a_{0}}\\
 {a_{2}}\\
 \end{pmatrix}_{j}={1\over 70}\begin{pmatrix}34&-10\\
 -10&5\end{pmatrix}\begin{pmatrix}1&1&1&1&1\\
 4&1&0&1&4\\
 \end{pmatrix}\begin{pmatrix}y_{j-2}\\
 y_{j-1}\\
 y_{j}\\
 y_{j+1}\\
 y_{j+2}\end{pmatrix}   and        (      a  1        a  3      )   j   =    1  144    (     130     -  34        -  34     10     )    (      -  2      -  1     0    1    2       -  8      -  1     0    1    8     )    (      y   j  -  2         y   j  -  1         y  j        y   j  +  1         y   j  +  2       )         subscript     subscript  a  1      subscript  a  3     j       1  144     130    34       34   10        2     1   0  1  2      8     1   0  1  8       subscript  y    j  2       subscript  y    j  1       subscript  y  j      subscript  y    j  1       subscript  y    j  2         \begin{pmatrix}a_{1}\\
 a_{3}\\
 \end{pmatrix}_{j}={1\over 144}\begin{pmatrix}130&-34\\
 -34&10\\
 \end{pmatrix}\begin{pmatrix}-2&-1&0&1&2\\
 -8&-1&0&1&8\\
 \end{pmatrix}\begin{pmatrix}y_{j-2}\\
 y_{j-1}\\
 y_{j}\\
 y_{j+1}\\
 y_{j+2}\\
 \end{pmatrix}   Multiplying out and removing common factors,       a   0  ,  j    =    1  35    (     -   3   y   j  -  2      +   12   y   j  -  1     +   17   y  j    +   12   y   j  +  1      -   3   y   j  +  2      )         subscript  a   0  j        1  35           3   subscript  y    j  2        12   subscript  y    j  1       17   subscript  y  j      12   subscript  y    j  1        3   subscript  y    j  2         a_{0,j}={1\over 35}(-3y_{j-2}+12y_{j-1}+17y_{j}+12y_{j+1}-3y_{j+2})          a   1  ,  j    =    1  12    (      y   j  -  2    -   8   y   j  -  1      +   8   y   j  +  1      -   y   j  +  2     )         subscript  a   1  j        1  12          subscript  y    j  2      8   subscript  y    j  1        8   subscript  y    j  1       subscript  y    j  2        a_{1,j}={1\over 12}(y_{j-2}-8y_{j-1}+8y_{j+1}-y_{j+2})          a   2  ,  j    =    1  14    (     2   y   j  -  2     -   y   j  -  1    -   2   y  j    -   y   j  +  1     +   2   y   j  +  2      )         subscript  a   2  j        1  14         2   subscript  y    j  2      subscript  y    j  1      2   subscript  y  j     subscript  y    j  1       2   subscript  y    j  2         a_{2,j}={1\over 14}(2y_{j-2}-y_{j-1}-2y_{j}-y_{j+1}+2y_{j+2})          a   3  ,  j    =    1  12    (      -   y   j  -  2     +   2   y   j  -  1      -   2   y   j  +  1      +   y   j  +  2     )         subscript  a   3  j        1  12            subscript  y    j  2       2   subscript  y    j  1        2   subscript  y    j  1       subscript  y    j  2        a_{3,j}={1\over 12}(-y_{j-2}+2y_{j-1}-2y_{j+1}+y_{j+2})     The coefficients of y in these expressions are known as convolution coefficients. They are elements of the matrix      𝐂  =     (    𝐉  𝐓   𝐉   )    -  𝟏     𝐉  𝐓        𝐂     superscript     superscript  𝐉  𝐓   𝐉     1     superscript  𝐉  𝐓      \mathbf{C=(J^{T}J)^{-1}J^{T}}   In general,          (   C  ⊗  y   )   j    =   Y  j   =    ∑   i  =   -    (   m  -  1   )   /  2      i  =    (   m  -  1   )   /  2        C  i     y   j  +  i          m  +  1   2   ≤  j  ≤   n  -    m  -  1   2        formulae-sequence       subscript   tensor-product  C  y   j    subscript  Y  j          superscript   subscript     i        m  1   2        i      m  1   2        subscript  C  i    subscript  y    j  i                m  1   2   j         n      m  1   2        (C\otimes y)_{j}\ =Y_{j}=\sum_{i=-(m-1)/2}^{i=(m-1)/2}C_{i}\,y_{j+i}\qquad%
 \frac{m+1}{2}\leq j\leq n-\frac{m-1}{2}   In matrix notation this example is written as       (      Y  3        Y  4        Y  5       …     )   =    1  35    (      -  3     12    17    12     -  3     0    0    …      0     -  3     12    17    12     -  3     0    …      0    0     -  3     12    17    12     -  3     …      …     )    (      y  1        y  2        y  3        y  4        y  5        y  6        y  7       …     )           subscript  Y  3      subscript  Y  4      subscript  Y  5     normal-…        1  35       3   12  17  12    3   0  0  normal-…    0    3   12  17  12    3   0  normal-…    0  0    3   12  17  12    3   normal-…    normal-…       subscript  y  1      subscript  y  2      subscript  y  3      subscript  y  4      subscript  y  5      subscript  y  6      subscript  y  7     normal-…       \begin{pmatrix}Y_{3}\\
 Y_{4}\\
 Y_{5}\\
 \dots\end{pmatrix}={1\over 35}\begin{pmatrix}-3&12&17&12&-3&0&0&\dots\\
 0&-3&12&17&12&-3&0&\dots\\
 0&0&-3&12&17&12&-3&\dots\\
 \par
 \dots\end{pmatrix}\begin{pmatrix}y_{1}\\
 y_{2}\\
 y_{3}\\
 y_{4}\\
 y_{5}\\
 y_{6}\\
 y_{7}\\
 \dots\end{pmatrix}     Tables of convolution coefficients, calculated in the same way for m up to 25, were published for the Savitzky–Golay smoothing filter in 1964, 17 18 The value of the central point, z = 0, is obtained from a single set of coefficients, a 0 for smoothing, a 1 for 1st. derivative etc. The numerical derivatives are obtained by differentiating Y. This means that the derivatives are calculated for the smoothed data curve . For a cubic polynomial       Y  =    a  0   +    a  1   z   +    a  2    z  2    +    a  3    z  3     =    a  0   at  z   =  0   ,   x  =   x  ¯       formulae-sequence      Y     subscript  a  0      subscript  a  1   z      subscript  a  2    superscript  z  2       subscript  a  3    superscript  z  3             subscript  a  0   at  z        0      x   normal-¯  x      Y=a_{0}+a_{1}z+a_{2}z^{2}+a_{3}z^{3}=a_{0}\text{ at }z=0,x=\bar{x}            d  Y    d  x    =    1  h    (    a  1   +   2   a  2   z   +   3   a  3    z  2     )    =    1  h    a  1   at  z   =  0   ,   x  =   x  ¯       formulae-sequence          d  Y     d  x        1  h      subscript  a  1     2   subscript  a  2   z     3   subscript  a  3    superscript  z  2               1  h    subscript  a  1   at  z        0      x   normal-¯  x      \frac{{dY}}{{dx}}=\frac{1}{h}\left({a_{1}+2a_{2}z+3a_{3}z^{2}}\right)=\frac{1}%
 {h}a_{1}\text{ at }z=0,x=\bar{x}             d  2   Y    d   x  2     =    1   h  2     (    2   a  2    +   6   a  3   z    )    =    2   h  2     a  2   at  z   =  0   ,   x  =   x  ¯       formulae-sequence           superscript  d  2   Y     d   superscript  x  2         1   superscript  h  2        2   subscript  a  2      6   subscript  a  3   z              2   superscript  h  2     subscript  a  2   at  z        0      x   normal-¯  x      \frac{{d^{2}Y}}{{dx^{2}}}=\frac{1}{{h^{2}}}\left({2a_{2}+6a_{3}z}\right)=\frac%
 {2}{h^{2}}a_{2}{\text{ at }}z=0,x=\bar{x}            d  3   Y    d   x  3     =    6   h  3     a  3             superscript  d  3   Y     d   superscript  x  3         6   superscript  h  3     subscript  a  3      \frac{{d^{3}Y}}{{dx^{3}}}=\frac{6}{{h^{3}}}a_{3}     In general, polynomials of degree (0 and 1), 19 (2 and 3), (4 and 5) etc. give the same coefficients for smoothing and even derivatives. Polynomials of degree (1 and 2), (3 and 4) etc. give the same coefficients for odd derivatives.  Algebraic expressions  It is not necessary always to use the Savitzky–Golay tables. The summations in the matrix J T J can be evaluated in closed form ,        ∑   -    (   m  -  1   )   /  2      (   m  -  1   )   /  2     z  2    =    m   (    m  2   -  1   )    12         superscript   subscript         m  1   2         m  1   2     superscript  z  2        m     superscript  m  2   1    12     \sum_{-(m-1)/2}^{(m-1)/2}z^{2}={m(m^{2}-1)\over 12}          ∑   z  4    =    m   (    m  2   -  1   )    (    3   m  2    -  7   )    240          superscript  z  4        m     superscript  m  2   1       3   superscript  m  2    7    240     \sum z^{4}={m(m^{2}-1)(3m^{2}-7)\over 240}          ∑   z  6    =    m   (    m  2   -  1   )    (     3   m  4    -   18   m  2     +  31   )    1344          superscript  z  6        m     superscript  m  2   1         3   superscript  m  4      18   superscript  m  2     31    1344     \sum z^{6}={m(m^{2}-1)(3m^{4}-18m^{2}+31)\over 1344}   so that algebraic formulae can be derived for the convolution coefficients. 20 21 Functions that are suitable for use with a curve that has an inflection point are:   Smoothing, polynomial degree 2,3 : C_{0i} = \frac{{\left( {3m^2 - 7 - 20i^2 } \right)/4}};   \quad \frac{1-m}{2} \le i \le \frac{m-1}{2}  (the range of values for i also applies to the expressions below)   1st derivative: polynomial degree 3,4    C_{1i} = \frac{ {5\left( {3m^4 - 18m^2 + 31} \right)i - 28\left( {3m^2 - 7} \right)i^3 }}   2nd. derivative: polynomial degree 2,3    C_{2i} = \frac   3rd. derivative: polynomial degree 3,4    C_{3i} = \frac{{ - \left( {3m^2 - 7} \right)i + 20i^3 }}  Simpler expressions that can be used with curves that don't have an inflection point are:   Smoothing, polynomial degree 0,1 (moving average)     C   0  i    =   1  m        subscript  C    0  i      1  m     C_{0i}=\frac{1}{m}       1st derivative, polynomial degree 1,2     C   1  i    =   i    m   (    m  2   -  1   )    /  12         subscript  C    1  i      i      m     superscript  m  2   1    12      C_{1i}=\frac{i}{m(m^{2}-1)/12}      Higher derivatives can be obtained. For example, a fourth derivative can be obtained by performing two passes of a second derivative function. 22  Use of orthogonal polynomials  An alternative to fitting m data points by a simple polynomial in the subsidiary variable, z , is to use orthogonal polynomials .       Y  =     b  0    P  0    (  z  )    +    b  1    P  1    (  z  )   ⋯   +    b  k    P  k    (  z  )      .      Y       subscript  b  0    superscript  P  0   z      subscript  b  1    superscript  P  1   z  normal-⋯      subscript  b  k    superscript  P  k   z      Y=b_{0}P^{0}(z)+b_{1}P^{1}(z)\cdots+b_{k}P^{k}(z).   where P 0 .. P k is a set of mutually orthogonal polynomials of degree 0 .. k . Full details on how to obtain expressions for the orthogonal polynomials and the relationship between the coefficients b and a are given by Guest. 23 Expressions for the convolution coefficients are easily obtained because the normal equations matrix, J T J , is a diagonal matrix as the product of any two orthogonal polynomials is zero by virtue of their mutual orthogonality. Therefore, each non-zero element of its inverse is simply the reciprocal the corresponding element in the normal equation matrix. The calculation is further simplified by using recursion to build orthogonal Gram polynomials . The whole calculation can be coded in a few lines of PASCAL , a computer language well-adapted for calculations involving recursion. 24  Treatment of first and last points  Savitzky–Golay filters are most commonly used to obtain the smoothed or derivative value at the central point, z = 0, using a single set of convolution coefficients. ( m − 1)/2 points at the start and end of the series cannot be calculated using this process. Various strategies can be employed to avoid this inconvenience.   The data could be artificially extended by adding, in reverse order, copies of the first ( m − 1)/2 points at the beginning and copies of the last ( m − 1)/2 points at the end. For instance, with m = 5, two points are added at the start and end of the data y 1 , ..., y n .    y 3 , y 2 , y 1 , ... , y n , y n −1 , y n −2 .    Looking again at the fitting polynomial, it is obvious that data can be calculated for all values of z by using all sets of convolution coefficients for a single polynomial, a 0 .. a k .    For a cubic polynomial      Y  =    a  0   +    a  1   z   +    a  2    z  2    +    a  3    z  3         Y     subscript  a  0      subscript  a  1   z      subscript  a  2    superscript  z  2       subscript  a  3    superscript  z  3       Y=a_{0}+a_{1}z+a_{2}z^{2}+a_{3}z^{3}           d  Y    d  x    =    1  h    (    a  1   +   2   a  2   z   +   3   a  3    z  2     )            d  Y     d  x        1  h      subscript  a  1     2   subscript  a  2   z     3   subscript  a  3    superscript  z  2        \frac{{dY}}{{dx}}=\frac{1}{h}\left({a_{1}+2a_{2}z+3a_{3}z^{2}}\right)            d  2   Y    d   x  2     =    1   h  2     (    2   a  2    +   6   a  3   z    )             superscript  d  2   Y     d   superscript  x  2         1   superscript  h  2        2   subscript  a  2      6   subscript  a  3   z       \frac{{d^{2}Y}}{{dx^{2}}}=\frac{1}{{h^{2}}}\left({2a_{2}+6a_{3}z}\right)            d  3   Y    d   x  3     =    6   h  3     a  3              superscript  d  3   Y     d   superscript  x  3         6   superscript  h  3     subscript  a  3       \frac{{d^{3}Y}}{{dx^{3}}}=\frac{6}{{h^{3}}}a_{3}{\text{ }}       Convolution coefficients for the missing first and last points can also be easily obtained. 25 This is also equivalent to fitting the first ( m +1)/2 points with the same polynomial, and similarly for the last points.   Weighting the data  It is implicit in the above treatment that the data points are all given equal weight. Technically, the objective function      U  =    ∑  i     w  i     (    Y  i   -   y  i    )   2         U    subscript   i      subscript  w  i    superscript     subscript  Y  i    subscript  y  i    2       U=\sum_{i}w_{i}(Y_{i}-y_{i})^{2}   being minimized in the least-squares process has unit weights, w i =1. When weights are not all the same the normal equations become       𝐚  =     (    𝐉  𝐓   𝐖𝐉   )    -  1     𝐉  𝐓   𝐖𝐲      W   i  ,  i    ≠  1      formulae-sequence    𝐚     superscript     superscript  𝐉  𝐓   𝐖𝐉     1     superscript  𝐉  𝐓   𝐖𝐲       subscript  W   i  i    1     \mathbf{a}=\left(\mathbf{J^{T}W}\mathbf{J}\right)^{-1}\mathbf{J^{T}W}\mathbf{y%
 }\qquad W_{i,i}\neq 1   , If the same set of diagonal weights is used for all data subsets, W = diag(w 1 ,w 2 ,...w m ), an analytical solution to the normal equations can be written down. For example, with a quadratic polynomial,        𝐉  𝐓   𝐖𝐉   =   (      m    ∑   w  i          ∑    w  i    z  i          ∑    w  i    z  i  2            ∑    w  i    z  i          ∑    w  i    z  i  2          ∑    w  i    z  i  3            ∑    w  i    z  i  2          ∑    w  i    z  i  3          ∑    w  i    z  i  4         )          superscript  𝐉  𝐓   𝐖𝐉       m     subscript  w  i          subscript  w  i    subscript  z  i          subscript  w  i    superscript   subscript  z  i   2            subscript  w  i    subscript  z  i          subscript  w  i    superscript   subscript  z  i   2          subscript  w  i    superscript   subscript  z  i   3            subscript  w  i    superscript   subscript  z  i   2          subscript  w  i    superscript   subscript  z  i   3          subscript  w  i    superscript   subscript  z  i   4         \mathbf{J^{T}WJ}=\begin{pmatrix}m\sum w_{i}&\sum w_{i}z_{i}&\sum w_{i}z_{i}^{2%
 }\\
 \sum w_{i}z_{i}&\sum w_{i}z_{i}^{2}&\sum w_{i}z_{i}^{3}\\
 \sum w_{i}z_{i}^{2}&\sum w_{i}z_{i}^{3}&\sum w_{i}z_{i}^{4}\end{pmatrix}   An explicit expression for the inverse of this matrix can be obtained using Cramer's rule . A set of convolution coefficients may then be derived as      𝐂  =     (    𝐉  𝐓   𝐖𝐉   )    -  1     𝐉  𝐓   𝐖       𝐂     superscript     superscript  𝐉  𝐓   𝐖𝐉     1     superscript  𝐉  𝐓   𝐖     \mathbf{C}=\left(\mathbf{J^{T}W}\mathbf{J}\right)^{-1}\mathbf{J^{T}W}   . Alternatively the coefficients, C , could be calculated in a spreadsheet, employing a built-in matrix inversion routine to obtain the inverse of the normal equations matrix. This set of coefficients, once calculated and stored, can be used with all calculations in which the same weighting scheme applies. A different set of coefficients is needed for each different weighting scheme.  Two-dimensional convolution coefficients  Two-dimensional smoothing and differentiation can also be applied to tables of data values, such as intensity values in a photographic image which is composed of a rectangular grid of pixels. 26  27 The trick is to transform part of the table into a row by a simple ordering of the indices of the pixels. Whereas the one-dimensional filter coefficients are found by fitting a polynomial in the subsidiary variable, z to a set of m data points, the two-dimensional coefficients are found by fitting a polynomial in subsidiary variables v and w to a set of m × m data points. The following example, for a bicubic polynomial and m = 5, illustrates the process, which parallels the process for the one dimensional case, above. 28       v  =    x  -   x  ¯     h   (  x  )      ;   w  =    y  -   y  ¯     h   (  y  )         formulae-sequence    v      x   normal-¯  x      h  x       w      y   normal-¯  y      h  y       v=\frac{x-\bar{x}}{h(x)};w=\frac{y-\bar{y}}{h(y)}         Y  =    a  00   +    a  10   v   +    a  01   w   +    a  20    v  2    +    a  11   v  w   +    a  02    w  2    +    a  30    v  3    +    a  21    v  2   w   +    a  12   v   w  2    +    a  03    w  3         Y     subscript  a  00      subscript  a  10   v      subscript  a  01   w      subscript  a  20    superscript  v  2       subscript  a  11   v  w      subscript  a  02    superscript  w  2       subscript  a  30    superscript  v  3       subscript  a  21    superscript  v  2   w      subscript  a  12   v   superscript  w  2       subscript  a  03    superscript  w  3       Y=a_{00}+a_{10}v+a_{01}w+a_{20}v^{2}+a_{11}vw+a_{02}w^{2}+a_{30}v^{3}+a_{21}v^%
 {2}w+a_{12}vw^{2}+a_{03}w^{3}   The square of 25 data values, d 1 − d 25        v   −2   −1   0   1   2     w     −2   d 1   d 2   d 3   d 4   d 5     −1   d 6   d 7   d 8   d 9   d 10     0   d 11   d 12   d 13   d 14   d 15     1   d 16   d 17   d 18   d 19   d 20     2   d 21   d 22   d 23   d 24   d 25       becomes a vector when the rows are placed one after another.   d = ( d 1 ... d 25 ) T    The Jacobian has 10 columns, one for each of the parameters a 00 − a 03 and 25 rows, one for each pair of v and w values. Each row has the form       J  row   =    1    v    w     v  2    v   w     w  2      v  3     v  2    w   v    w  2     w  3         subscript  J  row     1  v  w   superscript  v  2   v  w   superscript  w  2    superscript  v  3    superscript  v  2   w  v   superscript  w  2    superscript  w  3      J_{\text{row}}=1\ v\ w\ v^{2}\ vw\ w^{2}\ v^{3}\ v^{2}w\ vw^{2}\ w^{3}   The convolution coefficients are calculated as      𝐂  =     (    𝐉  T   𝐉   )    -  1     𝐉  T        𝐂     superscript     superscript  𝐉  T   𝐉     1     superscript  𝐉  T      \mathbf{C}=\left(\mathbf{J}^{T}\mathbf{J}\right)^{-1}\mathbf{J}^{T}   The first row of C contains 25 convolution coefficients which can be multiplied with the 25 data values to provide a smoothed value for the central data point (13) of the 25.  A Matlab 29 routine for computing the coefficients is available. 3-dimensional filters can be obtained with a similar procedure. 30 31  Some properties of convolution   The sum of convolution coefficients for smoothing is equal to one. The sum of coefficients for odd derivatives is zero. 32  The sum of squared convolution coefficients for smoothing is equal to the value of the central coefficient. 33  Smoothing of a function leaves the area under the function unchanged. 34  Convolution of a symmetric function with even-derivative coefficients conserves the centre of symmetry. 35  Properties of derivative filters. 36   Signal distortion and noise reduction  It is inevitable that the signal will be distorted in the convolution process. From property 3 above, when data which has a peak is smoothed the peak height will be reduced and the half-width will be increased. Both the extent of the distortion and S/N ( signal-to-noise ratio ) improvement:   decrease as the degree of the polynomial increases  increase as the width, m of the convolution function increases   (Figure)  Effect of smoothing on data points with uncorrelated noise of unit standard deviation   For example, If the noise in all data points is uncorrelated and has a constant standard deviation , σ, the standard deviation on the noise will be decreased by convolution with an m -point smoothing function to 37   polynomial degree 0 or 1      1  m    σ          1  m    σ    \sqrt{{1\over m}}\sigma   ( moving average )  polynomial degree 2 or 3       3   (    3   m  2    -  7   )     4  m   (    m  2   -  4   )      σ            3      3   superscript  m  2    7      4  m     superscript  m  2   4      σ    \sqrt{\frac{3(3m^{2}-7)}{4m(m^{2}-4)}}\sigma   .   These functions are shown in the plot at the right. For example, with a 9-point linear function (moving average) two thirds of the noise is removed and with a 9-point quadratic/cubic smoothing function only about half the noise is removed. Most of the noise remaining is low-frequency noise(see Frequency characteristics of convolution filters , below).  Although the moving average function gives the best noise reduction it is unsuitable for smoothing data which has curvature over m points. A quadratic filter function is unsuitable for getting a derivative of a data curve with an inflection point because a quadratic polynomial does not have one. The optimal choice of polynomial order and number of convolution coefficients will be a compromise between noise reduction and distortion. 38  Multipass filters  One way to mitigate distortion and improve noise removal is to use a filter of smaller width and perform more than one convolution with it. For two passes of the same filter this is equivalent to one pass of a filter obtained by convolution of the original filter with itself. 39 For example, 2 passes of the filter with coefficients (1/3, 1/3, 1/3) is equivalent to 1 pass of the filter with coefficients (1/9, 2/9, 3/9, 2/9, 1/9).  The disadvantage of multipassing is that the equivalent filter width for n passes of an m -point function is n ( m − 1) + 1 so multipassing is subject to greater end-effects. Nevertheless, multipassing has been used to great advantage. For instance, some 40–80 passes on data with a signal-to-noise ratio of only 5 gave useful results. 40 The noise reduction formulae given above do not apply because correlation between calculated data points increases with each pass.  Frequency characteristics of convolution filters  Convolution maps to multiplication in the Fourier  co-domain . The discrete Fourier transform of a convolution filter is a real-valued function which can be represented as       F  T   (  θ  )    =    ∑   j  =    (   1  -  m   )   /  2     j  =    (   m  -  1   )   /  2       C  j    cos   (   j  θ   )            F  T  θ     superscript   subscript     j      1  m   2       j      m  1   2        subscript  C  j       j  θ        FT(\theta)=\sum_{j=(1-m)/2}^{j=(m-1)/2}C_{j}\cos(j\theta)   θ runs from 0 to 180 degrees , after which the function merely repeats itself. The plot for a 9-point quadratic/cubic smoothing function is typical. At very low angle, the plot is almost flat, meaning that low-frequency components of the data will be virtually unchanged by the smoothing operation. As the angle increases the value decreases so that higher frequency components are more and more attenuated. This shows that the convolution filter can be described as a low-pass filter : the noise that is removed is primarily high-frequency noise and low-frequency noise passes through the filter. 41 Some high-frequency noise components are attenuated more than others, as shown by undulations in the Fourier transform at large angles. This can give rise to small oscillations in the smoothed data. 42  Convolution and correlation  Convolution affects the correlation between errors in the data. The effect of convolution can be expressed as a linear transformation.        Y  j    =    ∑   i  =   -    (   m  -  1   )   /  2      i  =    (   m  -  1   )   /  2        C  i     y   j  +  i           subscript  Y  j     superscript   subscript     i        m  1   2        i      m  1   2        subscript  C  i    subscript  y    j  i        Y_{j}\ =\sum_{i=-(m-1)/2}^{i=(m-1)/2}C_{i}\,y_{j+i}   By the law of error propagation , the variance-covariance matrix of the data, A will be transformed into B according to      𝐁  =   𝐂𝐀𝐂  T       𝐁   superscript  𝐂𝐀𝐂  T     \mathbf{B}=\mathbf{C}\mathbf{A}\mathbf{C}^{T}   To see how this applies in practice, consider the effect of a 3-point moving average on the first three calculated points, Y 2 − Y 4 , assuming that the data points have equal variance and that there is no correlation between them. A will be an identity matrix multiplied by a constant, σ 2 , the variance at each point.      𝐁  =     σ  2   9    (     1    1    1    0    0      0    1    1    1    0      0    0    1    1    1     )    (     1    0    0    0    0      0    1    0    0    0      0    0    1    0    0      0    0    0    1    0      0    0    0    0    1     )    (     1    0    0      1    1    0      1    1    1      0    1    1      0    0    1     )    =     σ  2   9    (     3    2    1      2    3    2      1    2    3     )          𝐁       superscript  σ  2   9     1  1  1  0  0    0  1  1  1  0    0  0  1  1  1      1  0  0  0  0    0  1  0  0  0    0  0  1  0  0    0  0  0  1  0    0  0  0  0  1      1  0  0    1  1  0    1  1  1    0  1  1    0  0  1               superscript  σ  2   9     3  2  1    2  3  2    1  2  3        \mathbf{B}={\sigma^{2}\over 9}\begin{pmatrix}1&1&1&0&0\\
 0&1&1&1&0\\
 0&0&1&1&1\\
 \end{pmatrix}\begin{pmatrix}1&0&0&0&0\\
 0&1&0&0&0\\
 0&0&1&0&0\\
 0&0&0&1&0\\
 0&0&0&0&1\\
 \end{pmatrix}\begin{pmatrix}1&0&0\\
 1&1&0\\
 1&1&1\\
 0&1&1\\
 0&0&1\\
 \end{pmatrix}={\sigma^{2}\over 9}\begin{pmatrix}3&2&1\\
 2&3&2\\
 1&2&3\\
 \end{pmatrix}     In this case the correlation coefficients ,       ρ   i  j    =    B   i  j       B   i  i     B   j  j        (  i  ≠  j  )      fragments   subscript  ρ    i  j        subscript  B    i  j         subscript  B    i  i     subscript  B    j  j        fragments  normal-(  i   j  normal-)     \rho_{ij}=\frac{B_{ij}}{\sqrt{B_{ii}B_{jj}}}(i\neq j)   between calculated points i and j will be       ρ   i  ,   i  +  1     =   2  3   =  0.66         subscript  ρ   i    i  1       2  3        0.66     \rho_{i,i+1}={2\over 3}=0.66   ,     ρ   i  ,   i  +  2     =   1  3   =  0.33         subscript  ρ   i    i  2       1  3        0.33     \rho_{i,i+2}={1\over 3}=0.33   In general, the calculated values are correlated even when the observed values are not correlated. The correlation extends over m − 1 calculated points at a time. 43  Multipass filters  To illustrate the effect of multipassing on the noise and correlation of a set of data, consider the effects of a second pass of a 3-point moving average filter. For the second pass 44       𝐂𝐁𝐂  𝐓   =     σ  2   81    (     1    1    1    0    0      0    1    1    1    0      0    0    1    1    1     )    (     3    2    1    0    0      2    3    2    0    0      1    2    3    0    0      0    0    0    0    0      0    0    0    0    0     )    (     1    0    0      1    1    0      1    1    1      0    1    1      0    0    1     )    =     σ  2   81    (     19    16    10    4    1      16    19    16    10    4      10    16    19    16    10      4    10    16    19    16      1    4    10    16    19     )           superscript  𝐂𝐁𝐂  𝐓        superscript  σ  2   81     1  1  1  0  0    0  1  1  1  0    0  0  1  1  1      3  2  1  0  0    2  3  2  0  0    1  2  3  0  0    0  0  0  0  0    0  0  0  0  0      1  0  0    1  1  0    1  1  1    0  1  1    0  0  1               superscript  σ  2   81     19  16  10  4  1    16  19  16  10  4    10  16  19  16  10    4  10  16  19  16    1  4  10  16  19        \mathbf{CBC^{T}}={\sigma^{2}\over 81}\begin{pmatrix}1&1&1&0&0\\
 0&1&1&1&0\\
 0&0&1&1&1\\
 \end{pmatrix}\begin{pmatrix}3&2&1&0&0\\
 2&3&2&0&0\\
 1&2&3&0&0\\
 0&0&0&0&0\\
 0&0&0&0&0\\
 \end{pmatrix}\begin{pmatrix}1&0&0\\
 1&1&0\\
 1&1&1\\
 0&1&1\\
 0&0&1\\
 \end{pmatrix}={\sigma^{2}\over 81}\begin{pmatrix}19&16&10&4&1\\
 16&19&16&10&4\\
 10&16&19&16&10\\
 4&10&16&19&16\\
 1&4&10&16&19\\
 \end{pmatrix}   After two passes, the standard deviation of the central point has decreased to      19  /  81    σ          19  81    σ    \sqrt{19/81}\sigma   = 0.48σ, compared to 0.58σ for one pass. The noise reduction is a little less than would be obtained with one pass of a 5-point moving average which, under the same conditions, would result in the smoothed points having the smaller standard deviation of 0.45σ.  Correlation now extends over a span of 4 sequential points with correlation coefficients        ρ   i  ,   i  +  1     =   16  19   =  0.84   ,    ρ   i  ,   i  +  2     =   10  19   =  0.53   ,    ρ   i  ,   i  +  3     =   4  19   =  0.21   ,    ρ   i  ,   i  +  4     =   1  19   =  0.05      formulae-sequence       subscript  ρ   i    i  1       16  19        0.84         subscript  ρ   i    i  2       10  19        0.53         subscript  ρ   i    i  3       4  19        0.21         subscript  ρ   i    i  4       1  19        0.05      \rho_{i,i+1}={16\over 19}=0.84,\rho_{i,i+2}={10\over 19}=0.53,\rho_{i,i+3}={4%
 \over 19}=0.21,\rho_{i,i+4}={1\over 19}=0.05     The advantage obtained by performing two passes with the narrower smoothing function is that it introduces less distortion into the calculated data.  See also   Kernel smoother – Different terminology for many of the same processes, used in statistics  Local regression — the LOESS and LOWESS methods  Numerical differentiation – Application to differentiation of functions  Smoothing spline  Stencil (numerical analysis) – Application to the solution of differential equations   Appendix  Tables of selected convolution coefficients  Consider a set of data points ( x j , y j ) 1 ≤ j ≤ n . The Savitzky–Golay tables refer to the case that the step x j − x j − 1 is constant, h . Examples of the use of the so-called convolution coefficients, with a cubic polynomial and a window size, m , of 5 points are as follows.   Smoothing     Y  j   =    1  35    (     -   3  ×   y   j  -  2      +   12  ×   y   j  -  1     +   17  ×   y  j    +   12  ×   y   j  +  1      -   3  ×   y   j  +  2      )         subscript  Y  j       1  35           3   subscript  y    j  2        12   subscript  y    j  1       17   subscript  y  j      12   subscript  y    j  1        3   subscript  y    j  2         Y_{j}=\frac{1}{35}(-3\times y_{j-2}+12\times y_{j-1}+17\times y_{j}+12\times y%
 _{j+1}-3\times y_{j+2})   ;  1st derivative     Y  j  ′   =    1   12  h     (      1  ×   y   j  -  2     -   8  ×   y   j  -  1      +   0  ×   y  j    +   8  ×   y   j  +  1      -   1  ×   y   j  +  2      )         subscript   superscript  Y  normal-′   j       1    12  h            1   subscript  y    j  2       8   subscript  y    j  1        0   subscript  y  j      8   subscript  y    j  1        1   subscript  y    j  2         Y^{\prime}_{j}=\frac{1}{12h}(1\times y_{j-2}-8\times y_{j-1}+0\times y_{j}+8%
 \times y_{j+1}-1\times y_{j+2})   ;  2nd. derivative     Y  j  ′′   =    1   7   h  2      (     2  ×   y   j  -  2     -   1  ×   y   j  -  1     -   2  ×   y  j    -   1  ×   y   j  +  1      +   2  ×   y   j  +  2      )         subscript   superscript  Y  ′′   j       1    7   superscript  h  2           2   subscript  y    j  2       1   subscript  y    j  1       2   subscript  y  j      1   subscript  y    j  1        2   subscript  y    j  2         Y^{\prime\prime}_{j}=\frac{1}{7h^{2}}(2\times y_{j-2}-1\times y_{j-1}-2\times y%
 _{j}-1\times y_{j+1}+2\times y_{j+2})   .   Selected values of the convolution coefficients for polynomials of degree 1,2,3, 4 and 5 are given in the following tables. The values were calculated using the PASCAL code provided in Gorry. 45         Coefficients for smoothing     Degree     Window size     −4     −3     −2     −1     0     1     2     3     4     Normalisation         Coefficients for 1st derivative     Degree     Window size     −4     −3     −2     −1     0     1     2     3     4     Normalisation               Coefficients for 2nd derivative     Degree     Window size     −4     −3     −2     −1     0     1     2     3     4     Normalisation         Coefficients for 3rd derivative     Degree     Window size     −4     −3     −2     −1     0     1     2     3     4     Normalisation         Coefficients for 4th derivative     Degree     Window size     −4     −3     −2     −1     0     1     2     3     4     Normalisation        Notes  References     External links   Savitzky–Golay filter in Fundamentals of Statistics   "  Category:Filter theory  Category:Signal processing  Category:Regression analysis     . "Graduation Formulae obtained by fitting a Polynomial." ↩  ↩  ↩  ↩  ↩  ↩  ↩  ↩   ↩  ↩  ↩  ↩   With even values of m , z will run from 1 − m to m − 1 in steps of 2 ↩  The simple moving average is a special case with k = 0, Y = a 0 . In this case all convolution coefficients are equal to 1/ m . ↩    Smoothing using the moving average is equivalent, with equally spaced points, to local fitting with a (sloping) straight line ↩  ↩  The expressions given here are different from those of Madden, which are given in terms of the variable m' = (m − 1)/2. ↩  ↩    ↩  ↩  ↩  ↩  ↩   ↩  ↩     ↩  ↩  ↩  ↩  ↩  ↩  ↩  ↩  The same result is obtained with one pass of the equivalent filter with coefficients (1/9, 2/9, 3/9, 2/9, 1/9) and an identity variance-covariance matrix ↩      