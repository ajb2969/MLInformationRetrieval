


Frequent subtree mining




Frequent subtree mining
In [[computer science]], '''frequent subtree mining''' is the problem 
 of finding all patterns in a given database whose support (a metric related to its number of occurrences in other subtrees) is over a given threshold.1 It is a more general form of the maximum agreement subtree problem.2
Definition
Frequent subtree mining is the problem of trying to find all of the patterns whose "support" is over a certain user-specified support, where "support" is calculated as the number of trees in a database which have at least one subtree isomorphic to a given pattern.3
Formal definition
The problem of frequent subtree mining has been formally defined as:4

Given a threshold minfreq, a class of trees 
 
 
 
 , a transitive subtree relation 
 
 
 
  between trees 
 
 
 
 , a finite set of trees 
 
 
 
 , the frequent subtree mining problem is the problem of finding all trees 
 
 
 
  such that no two trees in 
 
 
 
  are isomorphic and
 
 



where 
 
 
 
  is an anti-monotone function such that if 
 
 
 
  then
 
 




Algorithms
In 2002, Mohammed J. Zaki introduced TreeMiner, an efficient algorithm for solving the frequent subtree mining problem, which used a "scope list" to represent tree nodes and which was contrasted with PatternMatcher, an algorithm based on pattern matching.5
Applications
Domains in which frequent subtree mining is useful tend to involve complex relationships between data entities: for instance, the analysis of XML documents often requires frequent subtree mining.6 Another domain where this is useful is the web usage mining problem: since the actions taken by users when visiting a web site can be recorded and categorized in many different ways, complex databases of trees need to be analyzed with frequent subtree mining.7 Other domains in which frequent subtree mining is useful include computational biology,89 RNA structure analysis,10 pattern recognition,11 bioinformatics,12 and analysis of the KEGG GLYCAN database.13
Challenges
Checking whether a pattern (or a transaction) supports a given subgraph is an NP-complete problem, since it is an NP-complete instance of the subgraph isomorphism problem.14 Furthermore, due to combinatorial explosion, according to Lei et al., "mining all frequent subtree patterns becomes infeasible for a large and dense tree database".15
References
"
Category:Computational problems in graph theory





Dai, H., Srikant, R. and Zhang, C. (2004). "Advances in Knowledge Discovery and Data Mining." 8th Pacific-Asia Conference, PAKDD 2004, Sydney, Australia, May 26–28, 2004, Proceedings. 1st ed. p. 65.




Deepak, Akshay, David Fernández-Baca, Srikanta Tirthapura, Michael J. Sanderson, and Michelle M. McMahon. "EvoMiner: frequent subtree mining in phylogenetic databases." Knowledge and Information Systems (2011): 1-32.
Chi, Yun, Yirong Yang, and Richard R. Muntz. "Canonical forms for labelled trees and their applications in frequent subtree mining." Knowledge and Information Systems 8, no. 2 (2005): 203–234.





Zou, Lei, Yansheng Lu, Huaming Zhang, and Rong Hu. "[//ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=4063588 Mining frequent induced subtree patterns with subtree-constraint]." In Data Mining Workshops, 2006. ICDM Workshops 2006. Sixth IEEE International Conference on, pp. 3–7. IEEE, 2006.




