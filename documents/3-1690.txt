


Infinite impulse response




Infinite impulse response

Infinite impulse response (IIR) is a property applying to many linear time-invariant systems. Common examples of linear time-invariant systems are most electronic and digital filters. Systems with this property are known as IIR systems or IIR filters, and are distinguished by having an impulse response which does not become exactly zero past a certain point, but continues indefinitely. This is in contrast to a finite impulse response in which the impulse response h(t) does become exactly zero at times t > T for some finite T, thus being of finite duration.
In practice, the impulse response even of IIR systems usually approaches zero and can be neglected past a certain point. However the physical systems which give rise to IIR or FIR (finite impulse response) responses are dissimilar, and therein lies the importance of the distinction. For instance, analog electronic filters composed of resistors, capacitors, and/or inductors (and perhaps linear amplifiers) are generally IIR filters. On the other hand, discrete-time filters (usually digital filters) based on a tapped delay line employing no feedback are necessarily FIR filters. The capacitors (or inductors) in the analog filter have a "memory" and their internal state never completely relaxes following an impulse. But in the latter case, after an impulse has reached the end of the tapped delay line, the system has no further memory of that impulse and has returned to its initial state; its impulse response beyond that point is exactly zero.
Implementation and design
Although almost all analog electronic filters are IIR, digital filters may be either IIR or FIR. The presence of feedback in the topology of a discrete-time filter (such as the block diagram shown below) generally creates an IIR response. The z domain transfer function of an IIR filter contains a non-trivial denominator, describing those feedback terms. The transfer function of an FIR filter, on the other hand, has only a numerator as expressed in the general form derived below. All of the $a_i$ coefficients (feedback terms) are zero and the filter has no finite poles.
The transfer functions pertaining to IIR analog electronic filters have been extensively studied and optimized for their amplitude and phase characteristics. These continuous-time filter functions are described in the Laplace domain. Desired solutions can be transferred to the case of discrete-time filters whose transfer functions are expressed in the z domain, through the use of certain mathematical techniques such as the bilinear transform, impulse invariance, or pole–zero matching method. Thus digital IIR filters can be based on well-known solutions for analog filters such as the Chebyshev filter, Butterworth filter, and Elliptic filter, inheriting the characteristics of those solutions.
Transfer function derivation
Digital filters are often described and implemented in terms of the difference equation that defines how the output signal is related to the input signal:
$$\begin{align}
  y\left[n\right] & = \frac{1}{a_{0}}(b_{0} x[n] + b_{1} x[n-1] + \cdots + b_{P} x[n-P] \\
       & - a_{1} y[n-1] - a_{2} y[n-2] - \cdots - a_{Q} y[n-Q])
 \end{align}$$
where:

$\ P$ is the feedforward filter order
$\ b_{i}$ are the feedforward filter coefficients
$\ Q$ is the feedback filter order
$\ a_{i}$ are the feedback filter coefficients
$\ x[n]$ is the input signal
$\ y[n]$ is the output signal.

A more condensed form of the difference equation is:
$$\ y[n] = \frac{1}{a_{0}} \left(\sum_{i=0}^P b_{i}x[n-i] - \sum_{j=1}^Q a_{j} y[n-j]\right)$$
which, when rearranged, becomes:
$$\ \sum_{j=0}^Q a_{j} y[n-j] = \sum_{i=0}^P b_{i}x[n-i]$$
To find the transfer function of the filter, we first take the Z-transform of each side of the above equation, where we use the time-shift property to obtain:
$$\ \sum_{j=0}^Q a_{j} z^{-j} Y(z) = \sum_{i=0}^P b_{i} z^{-i} X(z)$$
We define the transfer function to be:
$$\begin{align}
 H(z) & = \frac{Y(z)}{X(z)} \\
      & = \frac{\sum_{i=0}^P b_{i} z^{-i}}{\sum_{j=0}^Q a_{j} z^{-j}}
 \end{align}$$
Considering that in most IIR filter designs coefficient $\ a_0$ is 1, the IIR filter transfer function takes the more traditional form:
$$\begin{align}
 H(z) & = \frac{\sum_{i=0}^P b_{i} z^{-i}}{1+\sum_{j=1}^Q a_{j} z^{-j}}
 \end{align}$$
(Figure)
Simple IIR filter block diagram|An example of a block diagram of an IIR filter. The $z^{-1}$ block is a unit delay.

Stability
The transfer function allows one to judge whether or not a system is bounded-input, bounded-output (BIBO) stable. To be specific, the BIBO stability criterion requires that the ROC of the system includes the unit circle. For example, for a causal system, all poles of the transfer function have to have an absolute value smaller than one. In other words, all poles must be located within a unit circle in the $z$-plane.
The poles are defined as the values of $z$ which make the denominator of $H(z)$ equal to 0:
$$\ 0 = \sum_{j=0}^Q a_{j} z^{-j}$$
Clearly, if $a_{j}\ne 0$ then the poles are not located at the origin of the $z$-plane. This is in contrast to the FIR filter where all poles are located at the origin, and is therefore always stable.
IIR filters are sometimes preferred over FIR filters because an IIR filter can achieve a much sharper transition region roll-off than an FIR filter of the same order.
Example
Let the transfer function $H(z)$ of a discrete-time filter be given by:
$$H(z) = \frac{B(z)}{A(z)} = \frac{1}{1 - a z^{-1}}$$
governed by the parameter $a$, a real number with $0 < |a| < 1$. $H(z)$ is stable and causal with a pole at $a$. The time-domain impulse response can be shown to be given by:
$$h(n) = a^{n} u(n)$$
where $u(n)$ is the unit step function. It can be seen that $h(n)$ is non-zero for all $n \ge 0$, thus an impulse response which continues infinitely.
(Figure)
880*720px|thumbnail|default|IIR filter example

Advantages and disadvantages
The main advantage digital IIR filters have over FIR filters is their efficiency in implementation, in order to meet a specification in terms of passband, stopband, ripple, and/or roll-off. Such a set of specifications can be accomplished with a lower order (Q in the above formulae) IIR filter than would be required for an FIR filter meeting the same requirements. If implemented in a signal processor, this implies a correspondingly fewer number of calculations per time step; the computational savings is often of a rather large factor.
On the other hand, FIR filters can be easier to design, for instance, to match a particular frequency response requirement. This is particularly true when the requirement is not one of the usual cases (high-pass, low-pass, notch, etc.) which have been studied and optimized for analog filters. Also FIR filters can be easily made to be linear phase (constant group delay vs frequency)—a property that is not easily met using IIR filters and then only as an approximation (for instance with the Bessel filter). Another issue regarding digital IIR filters is the potential for limit cycle behavior when idle, due to the feedback system in conjunction with quantization.
See also

Autoregressive model
Electronic filter
Finite impulse response
Recurrence relation, mathematical formalization
System analysis

External links

The fifth module of the BORES Signal Processing DSP course - Introduction to DSP

IIR Digital Filter design tool - produces coefficients, graphs, poles, zeros, and C code
EngineerJS Online IIR Design Tool - does not require Java

"
Category:Digital signal processing Category:Filter theory


