


Condensation algorithm




Condensation algorithm

The condensation algorithm (Conditional Density Propagation) is a computer vision algorithm. The principal application is to detect and track the contour of objects moving in a cluttered environment. Object tracking is one of the more basic and difficult aspects of computer vision and is generally a prerequisite to object recognition. Being able to identify which pixels in an image make up the contour of an object is a non-trivial problem. Condensation is a probabilistic algorithm that attempts to solve this problem.
The algorithm itself is described in detail by Isard and Blake in a publication in the International Journal of Computer Vision in 1998.1 One of the most interesting facets of the algorithm is that it does not compute on every pixel of the image. Rather, pixels to process are chosen at random, and only a subset of the pixels end up being processed. Multiple hypotheses about what is moving are supported naturally by the probabilistic nature of the approach. The evaluation functions come largely from previous work in the area and include many standard statistical approaches. The original part of this work is the application of particle filter estimation techniques.
The algorithm’s creation was inspired by the inability of Kalman filtering to perform object tracking well in the presence of significant background clutter. The presence of clutter tends to produce probability distributions for the object state which are multi-modal and therefore poorly modeled by the Kalman filter. The Condensation Algorithm in its most general form requires no assumptions about the probability distributions of the object or measurements.
Algorithm Overview
The Condensation algorithm seeks to solve the problem of estimating the conformation of an object described by a  vector

 
  at time 
 
 
 
 , given observations 
 
 
 
  of the detected features in the images up to and including the current time. The Condensation Algorithm outputs an estimate to the state  conditional probability density

 
  by applying a nonlinear filter based on factored sampling and can be thought of as a development of a Monte-Carlo method.2

 
  is a representation of the probability of possible conformations for the objects based on previous conformations and measurements. The condensation algorithm is a generative model3 since it models the joint distribution of the object and the observer.
The conditional density of the object at the current time 
 
 
 
  is estimated as a weighted, time-indexed sample set 
 
 
 
  with weights 
 
 
 
 . N is a parameter determining the number of sample sets chosen. A realization of 
 
 
 
  is obtained by sampling with replacement from the set 
 
 
 
  with probability equal to the corresponding element of 
 
 
 
 .4
The assumptions that object dynamics form a temporal Markov chain and that observations are  independent of each other and the dynamics facilitate the implementation of the Condensation Algorithm. The first assumption allows the dynamics of the object to be entirely determined by the conditional density 
 
 
 
 . The model of the system dynamics determined by 
 
 
 
  must also be selected for the algorithm, and generally includes both deterministic and stochastic dynamics.
The algorithm can be summarized by initialization at time 
 
 
 
  and three steps at each time t:
Initialization
Form the initial sample set and weights by sampling according to the prior distribution . For example, specify as Gaussian and set the weights equal to each other.
Iterative Procedure

Sample with replacement N times from the set 
 
 
 
  with probability 
 
 
 
  to generate a realization of 
 
 
 
 .
Apply the learned dynamics 
 
 
 
  to each element of this new set, to generate a new set 
 
 
 
 .
To take into account the current observation 
 
 
 
 , set 
 
 
 
  for each element 
 
 
 
 .

This algorithm outputs the probability distribution 
 
 
 
  which can be directly used to calculate the mean position of the tracked object, as well as the other moments of the tracked object.
Cumulative weights can instead be used to achieve a more efficient sampling.5
Implementation Considerations
Since object-tracking can be a real-time objective, consideration of algorithm efficiency becomes important. The Condensation Algorithm is relatively simple when compared to the computational intensity of the Ricatti equation required for Kalman filtering. The parameter 
 
 
 
  which determines the number of samples in the sample set will clearly hold a trade off in efficiency versus performance.
One way to increase efficiency of the algorithm is by selecting a low degree of freedom model for representing the shape of the object. The model used by Isard 1998 is a linear parameterization of B-splines in which the splines are limited to certain configurations. Suitable configurations were found by analytically determining combinations of contours from multiple views, of the object in different poses, and through principal component analysis (PCA) on the deforming object.
Isard and Blake model the object dynamics 
 
 
 
  as a second order difference equation with deterministic and stochastic components
 
 

where 
 
 
 
  is the mean value of the state, and 
 
 
 
 , 
 
 
 
  are matrices representing the deterministic and stochastic components of the dynamical model respectively. 
 
 
 
 , 
 
 
 
 , and 
 
 
 
  are estimated via Maximum Likelihood Estimation while the object performs typical movements.67
The observation model 
 
 
 
  cannot be directly estimated from the data, requiring assumptions to be made in order to estimate it. Isard 1998 assumes that the clutter which may make the object not visible is a Poisson random process with spatial density 
 
 
 
  and that any true target measurement is unbiased and normally distributed with standard deviation

 
 .
The basic Condensation algorithm is used to track a single object in time. It is possible to extend the Condensation algorithm using a single probability distribution to describe the likely states of multiple objects to track multiple objects in a scene at the same time.8
Since clutter can cause the object probability distribution to split into multiple peaks, each peak represents a hypothesis about the object configuration. Smoothing is a statistical technique of conditioning the distribution based on both past and future measurements once the tracking is complete in order to reduce the effects of multiple peaks.9 Smoothing cannot be directly done in real-time since it requires information of future measurements.
Applications
The algorithm can be used for vision-based robot localization of mobile robots.10 Instead of tracking the position of an object in the scene however, the position of the camera platform is tracked. This allows the camera platform to be globally localized given a visual map of the environment.
Extensions of the condensation algorithm have also been used to recognize human gestures in image sequences. This application of the condensation algorithm impacts the range of human-computer interactions possible. It has been used to recognize simple gestures of a user at a whiteboard to control actions such as selecting regions of the boards to print or save them.11 Other extensions have also been used for tracking multiple cars in the same scene.12
The condensation algorithm has also been used for face recognition in a video sequence.13
Resources
An implementation of the Condensation Algorithm in C can be found on Michael Isard’s website.
An implementation in Matlab can be found on the Mathworks File Exchange.
An example of implementation using the OpenCV library can be found on the OpenCV forums.
See also

Particle filter - Condensation is the application of Sampling Importance Resampling (SIR) estimation to contour tracking

References
"
Category:Computer vision



↩

↩



↩
↩
↩
↩
↩
↩
↩




