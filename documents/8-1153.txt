   Multi-commodity flow problem      Multi-commodity flow problem   The multi-commodity flow problem is a network flow problem with multiple commodities (flow demands) between different source and sink nodes.  Definition  Given a flow network     G    (  V  ,  E  )       G   V  E     \,G(V,E)   , where edge     (  u  ,  v  )   ∈  E       u  v   E    (u,v)\in E   has capacity     c    (  u  ,  v  )       c   u  v     \,c(u,v)   . There are    k    k   \,k   commodities     K  1   ,   K  2   ,  …  ,   K  k       subscript  K  1    subscript  K  2   normal-…   subscript  K  k     K_{1},K_{2},\dots,K_{k}   , defined by      K   i   =   (   s  i   ,   t  i   ,   d  i   )        subscript  K  i     subscript  s  i    subscript  t  i    subscript  d  i      \,K_{i}=(s_{i},t_{i},d_{i})   , where     s   i     subscript  s  i    \,s_{i}   and     t   i     subscript  t  i    \,t_{i}   is the source and sink of commodity    i    i   \,i   , and     d   i     subscript  d  i    \,d_{i}   is the demand. The flow of commodity    i    i   \,i   along edge    (  u  ,  v  )     u  v    \,(u,v)   is      f   i    (  u  ,  v  )        subscript  f  i    u  v     \,f_{i}(u,v)   . Find an assignment of flow which satisfies the constraints:        Capacity constraints :         ∑   i  =  1   k     f  i    (  u  ,  v  )     ≤   c   (  u  ,  v  )          superscript   subscript     i  1    k      subscript  f  i    u  v       c   u  v      \,\sum_{i=1}^{k}f_{i}(u,v)\leq c(u,v)        Flow conservation :          ∑   w  ∈  V      f  i    (  u  ,  w  )     =   0  when     u  ≠    s  i   ,   t  i        formulae-sequence      subscript     w  V       subscript  f  i    u  w      0  when      u    subscript  s  i    subscript  t  i       \,\sum_{w\in V}f_{i}(u,w)=0\quad\mathrm{when}\quad u\neq s_{i},t_{i}               ∀  v   ,  u  ,    f  i    (  u  ,  v  )     =   -    f  i    (  v  ,  u  )           for-all  v   u     subscript  f  i    u  v          subscript  f  i    v  u       \,\forall v,u,\,f_{i}(u,v)=-f_{i}(v,u)        Demand satisfaction :         ∑   w  ∈  V      f  i    (   s  i   ,  w  )     =    ∑   w  ∈  V      f  i    (  w  ,   t  i   )     =   d  i           subscript     w  V       subscript  f  i     subscript  s  i   w       subscript     w  V       subscript  f  i    w   subscript  t  i            subscript  d  i      \,\sum_{w\in V}f_{i}(s_{i},w)=\sum_{w\in V}f_{i}(w,t_{i})=d_{i}          In the minimum cost multi-commodity flow problem , there is a cost      a   (  u  ,  v  )    ⋅  f    (  u  ,  v  )        normal-⋅    a   u  v    f    u  v     a(u,v)\cdot f(u,v)   for sending flow on    (  u  ,  v  )     u  v    \,(u,v)   . You then need to minimize       ∑    (  u  ,  v  )   ∈  E     (   a   (  u  ,  v  )     ∑   i  =  1   k     f  i    (  u  ,  v  )      )       subscript      u  v   E      a   u  v     superscript   subscript     i  1    k      subscript  f  i    u  v        \sum_{(u,v)\in E}\left(a(u,v)\sum_{i=1}^{k}f_{i}(u,v)\right)     In the maximum multi-commodity flow problem , there are no hard demands on each commodity, but the total throughput is maximised:       ∑   i  =  1   k     ∑   w  ∈  V      f  i    (   s  i   ,  w  )         superscript   subscript     i  1    k     subscript     w  V       subscript  f  i     subscript  s  i   w       \sum_{i=1}^{k}\sum_{w\in V}f_{i}(s_{i},w)     In the maximum concurrent flow problem , the task is to maximise the minimal fraction of the flow of each commodity to its demand:       min   1  ≤  i  ≤  k       ∑   w  ∈  V      f  i    (   s  i   ,  w  )      d  i        subscript       1  i       k         subscript     w  V       subscript  f  i     subscript  s  i   w      subscript  d  i      \min_{1\leq i\leq k}\frac{\sum_{w\in V}f_{i}(s_{i},w)}{d_{i}}     Relation to other problems  The minimum cost variant is a generalisation of the minimum cost flow problem . Variants of the circulation problem are generalisations of all flow problems.  Usage  Routing and wavelength assignment (RWA) in optical burst switching of Optical Network would be approached via multi-commodity flow formulas.  Solutions  In the decision version of problems, the problem of producing an integer flow satisfying all demands is NP-complete , 1 even for only two commodities and unit capacities (making the problem strongly NP-complete in this case).  If fractional flows are allowed, the problem can be solved in polynomial time through linear programming . 2 Or through (typically much faster) fully polynomial time approximation schemes . 3  External resources   Papers by Clifford Stein about this problem: http://www.columbia.edu/~cs2035/papers/#mcf  Software solving the problem: http://typo.zib.de/opt-long_projects/Software/Mcf/   References    "  Category:Network flow     ↩  ↩  ↩     