


Multi-commodity flow problem




Multi-commodity flow problem

The multi-commodity flow problem is a network flow problem with multiple commodities (flow demands) between different source and sink nodes.
Definition
Given a flow network 
 
 
 
 , where edge 
 
 
 
  has capacity 
 
 
 
 . There are 
 
 
 
  commodities 
 
 
 
 , defined by 
 
 
 
 , where 
 
 
 
  and 
 
 
 
  is the source and sink of commodity 
 
 
 
 , and 
 
 
 
  is the demand. The flow of commodity 
 
 
 
  along edge 
 
 
 
  is 
 
 
 
 . Find an assignment of flow which satisfies the constraints:






Capacity constraints:







Flow conservation:














Demand satisfaction:









In the minimum cost multi-commodity flow problem, there is a cost 
 
 
 
  for sending flow on 
 
 
 
 . You then need to minimize



In the maximum multi-commodity flow problem, there are no hard demands on each commodity, but the total throughput is maximised:



In the maximum concurrent flow problem, the task is to maximise the minimal fraction of the flow of each commodity to its demand:



Relation to other problems
The minimum cost variant is a generalisation of the minimum cost flow problem. Variants of the circulation problem are generalisations of all flow problems.
Usage
Routing and wavelength assignment (RWA) in optical burst switching of Optical Network would be approached via multi-commodity flow formulas.
Solutions
In the decision version of problems, the problem of producing an integer flow satisfying all demands is NP-complete,1 even for only two commodities and unit capacities (making the problem strongly NP-complete in this case).
If fractional flows are allowed, the problem can be solved in polynomial time through linear programming.2 Or through (typically much faster) fully polynomial time approximation schemes.3
External resources

Papers by Clifford Stein about this problem: http://www.columbia.edu/~cs2035/papers/#mcf
Software solving the problem: http://typo.zib.de/opt-long_projects/Software/Mcf/

References


"
Category:Network flow



↩
↩
↩




