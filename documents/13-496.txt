


Smoothstep




Smoothstep

 table.sourceCode, tr.sourceCode, td.lineNumbers, td.sourceCode {
   margin: 0; padding: 0; vertical-align: baseline; border: none; }
 <style>
 table.sourceCode { width: 100%; line-height: 100%; }
 td.lineNumbers { text-align: right; padding-right: 4px; padding-left: 4px; color: #aaaaaa; border-right: 1px solid #aaaaaa; }
 td.sourceCode { padding-left: 5px; }
 code > span.kw { color: #007020; font-weight: bold; } /* Keyword */
 code > span.dt { color: #902000; } /* DataType */
 code > span.dv { color: #40a070; } /* DecVal */
 code > span.bn { color: #40a070; } /* BaseN */
 code > span.fl { color: #40a070; } /* Float */
 code > span.ch { color: #4070a0; } /* Char */
 code > span.st { color: #4070a0; } /* String */
 code > span.co { color: #60a0b0; font-style: italic; } /* Comment */
 code > span.ot { color: #007020; } /* Other */
 code > span.al { color: #ff0000; font-weight: bold; } /* Alert */
 code > span.fu { color: #06287e; } /* Function */
 code > span.er { color: #ff0000; font-weight: bold; } /* Error */
 code > span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */
 code > span.cn { color: #880000; } /* Constant */
 code > span.sc { color: #4070a0; } /* SpecialChar */
 code > span.vs { color: #4070a0; } /* VerbatimString */
 code > span.ss { color: #bb6688; } /* SpecialString */
 code > span.im { } /* Import */
 code > span.va { color: #19177c; } /* Variable */
 code > span.cf { color: #007020; font-weight: bold; } /* ControlFlow */
 code > span.op { color: #666666; } /* Operator */
 code > span.bu { } /* BuiltIn */
 code > span.ex { } /* Extension */
 code > span.pp { color: #bc7a00; } /* Preprocessor */
 code > span.at { color: #7d9029; } /* Attribute */
 code > span.do { color: #ba2121; font-style: italic; } /* Documentation */
 code > span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */
 code > span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */
 code > span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */
   



 Smoothstep is a scalar interpolation function commonly used in computer graphics12 and video game engines.3 The function interpolates smoothly between two input values based on a third one that should be between the first two. The returned value is clamped between 0 and 1.
The slope of the smoothstep function tends toward zero at both edges. This makes it easy to create a sequence of transitions using smoothstep to interpolate each segment rather than using a more sophisticated or expensive interpolation technique.
As pointed out in MSDN and OpenGL documentation, smoothstep implements cubic Hermite interpolation after doing a clamp:



A C/C++ example implementation provided by AMD4 follows.
float smoothstep(float edge0, float edge1, float x)
 {
     // Scale, bias and saturate x to 0..1 range
     x = clamp((x - edge0)/(edge1 - edge0), 0.0, 1.0); 
     // Evaluate polynomial
     return x*x*(3 - 2*x);
 } 
Variations
Ken Perlin suggests5 an improved version of the smoothstep function which has zero 1st and 2nd order derivatives at t=0 and t=1:



C/C++ reference implementation:
float smootherstep(float edge0, float edge1, float x)
 {
     // Scale, and clamp x to 0..1 range
     x = clamp((x - edge0)/(edge1 - edge0), 0.0, 1.0);
     // Evaluate polynomial
     return x*x*x*(x*(x*6 - 15) + 10);
 }
Origin
3rd order equation
We start with a generic third order polynomial function and its first derivative:



Applying the desired values for the function at both endpoints we get:



Applying the desired values for the first derivative of the function at both endpoints we get:



Solving the system of 4 unknowns formed by the last 4 equations we obtain the values of the polynomial coefficients:



Introducing these coefficients back into the first equation gives the third order smoothstep function:



5th order equation
We start with a generic fifth order polynomial function, its first derivative and its second derivative:



Applying the desired values for the function at both endpoints we get:



Applying the desired values for the first derivative of the function at both endpoints we get:



Applying the desired values for the second derivative of the function at both endpoints we get:



Solving the system of 6 unknowns formed by the last 6 equations we obtain the values of the polynomial coefficients:



Introducing these coefficients back into the first equation gives the fifth order smootherstep function:



References
External links

Using smoothstep (in the RenderMan Shading Language) by Prof. Malcolm Kesson.
Interpolation tricks by Jari Komppa

"
Category:Computer graphics algorithms



Smoothstep at Microsoft Developer Network↩
GLSL Language Specification, Version 1.40↩
Unity game engine SmoothStep documentation↩
ATI R3x0 Pixel Shaders↩
Texturing and Modeling, Third Edition: A Procedural Approach↩



