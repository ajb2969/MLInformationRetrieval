


Non-negative matrix factorization




Non-negative matrix factorization

(Figure)
Illustration of approximate non-negative matrix factorization: the matrix V is represented by the two smaller matrices W and H, which, when multiplied, approximately reconstruct V.


NMF redirects here. For the bridge convention, see new minor forcing.


Non-negative matrix factorization (NMF), also non-negative matrix approximation12 is a group of algorithms in multivariate analysis and linear algebra where a matrix V is factorized into (usually) two matrices W and H, with the property that all three matrices have no negative elements. This non-negativity makes the resulting matrices easier to inspect. Also, in applications such as processing of audio spectrograms non-negativity is inherent to the data being considered. Since the problem is not exactly solvable in general, it is commonly approximated numerically.
NMF finds applications in such fields as computer vision, document clustering,3 chemometrics, audio signal processing4 and recommender systems.56
History
In chemometrics non-negative matrix factorization has a long history under the name "self modeling curve resolution".7 In this framework the vectors in the right matrix are continuous curves rather than discrete vectors. Also early work on non-negative matrix factorizations was performed by a Finnish group of researchers in the middle of the 1990s under the name positive matrix factorization.89 It became more widely known as non-negative matrix factorization after Lee and Seung investigated the properties of the algorithm and published some simple and useful algorithms for two types of factorizations.1011
Background
Let matrix V be the product of the matrices W and H,



Matrix multiplication can be implemented as computing the columns vectors of V as linear combinations of the column vectors in W using coefficients supplied by columns of H. That is, each column of V can be computed as follows:



where vi is the ith column vector of the product matrix V and hi is the ith column vector of the matrix H.
When multiplying matrices, the dimensions of the factor matrices may be significantly lower than those of the product matrix and it is this property that forms the basis of NMF. NMF generates factors with significantly reduced dimensions compared to the original matrix. For example, if V is an m×n matrix, W is an m×p matrix, and H is a p×n matrix then p can be significantly less than both m and n.
Here's an example based on a text-mining application:

Let the input matrix (the matrix to be factored) be V with 10000 rows and 500 columns where words are in rows and documents are in columns. That is, we have 500 documents indexed by 10000 words. It follows that a column vector v in V represents a document.
Assume we ask the algorithm to find 10 features in order to generate a features matrix W with 10000 rows and 10 columns and a coefficients matrix H with 10 rows and 500 columns.
The product of W and H is a matrix with 10000 rows and 500 columns, the same shape as the input matrix V and, if the factorization worked, also a reasonable approximation to the input matrix V.
From the treatment of matrix multiplication above it follows that each column in the product matrix WH is a linear combination of the 10 column vectors in the features matrix W with coefficients supplied by the coefficients matrix H.

This last point is the basis of NMF because we can consider each original document in our example as being built from a small set of hidden features. NMF generates these features.
It's useful to think of each feature (column vector) in the features matrix W as a document archetype comprising a set of words where each word's cell value defines the word's rank in the feature: The higher a word's cell value the higher the word's rank in the feature. A column in the coefficients matrix H represents an original document with a cell value defining the document's rank for a feature. This follows because each row in H represents a feature. We can now reconstruct a document (column vector) from our input matrix by a linear combination of our features (column vectors in W where each feature is weighted by the feature's cell value from the document's column in H.
Types
Approximate non-negative matrix factorization
Usually the number of columns of W and the number of rows of H in NMF are selected so the product WH will become an approximation to V. The full decomposition of V then amounts to the two non-negative matrices W and H as well as a residual U, such that: V = WH + U. The elements of the residual matrix can either be negative or positive.
When W and H are smaller than V they become easier to store and manipulate. Another reason for factorizing V into smaller matrices W and H, is that if one is able to approximately represent the elements of V by significantly less data, then one has to infer some latent structure in the data.
Convex non-negative matrix factorization
In standard NMF, matrix factor 
 
 
 
 ， i.e., W can be anything in that space. Convex NMF 12 restricts 
 
 
 
  to a be convex combination of the input data vectors 
 
 
 
 
 . This greatly improves the quality of data representation of W. Furthermore, the resulting matrix factor H becomes more sparse and orthogonal.
Nonnegative rank factorization
In case the nonnegative rank of V is equal to its actual rank, V=WH is called a nonnegative rank factorization.131415 The problem of finding the NRF of V, if it exists, is known to be NP-hard.16
Different cost functions and regularizations
There are different types of non-negative matrix factorizations. The different types arise from using different cost functions for measuring the divergence between V and WH and possibly by regularization of the W and/or H matrices.17
Two simple divergence functions studied by Lee and Seung are the squared error (or Frobenius norm) and an extension of the Kullback–Leibler divergence to positive matrices (the original Kullback–Leibler divergence is defined on probability distributions). Each divergence leads to a different NMF algorithm, usually minimizing the divergence using iterative update rules.
The factorization problem in the squared error version of NMF may be stated as: Given a matrix 
 
 
 
  find nonnegative matrices W and H that minimize the function



Another type of NMF for images is based on the total variation norm.18
When L1 regularization (akin to Lasso) is added to NMF with the mean squared error cost function, the resulting problem may be called non-negative sparse coding due to the similarity to the sparse coding problem,19 although it may also still be referred to as NMF.20
Online NMF
Many standard NMF algorithms analyze all the data together; i.e., the whole matrix is available from the start. This may be unsatisfactory in applications where there are too many data to fit into memory or where the data are provided in streaming fashion. One such use is for collaborative filtering in recommendation systems, where there may be many users and many items to recommend, and it would be inefficient to recalculate everything when one user or one item is added to the system. The cost function for optimization in these cases may or may not be the same as for standard NMF, but the algorithms need to be rather different.2122
Algorithms
There are several ways in which the W and H may be found: Lee and Seung's multiplicative update rule 23 has been a popular method due to the simplicity of implementation. Since then, a few other algorithmic approaches have been developed.
Some successful algorithms are based on alternating non-negative least squares: in each step of such an algorithm, first H is fixed and W found by a non-negative least squares solver, then W is fixed and H is found analogously. The procedures used to solve for W and H may be the same24 or different, as some NMF variants regularize one of W and H.25 Specific approaches include the projected gradient descent methods,2627 the active set method,2829 and the block principal pivoting method30 among several others.
The currently available algorithms are sub-optimal as they can only guarantee finding a local minimum, rather than a global minimum of the cost function. A provably optimal algorithm is unlikely in the near future as the problem has been shown to generalize the k-means clustering problem which is known to be NP-complete.31 However, as in many other data mining applications, a local minimum may still prove to be useful.
Exact NMF
Exact solutions for the variants of NMF can be expected (in polynomial time) when additional constraints hold for matrix V. A polynomial time algorithm for solving nonnegative rank factorization if V contains a monomial sub matrix of rank equal to its rank was given by Campbell and Poole in 1981.32 Kalofolias and Gallopoulos (2012)33 solved the symmetric counterpart of this problem, where V is symmetric and contains a diagonal principal sub matrix of rank r. Their algorithm runs in O(rm^2) time in the dense case. Arora, Ge, Halpern, Mimno, Moitra, Sontag, Wu, & Zhu (2013) give a polynomial time algorithm for exact NMF that works for the case where one of the factors W satisfies the separability condition.34
Relation to other techniques
In Learning the parts of objects by non-negative matrix factorization Lee and Seung proposed NMF mainly for parts-based decomposition of images. It compares NMF to vector quantization and principal component analysis, and shows that although the three techniques may be written as factorizations, they implement different constraints and therefore produce different results.
 It was later shown that some types of NMF are an instance of a more general probabilistic model called "multinomial PCA".35 When NMF is obtained by minimizing the Kullback–Leibler divergence, it is in fact equivalent to another instance of multinomial PCA, probabilistic latent semantic analysis,36 trained by maximum likelihood estimation. That method is commonly used for analyzing and clustering textual data and is also related to the latent class model.
It has been shown 3738 NMF is equivalent to a relaxed form of K-means clustering: matrix factor W contains cluster centroids and H contains cluster membership indicators, when using the least square as NMF objective. This provides theoretical foundation for using NMF for data clustering. However note that k-means does not enforce non-negativity on its centroids, so the closest analogy is in fact with "semi-NMF".39
NMF can be seen as a two-layer directed graphical model with one layer of observed random variables and one layer of hidden random variables.40
NMF extends beyond matrices to tensors of arbitrary order.414243 This extension may be viewed as a non-negative version of, e.g., the PARAFAC model.
Other extensions of NMF include joint factorisation of several data matrices and tensors where some factors are shared. Such models are useful for sensor fusion and relational learning.44
NMF is an instance of the nonnegative quadratic programming (NQP) as well as many other important problems including the support vector machine (SVM). However, SVM and NMF are related at a more intimate level than that of NQP, which allows direct application of the solution algorithms developed for either of the two methods to problems in both domains.45
Uniqueness
The factorization is not unique: A matrix and its inverse can be used to transform the two factorization matrices by, e.g.,46


 
  If the two new matrices 
 
 
 
  and 
 
 
 
 
  are non-negative they form another parametrization of the factorization.
The non-negativity of 
 
 
 
  and 
 
 
 
  applies at least if B is a non-negative monomial matrix. In this simple case it will just correspond to a scaling and a permutation.
More control over the non-uniqueness of NMF is obtained with sparsity constraints.47
Clustering property
NMF has an inherent clustering property,48 i.e., it automatically clusters the columns of input data 
 
 
 
 .
More specifically, the approximation of 
 
 
 
  by 
 
 
 
 
  is achieved by minimizing the error function


 
  subject to 
 
 

If we add additional orthogonality constraint on 
 
 
 
 , i.e., 
 
 
 
 , then the above minimization is identical to the minimization of K-means clustering, except for the non-negativity constraints.
Furthermore, the computed 
 
 
 
 
  gives the cluster indicator, i.e., if 
 
 
 
 , that fact indicates input data 
 
 
 
  belongs/assigned to 
 
 
 
  cluster. And the computed 
 
 
 
  gives the cluster centroids, i.e., the 
 
 
 
 
  column gives the cluster centroid of 
 
 
 
  cluster.
When the orthogonality 
 
 
 
  is not explicitly imposed, the orthogonality may hold to a large extent, in which case the clustering property holds too, as may be found in some practical applications of NMF.
When the error function to be used is Kullback–Leibler divergence, NMF is identical to the Probabilistic latent semantic analysis, a popular document clustering method.49
Applications
Text mining
NMF can be used for text mining applications. In this process, a document-term matrix is constructed with the weights of various terms (typically weighted word frequency information) from a set of documents. This matrix is factored into a term-feature and a feature-document matrix. The features are derived from the contents of the documents, and the feature-document matrix describes data clusters of related documents.
One specific application used hierarchical NMF on a small subset of scientific abstracts from PubMed.50 Another research group clustered parts of the Enron email dataset51 with 65,033 messages and 91,133 terms into 50 clusters.52 NMF has also been applied to citations data, with one example clustering Wikipedia articles and scientific journals based on the outbound scientific citations in Wikipedia.53
Arora, Ge, Halpern, Mimno, Moitra, Sontag, Wu, & Zhu (2013) have given polynomial-time algorithms to learn topic models using NMF. The algorithm assumes that the topic matrix satisfies a separability condition that is often found to hold in these settings. 54
Spectral data analysis
NMF is also used to analyze spectral data; one such use is in the classification of space objects and debris.55
Scalable Internet distance prediction
NMF is applied in scalable Internet distance (round-trip time) prediction. For a network with 
 
 
 
  hosts, with the help of NMF, the distances of all the 
 
 
 
  end-to-end links can be predicted after conducting only 
 
 
 
 
  measurements. This kind of method was firstly introduced in Internet Distance Estimation Service (IDES).56 Afterwards, as a fully decentralized approach, Phoenix network coordinate system 57 is proposed. It achieves better overall prediction accuracy by introducing the concept of weight.
Non-stationary speech denoising
Speech denoising has been a long lasting problem in audio signal processing. There are lots of algorithms for denoising if the noise is stationary. For example, the Wiener filter is suitable for additive Gaussian noise. However, if the noise is non-stationary, the classical denoising algorithms usually have poor performance because the statistical information of the non-stationary noise is difficult to estimate. Schmidt et al.58 use NMF to do speech denoising under non-stationary noise, which is completely different from classical statistical approaches.The key idea is that clean speech signal can be sparsely represented by a speech dictionary, but non-stationary noise cannot. Similarly, non-stationary noise can also be sparsely represented by a noise dictionary, but speech cannot.
The algorithm for NMF denoising goes as follows. Two dictionaries, one for speech and one for noise, need to be trained offline. Once a noisy speech is given, we first calculate the magnitude of the Short-Time-Fourier-Transform. Second, separate it into two parts via NMF, one can be sparsely represented by the speech dictionary, and the other part can be sparsely represented by the noise dictionary. Third, the part that is represented by the speech dictionary will be the estimated clean speech.
Bioinformatics
NMF has been successfully applied in bioinformatics for clustering gene expression and dna methylation data and finding the genes most representative of the clusters.5960 61
Nuclear Imaging
NMF, also referred in this field as factor analysis, has been used since the 80s 62 to analyze sequences of images in SPECT and PET dynamic medical imaging. Non-uniqueness of NMF was addressed using sparsity constraints.63
Current research
Current research in nonnegative matrix factorization includes, but not limited to,
(1) Algorithmic: searching for global minima of the factors and factor initialization.64
(2) Scalability: how to factorize million-by-billion matrices, which are commonplace in Web-scale data mining, e.g., see Distributed Nonnegative Matrix Factorization (DNMF)65 and Scalable Nonnegative Matrix Factorization (ScalableNMF)66
(3) Online: how to update the factorization when new data comes in without recomputing from scratch, e.g., see online CNSC 67
(4) Collective (joint) factorization: factorizing multiple interrelated matrices for multiple-view learning, e.g. mutli-view clustering, see CoNMF 68 and MultiNMF 69
See also

Multilinear algebra
Multilinear subspace learning
Tensor
Tensor decomposition
Tensor software

Sources and external links
Notes
Others










"
Category:Linear algebra Category:Matrix theory Category:Multivariate statistics Category:Machine learning algorithms














C Ding, T Li, MI Jordan, Convex and semi-nonnegative matrix factorizations, IEEE Transactions on Pattern Analysis and Machine Intelligence, 32, 45-55, 2010








http://www.ijcai.org/papers07/Papers/IJCAI07-432.pdf
http://portal.acm.org/citation.cfm?id=1339264.1339709














C. Ding, X. He, H.D. Simon (2005). "On the Equivalence of Nonnegative Matrix Factorization and Spectral Clustering". Proc. SIAM Int'l Conf. Data Mining, pp. 606-610. May 2005
Ron Zass and Amnon Shashua (2005). "A Unifying Approach to Hard and Probabilistic Clustering". International Conference on Computer Vision (ICCV) Beijing, China, Oct., 2005.








Julian Eggert, Edgar Körner, "Sparse coding and NMF", ''Proceedings. 2004 IEEE International Joint Conference on Neural Networks, 2004, pp. 2529-2533, 2004.

C Ding, T Li, W Peng, " On the equivalence between non-negative matrix factorization and probabilistic latent semantic indexing" Computational Statistics & Data Analysis 52, 3913-3927








Schmidt, M.N., J. Larsen, and F.T. Hsiao. (2007). "Wind noise reduction using non-negative sparse coding", Machine Learning for Signal Processing, IEEE Workshop on, 431–436















