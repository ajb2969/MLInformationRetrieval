   Continuous knapsack problem      Continuous knapsack problem  In [[theoretical computer science]], the '''continuous knapsack problem''' (also known as the '''fractional knapsack problem''') is an [[algorithm]]ic problem in [[combinatorial optimization]] in which the goal is to fill a container (the "knapsack") with fractional amounts of different materials chosen to maximize the value of the selected materials. {{citation|title=Algorithm Design: Foundations, Analysis, and Internet Examples|first1=Michael T.|last1=Goodrich|author1-link= Michael T. Goodrich|first2=Roberto|last2=Tamassia|author2-link=Roberto Tamassia|publisher=John Wiley & Sons|year=2002|contribution=5.1.1 The Fractional Knapsack Problem|pages=259–260}}. 1 It resembles the classic knapsack problem , in which the items to be placed in the container are indivisible; however, the continuous knapsack problem may be solved in polynomial time whereas the classic knapsack problem is NP-hard . 2 It is a classic example of how a seemingly small change in the formulation of a problem can have a large impact on its computational complexity .  Problem definition  An instance of either the continuous or classic knapsack problems may be specified by the numerical capacity W of the knapsack, together with a collection of materials, each of which has two numbers associated with it: the weight w i of material that is available to be selected and the value per unit weight v i of that material. The goal is to choose an amount x i ≤ w i of each material, subject to the capacity constraint        ∑  i    x  i    ≤  W        subscript   i    subscript  x  i    W    \sum_{i}x_{i}\leq W   and maximizing the total benefit       ∑  i     x  i    v  i        subscript   i      subscript  x  i    subscript  v  i      \sum_{i}x_{i}v_{i}   . In the classic knapsack problem, each of the amounts x i must be either zero or w i ; the continuous knapsack problem differs by allowing x i to range continuously from zero to w i . 3 Some formulations of this problem rescale the variables x i to be in the range from 0 to 1  Solution technique  The continuous knapsack problem may be solved by a greedy algorithm , first published in 1957 by George Dantzig , 4 5 that considers the materials in sorted order by their values per unit weight. For each material, the amount x i is chosen to be as large as possible:   If the sum of the choices made so far equals the capacity W , then the algorithm sets x i = 0.  If the difference d between the sum of the choices made so far and W is smaller than w i , then the algorithm sets x i = d .  In the remaining case, the algorithm chooses x i = w i .   Because of the need to sort the materials, this algorithm takes time O ( n log n ) on inputs with n materials. 6 7 However, by adapting an algorithm for finding weighted medians , it is possible to solve the problem in time O ( n ). 8  References  "  Category:Combinatorial optimization     . ↩     . ↩        