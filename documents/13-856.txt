   Learning with errors      Learning with errors  '''Learning with errors (LWE)''' is a problem in [[machine learning]] that is conjectured to be hard to solve. It is a generalization of the [[parity learning]] problem, introduced by Oded Regev in 2005. Regev showed, furthermore, that the LWE problem is as hard to solve as several worst-case [[lattice problems]]. The LWE problem has recently Oded Regev, “On lattices, learning with errors, random linear codes, and cryptography,” in Proceedings of the thirt y-seventh annual ACM symposium on Theory of computing (Baltimore, MD, USA: ACM, 2005), 84-93, http://portal.acm.org/citation.cfm?id=1060590.1060603 . 1 been used as a hardness assumption to create public-key cryptosystems . such as the ring learning with errors key exchange by Peikert. 2  An algorithm is said to solve the LWE problem if, when given access to samples    (  x  ,  y  )     x  y    (x,y)   where    x  ∈   ℤ  q  n       x   superscript   subscript  ℤ  q   n     x\in\mathbb{Z}_{q}^{n}   and    y  ∈   ℤ  q       y   subscript  ℤ  q     y\in\mathbb{Z}_{q}   , with the assurance, for some fixed linear function      f  :    ℤ  q  n   →   ℤ  q     ,     normal-:  f   normal-→   superscript   subscript  ℤ  q   n    subscript  ℤ  q      f:\mathbb{Z}_{q}^{n}\rightarrow\mathbb{Z}_{q},   that    y  =   f   (  x  )        y    f  x     y=f(x)   with high probability and deviates from it according to some known noise model, the algorithm can recreate   f   f   f   or some close approximation of it with high probability.  Definition  Denote by    𝕋  =   ℝ  /  ℤ       𝕋    ℝ  ℤ     \mathbb{T}=\mathbb{R}/\mathbb{Z}   the additive group on reals modulo one. Denote by    A   𝐬  ,  ϕ      subscript  A   𝐬  ϕ     A_{\mathbf{s},\phi}   the distribution on     ℤ  q  n   ×  𝕋       superscript   subscript  ℤ  q   n   𝕋    \mathbb{Z}_{q}^{n}\times\mathbb{T}   obtained by choosing a vector    𝐚  ∈   ℤ  q  n       𝐚   superscript   subscript  ℤ  q   n     \mathbf{a}\in\mathbb{Z}_{q}^{n}   uniformly at random, choosing   e   e   e   according to a probability distribution   ϕ   ϕ   \phi   on   𝕋   𝕋   \mathbb{T}   and outputting    (  𝐚  ,     ⟨  𝐚  ,  𝐬  ⟩   /  q   +  e   )     𝐚       𝐚  𝐬   q   e     (\mathbf{a},\langle\mathbf{a},\mathbf{s}\rangle/q+e)   for some fixed vector    𝐬  ∈   ℤ  q  n       𝐬   superscript   subscript  ℤ  q   n     \mathbf{s}\in\mathbb{Z}_{q}^{n}   . Here     ⟨  𝐚  ,  𝐬  ⟩   =    ∑   i  =  1   n     a  i    s  i          𝐚  𝐬     superscript   subscript     i  1    n      subscript  a  i    subscript  s  i       \textstyle\langle\mathbf{a},\mathbf{s}\rangle=\sum_{i=1}^{n}a_{i}s_{i}   is the standard inner product      ℤ  q  n   ×   ℤ  q  n    ⟶   ℤ  q      normal-⟶     superscript   subscript  ℤ  q   n    superscript   subscript  ℤ  q   n     subscript  ℤ  q     \mathbb{Z}_{q}^{n}\times\mathbb{Z}_{q}^{n}\longrightarrow\mathbb{Z}_{q}   , the division is done in the field of reals (or more formally, this "division by   q   q   q   " is notation for the group homomorphism     ℤ  q   ⟶  𝕋     normal-⟶   subscript  ℤ  q   𝕋    \mathbb{Z}_{q}\longrightarrow\mathbb{T}   mapping    1  ∈   ℤ  q       1   subscript  ℤ  q     1\in\mathbb{Z}_{q}   to      1  /  q   +  ℤ   ∈  𝕋          1  q   ℤ   𝕋    1/q+\mathbb{Z}\in\mathbb{T}   ), and the final addition is in   𝕋   𝕋   \mathbb{T}   .  The learning with errors problem     LWE   q  ,  ϕ      subscript  LWE   q  ϕ     \mathrm{LWE}_{q,\phi}   is to find    𝐬  ∈   ℤ  q  n       𝐬   superscript   subscript  ℤ  q   n     \mathbf{s}\in\mathbb{Z}_{q}^{n}   , given access to polynomially many samples of choice from    A   𝐬  ,  ϕ      subscript  A   𝐬  ϕ     A_{\mathbf{s},\phi}   .  For every    α  >  0      α  0    \alpha>0   , denote by    D  α     subscript  D  α    D_{\alpha}   the one-dimensional Gaussian with density function      D  α    (  x  )    =     ρ  α    (  x  )    /  α          subscript  D  α   x        subscript  ρ  α   x   α     D_{\alpha}(x)=\rho_{\alpha}(x)/\alpha   where      ρ  α    (  x  )    =   e   -   π    (    |  x  |   /  α   )   2             subscript  ρ  α   x    superscript  e      π   superscript      x   α   2        \rho_{\alpha}(x)=e^{-\pi(|x|/\alpha)^{2}}   , and let    Ψ  α     subscript  normal-Ψ  α    \Psi_{\alpha}   be the distribution on   𝕋   𝕋   \mathbb{T}   obtained by considering    D  α     subscript  D  α    D_{\alpha}   modulo one. The version of LWE considered in most of the results would be    LWE   q  ,   Ψ  α       subscript  LWE   q   subscript  normal-Ψ  α      \mathrm{LWE}_{q,\Psi_{\alpha}}     Decision version  The LWE problem described above is the search version of the problem. In the decision version ( DLWE ), the goal is to distinguish between noisy inner products and uniformly random samples from     ℤ  q  n   ×  𝕋       superscript   subscript  ℤ  q   n   𝕋    \mathbb{Z}_{q}^{n}\times\mathbb{T}   (practically, some discretized version of it). Regev 3 showed that the decision and search versions are equivalent when   q   q   q   is a prime bounded by some polynomial in   n   n   n   .  Solving decision assuming search  Intuitively, if we have a procedure for the search problem, the decision version can be solved easily: just feed the input samples for the decision problem to the solver for the search problem. Denote the given samples by     {   (   𝐚  𝐢   ,   𝐛  𝐢   )   }   ⊂    ℤ  q  n   ×  𝕋          subscript  𝐚  𝐢    subscript  𝐛  𝐢        subscript   superscript  ℤ  n   q   𝕋     \{(\mathbf{a_{i}},\mathbf{b_{i}})\}\subset\mathbb{Z}^{n}_{q}\times\mathbb{T}   . If the solver returns a candidate   𝐬   𝐬   \mathbf{s}   , for all   i   i   i   , calculate    {    ⟨   𝐚  𝐢   ,  𝐬  ⟩   -   𝐛  𝐢    }         subscript  𝐚  𝐢   𝐬    subscript  𝐛  𝐢      \{\langle\mathbf{a_{i}},\mathbf{s}\rangle-\mathbf{b_{i}}\}   . If the samples are from an LWE distribution, then the results of this calculation will be distributed according   χ   χ   \chi   , but if the samples are uniformly random, these quantities will be distributed uniformly as well.  Solving search assuming decision  For the other direction, given a solver for the decision problem, the search version can be solved as follows: Recover   𝐬   𝐬   \mathbf{s}   one coordinate at a time. To obtain the first coordinate,    𝐬  1     subscript  𝐬  1    \mathbf{s}_{1}   , make a guess    k  ∈   Z  q       k   subscript  Z  q     k\in Z_{q}   , and do the following. Choose a number    r  ∈   ℤ  q       r   subscript  ℤ  q     r\in\mathbb{Z}_{q}   uniformly at random. Transform the given samples     {   (   𝐚  𝐢   ,   𝐛  𝐢   )   }   ⊂    ℤ  q  n   ×  𝕋          subscript  𝐚  𝐢    subscript  𝐛  𝐢        subscript   superscript  ℤ  n   q   𝕋     \{(\mathbf{a_{i}},\mathbf{b_{i}})\}\subset\mathbb{Z}^{n}_{q}\times\mathbb{T}   as follows. Calculate    {   (    𝐚  𝐢   +   (  r  ,  0  ,  …  ,  0  )    ,    𝐛  𝐢   +    (   r  k   )   /  q    )   }         subscript  𝐚  𝐢    r  0  normal-…  0       subscript  𝐛  𝐢       r  k   q       \{(\mathbf{a_{i}}+(r,0,\ldots,0),\mathbf{b_{i}}+(rk)/q)\}   . Send the transformed samples to the decision solver.  If the guess   k   k   k   was correct, the transformation takes the distribution    A   𝐬  ,  χ      subscript  A   𝐬  χ     A_{\mathbf{s},\chi}   to itself, and otherwise, since   q   q   q   is prime, it takes it to the uniform distribution. So, given a polynomial-time solver for the decision problem that errs with very small probability, since   q   q   q   is bounded by some polynomial in   n   n   n   , it only takes polynomial time to guess every possible value for   k   k   k   and use the solver to see which one is correct.  After obtaining    𝐬  1     subscript  𝐬  1    \mathbf{s}_{1}   , we follow an analogous procedure for each other coordinate    𝐬  j     subscript  𝐬  j    \mathbf{s}_{j}   . Namely, we transform our    𝐛  𝐢     subscript  𝐛  𝐢    \mathbf{b_{i}}   samples the same way, and transform our    𝐚  𝐢     subscript  𝐚  𝐢    \mathbf{a_{i}}   samples by calculating     𝐚  𝐢   +   (  0  ,  …  ,  r  ,  …  ,  0  )        subscript  𝐚  𝐢    0  normal-…  r  normal-…  0     \mathbf{a_{i}}+(0,\ldots,r,\ldots,0)   , where the   r   r   r   is in the    j   t  h      superscript  j    t  h     j^{th}   coordinate. 4  Peikert 5 showed that this reduction, with a small modification, works for any   q   q   q   that is a product of distinct, small (polynomial in   n   n   n   ) primes. The main idea is if    q  =    q  1    q  2   ⋯   q  t        q     subscript  q  1    subscript  q  2   normal-⋯   subscript  q  t      q=q_{1}q_{2}\cdots q_{t}   , for each    q  ℓ     subscript  q  normal-ℓ    q_{\ell}   , guess and check to see if    𝐬  j     subscript  𝐬  j    \mathbf{s}_{j}   is congruent to    0  mod   q  ℓ      modulo  0   subscript  q  normal-ℓ     0\mod q_{\ell}   , and then use the Chinese remainder theorem to recover    𝐬  j     subscript  𝐬  j    \mathbf{s}_{j}   .  Average case hardness  Regev 6 showed the Random self-reducibility of the LWE and DLWE problems for arbitrary   q   q   q   and   χ   χ   \chi   . Given samples    {   (   𝐚  𝐢   ,   𝐛  𝐢   )   }       subscript  𝐚  𝐢    subscript  𝐛  𝐢      \{(\mathbf{a_{i}},\mathbf{b_{i}})\}   from    A   𝐬  ,  χ      subscript  A   𝐬  χ     A_{\mathbf{s},\chi}   , it is easy to see that    {    (   𝐚  𝐢   ,    𝐛  𝐢   +   ⟨   𝐚  𝐢   ,  𝐭  ⟩    )   /  q   }         subscript  𝐚  𝐢      subscript  𝐛  𝐢     subscript  𝐚  𝐢   𝐭     q     \{(\mathbf{a_{i}},\mathbf{b_{i}}+\langle\mathbf{a_{i}},\mathbf{t}\rangle)/q\}   are samples from    A    𝐬  +  𝐭   ,  χ      subscript  A     𝐬  𝐭   χ     A_{\mathbf{s}+\mathbf{t},\chi}   .  So, suppose there was some set    𝒮  ⊂   ℤ  q  n       𝒮   superscript   subscript  ℤ  q   n     \mathcal{S}\subset\mathbb{Z}_{q}^{n}   such that      |  𝒮  |   /   |   ℤ  q  n   |    =    1  /  p   o  l  y   (  n  )            𝒮      superscript   subscript  ℤ  q   n         1  p   o  l  y  n     |\mathcal{S}|/|\mathbb{Z}_{q}^{n}|=1/poly(n)   , and for distributions    A    𝐬  ′   ,  χ      subscript  A    superscript  𝐬  normal-′   χ     A_{\mathbf{s^{\prime}},\chi}   , with     𝐬  ′   ←  𝒮     normal-←   superscript  𝐬  normal-′   𝒮    \mathbf{s^{\prime}}\leftarrow\mathcal{S}   , DLWE was easy.  Then there would be some distinguisher   𝒜   𝒜   \mathcal{A}   , who, given samples    {   (   𝐚  𝐢   ,   𝐛  𝐢   )   }       subscript  𝐚  𝐢    subscript  𝐛  𝐢      \{(\mathbf{a_{i}},\mathbf{b_{i}})\}   , could tell whether they were uniformly random or from    A    𝐬  ′   ,  χ      subscript  A    superscript  𝐬  normal-′   χ     A_{\mathbf{s^{\prime}},\chi}   . If we need to distinguish uniformly random samples from    A   𝐬  ,  χ      subscript  A   𝐬  χ     A_{\mathbf{s},\chi}   , where   𝐬   𝐬   \mathbf{s}   is chosen uniformly at random from    ℤ  q  n     superscript   subscript  ℤ  q   n    \mathbb{Z}_{q}^{n}   , we could simply try different values   𝐭   𝐭   \mathbf{t}   sampled uniformly at random from    ℤ  q  n     superscript   subscript  ℤ  q   n    \mathbb{Z}_{q}^{n}   , calculate    {    (   𝐚  𝐢   ,    𝐛  𝐢   +   ⟨   𝐚  𝐢   ,  𝐭  ⟩    )   /  q   }         subscript  𝐚  𝐢      subscript  𝐛  𝐢     subscript  𝐚  𝐢   𝐭     q     \{(\mathbf{a_{i}},\mathbf{b_{i}}+\langle\mathbf{a_{i}},\mathbf{t}\rangle)/q\}   and feed these samples to   𝒜   𝒜   \mathcal{A}   . Since   𝒮   𝒮   \mathcal{S}   comprises a large fraction of    ℤ  q  n     superscript   subscript  ℤ  q   n    \mathbb{Z}_{q}^{n}   , with high probability, if we choose a polynomial number of values for   𝐭   𝐭   \mathbf{t}   , we will find one such that     𝐬  +  𝐭   ∈  𝒮        𝐬  𝐭   𝒮    \mathbf{s}+\mathbf{t}\in\mathcal{S}   , and   𝒜   𝒜   \mathcal{A}   will successfully distinguish the samples.  Thus, no such   𝒮   𝒮   \mathcal{S}   can exist, meaning LWE and DLWE are (up to a polynomial factor) as hard in the average case as they are in the worst case.  Hardness results  Regev's result  For a n-dimensional lattice   L   L   L   , let smoothing parameter      η  ϵ    (  L  )        subscript  η  ϵ   L    \eta_{\epsilon}(L)   denote the smallest   s   s   s   such that      ρ   1  /  s     (    L  *   ∖   {  𝟎  }    )    ≤  ϵ         subscript  ρ    1  s       superscript  L     0     ϵ    \rho_{1/s}(L^{*}\setminus\{\mathbf{0}\})\leq\epsilon   where    L  *     superscript  L     L^{*}   is the dual of   L   L   L   and      ρ  α    (  x  )    =   e   -   π    (    |  x  |   /  α   )   2             subscript  ρ  α   x    superscript  e      π   superscript      x   α   2        \rho_{\alpha}(x)=e^{-\pi(|x|/\alpha)^{2}}   is extended to sets by summing over function values at each element in the set. Let    D   L  ,  r      subscript  D   L  r     D_{L,r}   denote the discrete Gaussian distribution on   L   L   L   of width   r   r   r   for a lattice   L   L   L   and real    r  >  0      r  0    r>0   . The probability of each    x  ∈  L      x  L    x\in L   is proportional to     ρ  r    (  x  )        subscript  ρ  r   x    \rho_{r}(x)   .  The discrete Gaussian sampling problem (DGS) is defined as follows: An instance of    D  G   S  ϕ       D  G   subscript  S  ϕ     DGS_{\phi}   is given by an   n   n   n   -dimensional lattice   L   L   L   and a number    r  ≥   ϕ   (  L  )        r    ϕ  L     r\geq\phi(L)   . The goal is to output a sample from    D   L  ,  r      subscript  D   L  r     D_{L,r}   . Regev shows that there is a reduction from    G  a  p  S  V   P   100   n   γ   (  n  )         G  a  p  S  V   subscript  P    100    n   γ  n      GapSVP_{100\sqrt{n}\gamma(n)}   to    D  G   S      n   γ   (  n  )    /  λ    (   L  *   )         D  G   subscript  S          n   γ  n   λ    superscript  L        DGS_{\sqrt{n}\gamma(n)/\lambda(L^{*})}   for any function    γ   (  n  )       γ  n    \gamma(n)   .  Regev then shows that there exists an efficient quantum algorithm for    D  G   S      2  n     η  ϵ    (  L  )    /  α        D  G   subscript  S          2  n     subscript  η  ϵ   L   α      DGS_{\sqrt{2n}\eta_{\epsilon}(L)/\alpha}   given access to an oracle for    L  W   E   q  ,   Ψ  α         L  W   subscript  E   q   subscript  normal-Ψ  α       LWE_{q,\Psi_{\alpha}}   for integer   q   q   q   and    α  ∈   (  0  ,  1  )       α   0  1     \alpha\in(0,1)   such that     α  q   >   2   n          α  q     2    n      \alpha q>2\sqrt{n}   . This implies the hardness for    L  W  E      L  W  E    LWE   . Although the proof of this assertion works for any   q   q   q   , for creating a cryptosystem, the   q   q   q   has to be polynomial in   n   n   n   .  Peikert's result  Peikert proves 7 that there is a probabilistic polynomial time reduction from the     G  a  p  S  V   P   ζ  ,  γ        G  a  p  S  V   subscript  P   ζ  γ      GapSVP_{\zeta,\gamma}    problem in the worst case to solving    L  W   E   q  ,   Ψ  α         L  W   subscript  E   q   subscript  normal-Ψ  α       LWE_{q,\Psi_{\alpha}}   using    p  o  l  y   (  n  )       p  o  l  y  n    poly(n)   samples for parameters    α  ∈   (  0  ,  1  )       α   0  1     \alpha\in(0,1)   ,     γ   (  n  )    ≥   n  /   (   α    log  n     )          γ  n     n    α      n        \gamma(n)\geq n/(\alpha\sqrt{\log{n}})   ,     ζ   (  n  )    ≥   γ   (  n  )          ζ  n     γ  n     \zeta(n)\geq\gamma(n)   and    q  ≥   (  ζ  /   n   )   ω    log  n    )     fragments  q    fragments  normal-(  ζ     n   normal-)   ω      n    normal-)    q\geq(\zeta/\sqrt{n})\omega\sqrt{\log{n}})   .  Use in Cryptography  The LWE problem serves as a versatile problem used in construction of several 8 9 10 11 cryptosystems. In 2005, Regev 12 showed that the decision version of LWE is hard assuming quantum hardness of the lattice problems     G  a  p  S  V   P  γ       G  a  p  S  V   subscript  P  γ     GapSVP_{\gamma}   (for   γ   γ   \gamma   as above) and    S  I  V   P  t       S  I  V   subscript  P  t     SIVP_{t}   with t=Õ(n/   α   α   \alpha   ). In 2009, Peikert 13 proved a similar result assuming only the classical hardness of the related problem     G  a  p  S  V   P   ζ  ,  γ        G  a  p  S  V   subscript  P   ζ  γ      GapSVP_{\zeta,\gamma}    . The disadvantage of Peikert's result is that it bases itself on a non-standard version of an easier (when compared to SIVP) problem GapSVP.  Public-key cryptosystem  Regev 14 proposed a public-key cryptosystem based on the hardness of the LWE problem. The cryptosystem as well as the proof of security and correctness are completely classical. The system is characterized by    m  ,  q     m  q    m,q   and a probability distribution   χ   χ   \chi   on   𝕋   𝕋   \mathbb{T}   . The setting of the parameters used in proofs of correctness and security is       q  ≥  2      q  2    q\geq 2   , a prime number between    n  2     superscript  n  2    n^{2}   and    2   n  2       2   superscript  n  2     2n^{2}   .      m  =    (   1  +  ϵ   )    (   n  +  1   )    log  q        m      1  ϵ     n  1     q      m=(1+\epsilon)(n+1)\log{q}   for an arbitrary constant   ϵ   ϵ   \epsilon         χ  =   Ψ   α   (  n  )         χ   subscript  normal-Ψ    α  n      \chi=\Psi_{\alpha(n)}   for     α   (  n  )    ∈   o   (    1  /   n     log  n    )          α  n     o      1    n      n       \alpha(n)\in o(1/\sqrt{n}\log{n})      The cryptosystem is then defined by:   Private Key : Private key is an    𝐬  ∈   ℤ  q  n       𝐬   subscript   superscript  ℤ  n   q     \mathbf{s}\in\mathbb{Z}^{n}_{q}   chosen uniformly at random.  Public Key : Choose   m   m   m   vectors      a  1   ,  …  ,   a  m    ∈   ℤ  q  n         subscript  a  1   normal-…   subscript  a  m     subscript   superscript  ℤ  n   q     a_{1},\ldots,a_{m}\in\mathbb{Z}^{n}_{q}   uniformly and independently. Choose error offsets      e  1   ,  …  ,   e  m    ∈  𝕋        subscript  e  1   normal-…   subscript  e  m    𝕋    e_{1},\ldots,e_{m}\in\mathbb{T}   independently according to   χ   χ   \chi   . The public key consists of     (   a  i   ,   b  i   =   ⟨   a  i   ,  𝐬  ⟩   /  q  +   e  i   )    i  =  1   m     subscript   superscript   fragments  normal-(   subscript  a  i   normal-,   subscript  b  i     fragments  normal-⟨   subscript  a  i   normal-,  s  normal-⟩    q    subscript  e  i   normal-)   m     i  1     (a_{i},b_{i}=\langle a_{i},\mathbf{s}\rangle/q+e_{i})^{m}_{i=1}     Encryption : The encryption of a bit    x  ∈   {  0  ,  1  }       x   0  1     x\in\{0,1\}   is done by choosing a random subset   S   S   S   of    [  m  ]     delimited-[]  m    [m]   and then defining    E  n  c   (  x  )       E  n  c  x    Enc(x)   as    (    ∑   i  ∈  S     a  i    ,    x  /  2   +    ∑   i  ∈  S     b  i     )       subscript     i  S     subscript  a  i        x  2     subscript     i  S     subscript  b  i       (\sum_{i\in S}a_{i},x/2+\sum_{i\in S}b_{i})     Decryption : The decryption of    (  a  ,  b  )     a  b    (a,b)   is   0   0    if    b  -    ⟨  a  ,  𝐬  ⟩   /  q       b     a  𝐬   q     b-\langle a,\mathbf{s}\rangle/q   is closer to   0   0    than to    1  2      1  2    \frac{1}{2}   , and   1   1   1   otherwise.   The proof of correctness follows from choice of parameters and some probability analysis. The proof of security is by reduction to the decision version of LWE : an algorithm for distinguishing between encryptions (with above parameters) of   0   0    and   1   1   1   can be used to distinguish between    A   s  ,  χ      subscript  A   s  χ     A_{s,\chi}   and the uniform distribution over     ℤ  q  n   ×   ℤ  q        subscript   superscript  ℤ  n   q    subscript  ℤ  q     \mathbb{Z}^{n}_{q}\times\mathbb{Z}_{q}     CCA-secure cryptosystem  Peikert 15 proposed a system that is secure even against any chosen-ciphertext attack .  See also   Lattice-based cryptography  Ring Learning with Errors Key Exchange   References    "  Category:Machine learning  Category:Cryptography     Chris Peikert, “Public-key cryptosystems from the worst-case shortest vector problem: extended abstract,” in Proceedings of the 41st annual ACM symposium on Theory of computing (Bethesda, MD, USA: ACM, 2009), 333-342, http://portal.acm.org/citation.cfm?id=1536414.1536461 . ↩  ↩         Chris Peikert and Brent Waters, “Lossy trapdoor functions and their applications,” in Proceedings of the 40th annual ACM symposium on Theory of computing (Victoria, British Columbia, Canada: ACM, 2008), 187-196, http://portal.acm.org/citation.cfm?id=1374406 . ↩  Craig Gentry, Chris Peikert, and Vinod Vaikuntanathan, “Trapdoors for hard lattices and new cryptographic constructions,” in Proceedings of the 40th annual ACM symposium on Theory of computing (Victoria, British Columbia, Canada: ACM, 2008), 197-206, http://portal.acm.org/citation.cfm?id=1374407 . ↩         