   Matrix regularization      Matrix regularization   In the field of statistical learning theory , matrix regularization generalizes notions of vector regularization to cases where the object to be learned is a matrix. The purpose of regularization is to enforce conditions, for example sparsity or smoothness, that can produce stable predictive functions. For example, in the more common vector framework, Tikhonov regularization optimizes over        min  x     ∥    A  x   -  y   ∥   2    +   λ    ∥  x  ∥   2          subscript   x    superscript   norm      A  x   y    2      λ   superscript   norm  x   2      \min_{x}\|Ax-y\|^{2}+\lambda\|x\|^{2}     to find a vector,   x   x   x   , that is a stable solution to the regression problem. When the system is described by a matrix rather than a vector, this problem can be written as        min  X     ∥    A  X   -  Y   ∥   2    +   λ    ∥  X  ∥   2          subscript   X    superscript   norm      A  X   Y    2      λ   superscript   norm  X   2      \min_{X}\|AX-Y\|^{2}+\lambda\|X\|^{2}     where the vector norm enforcing a regularization penalty on   x   x   x   has been extended to a matrix norm on   X   X   X   .  Matrix Regularization has applications in matrix completion , multivariate regression , and multi-task learning. Ideas of feature and group selection can also be extended to matrices, and these can be generalized to the nonparametric case of multiple kernel learning .  Basic definition  Consider a matrix   W   W   W   to be learned from a set of examples,    S  =   (   X  i  t   ,   y  i  t   )       S    superscript   subscript  X  i   t    superscript   subscript  y  i   t      S=(X_{i}^{t},y_{i}^{t})   , where   i   i   i   goes from   1   1   1   to   n   n   n   , and   t   t   t   goes from   1   1   1   to   T   T   T   . Let each input matrix    X  i     subscript  X  i    X_{i}   be     ∈   ℝ   D  T        absent   superscript  ℝ    D  T      \in\mathbb{R}^{DT}   , and let   W   W   W   be of size    D  ×  T      D  T    D\times T   . A general model for the output   y   y   y   can be posed as       y  i  t   =    ⟨  W  ,   X  i  t   ⟩   F        superscript   subscript  y  i   t    subscript   W   superscript   subscript  X  i   t    F     y_{i}^{t}=\langle W,X_{i}^{t}\rangle_{F}     where the inner product is the Frobenius inner product . For different applications the matrices    X  i     subscript  X  i    X_{i}   will have different forms, 1 but for each of these the optimization problem to infer   W   W   W   can be written as         min   W  ∈  ℋ    E    (  W  )    +   R   (  W  )            subscript     W  ℋ    E   W     R  W     \min_{W\in\mathcal{H}}E(W)+R(W)     where   E   E   E   defines the empirical error for a given   W   W   W   , and    R   (  W  )       R  W    R(W)   is a matrix regularization penalty. The function    R   (  W  )       R  W    R(W)   is typically chosen to be convex, and is often selected to enforce sparsity (using    ℓ  1     superscript  normal-ℓ  1    \ell^{1}   -norms) and/or smoothness (using    ℓ  2     superscript  normal-ℓ  2    \ell^{2}   -norms). Finally,   W   W   W   is in the space of matrices,   ℋ   ℋ   \mathcal{H}   , with Forbenius inner product,.  General applications  Matrix completion  In the problem of matrix completion , the matrix    X  i  t     superscript   subscript  X  i   t    X_{i}^{t}   takes the form       X  i  t   =    e  t   ⊗   e  i  ′         superscript   subscript  X  i   t    tensor-product   subscript  e  t    superscript   subscript  e  i   normal-′      X_{i}^{t}=e_{t}\otimes e_{i}^{\prime}     where     (   e  t   )   t     subscript   subscript  e  t   t    (e_{t})_{t}   and     (   e  i  ′   )   i     subscript   superscript   subscript  e  i   normal-′   i    (e_{i}^{\prime})_{i}   are the canonical basis in    ℝ  T     superscript  ℝ  T    \mathbb{R}^{T}   and    ℝ  D     superscript  ℝ  D    \mathbb{R}^{D}   . In this case the role of the Frobenius inner product is to select individual elements,    w  i  t     superscript   subscript  w  i   t    w_{i}^{t}   , from the matrix   W   W   W   . Thus, the output,   y   y   y   , is a sampling of entries from the matrix   W   W   W   .  The problem of reconstructing   W   W   W   from a small set of sampled entries is possible only under certain restrictions on the matrix, and these restrictions can be enforced by a regularization function. For example, it might be assumed that   W   W   W   is low-rank, in which case the regularization penalty can take the form of a nuclear norm. 2       R   (  W  )    =   λ    ∥  W  ∥   *    =   λ   ∑   |   σ  i   |             R  W     λ   subscript   norm  W             λ       subscript  σ  i         R(W)=\lambda\|W\|_{*}=\lambda\sum|\sigma_{i}|     where    σ  i     subscript  σ  i    \sigma_{i}   , with   i   i   i   from   1   1   1   to     min  D   ,  T       D   T    \min D,T   , are the singular values of   W   W   W   .  Multivariate regression  Models used in multivariate regression are parameterized by a matrix of coefficients. In the Frobenius inner product above, each matrix   X   X   X   is       X  i  t   =    e  t   ⊗    x  i          superscript   subscript  X  i   t    tensor-product   subscript  e  t    subscript  x  i      X_{i}^{t}=e_{t}\otimes x_{i}\,     such that the output of the inner product is the dot product of one row of the input with one column of the coefficient matrix. The familiar form of such models is      Y  =    X  W   +   b        Y      X  W   b     Y=XW+b\,     Many of the vector norms used in single variable regression can be extended to the multivariate case. One example is the squared Frobenius norm, which can be viewed as an    ℓ  2     superscript  normal-ℓ  2    \ell^{2}   -norm acting either entrywise, or on the singular values of the matrix:        R   (  W  )    =   λ    ∥  W  ∥   F  2    =   λ   ∑   ∑    |   w   i  j    |   2      =   λ   Tr   (    W  *   W   )     =   λ   ∑   σ  i  2      .          R  W     λ   superscript   subscript   norm  W   F   2           λ       superscript     subscript  w    i  j     2             λ   Tr     superscript  W    W            λ     superscript   subscript  σ  i   2        R(W)=\lambda\|W\|_{F}^{2}=\lambda\sum\sum|w_{ij}|^{2}=\lambda\operatorname{Tr}%
 (W^{*}W)=\lambda\sum\sigma_{i}^{2}.     In the multivariate case the effect of regularizing with the Frobenius norm is the same as the vector case; very complex models will have larger norms, and, thus, will be penalized more.  Multi-task learning  The setup for multi-task learning is almost the same as the setup for multivariate regression. The primary difference is that the input variables are also indexed by task (columns of   Y   Y   Y   ). The representation with the Frobenius inner product is then        X  i  t   =    e  t   ⊗   x  i  t     .       superscript   subscript  X  i   t    tensor-product   subscript  e  t    superscript   subscript  x  i   t      X_{i}^{t}=e_{t}\otimes x_{i}^{t}.     The role of matrix regularization in this setting can be the same as in multivariate regression, but matrix norms can also be used to couple learning problems across tasks. In particular, note that for the optimization problem        min  W     ∥    X  W   -  Y   ∥   2  2    +   λ    ∥  W  ∥   2  2           subscript   W    superscript   subscript   norm      X  W   Y    2   2      λ   superscript   subscript   norm  W   2   2      \min_{W}\|XW-Y\|_{2}^{2}+\lambda\|W\|_{2}^{2}     the solutions corresponding to each column of   Y   Y   Y   are decoupled. That is, the same solution can be found by solving the joint problem, or by solving an isolated regression problem for each column. The problems can be coupled by adding an additional regulatization penalty on the covariance of solutions        min   W  ,  Ω      ∥    X  W   -  Y   ∥   2  2    +    λ  1     ∥  W  ∥   2  2    +    λ  2    Tr   (    W  T    Ω   -  1    W   )            subscript    W  normal-Ω     superscript   subscript   norm      X  W   Y    2   2       subscript  λ  1    superscript   subscript   norm  W   2   2       subscript  λ  2    Tr     superscript  W  T    superscript  normal-Ω    1    W       \min_{W,\Omega}\|XW-Y\|_{2}^{2}+\lambda_{1}\|W\|_{2}^{2}+\lambda_{2}%
 \operatorname{Tr}(W^{T}\Omega^{-1}W)     where   Ω   normal-Ω   \Omega   models the relationship between tasks. This scheme can be used to both enforce similarity of solutions across tasks, and to learn the specific structure of task similarity by alternating between optimizations of   W   W   W   and   Ω   normal-Ω   \Omega   . 3 When the relationship between tasks is known to lie on a graph, the Laplacian matrix of the graph can be used to couple the learning problems.  Spectral regularization  Regularization by spectral filtering has been used to find stable solutions to problems such as those discussed above by addressing ill-posed matrix inversions (see for example Filter function for Tikhonov regularization ). In many cases the regularization function acts on the input (or kernel) to ensure a bounded inverse by eliminating small singular values, but it can also be useful to have spectral norms that act on the matrix that is to be learned.  There are a number of matrix norms that act on the singular values of the matrix. Frequently used examples include the Schatten p-norms , with p = 1 or 2. For example, matrix regularization with a Schatten 1-norm, also called the nuclear norm, can be used to enforce sparsity in the spectrum of a matrix. This has been used in the context of matrix completion when the matrix in question is believed to have a restricted rank. 4 In this case the optimization problem becomes:      min    ∥  W  ∥   *         subscript   norm  W       \min\|W\|_{*}   subject to      W   i  ,  j    =   Y   i  j     .       subscript  W   i  j     subscript  Y    i  j      W_{i,j}=Y_{ij}.     Spectral Regularization is also used to enforce a reduced rank coefficient matrix in multivariate regression. 5 In this setting, a reduced rank coefficient matrix can be found by keeping just the top   n   n   n   singular values, but this can be extended to keep any reduced set of singular values and vectors.  Structured sparsity  Sparse optimization has become the focus of much research interest as a way to find solutions that depend on a small number of variables (see e.g. the Lasso method ). In principle, entry-wise sparsity can be enforced by penalizing the entry-wise    ℓ  0     superscript  normal-ℓ  0    \ell^{0}   -norm of the matrix, but the    ℓ  0     superscript  normal-ℓ  0    \ell^{0}   -norm is not convex. In practice this can be implemented by convex relaxation to the    ℓ  1     superscript  normal-ℓ  1    \ell^{1}   -norm. While entry-wise regularization with an    ℓ  1     superscript  normal-ℓ  1    \ell^{1}   -norm will find solutions with a small number of nonzero elements, applying an    ℓ  1     superscript  normal-ℓ  1    \ell^{1}   -norm to different groups of variables can enforce structure in the sparsity of solutions. 6  The most straightforward example of structured sparsity uses the    ℓ   p  ,  q      subscript  normal-ℓ   p  q     \ell_{p,q}   norm with    p  =  2      p  2    p=2   and    q  =  1      q  1    q=1   :         ∥  W  ∥    2  ,  1    =   ∑    ∥   w  i   ∥   2     .       subscript   norm  W    2  1       subscript   norm   subscript  w  i    2      \|W\|_{2,1}=\sum\|w_{i}\|_{2}.     For example, the    ℓ   2  ,  1      subscript  normal-ℓ   2  1     \ell_{2,1}   norm is used in multi-task learning to group features across tasks, such that all the elements in a given row of the coefficient matrix can be forced to zero as a group. 7 The grouping effect is achieved by taking the    ℓ  2     superscript  normal-ℓ  2    \ell^{2}   -norm of each row, and then taking the total penalty to be the sum of these row-wise norms. This regularization results in rows that will tend to be all zeros, or dense. The same type of regularization can be used to enforce sparsity column-wise by taking the    ℓ  2     superscript  normal-ℓ  2    \ell^{2}   -norms of each column.  More generally, the    ℓ   2  ,  1      subscript  normal-ℓ   2  1     \ell_{2,1}   norm can be applied to arbitrary groups of variables:       R   (  W  )    =   λ    ∑  g  G      ∑  j   |   G  g   |      |   w  g  j   |   2       =   λ    ∑  g  G     ∥   w  g   ∥   g             R  W     λ    superscript   subscript   g   G       superscript   subscript   j      subscript  G  g      superscript     superscript   subscript  w  g   j    2              λ    superscript   subscript   g   G    subscript   norm   subscript  w  g    g        R(W)=\lambda\sum_{g}^{G}\sqrt{\sum_{j}^{|G_{g}|}|w_{g}^{j}|^{2}}=\lambda\sum_{%
 g}^{G}\|w_{g}\|_{g}     where the index   g   g   g   is across groups of variables, and    |   G  g   |       subscript  G  g     |G_{g}|   indicates the cardinality of group   g   g   g   .  Algorithms for solving these group sparsity problems extend the more well-known Lasso and group Lasso methods by allowing overlapping groups, for example, and have been implemented via matching pursuit : 8 and proximal gradient methods . 9 By writing the proximal gradient with respect to a given coefficient,    w  g  i     superscript   subscript  w  g   i    w_{g}^{i}   , it can be seen that this norm enforces a group-wise soft threshold 10       prox   λ  ,   R  g       (   w  g   )   i   =   (   w  g  i   -  λ    w  g  i     ∥   w  g   ∥   g    )    𝟏     ∥   w  g   ∥   g   ≥  λ    .     fragments   subscript  prox   λ   subscript  R  g      superscript   fragments  normal-(   subscript  w  g   normal-)   i     fragments  normal-(   superscript   subscript  w  g   i    λ     superscript   subscript  w  g   i    subscript   norm   subscript  w  g    g    normal-)    subscript  1     subscript   norm   subscript  w  g    g   λ    normal-.    \operatorname{prox}_{\lambda,R_{g}}(w_{g})^{i}=\left(w_{g}^{i}-\lambda\frac{w_%
 {g}^{i}}{\|w_{g}\|_{g}}\right)\mathbf{1}_{\|w_{g}\|_{g}\geq\lambda}.     where    𝟏     ∥   w  g   ∥   g   ≥  λ      subscript  1     subscript   norm   subscript  w  g    g   λ     \mathbf{1}_{\|w_{g}\|_{g}\geq\lambda}   is the indicator function for group norms     ≥  λ      absent  λ    \geq\lambda   .  Thus, using    ℓ   2  ,  1      subscript  normal-ℓ   2  1     \ell_{2,1}   norms it is straightforward to enforce structure in the sparsity of a matrix either row-wise, column-wise, or in arbitrary blocks. By enforcing group norms on blocks in multivariate or multi-task regression, for example, it is possible to find groups of input and output variables, such that defined subsets of output variables (columns in the matrix   Y   Y   Y   ) will depend on the same sparse set of input variables.  Multiple kernel selection  The ideas of structured sparsity and feature selection can be extended to the nonparametric case of multiple kernel learning . 11 This can be useful when there are multiple types of input data (color and texture, for example) with different appropriate kernels for each, or when the appropriate kernel is unknown. If there are two kernels, for example, with feature maps   A   A   A   and   B   B   B   that lie in corresponding reproducing kernel Hilbert spaces      ℋ  𝒜   ,   ℋ  ℬ       subscript  ℋ  𝒜    subscript  ℋ  ℬ     \mathcal{H_{A}},\mathcal{H_{B}}   , then a larger space,    ℋ  𝒟     subscript  ℋ  𝒟    \mathcal{H_{D}}   , can be created as the sum of two spaces:       ℋ  𝒟   :    f  =   h  +   h  ′     ;    h  ∈   ℋ  𝒜    ,    h  ′   ∈   ℋ  ℬ         normal-:   subscript  ℋ  𝒟    formulae-sequence    f    h   superscript  h  normal-′      formulae-sequence    h   subscript  ℋ  𝒜       superscript  h  normal-′    subscript  ℋ  ℬ        \mathcal{H_{D}}:f=h+h^{\prime};h\in\mathcal{H_{A}},h^{\prime}\in\mathcal{H_{B}}     assuming linear independence in   A   A   A   and   B   B   B   . In this case the    ℓ   2  ,  1      subscript  normal-ℓ   2  1     \ell_{2,1}   -norm is again the sum of norms:        ∥  f  ∥     ℋ  𝒟   ,  1    =     ∥  h  ∥    ℋ  𝒜    +    ∥   h  ′   ∥    ℋ  ℬ          subscript   norm  f     subscript  ℋ  𝒟   1       subscript   norm  h    subscript  ℋ  𝒜     subscript   norm   superscript  h  normal-′     subscript  ℋ  ℬ       \|f\|_{\mathcal{H_{D}},1}=\|h\|_{\mathcal{H_{A}}}+\|h^{\prime}\|_{\mathcal{H_{%
 B}}}     Thus, by choosing a matrix regularization function as this type of norm, it is possible to find a solution that is sparse in terms of which kernels are used, but dense in the coefficient of each used kernel. Multiple kernel learning can also be used as a form of nonlinear variable selection, or as a model aggregation technique (e.g. by taking the sum of squared norms and relaxing sparsity constraints). For example, each kernel can be taken to be the Gaussian kernel with a different width.  References  "  Category:Matrices  Category:Vectors     Lorenzo Rosasco, Tomaso Poggio, "A Regularization Tour of Machine Learning — MIT-9.520 Lectures Notes" Manuscript, Dec. 2014. ↩  Exact Matrix Completion via Convex Optimization by Candès, Emmanuel J. and Recht, Benjamin (2009) in Foundations of Computational Mathematics, 9 (6). pp. 717–772. ISSN 1615-3375 ↩  Zhang and Yeung. A Convex Formulation for Learning Task Relationships in Multi-Task Learning. Proceedings of the Twenty-Sixth Conference on Uncertainty in Artificial Intelligence (UAI2010) ↩   Alan Izenman. Reduced Rank Regression for the Multivariate Linear Model. Journal of Multivariate Analysis 5,248-264(1975) ↩  Kakade, Shalev-Shwartz and Tewari. Regularization Techniques for Learning with Matrices. Journal of Machine Learning Research 13 (2012) 1865-1890. ↩  A. Argyriou, T. Evgeniou, and M. Pontil. Convex multi-task feature learning. Machine Learning, 73(3):243–272, 2008. ↩  Huang, Zhang, and Metaxas. Learning with Structured Sparsity. Journal of Machine Learning Research 12 (2011) 3371-3412. ↩  Chen et. al. Smoothing Proximal Gradient Method for General Structured Sparse Regression. The Annals of Applied Statistics, 2012, Vol. 6, No. 2, 719–752 DOI: 10.1214/11-AOAS514 ↩   Sonnenburg, Ratsch, Schafer AND Scholkopf. Large Scale Multiple Kernel Learning. Journal of Machine Learning Research 7 (2006) 1531–1565. ↩     