   David Shmoys      David Shmoys   David Bernard Shmoys (born 1959) is a Professor in the School of Operations Research and Information Engineering and the Department of Computer Science at Cornell University . He obtained his Ph.D. from the University of California, Berkeley in 1984. His major focus has been in the design and analysis of algorithms for discrete optimization problems.  In particular, his work has highlighted the role of linear programming in the design of approximation algorithms for NP-hard problems. He is known for his pioneering research on providing first constant factor performance guarantee for several scheduling and clustering problems including the k-center and k-median problems and the generalized assignment problem. Polynomial-time approximation schemes that he developed for scheduling problems have found applications in many subsequent works. His current research includes stochastic optimization , computational sustainability and optimization techniques in computational biology. Shmoys is married to Éva Tardos , who is a Jacob Gould Schurman Professor of Computer Science at Cornell University.  Key contributions  Two of his key contributions are   Constant factor approximation algorithm for the Generalized Assignment Problem and Unrelated Parallel Machine Scheduling .    Constant factor approximation algorithm for k-Medians and Facility location problem .   These contributions are described briefly below:  Generalized Assignment Problem & Unrelated Parallel Machine Scheduling  The paper 1 is a joint work by David Shmoys and Eva Tardos.  The generalized assignment problem can be viewed as the following problem of scheduling unrelated parallel machine with costs. Each of   n   n   n   independent jobs (denoted   J   J   J   ) have to be processed by exactly one of   m   m   m   unrelated parallel machines (denoted   M   M   M   ). Unrelated implies same job might take different amount of processing time on different machines. Job   j   j   j   takes    p   i  ,  j      subscript  p   i  j     p_{i,j}   time units when processed by machine   i   i   i   and incurs a cost     c   i  ,  j    ,  i  =  1  ,  2  ,  .  .  ,  m  ;  j  =  1  ,  2  ,  .  .  ,  n  ;  n  ≥  m     fragments   subscript  c   i  j    normal-,  i   1  normal-,  2  normal-,  normal-.  normal-.  normal-,  m  normal-;  j   1  normal-,  2  normal-,  normal-.  normal-.  normal-,  n  normal-;  n   m    c_{i,j},i=1,2,..,m;j=1,2,..,n;n\geq m   . Given   C   C   C   and     T  i   ,  i  =  1  ,  2  ,  .  .  ,  m     fragments   subscript  T  i   normal-,  i   1  normal-,  2  normal-,  normal-.  normal-.  normal-,  m    T_{i},i=1,2,..,m   , we wish to decide if there exists a schedule with total cost at most   C   C   C   such that for each machine   i   i   i   its load, the total processing time required for the jobs assigned to it is at most     T  i   ,  i  =  1  ,  2  ,  .  .  ,  m     fragments   subscript  T  i   normal-,  i   1  normal-,  2  normal-,  normal-.  normal-.  normal-,  m    T_{i},i=1,2,..,m   . By scaling the processing times, we can assume, without loss of generality, that the machine load bounds satisfy     T  1   =   T  2   =  .  .  =   T  m   =  T     fragments   subscript  T  1     subscript  T  2    normal-.  normal-.    subscript  T  m    T    T_{1}=T_{2}=..=T_{m}=T   . ``In other words, generalized assignment problem is to find a schedule of minimum cost subject to the constraint that the makespan, that the maximum machine load is at most   T   T   T   ".  The work of Shmoys with Lenstra and Tardos cited here 2 gives a 2 approximation algorithm for the unit cost case. The algorithm is based on a clever design of linear program using parametric pruning and then rounding an extreme point solution of the linear program deterministically. Algorithm for the generalized assignment problem is based on a similar LP through parametric pruning and then using a new rounding technique on a carefully designed bipartite graph. We now state the LP formulation and briefly describe the rounding technique.  We guess the optimum value of makespan   T   T   T   and write the following LP. This technique is known as parametric pruning.      L  P   (  T  )   :  :   ∑   i  =  1   m    ∑   j  =  1   n    c   i  j     x   i  j    ≤  C     fragments  L  P   fragments  normal-(  T  normal-)   normal-:  normal-:   superscript   subscript     i  1    m    superscript   subscript     j  1    n    subscript  c    i  j     subscript  x    i  j     C    LP(T)::\sum_{i=1}^{m}\sum_{j=1}^{n}c_{ij}x_{ij}\leq C   ;           ∑   i  =  1   m    x   i  j     =  1    j  =   1  ,  …  ,  n       formulae-sequence      superscript   subscript     i  1    m    subscript  x    i  j     1     j   1  normal-…  n      \sum_{i=1}^{m}x_{ij}=1\qquad j=1,\ldots,n   ;         ∑   i  =  1   m     p   i  j     x   i  j      ≤  T    i  =   1  ,  …  ,  m       formulae-sequence      superscript   subscript     i  1    m      subscript  p    i  j     subscript  x    i  j      T     i   1  normal-…  m      \sum_{i=1}^{m}p_{ij}x_{ij}\leq T\qquad i=1,\ldots,m   ;        x   i  j    ≥  0     i  =   1  ,  …  ,  m    ,   j  =   1  ,  …  ,  n        formulae-sequence     subscript  x    i  j    0    formulae-sequence    i   1  normal-…  m      j   1  normal-…  n       x_{ij}\geq 0\qquad i=1,\ldots,m,\quad j=1,\ldots,n   ;        x   i  j    =   0  if       p   i  j    ≥  T   ,    i  =   1  ,  …  ,  m    ,   j  =   1  ,  …  ,  n         formulae-sequence     subscript  x    i  j     0  if     formulae-sequence     subscript  p    i  j    T    formulae-sequence    i   1  normal-…  m      j   1  normal-…  n        x_{ij}=0\qquad\text{if}\qquad p_{ij}\geq T,\qquad i=1,\ldots,m,\quad j=1,%
 \ldots,n   ;     The obtained LP solution is then rounded to an integral solution as follows. A weighted bipartite graph    G  =   (   W  ∪  V   ,  E  )       G     W  V   E     G=(W\cup V,E)   is constructed. One side of the bipartite graph contains the job nodes,    W  =   {   w  j   |   j  ∈  J   }       W   conditional-set   subscript  w  j     j  J      W=\{w_{j}|j\in J\}   , and the other side contains several copies of each machine node,    V  =   {   v   i  ,  s    |  i  =  1  ,  2  ,  .  .  ,  m  ;  s  =  1  ,  2  ,  .  .  ,   k  i   }      fragments  V    fragments  normal-{   subscript  v   i  s    normal-|  i   1  normal-,  2  normal-,  normal-.  normal-.  normal-,  m  normal-;  s   1  normal-,  2  normal-,  normal-.  normal-.  normal-,   subscript  k  i   normal-}     V=\{v_{i,s}|i=1,2,..,m;s=1,2,..,k_{i}\}   , where     k  i   =   ⌈    ∑  j    x   i  j     ⌉        subscript  k  i       subscript   j    subscript  x    i  j        k_{i}=\lceil\sum_{j}x_{ij}\rceil   . To construct the edges to machine nodes corresponding to say machine   i   i   i   , first jobs are arranged in decreasing order of processing time    p   i  j      subscript  p    i  j     p_{ij}   . For simplicity, suppose,     p   i  1    ≥   p   i  2    ≥  …  ≥   p   i  n           subscript  p    i  1     subscript  p    i  2         normal-…        subscript  p    i  n       p_{i1}\geq p_{i2}\geq\ldots\geq p_{in}   . Now find the minimum index    j  1     subscript  j  1    j_{1}   , such that      ∑  i   j  1     x   i  j     ≥  1        superscript   subscript   i    subscript  j  1     subscript  x    i  j     1    \sum_{i}^{j_{1}}x_{ij}\geq 1   . Include in   E   E   E   all the edges    (   w  j   ,   v   i  1    ,  j  =  1  ,  2  ,  .  .  ,   j  1   -  1  )     fragments  normal-(   subscript  w  j   normal-,   subscript  v    i  1    normal-,  j   1  normal-,  2  normal-,  normal-.  normal-.  normal-,   subscript  j  1    1  normal-)    (w_{j},v_{i1},j=1,2,..,j_{1}-1)   with nonzero    x   i  j      subscript  x    i  j     x_{ij}   and set their weights to     x    v   i  1    j   ′   =   x   i  j         subscript   superscript  x  normal-′      subscript  v    i  1    j     subscript  x    i  j      x^{\prime}_{v_{i1}j}=x_{ij}   . Create the edge    (   w   j  1    ,   v   i  1    )      subscript  w   subscript  j  1     subscript  v    i  1      (w_{j_{1}},v_{i1})   and set its weight to     x    v   i  1     j  1    ′   =   1  -    ∑   i  =  1     j  1   -  1     x    v   i  1    j   ′          subscript   superscript  x  normal-′      subscript  v    i  1     subscript  j  1       1    superscript   subscript     i  1       subscript  j  1   1     subscript   superscript  x  normal-′      subscript  v    i  1    j        x^{\prime}_{v_{i1}j_{1}}=1-\sum_{i=1}^{j_{1}-1}x^{\prime}_{v_{i1}j}   . This ensures that the total weight of the edges incident on the vertex    v   i  1      subscript  v    i  1     v_{i1}   is at most 1. If     x    v   i  1     j  1    ′   <   x   i   j  1          subscript   superscript  x  normal-′      subscript  v    i  1     subscript  j  1      subscript  x    i   subscript  j  1       x^{\prime}_{v_{i1}j_{1}}   , then create an edge    (   w   j  1    ,   v   i  2    )      subscript  w   subscript  j  1     subscript  v    i  2      (w_{j_{1}},v_{i2})   with weight     x    v   i  2     j  1    ′   =    x   i  j    -   x    v   i  1     j  1    ′         subscript   superscript  x  normal-′      subscript  v    i  2     subscript  j  1        subscript  x    i  j     subscript   superscript  x  normal-′      subscript  v    i  1     subscript  j  1        x^{\prime}_{v_{i2}j_{1}}=x_{ij}-x^{\prime}_{v_{i1}j_{1}}   . Continue with assigning edges to    v   i  2      subscript  v    i  2     v_{i2}   in a similar way.  In the bipartite graph thus created, each job node in   W   W   W   has a total edge weight of 1 incident on it, and each machine node in   V   V   V   has edges with total weight at most 1 incident on it. Thus the vector    x  ′     superscript  x  normal-′    x^{\prime}   is an instance of a fractional matching on   G   G   G   and thus it can be rounded to obtain an integral matching of same cost.  Now considering the ordering of processing times of the jobs on the machines nodes during construction of   G   G   G   and using an easy charging argument, the following theorem can be proved:  Theorem: If    L  P   (  T  )       L  P  T    LP(T)   has a feasible solution then a schedule can be constructed with makespan    T  +   m  a   x   i  ,  j     p   i  ,  j         T    m  a   subscript  x   i  j     subscript  p   i  j       T+max_{i,j}p_{i,j}   and cost   C   C   C   .  Since     m  a   x   i  ,  j     p   i  ,  j     ≤  T        m  a   subscript  x   i  j     subscript  p   i  j     T    max_{i,j}p_{i,j}\leq T   , a 2 approximation is obtained.  K-medians and Facility Location Problem  The paper 3 is a joint work by Moses Charikar , Sudipto Guha , Éva Tardos and David Shmoys. They obtain a    6   2  3       6    2  3     6\frac{2}{3}   approximation to the metric k medians problem. This was the first paper to break the previously best known    O   (   log    k    log   log  k      )       O      k      k        O(\log{k}\ \log{\log{k}})   approximation.  Shmoys has also worked extensively on the facility location problem. His recent results include obtaining a   3   3   3   approximation algorithm for the capacitated facility location problem. The joint work with Fabian Chudak , 4 has resulted in improving the previous known   5.69   5.69   5.69   approximation for the same problem. Their algorithm is based on a variant of randomized rounding called the randomized rounding with a backup, since a backup solution is incorporated to correct for the fact that the ordinary randomized rounding rarely generates a feasible solution to the associated set covering problem.  For the uncapacitated version of the facility location problem, again in a joint work with Chudak 5 he obtained a     (   1  +   2  /  e    )   ≈  1.736        1    2  e    1.736    (1+2/e)\approx 1.736   -approximation algorithm which was a significant improvement on the previously known approximation guarantees. The improved algorithm works by rounding an optimal fractional solution of a linear programming relaxation and using the properties of the optimal solutions of the linear program and a generalization of a decomposition technique.  Awards & honors  David Shmoys is an ACM Fellow [ http://fellows.acm.org/fellow_citation.cfm?id=2563864&srt; ;=all]. He received College of Engineering Sonny Yau Excellence in Teaching Award three times and has been awarded NSF Presidential Young Investigator Award.  External links   David Shmoys's home page  Éva Tardos's home page   References    "  Category:1959 births  Category:Living people  Category:Cornell University faculty  Category:20th-century American mathematicians  Category:21st-century American mathematicians  Category:Theoretical computer scientists  Category:Fellows of the Society for Industrial and Applied Mathematics     ↩  ↩  ↩  ↩  ↩     