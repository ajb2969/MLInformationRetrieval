   Dissipative particle dynamics      Dissipative particle dynamics  '''Dissipative particle dynamics (DPD)''' is a stochastic simulation technique for simulating the dynamic and rheological properties of simple and complex fluids. It was initially devised by Hoogerbrugge and Koelman P. J. Hoogerbrugge and J. M. V. A. Koelman. Simulating microscopic hydrodynamic phenomena with dissipative particle dynamics. Europhysics Letters, 19(3):155–160, JUN 1 1992 J. M. V. A. Koelman and P. J. Hoogerbrugge. Dynamic simulations of hard-sphere suspensions under steady shear. Europh ysics Letters, 21(3):363–368, JAN 20 1993 to avoid the lattice artifacts of the so-called lattice gas automata and to tackle hydrodynamic time and space scales beyond those available with molecular dynamics (MD). It was subsequently reformulated and slightly modified by P. Español  1 to ensure the proper thermal equilibrium state. A series of new DPD algorithms with reduced computational complexity and better control of transport properties are presented. 2 The algorithms presented in this article choose randomly a pair particle for applying DPD thermostating thus reducing the computational complexity.  DPD is an off-lattice mesoscopic simulation technique which involves a set of particles moving in continuous space and discrete time. Particles represent whole molecules or fluid regions, rather than single atoms, and atomistic details are not considered relevant to the processes addressed. The particles’ internal degrees of freedom are integrated out and replaced by simplified pairwise dissipative and random forces, so as to conserve momentum locally and ensure correct hydrodynamic behaviour. The main advantage of this method is that it gives access to longer time and length scales than are possible using conventional MD simulations. Simulations of polymeric fluids in volumes up to 100 nm in linear dimension for tens of microseconds are now common.  Equations  The total non-bonded force acting on a DPD particle i is given by a sum over all particles j that lie within a fixed cut-off distance, of three pairwise-additive forces:       f  i   =    ∑   j  ≠  i     (    F   i  j   C   +   F   i  j   D   +   F   i  j   R    )         subscript  f  i     subscript     j  i       subscript   superscript  F  C     i  j     subscript   superscript  F  D     i  j     subscript   superscript  F  R     i  j        f_{i}=\sum_{j\neq i}(F^{C}_{ij}+F^{D}_{ij}+F^{R}_{ij})     where the first term in the above equation is a conservative force, the second a dissipative force and the third a random force. The conservative force acts to give beads a chemical identity, while the dissipative and random forces together form a thermostat that keeps the mean temperature of the system constant. A key property of all of the non-bonded forces is that they conserve momentum locally, so that hydrodynamic modes of the fluid emerge even for small particle numbers. Local momentum conservation requires that the random force between two interacting beads be antisymmetric. Each pair of interacting particles therefore requires only a single random force calculation. This distinguishes DPD from Brownian dynamics in which each particle experiences a random force independently of all other particles. Beads can be connected into ‘molecules’ by tying them together with soft (often Hookean) springs. The most common applications of DPD keep the particle number , volume and temperature constant, and so take place in the NVT ensemble. Alternatively, the pressure instead of the volume is held constant, so that the simulation is in the NPT ensemble.  Parallelization  In principle, simulations of very large systems, approaching a cubic micron for milliseconds, are possible using a parallel implementation of DPD running on multiple processors in a Beowulf -style cluster. Because the non-bonded forces are short-ranged in DPD, it is possible to parallelize a DPD code very efficiently using a spatial domain decomposition technique. In this scheme, the total simulation space is divided into a number of cuboidal regions each of which is assigned to a distinct processor in the cluster. Each processor is responsible for integrating the equations of motion of all beads whose centres of mass lie within its region of space. Only beads lying near the boundaries of each processor's space require communication between processors. In order to ensure that the simulation is efficient, the crucial requirement is that the number of particle-particle interactions that require inter-processor communication be much smaller than the number of particle-particle interactions within the bulk of each processor's region of space. Roughly speaking, this means that the volume of space assigned to each processor should be sufficiently large that its surface area (multiplied by a distance comparable to the force cut-off distance) is much less than its volume.  Applications  A wide variety of complex hydrodynamic phenomena have been simulated using DPD, the list here is necessarily incomplete. The goal of these simulations often is to relate the macroscopic non-Newtonian flow properties of the fluid to its microscopic structure. Such DPD applications range from modelling the rheological properties of concrete 3 to simulating liposome formation in biophysics. 4 Other recent three-phase phenomena such as dynamic wetting. 5  Further reading  The full trace of the developments of various important aspects of the DPD methodology since it was first proposed in the early 1990s can be found in "Dissipative Particle Dynamics: Introduction, Methodology and Complex Fluid Applications - A Review" 6  The state-of-the-art in DPD was captured in a CECAM workshop in 2008. 7 Innovations to the technique presented there include DPD with energy conservation; non-central frictional forces that allow the fluid viscosity to be tuned; an algorithm for preventing bond crossing between polymers; and the automated calibration of DPD interaction parameters from atomistic molecular dynamics .  References    Available packages  Some available simulation packages that can (also) perform DPD simulations are:   CULGI : The Chemistry Unified Language Interface, Culgi B.V., The Netherlands  DL_MESO : Open-source mesoscale simulation software.  DPDmacs  ESPResSo : Extensible Simulation Package for the Research on Soft Matter Systems - Open-source  Fluidix : The Fluidix simulation suite available from OneZero Software.  GPIUTMD : Graphical processors for Many-Particle Dynamics  Gromacs-DPD : A modified version of Gromacs including DPD.  HOOMD-blue : Highly Optimized Object-oriented Many-particle Dynamics—Blue Edition  LAMMPS  LAMMPS interface in the MAPS suite of Scienomics  Materials Studio : Materials Studio - Modeling and simulation for studying chemicals and materials, Accelrys Software Inc.  SYMPLER : A freeware SYMbolic ParticLE simulatoR from the University of Freiburg.  SunlightDPD : Open-source (GPL) DPD software.   External links   DPD simulation technique by MatDL (Materials Digital Library Pathway) ( MatDL )   "  Category:Condensed matter physics  Category:Soft matter  Category:Computational fluid dynamics  Category:Non-Newtonian fluids     P. Español and P. B. Warren. Statistical-mechanics of dissipative particle dynamics. Europhysics Letters, 30(4):191–196, MAY 1 1995 ↩  N. Goga, A.J. Rzepiela, A.H. de Vries, S.J. Marrink, H.J.C. Berendsen: Efficient algorithms for Langevin and DPD dynamics, J. Chem. Th. Comp., 2012, DOI:10.1021/ct3000876 ↩  James S. Sims and Nicos S. Martys: Modelling the Rheological Properties of Concrete ↩  Petri Nikunen, Mikko Karttunen, and Ilpo Vattulainen: Modelling Liposome formation in biophysics ↩  B. Henrich, C. Cupelli, M. Moseler, and M. Santer": An adhesive DPD wall model for dynamic wetting, Europhysics Letters 80 (2007) 60004, p.1 ↩  ↩  Dissipative Particle Dynamics: Addressing deficiencies and establishing new frontiers , CECAM workshop, July 16–18, 2008, Lausanne, Switzerland. ↩     