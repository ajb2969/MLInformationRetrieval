   Cramer–Shoup cryptosystem      Cramer–Shoup cryptosystem   The Cramer–Shoup system is an asymmetric key encryption algorithm , and was the first efficient scheme proven to be secure against adaptive chosen ciphertext attack using standard cryptographic assumptions. Its security is based on the computational intractability (widely assumed, but not proved) of the decisional Diffie–Hellman assumption . Developed by Ronald Cramer and Victor Shoup in 1998, it is an extension of the Elgamal cryptosystem . In contrast to Elgamal, which is extremely malleable , Cramer–Shoup adds other elements to ensure non-malleability even against a resourceful attacker. This non-malleability is achieved through the use of a universal one-way hash function and additional computations, resulting in a ciphertext which is twice as large as in Elgamal.  Adaptive chosen ciphertext attacks  The definition of security achieved by Cramer–Shoup is formally termed " indistinguishability under adaptive chosen ciphertext attack " (IND-CCA2). This security definition is currently the strongest definition known for a public key cryptosystem: it assumes that the attacker has access to a decryption oracle which will decrypt any ciphertext using the scheme's secret decryption key. The "adaptive" component of the security definition means that the attacker has access to this decryption oracle both before and after he observes a specific target ciphertext to attack (though he is prohibited from using the oracle to simply decrypt this target ciphertext). The weaker notion of security against non-adaptive chosen ciphertext attacks (IND-CCA1) only allows the attacker to access the decryption oracle before observing the target ciphertext.  Though it was well known that many widely used cryptosystems were insecure against such an attacker, for many years system designers considered the attack to be impractical and of largely theoretical interest. This began to change during the late 1990s, particularly when Daniel Bleichenbacher demonstrated a practical adaptive chosen ciphertext attack against SSL servers using a form of RSA encryption. 1  Cramer–Shoup was not the first encryption scheme to provide security against adaptive chosen ciphertext attack. Naor–Yung, Rackoff–Simon, and Dolev–Dwork–Naor proposed provably secure conversions from standard (IND-CPA) schemes into IND-CCA1 and IND-CCA2 schemes. These techniques are secure under a standard set of cryptographic assumptions (without random oracles), however they rely on complex zero-knowledge proof techniques, and are inefficient in terms of computational cost and ciphertext size. A variety of other approaches, including Bellare / Rogaway 's OAEP and Fujisaki–Okamoto achieve efficient constructions using a mathematical abstraction known as a random oracle . Unfortunately, to implement these schemes in practice requires the substitution of some practical function (e.g., a cryptographic hash function ) in place of the random oracle. A growing body of evidence suggests the insecurity of this approach, 2 although no practical attacks have been demonstrated against deployed schemes.  The cryptosystem  Cramer–Shoup consists of three algorithms: the key generator, the encryption algorithm, and the decryption algorithm.  Key generation   Alice generates an efficient description of a cyclic group    G   G   G   of order   q   q   q   with two distinct, random generators      g  1   ,   g  2       subscript  g  1    subscript  g  2     g_{1},g_{2}   .  Alice chooses five random values    (   x  1   ,   x  2   ,   y  1   ,   y  2   ,  z  )      subscript  x  1    subscript  x  2    subscript  y  1    subscript  y  2   z    ({x}_{1},{x}_{2},{y}_{1},{y}_{2},z)   from    {  0  ,  …  ,   q  -  1   }     0  normal-…    q  1     \{0,\ldots,q-1\}   .  Alice computes     c  =    g  1   x  1     g  2   x  2      ,    d  =    g  1   y  1     g  2   y  2      ,   h  =   g  1  z        formulae-sequence    c     superscript   subscript  g  1    subscript  x  1     superscript   subscript  g  2    subscript  x  2       formulae-sequence    d     superscript   subscript  g  1    subscript  y  1     superscript   subscript  g  2    subscript  y  2        h   superscript   subscript  g  1   z       c={g}_{1}^{x_{1}}g_{2}^{x_{2}},d={g}_{1}^{y_{1}}g_{2}^{y_{2}},h={g}_{1}^{z}   .  Alice publishes    (  c  ,  d  ,  h  )     c  d  h    (c,d,h)   , along with the description of    G  ,  q  ,   g  1   ,   g  2      G  q   subscript  g  1    subscript  g  2     G,q,g_{1},g_{2}   , as her public key . Alice retains    (   x  1   ,   x  2   ,   y  1   ,   y  2   ,  z  )      subscript  x  1    subscript  x  2    subscript  y  1    subscript  y  2   z    (x_{1},x_{2},y_{1},y_{2},z)   as her secret key . The group can be shared between users of the system.   Encryption  To encrypt a message   m   m   m   to Alice under her public key    (  G  ,  q  ,   g  1   ,   g  2   ,  c  ,  d  ,  h  )     G  q   subscript  g  1    subscript  g  2   c  d  h    (G,q,g_{1},g_{2},c,d,h)   ,   Bob converts   m   m   m   into an element of   G   G   G   .  Bob chooses a random   k   k   k   from    {  0  ,  …  ,   q  -  1   }     0  normal-…    q  1     \{0,\ldots,q-1\}   , then calculates:        u  1   =   g  1  k    ,    u  2   =   g  2  k       formulae-sequence     subscript  u  1    superscript   subscript  g  1   k       subscript  u  2    superscript   subscript  g  2   k      u_{1}={g}_{1}^{k},u_{2}={g}_{2}^{k}         e  =    h  k    m        e     superscript  h  k   m     e=h^{k}m\,         α  =   H   (   u  1   ,   u  2   ,  e  )        α    H    subscript  u  1    subscript  u  2   e      \alpha=H(u_{1},u_{2},e)\,   , where H() is a universal one-way hash function (or a collision resistant  cryptographic hash function , which is a stronger requirement).      v  =    c  k     d   k  α          v     superscript  c  k    superscript  d    k  α       v=c^{k}d^{k\alpha}\,      Bob sends the ciphertext    (   u  1   ,   u  2   ,  e  ,  v  )      subscript  u  1    subscript  u  2   e  v    (u_{1},u_{2},e,v)   to Alice.   Decryption  To decrypt a ciphertext    (   u  1   ,   u  2   ,  e  ,  v  )      subscript  u  1    subscript  u  2   e  v    (u_{1},u_{2},e,v)   with Alice's secret key    (   x  1   ,   x  2   ,   y  1   ,   y  2   ,  z  )      subscript  x  1    subscript  x  2    subscript  y  1    subscript  y  2   z    (x_{1},x_{2},y_{1},y_{2},z)   ,   Alice computes    α  =   H   (   u  1   ,   u  2   ,  e  )        α    H    subscript  u  1    subscript  u  2   e      \alpha=H(u_{1},u_{2},e)\,   and verifies that      u  1   x  1     u  2   x  2      (    u  1   y  1     u  2   y  2     )   α    =   v          superscript   subscript  u  1    subscript  x  1     superscript   subscript  u  2    subscript  x  2     superscript     superscript   subscript  u  1    subscript  y  1     superscript   subscript  u  2    subscript  y  2     α    v    {u}_{1}^{x_{1}}u_{2}^{x_{2}}({u}_{1}^{y_{1}}u_{2}^{y_{2}})^{\alpha}=v\,   . If this test fails, further decryption is aborted and the output is rejected.  Otherwise, Alice computes the plaintext as    m  =   e  /   (   u  1  z   )        m    e   superscript   subscript  u  1   z      m=e/({u}_{1}^{z})\,   .   The decryption stage correctly decrypts any properly-formed ciphertext, since       u  1  z   =   g  1   k  z    =    h  k           superscript   subscript  u  1   z    superscript   subscript  g  1     k  z          superscript  h  k      {u}_{1}^{z}={g}_{1}^{kz}=h^{k}\,   , and     m  =   e  /   h  k     .      m    e   superscript  h  k      m=e/h^{k}.\,     If the space of possible messages is larger than the size of   G   G   G   , then Cramer–Shoup may be used in a hybrid cryptosystem to improve efficiency on long messages. Note that it is not possible to split the message into several pieces and encrypt each piece independently, because the chosen-ciphertext security property is not preserved in this way.  References     Ronald Cramer and Victor Shoup . "A practical public key cryptosystem provably secure against adaptive chosen ciphertext attack." in proceedings of Crypto 1998, LNCS 1462, p. 13ff ( ps , pdf )  Toy implementations of Cramer–Shoup in Emacs Lisp and Java  1998 vintage news coverage of Cramer and Shoup's publication in Wired News and in Bruce Schneier 's Crypto-Gram  Ronald Cramer and Victor Shoup : "Universal hash proofs and a paradigm for chosen ciphertext secure public key encryption." in proceedings of Eurocrypt 2002, LNCS 2332, pp. 45–64. Full Version (pdf)   "  Category:Public-key encryption schemes     Daniel Bleichenbacher. Chosen ciphertext attacks against protocols based on the RSA encryption standard PKCS #1. Advances in Cryptology — CRYPTO '98. 1 ↩  Ran Canetti, Oded Goldreich , Shai Halevi. The Random Oracle Methodology, Revisited . Journal of the ACM, 51:4, pages 557–594, 2004. ↩     