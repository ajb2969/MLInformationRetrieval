


G.711




G.711
'''G.711''' is an [[ITU-T]] standard for audio [[companding]]. It is p
 
 rimarily used in telephony. The standard was released for usage in 1972. Its formal name is Pulse code modulation (PCM) of voice frequencies. It is a required standard in many technologies, for example in H.320 and H.323 specifications. It can also be used for fax communication over IP networks (as defined in T.38 specification). G.711, also known as Pulse Code Modulation (PCM), is a very commonly used waveform codec. G.711 is a narrowband audio codec that provides toll-quality audio at 64 kbit/s. G.711 passes audio signals in the range of 300–3400 Hz and samples them at the rate of 8,000 samples per second, with the tolerance on that rate 50 parts per million (ppm). Non-uniform (logarithmic) quantization with 8 bits is used to represent each sample, resulting in a 64 kbit/s bit rate. There are two slightly different versions; μ-law, which is used primarily in North America, and A-law, which is in use in most other countries outside North America.
Two enhancements to G.711 have been published: G.711.0 utilizes lossless data compression to reduce the bandwidth usage and G.711.1 increases audio quality by increasing bandwidth.
Features

Sampling frequency 8 kHz
64 kbit/s bitrate (8 kHz sampling frequency x 8 bits per sample)
Typical algorithmic delay is 0.125 ms, with no look-ahead delay
G.711 is a waveform speech coder
G.711 Appendix I defines a Packet Loss Concealment (PLC) algorithm to help hide transmission losses in a packetized network
G.711 Appendix II defines a Discontinuous Transmission (DTX) algorithm which uses Voice Activity Detection (VAD) and Comfort Noise Generation (CNG) to reduce bandwidth usage during silence periods
PSQM testing under ideal conditions yields Mean Opinion Scores of 4.45 for G.711 μ-law, 4.45 for G.711 A-law
PSQM testing under network stress yields Mean Opinion Scores of 4.13 for G.711 μ-law, 4.11 for G.711 A-law

Types
G.711 defines two main companding algorithms, the µ-law algorithm and A-law algorithm. Both are logarithmic, but A-law was specifically designed to be simpler for a computer to process. The standard also defines a sequence of repeating code values which defines the power level of 0 dB.
The µ-law and A-law algorithms encode 14-bit and 13-bit signed linear PCM samples (respectively) to logarithmic 8-bit samples. Thus, the G.711 encoder will create a 64 kbit/s bitstream for a signal sampled at 8 kHz.1
G.711 μ-law tends to give more resolution to higher range signals while G.711 A-law provides more quantization levels at lower signal levels.
A-Law
A-law encoding thus takes a 13-bit signed linear audio sample as input and converts it to an 8 bit value as follows:




Linear input code
2

Compressed code
 XOR 01010101

Linear output code
3





s0000000abcdx



 
 000abcd

s0000000abcd1



s0000001abcdx



 
 001abcd

s0000001abcd1



s000001abcdxx



 
 010abcd

s000001abcd10



s00001abcdxxx



 
 011abcd

s00001abcd100



s0001abcdxxxx



 
 100abcd

s0001abcd1000



s001abcdxxxxx



 
 101abcd

s001abcd10000



s01abcdxxxxxx



 
 110abcd

s01abcd100000



s1abcdxxxxxxx



 
 111abcd

s1abcd1000000




Where  is the sign bit, 

 is its inverse (i.e. positive values are encoded with MSB = 
 
 
 
  = 1), and bits marked  are discarded. Note that the first column of the table uses different representation of negative values than the third column. So for example, input decimal value −21 is represented in binary after bit inversion as 1000000010100, which maps to 00001010 (according to the first row of the table). When decoding, this maps back to 1000000010101, which is interpreted as output value −21 in decimal. Input value +52 (0000000110100 in binary) maps to 10011010 (according to the second row), which maps back to 0000000110101 (+53 in decimal).
This can be seen as a floating point number with 4 bits of mantissa

 
 , 3 bits of exponent

 
  and 1 sign bit 
 
 
 
  formatted as 

 
 eeemmmm with the decoded linear value 
 
 
 
  given by formula


 
  which is a 13-bit signed integer in the range ±1 to ±(2
 
 
 
  − 2
 
 
 
 ). Note that no compressed code decodes to zero due to the addition of 0.5 (half of a quantization step).
In addition, the standard specifies that all resulting even bits (LSB is even) are inverted before the octet is transmitted. This is to provide plenty of 0/1 transitions to facilitate the clock recovery process in the PCM receivers. Thus, a silent A-law encoded PCM channel has the 8 bit samples coded 0xD5 instead of 0x80 in the octets.
When data is sent over E0 (G.703), MSB (sign) is sent first and LSB is sent last.
ITU-T STL4 defines the algorithm for decoding as follows (it puts the decoded values in the 13 most significant bits of the 16-bit output data type).
void            alaw_expand(lseg, logbuf, linbuf)
   long            lseg;
   short          *linbuf;
   short          *logbuf;
 {
   short           ix, mant, iexp;
   long            n;
 
   for (n = 0; n < lseg; n++)
   {
     ix = logbuf[n] ^ (0x0055);  /* re-toggle toggled bits */
 
     ix &= (0x007F);     /* remove sign bit */
     iexp = ix >> 4;     /* extract exponent */
     mant = ix & (0x000F);   /* now get mantissa */
     if (iexp > 0)
       mant = mant + 16;     /* add leading '1', if exponent > 0 */
 
     mant = (mant << 4) + (0x0008);  /* now mantissa left justified and */
     /* 1/2 quantization step added */
     if (iexp > 1)       /* now left shift according exponent */
       mant = mant << (iexp - 1);
 
     linbuf[n] = logbuf[n] > 127 /* invert, if negative sample */
       ? mant
       : -mant;
   }
 }
See also "ITU-T Software Tool Library 2009 User's manual" that can be found at.5
μ-Law
μ-law (sometimes referred to as ulaw, G.711Mu, or G.711μ) encoding takes a 14-bit signed linear audio sample in two's complement representation as input, inverts all bits after the sign bit if the value is negative, adds 33 (binary 100001) and converts it to an 8 bit value as follows:




Linear input value
6

Compressed code
 XOR 11111111

Linear output value
7





s00000001abcdx

s000abcd

s00000001abcd1



s0000001abcdxx

s001abcd

s0000001abcd10



s000001abcdxxx

s010abcd

s000001abcd100



s00001abcdxxxx

s011abcd

s00001abcd1000



s0001abcdxxxxx

s100abcd

s0001abcd10000



s001abcdxxxxxx

s101abcd

s001abcd100000



s01abcdxxxxxxx

s110abcd

s01abcd1000000



s1abcdxxxxxxxx

s111abcd

s1abcd10000000




Where  is the sign bit, and bits marked  are discarded.
In addition, the standard specifies that all result bits are inverted before the octet is transmitted. Thus, a silent μ-law encoded PCM channel has the 8 bit samples coded 0xFF instead of 0x00 in the octets.
Adding 33 is necessary so that all values fall into a compression group and it is subtracted back when decoding. This addition means that an overflow would occur for values outside the ±8159 range, so such values are clipped during encoding to avoid it.
Breaking the encoded value formatted as seeemmmm into 4 bits of mantissa 
 
 
 
 , 3 bits of exponent 
 
 
 
  and 1 sign bit 
 
 
 
 , the decoded linear value 
 
 
 
  is given by formula


 
  which is a 14-bit signed integer in the range ±0 to ±8031.
Note that 0 is encoded as 0xFF, and −1 is encoded as 0x7F, but when decoded back the result is 0 in both cases.
G.711.0
G.711.0, also known as G.711 LLC, utilizes lossless data compression to reduce the bandwidth usage by as much as 50 percent.8 The Lossless compression of G.711 pulse code modulation standard was approved by ITU-T in September 2009.910
G.711.1
G.711.1 is an extension to G.711, published as ITU-T Recommendation G.711.1 in March 2008. Its formal name is Wideband embedded extension for G.711 pulse code modulation.111213
G.711.1, allows the addition of narrowband and/or wideband (16000 samples/s) enhancements, each at 25% of the bitrate of the (included) base G.711 bitstream, leading to data rates of 64, 80 or 96 kbit/s.
G.711.1 is compatible with G.711 at 64 kbit/s,14 hence an efficient deployment in existing G.711-based voice over IP (VoIP) infrastructures is foreseen. The G.711.1 coder can encode signals at 16 kHz with a bandwidth of 50–7000 Hz at 80 and 96 kbit/s, and for 8-kHz sampling the output may produce signals with a bandwidth ranging from 50 up to 4000 Hz, operating at 64 and 80 kbit/s.15
The G.711.1 encoder creates an embedded bitstream structured in three layers corresponding to three available bit rates: 64, 80 and 96 kbit/s. The bitstream does not contain any information on which layers are contained, an implementation would require outband signalling on which layers are available. The three G.711.1 layers are: log companded pulse code modulation (PCM) of the lower band including noise feedback, embedded PCM extension with adaptive bit allocation for enhancing the quality of the base layer in the lower band, and weighted vector quantization coding of the higher band based on modified discrete cosine transformation (MDCT).16
Two extensions for G.711.1 are planned in 2010: superwideband extension (bandwidth to 14000 Hz) and lossless bitstream compression.17
Licensing
Since G.711 was released in 1972 its patents have long since expired, so it is freely available.18
See also

List of codecs
Comparison of audio coding formats
RTP audio video profile

References


External links

[http://www.itu.int/rec/dologin_pub.asp?lang=e&id;;=T-REC-G.711-198811-I!!PDF-E&type;=items ITU-T Recommendation G.711] - (STD.ITU-T RECMN G.711-ENGL 1989)
[http://www.itu.int/rec/recommendation.asp?type=folders〈=e&parent;=T-REC-G.711 ITU-T G.711 page]
ITU-T G.191 software tools for speech and audio coding, including G.711 C code
Code Project C# implementation of G.711 with source code
RFC 3551 - RTP Profile for Audio and Video Conferences with Minimal Control - G.711 - PCMA and PCMU definition.
RFC 4856 - Registration of Media Type audio/PCMA and audio/PCMU
RFC 5391 - RTP Payload Format for ITU-T Recommendation G.711.1 (PCMA-WB and PCMU-WB)

"




Category:Audio codecs Category:Speech codecs Category:ITU-T recommendations



G.711 : Pulse code modulation (PCM) of voice frequencies; ITU-T Recommendation (11/1988), Retrieved on 2009-07-08↩
This value is produced by taking the two's complement representation of the input value, and inverting all bits after the sign bit if the value is negative.↩
Signed magnitude representation↩
G.191 : Software tools for speech and audio coding standardization. Function  in file . Itu.int. Retrieved on 2013-09-18.↩
[http://www.itu.int/rec/T-REC-G.191/recommendation.asp?lang=en&parent;;=T-REC-G.191-200911-I G.191 : ITU-T Software Tool Library 2009 User's manual]. Itu.int (2010-07-23). Retrieved on 2013-09-18.↩
This value is produced by taking the two's complement representation of the input value, inverting all bits after the sign bit if the value is negative, and adding 33.↩
Signed magnitude representation. Final result is produced by decreasing the magnitude of this value by 33.↩
↩
↩
↩

ITU-T (2008) G.711.1 : Wideband embedded extension for G.711 pulse code modulation Retrieved on 2009-06-19↩
↩
↩


↩
↩




