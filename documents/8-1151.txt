


Minimum-cost flow problem




Minimum-cost flow problem

The minimum-cost flow problem (MCFP) is to find the cheapest possible way of sending a certain amount of flow through a flow network. Typical application of this problem involves finding the best delivery route from a factory to a warehouse where the road network has some capacity and cost associated. The minimum cost flow problem is one of the most fundamental among all flow and circulation problems because most other such problems can be cast as a minimum cost flow problem and also that it can be solved very efficiently using the network simplex algorithm.
Definition
Given a flow network, that is, a directed graph 
 
 
 
  with source 
 
 
 
  and sink 
 
 
 
 , where edge 
 
 
 
  has capacity 
 
 
 
 , flow 
 
 
 
  and cost 
 
 
 
  (most minimum-cost flow algorithms support edges with negative costs). The cost of sending this flow is 
 
 
 
 . You are required to send an amount of flow 
 
 
 
  from 
 
 
 
  to 
 
 
 
 .
The definition of the problem is to minimize the total cost of the flow:



with the constraints






Capacity constraints:







Skew symmetry:







Flow conservation:







Required flow:









Relation to other problems
A variation of this problem is to find a flow which is maximum, but has the lowest cost among the maximums. This could be called a minimum-cost maximum-flow problem. This is useful for finding minimum cost maximum matchings.
With some solutions, finding the minimum cost maximum flow instead is straightforward. If not, you can do a binary search on 
 
 
 
 .
A related problem is the minimum cost circulation problem, which can be used for solving minimum cost flow. You do this by setting the lower bound on all edges to zero, and then make an extra edge from the sink 
 
 
 
  to the source 
 
 
 
 , with capacity 
 
 
 
  and lower bound 
 
 
 
 , forcing the total flow from 
 
 
 
  to 
 
 
 
  to also be 
 
 
 
 .
The problem can be specialized into two other problems：

if the capacity constraint is removed, the problem is reduced to the shortest path problem,
if the costs are all set equal to zero, the problem is reduced to the maximum flow problem.

Solutions
The minimum cost flow problem can be solved by linear programming, since we optimize a linear function, and all constraints are linear.
Apart from that, many combinatorial algorithms exist, for a comprehensive survey, see . Some of them are generalizations of maximum flow algorithms, others use entirely different approaches.
Well-known fundamental algorithms (they have many variations):

Cycle canceling: a general primal method.
Minimum mean cycle canceling: a simple strongly polynomial algorithm.
Successive shortest path and capacity scaling: dual methods, which can be viewed as the generalizations of the Ford–Fulkerson algorithm.
Cost scaling: a primal-dual approach, which can be viewed as the generalization of the push-relabel algorithm.
Network simplex: a specialized version of the linear programming simplex method, which runs in polynomial time.
Out-of-kilter algorithm by D. R. Fulkerson

Application
Minimum weight bipartite matching
 Given an bipartite graph G = (A ∪ B, E), we would like to ﬁnd the maximum cardinality matching in G that has minimum cost. Let w: E → R be a weight function on the edges of E. The minimum weight bipartite matching problem or assignment problem is to find a perfect matching M ⊆ E whose total weight is minimized. The idea is to reduce this problem to a network flow problem.
Let G’ = (V’ = A ∪ B, E’ = E). Assign the capacity of all the edges in E’ to 1. Add a source vertex s and connect it to all the vertices in A’ and add a sink vertex t and connect all vertices inside group B’ to this vertex. The capacity of all the new edges is 1 and their costs is 0. It is proved that there is minimum weight perfect bipartite matching in G if and only if there a minimum cost flow in G’. 
See also

LEMON (C++ library)

References














External links

LEMON C++ library with several maximum flow and minimum cost circulation algorithms

"
Category:Network flow


