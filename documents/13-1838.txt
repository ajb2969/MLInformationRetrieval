   Derivation of the conjugate gradient method      Derivation of the conjugate gradient method   In numerical linear algebra , the conjugate gradient method is an iterative method for numerically solving the linear system       𝑨  𝒙   =  𝒃        𝑨  𝒙   𝒃    \boldsymbol{Ax}=\boldsymbol{b}     where   𝑨   𝑨   \boldsymbol{A}   is symmetric  positive-definite . The conjugate gradient method can be derived from several different perspectives, including specialization of the conjugate direction method for optimization , and variation of the Arnoldi / Lanczos iteration for eigenvalue problems.  The intent of this article is to document the important steps in these derivations.  Derivation from the conjugate direction method  The conjugate gradient method can be seen as a special case of the conjugate direction method applied to minimization of the quadratic function       f   (  𝒙  )    =     𝒙  T   𝑨  𝒙   -   2   𝒃  T   𝒙  .          f  𝒙        superscript  𝒙  normal-T   𝑨  𝒙     2   superscript  𝒃  normal-T   𝒙  .      f(\boldsymbol{x})=\boldsymbol{x}^{\mathrm{T}}\boldsymbol{A}\boldsymbol{x}-2%
 \boldsymbol{b}^{\mathrm{T}}\boldsymbol{x}\text{.}     The conjugate direction method  In the conjugate direction method for minimizing       f   (  𝒙  )    =     𝒙  T   𝑨  𝒙   -   2   𝒃  T   𝒙  .          f  𝒙        superscript  𝒙  normal-T   𝑨  𝒙     2   superscript  𝒃  normal-T   𝒙  .      f(\boldsymbol{x})=\boldsymbol{x}^{\mathrm{T}}\boldsymbol{A}\boldsymbol{x}-2%
 \boldsymbol{b}^{\mathrm{T}}\boldsymbol{x}\text{.}     one starts with an initial guess    𝒙  0     subscript  𝒙  0    \boldsymbol{x}_{0}   and the corresponding residual     𝒓  0   =   𝒃  -   𝑨   𝒙  0          subscript  𝒓  0     𝒃    𝑨   subscript  𝒙  0       \boldsymbol{r}_{0}=\boldsymbol{b}-\boldsymbol{Ax}_{0}   , and computes the iterate and residual by the formulae      α  i     subscript  α  i    \displaystyle\alpha_{i}     where     𝒑  0   ,   𝒑  1   ,   𝒑  2   ,  …      subscript  𝒑  0    subscript  𝒑  1    subscript  𝒑  2   normal-…    \boldsymbol{p}_{0},\boldsymbol{p}_{1},\boldsymbol{p}_{2},\ldots   are a series of mutually conjugate directions, i.e.,        𝒑  i  T   𝑨   𝒑  j    =  0         superscript   subscript  𝒑  i   normal-T   𝑨   subscript  𝒑  j    0    \boldsymbol{p}_{i}^{\mathrm{T}}\boldsymbol{Ap}_{j}=0     for any    i  ≠  j      i  j    i\neq j   .  The conjugate direction method is imprecise in the sense that no formulae are given for selection of the directions     𝒑  0   ,   𝒑  1   ,   𝒑  2   ,  …      subscript  𝒑  0    subscript  𝒑  1    subscript  𝒑  2   normal-…    \boldsymbol{p}_{0},\boldsymbol{p}_{1},\boldsymbol{p}_{2},\ldots   . Specific choices lead to various methods including the conjugate gradient method and Gaussian elimination .  Derivation from the Arnoldi/Lanczos iteration  The conjugate gradient method can also be seen as a variant of the Arnoldi/Lanczos iteration applied to solving linear systems.  The general Arnoldi method  In the Arnoldi iteration, one starts with a vector    𝒓  0     subscript  𝒓  0    \boldsymbol{r}_{0}   and gradually builds an orthonormal basis    {   𝒗  1   ,   𝒗  2   ,   𝒗  3   ,  …  }      subscript  𝒗  1    subscript  𝒗  2    subscript  𝒗  3   normal-…    \{\boldsymbol{v}_{1},\boldsymbol{v}_{2},\boldsymbol{v}_{3},\ldots\}   of the Krylov subspace       𝒦   (  𝑨  ,   𝒓  0   )    =   {   𝒓  0   ,   𝑨   𝒓  0    ,    𝑨  2    𝒓  0    ,  …  }         𝒦   𝑨   subscript  𝒓  0       subscript  𝒓  0     𝑨   subscript  𝒓  0       superscript  𝑨  2    subscript  𝒓  0    normal-…     \mathcal{K}(\boldsymbol{A},\boldsymbol{r}_{0})=\{\boldsymbol{r}_{0},%
 \boldsymbol{Ar}_{0},\boldsymbol{A}^{2}\boldsymbol{r}_{0},\ldots\}     by defining     𝒗  i   =    𝒘  i   /    ∥   𝒘  i   ∥   2         subscript  𝒗  i      subscript  𝒘  i    subscript   norm   subscript  𝒘  i    2      \boldsymbol{v}_{i}=\boldsymbol{w}_{i}/\lVert\boldsymbol{w}_{i}\rVert_{2}   where       𝒘  i   =   {      𝒓  0       if  i   =   1  ,          𝑨   𝒗   i  -  1     -     ∑   j  =  1    i  -  1       (    𝒗  j  T   𝑨   𝒗   i  -  1     )    𝒗  j          if  i   >   1  .             subscript  𝒘  i    cases   subscript  𝒓  0       if  i     1  ,        𝑨   subscript  𝒗    i  1       superscript   subscript     j  1      i  1         superscript   subscript  𝒗  j   normal-T   𝑨   subscript  𝒗    i  1      subscript  𝒗  j          if  i     1  .       \boldsymbol{w}_{i}=\begin{cases}\boldsymbol{r}_{0}&\text{if }i=1\text{,}\\
 \boldsymbol{Av}_{i-1}-\sum_{j=1}^{i-1}(\boldsymbol{v}_{j}^{\mathrm{T}}%
 \boldsymbol{Av}_{i-1})\boldsymbol{v}_{j}&\text{if }i>1\text{.}\end{cases}     In other words, for    i  >  1      i  1    i>1   ,    𝒗  i     subscript  𝒗  i    \boldsymbol{v}_{i}   is found by Gram-Schmidt orthogonalizing     𝑨   𝒗   i  -  1        𝑨   subscript  𝒗    i  1      \boldsymbol{Av}_{i-1}   against    {   𝒗  1   ,   𝒗  2   ,  …  ,   𝒗   i  -  1    }      subscript  𝒗  1    subscript  𝒗  2   normal-…   subscript  𝒗    i  1      \{\boldsymbol{v}_{1},\boldsymbol{v}_{2},\ldots,\boldsymbol{v}_{i-1}\}   followed by normalization.  Put in matrix form, the iteration is captured by the equation       𝑨   𝑽  i    =    𝑽   i  +  1      𝑯  ~   i          𝑨   subscript  𝑽  i       subscript  𝑽    i  1     subscript   bold-~  𝑯   i      \boldsymbol{AV}_{i}=\boldsymbol{V}_{i+1}\boldsymbol{\tilde{H}}_{i}     where      𝑽  i     subscript  𝑽  i    \displaystyle\boldsymbol{V}_{i}     with       h   j  i    =   {       𝒗  j  T   𝑨   𝒗  i        if  j   ≤   i  ,          ∥   𝒘   i  +  1    ∥   2       if  j   =   i  +   1  ,         0      if  j   >   i  +   1  .              subscript  h    j  i     cases     superscript   subscript  𝒗  j   normal-T   𝑨   subscript  𝒗  i        if  j     i  ,     subscript   norm   subscript  𝒘    i  1     2       if  j     i    1  ,     0      if  j     i    1  .        h_{ji}=\begin{cases}\boldsymbol{v}_{j}^{\mathrm{T}}\boldsymbol{Av}_{i}&\text{%
 if }j\leq i\text{,}\\
 \lVert\boldsymbol{w}_{i+1}\rVert_{2}&\text{if }j=i+1\text{,}\\
 0&\text{if }j>i+1\text{.}\end{cases}     When applying the Arnoldi iteration to solving linear systems, one starts with     𝒓  0   =   𝒃  -   𝑨   𝒙  0          subscript  𝒓  0     𝒃    𝑨   subscript  𝒙  0       \boldsymbol{r}_{0}=\boldsymbol{b}-\boldsymbol{Ax}_{0}   , the residual corresponding to an initial guess    𝒙  0     subscript  𝒙  0    \boldsymbol{x}_{0}   . After each step of iteration, one computes     𝒚  i   =    𝑯  i   -  1     (     ∥   𝒓  0   ∥   2    𝒆  1    )         subscript  𝒚  i      superscript   subscript  𝑯  i     1       subscript   norm   subscript  𝒓  0    2    subscript  𝒆  1       \boldsymbol{y}_{i}=\boldsymbol{H}_{i}^{-1}(\lVert\boldsymbol{r}_{0}\rVert_{2}%
 \boldsymbol{e}_{1})   and the new iterate     𝒙  i   =    𝒙  0   +    𝑽  i    𝒚  i          subscript  𝒙  i      subscript  𝒙  0      subscript  𝑽  i    subscript  𝒚  i       \boldsymbol{x}_{i}=\boldsymbol{x}_{0}+\boldsymbol{V}_{i}\boldsymbol{y}_{i}   .  The direct Lanczos method  For the rest of discussion, we assume that   𝑨   𝑨   \boldsymbol{A}   is symmetric positive-definite. With symmetry of   𝑨   𝑨   \boldsymbol{A}   , the upper Hessenberg matrix      𝑯  i   =    𝑽  i  T   𝑨   𝑽  i         subscript  𝑯  i      superscript   subscript  𝑽  i   normal-T   𝑨   subscript  𝑽  i      \boldsymbol{H}_{i}=\boldsymbol{V}_{i}^{\mathrm{T}}\boldsymbol{AV}_{i}   becomes symmetric and thus tridiagonal. It then can be more clearly denoted by       𝑯  i   =    [      a  1      b  2        b  2      a  2      b  3          ⋱    ⋱    ⋱             b   i  -  1       a   i  -  1       b  i                 b  i      a  i      ]   .        subscript  𝑯  i        subscript  a  1    subscript  b  2      subscript  b  2    subscript  a  2    subscript  b  3     absent  normal-⋱  normal-⋱  normal-⋱    absent  absent   subscript  b    i  1     subscript  a    i  1     subscript  b  i     absent  absent  absent   subscript  b  i    subscript  a  i     .     \boldsymbol{H}_{i}=\begin{bmatrix}a_{1}&b_{2}\\
 b_{2}&a_{2}&b_{3}\\
 &\ddots&\ddots&\ddots\\
 &&b_{i-1}&a_{i-1}&b_{i}\\
 &&&b_{i}&a_{i}\end{bmatrix}\text{.}     This enables a short three-term recurrence for    𝒗  i     subscript  𝒗  i    \boldsymbol{v}_{i}   in the iteration, and the Arnoldi iteration is reduced to the Lanczos iteration.  Since   𝑨   𝑨   \boldsymbol{A}   is symmetric positive-definite, so is    𝑯  i     subscript  𝑯  i    \boldsymbol{H}_{i}   . Hence,    𝑯  i     subscript  𝑯  i    \boldsymbol{H}_{i}   can be LU factorized without partial pivoting into       𝑯  i   =    𝑳  i    𝑼  i    =    [     1       c  2     1         ⋱    ⋱             c   i  -  1      1                c  i     1     ]    [      d  1      b  2           d  2      b  3             ⋱    ⋱                d   i  -  1       b  i                    d  i      ]           subscript  𝑯  i      subscript  𝑳  i    subscript  𝑼  i             1     subscript  c  2   1    absent  normal-⋱  normal-⋱    absent  absent   subscript  c    i  1    1    absent  absent  absent   subscript  c  i   1       subscript  d  1    subscript  b  2     absent   subscript  d  2    subscript  b  3     absent  absent  normal-⋱  normal-⋱    absent  absent  absent   subscript  d    i  1     subscript  b  i     absent  absent  absent  absent   subscript  d  i         \boldsymbol{H}_{i}=\boldsymbol{L}_{i}\boldsymbol{U}_{i}=\begin{bmatrix}1\\
 c_{2}&1\\
 &\ddots&\ddots\\
 &&c_{i-1}&1\\
 &&&c_{i}&1\end{bmatrix}\begin{bmatrix}d_{1}&b_{2}\\
 &d_{2}&b_{3}\\
 &&\ddots&\ddots\\
 &&&d_{i-1}&b_{i}\\
 &&&&d_{i}\end{bmatrix}     with convenient recurrences for    c  i     subscript  c  i    c_{i}   and    d  i     subscript  d  i    d_{i}   :      c  i     subscript  c  i    \displaystyle c_{i}     Rewrite     𝒙  i   =    𝒙  0   +    𝑽  i    𝒚  i          subscript  𝒙  i      subscript  𝒙  0      subscript  𝑽  i    subscript  𝒚  i       \boldsymbol{x}_{i}=\boldsymbol{x}_{0}+\boldsymbol{V}_{i}\boldsymbol{y}_{i}   as      𝒙  i     subscript  𝒙  i    \displaystyle\boldsymbol{x}_{i}     with      𝑷  i     subscript  𝑷  i    \displaystyle\boldsymbol{P}_{i}     It is now important to observe that      𝑷  i     subscript  𝑷  i    \displaystyle\boldsymbol{P}_{i}     In fact, there are short recurrences for    𝒑  i     subscript  𝒑  i    \boldsymbol{p}_{i}   and    ζ  i     subscript  ζ  i    \zeta_{i}   as well:      𝒑  i     subscript  𝒑  i    \displaystyle\boldsymbol{p}_{i}     With this formulation, we arrive at a simple recurrence for    𝒙  i     subscript  𝒙  i    \boldsymbol{x}_{i}   :      𝒙  i     subscript  𝒙  i    \displaystyle\boldsymbol{x}_{i}     The relations above straightforwardly lead to the direct Lanczos method, which turns out to be slightly more complex.  The conjugate gradient method from imposing orthogonality and conjugacy  If we allow    𝒑  i     subscript  𝒑  i    \boldsymbol{p}_{i}   to scale and compensate for the scaling in the constant factor, we potentially can have simpler recurrences of the form:      𝒙  i     subscript  𝒙  i    \displaystyle\boldsymbol{x}_{i}     As premises for the simplification, we now derive the orthogonality of    𝒓  i     subscript  𝒓  i    \boldsymbol{r}_{i}   and conjugacy of    𝒑  i     subscript  𝒑  i    \boldsymbol{p}_{i}   , i.e., for    i  ≠  j      i  j    i\neq j   ,       𝒓  i  T    𝒓  j        superscript   subscript  𝒓  i   normal-T    subscript  𝒓  j     \displaystyle\boldsymbol{r}_{i}^{\mathrm{T}}\boldsymbol{r}_{j}     The residuals are mutually orthogonal because    𝒓  i     subscript  𝒓  i    \boldsymbol{r}_{i}   is essentially a multiple of    𝒗   i  +  1      subscript  𝒗    i  1     \boldsymbol{v}_{i+1}   since for    i  =  0      i  0    i=0   ,     𝒓  0   =     ∥   𝒓  0   ∥   2    𝒗  1         subscript  𝒓  0      subscript   norm   subscript  𝒓  0    2    subscript  𝒗  1      \boldsymbol{r}_{0}=\lVert\boldsymbol{r}_{0}\rVert_{2}\boldsymbol{v}_{1}   , for    i  >  0      i  0    i>0   ,      𝒓  i     subscript  𝒓  i    \displaystyle\boldsymbol{r}_{i}     To see the conjugacy of    𝒑  i     subscript  𝒑  i    \boldsymbol{p}_{i}   , it suffices to show that     𝑷  i  T   𝑨   𝑷  i        superscript   subscript  𝑷  i   normal-T   𝑨   subscript  𝑷  i     \boldsymbol{P}_{i}^{\mathrm{T}}\boldsymbol{AP}_{i}   is diagonal:       𝑷  i  T   𝑨   𝑷  i        superscript   subscript  𝑷  i   normal-T   𝑨   subscript  𝑷  i     \displaystyle\boldsymbol{P}_{i}^{\mathrm{T}}\boldsymbol{AP}_{i}     is symmetric and lower triangular simultaneously and thus must be diagonal.  Now we can derive the constant factors    α  i     subscript  α  i    \alpha_{i}   and    β  i     subscript  β  i    \beta_{i}   with respect to the scaled    𝒑  i     subscript  𝒑  i    \boldsymbol{p}_{i}   by solely imposing the orthogonality of    𝒓  i     subscript  𝒓  i    \boldsymbol{r}_{i}   and conjugacy of    𝒑  i     subscript  𝒑  i    \boldsymbol{p}_{i}   .  Due to the orthogonality of    𝒓  i     subscript  𝒓  i    \boldsymbol{r}_{i}   , it is necessary that      𝒓   i  +  1   T    𝒓  i    =     (    𝒓  i   -    α  i   𝑨   𝒑  i     )   T    𝒓  i    =  0           superscript   subscript  𝒓    i  1    normal-T    subscript  𝒓  i       superscript     subscript  𝒓  i      subscript  α  i   𝑨   subscript  𝒑  i     normal-T    subscript  𝒓  i         0     \boldsymbol{r}_{i+1}^{\mathrm{T}}\boldsymbol{r}_{i}=(\boldsymbol{r}_{i}-\alpha%
 _{i}\boldsymbol{Ap}_{i})^{\mathrm{T}}\boldsymbol{r}_{i}=0   . As a result,      α  i     subscript  α  i    \displaystyle\alpha_{i}     Similarly, due to the conjugacy of    𝒑  i     subscript  𝒑  i    \boldsymbol{p}_{i}   , it is necessary that      𝒑   i  +  1   T   𝑨   𝒑  i    =     (    𝒓   i  +  1    +    β  i    𝒑  i     )   T   𝑨   𝒑  i    =  0           superscript   subscript  𝒑    i  1    normal-T   𝑨   subscript  𝒑  i       superscript     subscript  𝒓    i  1       subscript  β  i    subscript  𝒑  i     normal-T   𝑨   subscript  𝒑  i         0     \boldsymbol{p}_{i+1}^{\mathrm{T}}\boldsymbol{Ap}_{i}=(\boldsymbol{r}_{i+1}+%
 \beta_{i}\boldsymbol{p}_{i})^{\mathrm{T}}\boldsymbol{Ap}_{i}=0   . As a result,      β  i     subscript  β  i    \displaystyle\beta_{i}     This completes the derivation.  References      "  Category:Numerical linear algebra  Category:Optimization algorithms and methods  Category:Gradient methods  Category:Articles containing proofs   