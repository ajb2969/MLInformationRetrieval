   Submodular set function      Submodular set function   In mathematics, a submodular set function (also known as a submodular function ) is a set function whose value, informally, has the property that the difference in the incremental value of the function, that a single element makes when added to an input set , decreases as the size of the input set increases. Submodular functions have a natural diminishing returns property which makes them suitable for many applications, including approximation algorithms , game theory (as functions modeling user preferences), electrical networks , machine learning , and artificial intelligence .  Definition  If   Œ©   normal-Œ©   \Omega   is a set , a submodular function is a set function    f  :    2  Œ©   ‚Üí  ‚Ñù      normal-:  f   normal-‚Üí   superscript  2  normal-Œ©   ‚Ñù     f:2^{\Omega}\rightarrow\mathbb{R}   , where    2  Œ©     superscript  2  normal-Œ©    2^{\Omega}   denotes the power set of   Œ©   normal-Œ©   \Omega   , which satisfies one of the following equivalent definitions. 1   For every     X  ,  Y   ‚äÜ  Œ©       X  Y   normal-Œ©    X,Y\subseteq\Omega   with    X  ‚äÜ  Y      X  Y    X\subseteq Y   and every    x  ‚àà   Œ©  \  Y       x   normal-\  normal-Œ©  Y     x\in\Omega\backslash Y   we have that      f   (   X  ‚à™   {  x  }    )    -   f   (  X  )     ‚â•    f   (   Y  ‚à™   {  x  }    )    -   f   (  Y  )             f    X   x       f  X        f    Y   x       f  Y      f(X\cup\{x\})-f(X)\geq f(Y\cup\{x\})-f(Y)   .  For every     S  ,  T   ‚äÜ  Œ©       S  T   normal-Œ©    S,T\subseteq\Omega   we have that      f   (  S  )    +   f   (  T  )     ‚â•    f   (   S  ‚à™  T   )    +   f   (   S  ‚à©  T   )             f  S     f  T        f    S  T      f    S  T       f(S)+f(T)\geq f(S\cup T)+f(S\cap T)   .  For every    X  ‚äÜ  Œ©      X  normal-Œ©    X\subseteq\Omega   and      x  1   ,   x  2    ‚àà   Œ©  \  X         subscript  x  1    subscript  x  2     normal-\  normal-Œ©  X     x_{1},x_{2}\in\Omega\backslash X   we have that      f   (   X  ‚à™   {   x  1   }    )    +   f   (   X  ‚à™   {   x  2   }    )     ‚â•    f   (   X  ‚à™   {   x  1   ,   x  2   }    )    +   f   (  X  )             f    X    subscript  x  1        f    X    subscript  x  2           f    X    subscript  x  1    subscript  x  2        f  X      f(X\cup\{x_{1}\})+f(X\cup\{x_{2}\})\geq f(X\cup\{x_{1},x_{2}\})+f(X)   .   A nonnegative submodular function is also a subadditive function, but a subadditive function need not be submodular.  Types of submodular functions  Monotone  A submodular function   f   f   f   is monotone if for every    T  ‚äÜ  S      T  S    T\subseteq S   we have that     f   (  T  )    ‚â§   f   (  S  )          f  T     f  S     f(T)\leq f(S)   . Examples of monotone submodular functions include:   Linear functions : Any function of the form     f   (  S  )    =    ‚àë   i  ‚àà  S     w  i          f  S     subscript     i  S     subscript  w  i      f(S)=\sum_{i\in S}w_{i}   is called a linear function. Additionally if      ‚àÄ  i   ,   w  i    ‚â•  0        for-all  i    subscript  w  i    0    \forall i,w_{i}\geq 0   then f is monotone. Budget-additive functions : Any function of the form     f   (  S  )    =   min   (  B  ,    ‚àë   i  ‚àà  S     w  i    )          f  S     B    subscript     i  S     subscript  w  i       f(S)=\min(B,\sum_{i\in S}w_{i})   for each     w  i   ‚â•  0       subscript  w  i   0    w_{i}\geq 0   and    B  ‚â•  0      B  0    B\geq 0   is called budget additive. Coverage functions : Let    Œ©  =   {   E  1   ,   E  2   ,  ‚Ä¶  ,   E  n   }       normal-Œ©    subscript  E  1    subscript  E  2   normal-‚Ä¶   subscript  E  n      \Omega=\{E_{1},E_{2},\ldots,E_{n}\}   be a collection of subsets of some ground set    Œ©  ‚Ä≤     superscript  normal-Œ©  normal-‚Ä≤    \Omega^{\prime}   . The function     f   (  S  )    =   |    ‚à™    E  i   ‚àà  S     E  i    |         f  S       subscript      subscript  E  i   S     subscript  E  i       f(S)=|\cup_{E_{i}\in S}E_{i}|   for    S  ‚äÜ  Œ©      S  normal-Œ©    S\subseteq\Omega   is called a coverage function. This can be generalized by adding non-negative weights to the elements.  Entropy : Let    Œ©  =   {   X  1   ,   X  2   ,  ‚Ä¶  ,   X  n   }       normal-Œ©    subscript  X  1    subscript  X  2   normal-‚Ä¶   subscript  X  n      \Omega=\{X_{1},X_{2},\ldots,X_{n}\}   be a set of random variables . Then for any    S  ‚äÜ  Œ©      S  normal-Œ©    S\subseteq\Omega   we have that    H   (  S  )       H  S    H(S)   is a submodular function, where    H   (  S  )       H  S    H(S)   is the entropy of the set of random variables   S   S   S     Matroid  rank functions : Let    Œ©  =   {   e  1   ,   e  2   ,  ‚Ä¶  ,   e  n   }       normal-Œ©    subscript  e  1    subscript  e  2   normal-‚Ä¶   subscript  e  n      \Omega=\{e_{1},e_{2},\dots,e_{n}\}   be the ground set on which a matroid is defined. Then the rank function of the matroid is a submodular function. 2   Non-monotone  A submodular function which is not monotone is called non-monotone .  Symmetric  A non-monotone submodular function   f   f   f   is called symmetric if for every    S  ‚äÜ  Œ©      S  normal-Œ©    S\subseteq\Omega   we have that     f   (  S  )    =   f   (   Œ©  -  S   )          f  S     f    normal-Œ©  S      f(S)=f(\Omega-S)   . Examples of symmetric non-monotone submodular functions include:   Graph cuts : Let    Œ©  =   {   v  1   ,   v  2   ,  ‚Ä¶  ,   v  n   }       normal-Œ©    subscript  v  1    subscript  v  2   normal-‚Ä¶   subscript  v  n      \Omega=\{v_{1},v_{2},\dots,v_{n}\}   be the vertices of a graph . For any set of vertices    S  ‚äÜ  Œ©      S  normal-Œ©    S\subseteq\Omega   let    f   (  S  )       f  S    f(S)   denote the number of edges    e  =   (  u  ,  v  )       e   u  v     e=(u,v)   such that    u  ‚àà  S      u  S    u\in S   and    v  ‚àà   Œ©  -  S       v    normal-Œ©  S     v\in\Omega-S   . This can be generalized by adding non-negative weights to the edges.  Mutual information : Let    Œ©  =   {   X  1   ,   X  2   ,  ‚Ä¶  ,   X  n   }       normal-Œ©    subscript  X  1    subscript  X  2   normal-‚Ä¶   subscript  X  n      \Omega=\{X_{1},X_{2},\ldots,X_{n}\}   be a set of random variables . Then for any    S  ‚äÜ  Œ©      S  normal-Œ©    S\subseteq\Omega   we have that     f   (  S  )    =   I   (  S  ;   Œ©  -  S   )          f  S     I   S    normal-Œ©  S       f(S)=I(S;\Omega-S)   is a submodular function, where    I   (  S  ;   Œ©  -  S   )       I   S    normal-Œ©  S      I(S;\Omega-S)   is the mutual information.   Asymmetric  A non-monotone submodular function which is not symmetric is called asymmetric.   Directed cuts : Let    Œ©  =   {   v  1   ,   v  2   ,  ‚Ä¶  ,   v  n   }       normal-Œ©    subscript  v  1    subscript  v  2   normal-‚Ä¶   subscript  v  n      \Omega=\{v_{1},v_{2},\dots,v_{n}\}   be the vertices of a directed graph . For any set of vertices    S  ‚äÜ  Œ©      S  normal-Œ©    S\subseteq\Omega   let    f   (  S  )       f  S    f(S)   denote the number of edges    e  =   (  u  ,  v  )       e   u  v     e=(u,v)   such that    u  ‚àà  S      u  S    u\in S   and    v  ‚àà   Œ©  -  S       v    normal-Œ©  S     v\in\Omega-S   . This can be generalized by adding non-negative weights to the directed edges.   Continuous extensions  Lov√°sz extension  This extension is named after mathematician L√°szl√≥ Lov√°sz . Consider any vector    ùï©  =   {   x  1   ,   x  2   ,  ‚Ä¶  ,   x  n   }       ùï©    subscript  x  1    subscript  x  2   normal-‚Ä¶   subscript  x  n      \mathbb{x}=\{x_{1},x_{2},\dots,x_{n}\}   such that each    0  ‚â§   x  i   ‚â§  1        0   subscript  x  i        1     0\leq x_{i}\leq 1   . Then the Lov√°sz extension is defined as      f  L    (  ùï©  )    =   ùîº   (   f   (   {  i  |    x  i   ‚â•  Œª   }   )    )           superscript  f  L   ùï©     ùîº    f   conditional-set  i     subscript  x  i   Œª        f^{L}(\mathbb{x})=\mathbb{E}(f(\{i|x_{i}\geq\lambda\}))   where the expectation is over   Œª   Œª   \lambda   chosen from the uniform distribution on the interval    [  0  ,  1  ]     0  1    [0,1]   . The Lov√°sz extension is a convex function.  Multilinear extension  Consider any vector    ùï©  =   {   x  1   ,   x  2   ,  ‚Ä¶  ,   x  n   }       ùï©    subscript  x  1    subscript  x  2   normal-‚Ä¶   subscript  x  n      \mathbb{x}=\{x_{1},x_{2},\ldots,x_{n}\}   such that each    0  ‚â§   x  i   ‚â§  1        0   subscript  x  i        1     0\leq x_{i}\leq 1   . Then the multilinear extension is defined as     F   (  ùï©  )    =    ‚àë   S  ‚äÜ  Œ©     f   (  S  )     ‚àè   i  ‚àà  S      x  i     ‚àè   i  ‚àâ  S     (   1  -   x  i    )              F  ùï©     subscript     S  normal-Œ©      f  S    subscript  product    i  S       subscript  x  i     subscript  product    i  S      1   subscript  x  i           F(\mathbb{x})=\sum_{S\subseteq\Omega}f(S)\prod_{i\in S}x_{i}\prod_{i\notin S}(%
 1-x_{i})   .  Convex closure  Consider any vector    ùï©  =   {   x  1   ,   x  2   ,  ‚Ä¶  ,   x  n   }       ùï©    subscript  x  1    subscript  x  2   normal-‚Ä¶   subscript  x  n      \mathbb{x}=\{x_{1},x_{2},\dots,x_{n}\}   such that each    0  ‚â§   x  i   ‚â§  1        0   subscript  x  i        1     0\leq x_{i}\leq 1   . Then the convex closure is defined as      f  -    (  ùï©  )    =   min   (     ‚àë  S     Œ±  S   f   (  S  )     :      ‚àë  S     Œ±  S    1  S     =  ùï©   ,      ‚àë  S    Œ±  S    =  1   ,    Œ±  S   ‚â•  0      )           superscript  f    ùï©      normal-:    subscript   S      subscript  Œ±  S   f  S     formulae-sequence      subscript   S      subscript  Œ±  S    subscript  1  S     ùï©    formulae-sequence      subscript   S    subscript  Œ±  S    1      subscript  Œ±  S   0         f^{-}(\mathbb{x})=\min(\sum_{S}\alpha_{S}f(S):\sum_{S}\alpha_{S}1_{S}=\mathbb{%
 x},\sum_{S}\alpha_{S}=1,\alpha_{S}\geq 0)   . It can be shown that      f  L    (  ùï©  )    =    f  -    (  ùï©  )           superscript  f  L   ùï©      superscript  f    ùï©     f^{L}(\mathbb{x})=f^{-}(\mathbb{x})   .  Concave closure  Consider any vector    ùï©  =   {   x  1   ,   x  2   ,  ‚Ä¶  ,   x  n   }       ùï©    subscript  x  1    subscript  x  2   normal-‚Ä¶   subscript  x  n      \mathbb{x}=\{x_{1},x_{2},\dots,x_{n}\}   such that each    0  ‚â§   x  i   ‚â§  1        0   subscript  x  i        1     0\leq x_{i}\leq 1   . Then the concave closure is defined as      f  +    (  ùï©  )    =   max   (     ‚àë  S     Œ±  S   f   (  S  )     :      ‚àë  S     Œ±  S    1  S     =  ùï©   ,      ‚àë  S    Œ±  S    =  1   ,    Œ±  S   ‚â•  0      )           superscript  f    ùï©      normal-:    subscript   S      subscript  Œ±  S   f  S     formulae-sequence      subscript   S      subscript  Œ±  S    subscript  1  S     ùï©    formulae-sequence      subscript   S    subscript  Œ±  S    1      subscript  Œ±  S   0         f^{+}(\mathbb{x})=\max(\sum_{S}\alpha_{S}f(S):\sum_{S}\alpha_{S}1_{S}=\mathbb{%
 x},\sum_{S}\alpha_{S}=1,\alpha_{S}\geq 0)   .  Properties   The class of submodular functions is closed under non-negative linear combinations . Consider any submodular function     f  1   ,   f  2   ,  ‚Ä¶  ,   f  k       subscript  f  1    subscript  f  2   normal-‚Ä¶   subscript  f  k     f_{1},f_{2},\ldots,f_{k}   and non-negative numbers     Œ±  1   ,   Œ±  2   ,  ‚Ä¶  ,   Œ±  k       subscript  Œ±  1    subscript  Œ±  2   normal-‚Ä¶   subscript  Œ±  k     \alpha_{1},\alpha_{2},\ldots,\alpha_{k}   . Then the function   g   g   g   defined by     g   (  S  )    =    ‚àë   i  =  1   k     Œ±  i    f  i    (  S  )           g  S     superscript   subscript     i  1    k      subscript  Œ±  i    subscript  f  i   S      g(S)=\sum_{i=1}^{k}\alpha_{i}f_{i}(S)   is submodular. Furthermore, for any submodular function   f   f   f   , the function defined by     g   (  S  )    =   f   (   Œ©  ‚àñ  S   )          g  S     f    normal-Œ©  S      g(S)=f(\Omega\setminus S)   is submodular. The function     g   (  S  )    =   min   (   f   (  S  )    ,  c  )          g  S       f  S   c     g(S)=\min(f(S),c)   , where   c   c   c   is a real number, is submodular whenever   f   f   f   is monotonic.  If    f  :    2  Œ©   ‚Üí   ‚Ñù  +       normal-:  f   normal-‚Üí   superscript  2  normal-Œ©    subscript  ‚Ñù       f:2^{\Omega}\rightarrow\mathbb{R}_{+}   is a submodular function then    g  :    2  Œ©   ‚Üí   ‚Ñù  +       normal-:  g   normal-‚Üí   superscript  2  normal-Œ©    subscript  ‚Ñù       g:2^{\Omega}\rightarrow\mathbb{R}_{+}   defined as     g   (  S  )    =   œï   (   f   (  S  )    )          g  S     œï    f  S      g(S)=\phi(f(S))   where   œï   œï   \phi   is a concave function, is also a submodular function.  Consider a random process where a set   T   T   T   is chosen with each element in   Œ©   normal-Œ©   \Omega   being included in   T   T   T   independently with probability   p   p   p   . Then the following inequality is true     ùîº   [   f   (  T  )    ]    ‚â•    p  f   (  Œ©  )    +    (   1  -  p   )   f   (  ‚àÖ  )           ùîº   delimited-[]    f  T         p  f  normal-Œ©       1  p   f       \mathbb{E}[f(T)]\geq pf(\Omega)+(1-p)f(\varnothing)   where   ‚àÖ     \varnothing   is the empty set. More generally consider the following random process where a set   S   S   S   is constructed as follows. For each of     1  ‚â§  i  ‚â§  l   ,    A  i   ‚äÜ  Œ©      formulae-sequence      1  i       l       subscript  A  i   normal-Œ©     1\leq i\leq l,A_{i}\subseteq\Omega   construct    S  i     subscript  S  i    S_{i}   by including each element in    A  i     subscript  A  i    A_{i}   independently into    S  i     subscript  S  i    S_{i}   with probability    p  i     subscript  p  i    p_{i}   . Furthermore let    S  =    ‚à™   i  =  1   l    S  i        S    superscript   subscript     i  1    l    subscript  S  i      S=\cup_{i=1}^{l}S_{i}   . Then the following inequality is true     ùîº   [   f   (  S  )    ]    ‚â•    ‚àë   R  ‚äÜ   [  l  ]       Œ†   i  ‚àà  R     p  i    Œ†   i  ‚àâ  R     (   1  -   p  i    )   f   (    ‚à™   i  ‚àà  R     A  i    )           ùîº   delimited-[]    f  S       subscript     R   delimited-[]  l        subscript  normal-Œ†    i  R     subscript  p  i    subscript  normal-Œ†    i  R      1   subscript  p  i    f    subscript     i  R     subscript  A  i        \mathbb{E}[f(S)]\geq\sum_{R\subseteq[l]}\Pi_{i\in R}p_{i}\Pi_{i\notin R}(1-p_{%
 i})f(\cup_{i\in R}A_{i})   .   Optimization problems  Submodular functions have properties which are very similar to convex and concave functions . For this reason, an optimization problem which concerns optimizing a convex or concave function can also be described as the problem of maximizing or minimizing a submodular function subject to some constraints.  Submodular Minimization  The simplest minimization problem is to find a set    S  ‚äÜ  Œ©      S  normal-Œ©    S\subseteq\Omega   which minimizes a submodular function subject to no constraints. This problem is computable in (strongly) 3 4  polynomial time . 5 6 Computing the minimum cut in a graph is a special case of this general minimization problem. Unfortunately, however, even simple constraints like cardinality lower bound constraints make this problem NP hard , with polynomial lower bound approximation factors. 7 8  Submodular Maximization  Unlike minimization, maximization of submodular functions is usually NP-hard . Many problems, such as max cut and the maximum coverage problem , can be cast as special cases of this general maximization problem under suitable constraints. Typically, the approximation algorithms for these problems are based on either greedy algorithms or local search algorithms . The problem of maximizing a symmetric non-monotone submodular function subject to no constraints admits a 1/2 approximation algorithm. 9 Computing the maximum cut of a graph is a special case of this problem. The more general problem of maximizing an arbitrary non-monotone submodular function subject to no constraints also admits a 1/2 approximation algorithm. 10 The problem of maximizing a monotone submodular function subject to a cardinality constraint admits a    1  -   1  /  e       1    1  e     1-1/e   approximation algorithm. 11 The maximum coverage problem is a special case of this problem. The more general problem of maximizing a monotone submodular function subject to a matroid constraint also admits a    1  -   1  /  e       1    1  e     1-1/e   approximation algorithm. 12 13 Many of these algorithms can be unified within a semi-differential based framework of algorithms. 14  Related Optimization Problems  Apart from submodular minimization and maximization, another natural problem is Difference of Submodular Optimization. 15 16 Unfortunately, this problem is not only NP hard, but also inapproximable. 17 A related optimization problem is minimize or maximize a submodular function, subject to a submodular level set constraint (also called submodular optimization subject to submodular cover or submodular knapsack constraint). This problem admits bounded approximation guarantees. 18 Another optimization problem involves partitioning data based on a submodular function, so as to maximize the average welfare. This problem is called the submodular welfare problem. 19  Applications  Submodular functions naturally occur in several real world applications, in economics , game theory , machine learning and computer vision . Owing the diminishing returns property, submodular functions naturally model costs of items, since there is often a larger discount, with an increase in the items one buys. Submodular functions model notions of complexity, similarity and cooperation when they appear in minimization problems. In maximization problems, on the other hand, they model notions of diversity, information and coverage. For more information on applications of submodularity, particularly in machine learning, see 20 21 22  See also   Supermodular function  Matroid , Polymatroid  Utility functions on indivisible goods   Citations  References         External links   http://www.cs.berkeley.edu/~stefje/references.html has a longer bibliography   "      Matroid theory     ‚Ü©  Fujishige (2005) p.22 ‚Ü©                         