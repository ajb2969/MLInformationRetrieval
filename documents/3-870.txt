   Otway–Rees protocol      Otway–Rees protocol   The Otway–Rees protocol is a computer network  authentication  protocol designed for use on insecure networks (e.g. the Internet ). It allows individuals communicating over such a network to prove their identity to each other while also preventing eavesdropping or replay attacks and allowing for the detection of modification.  The protocol can be specified as follows in security protocol notation , where A lice is authenticating herself to B ob using a server S ( M is a session-identifier, N A and N B are nonces ):        A  →  B   :   M  ,  A  ,  B  ,    {   N  A   ,  M  ,  A  ,  B  }    K   A  S         normal-:   normal-→  A  B    M  A  B   subscript    subscript  N  A   M  A  B    subscript  K    A  S        A\rightarrow B:M,A,B,\{N_{A},M,A,B\}_{K_{AS}}          B  →  S   :   M  ,  A  ,  B  ,    {   N  A   ,  M  ,  A  ,  B  }    K   A  S     ,    {   N  B   ,  M  ,  A  ,  B  }    K   B  S         normal-:   normal-→  B  S    M  A  B   subscript    subscript  N  A   M  A  B    subscript  K    A  S      subscript    subscript  N  B   M  A  B    subscript  K    B  S        B\rightarrow S:M,A,B,\{N_{A},M,A,B\}_{K_{AS}},\{N_{B},M,A,B\}_{K_{BS}}          S  →  B   :   M  ,    {   N  A   ,   K   A  B    }    K   A  S     ,    {   N  B   ,   K   A  B    }    K   B  S         normal-:   normal-→  S  B    M   subscript    subscript  N  A    subscript  K    A  B      subscript  K    A  S      subscript    subscript  N  B    subscript  K    A  B      subscript  K    B  S        S\rightarrow B:M,\{N_{A},K_{AB}\}_{K_{AS}},\{N_{B},K_{AB}\}_{K_{BS}}          B  →  A   :   M  ,    {   N  A   ,   K   A  B    }    K   A  S         normal-:   normal-→  B  A    M   subscript    subscript  N  A    subscript  K    A  B      subscript  K    A  S        B\rightarrow A:M,\{N_{A},K_{AB}\}_{K_{AS}}      Note: The above steps do not authenticate B to A .  Attacks on the protocol  There are a variety of attacks on this protocol currently published.  One problem with this protocol is that a malicious intruder can arrange for A and B to end up with different keys. Here is how: after A and B execute the first three messages, B has received the key    K   A  B      subscript  K    A  B     K_{AB}   . The intruder then intercepts the fourth message. He resends message 2, which results in S generating a new key    K   A  B   ′     subscript   superscript  K  normal-′     A  B     K^{\prime}_{AB}   , subsequently sent to B . The intruder intercepts this message too, but sends to '''A '''the part of it that B would have sent to A . So now A has finally received the expected fourth message, but with    K   A  B   ′     subscript   superscript  K  normal-′     A  B     K^{\prime}_{AB}   instead of    K   A  B      subscript  K    A  B     K_{AB}   .  Another problem is that although the server tells B that A used a nonce, B doesn't know if this was a replay of an old message. Specifically, an intruder could discover an older nonce. The older nonce could be reused to authenticate against B .  See also   Kerberos (protocol)  Needham–Schroeder protocol  Yahalom (protocol)  Wide Mouth Frog protocol   "  Category:Computer access control protocols  Category:Authentication protocols  Category:Key transport protocols  Category:Symmetric-key cryptography   