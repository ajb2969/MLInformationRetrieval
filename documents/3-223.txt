


Finite volume method




Finite volume method

The finite-volume method (FVM) is a method for representing and evaluating partial differential equations in the form of algebraic equations [LeVeque, 2002; Toro, 1999]. Similar to the finite difference method or finite element method, values are calculated at discrete places on a meshed geometry. "Finite volume" refers to the small volume surrounding each node point on a mesh. In the finite volume method, volume integrals in a partial differential equation that contain a divergence term are converted to surface integrals, using the divergence theorem. These terms are then evaluated as fluxes at the surfaces of each finite volume. Because the flux entering a given volume is identical to that leaving the adjacent volume, these methods are conservative. Another advantage of the finite volume method is that it is easily formulated to allow for unstructured meshes. The method is used in many computational fluid dynamics packages.
1D example
Consider a simple 1D advection problem defined by the following partial differential equation



Here, 
 
 
 
  represents the state variable and 
 
 
 
  represents the flux or flow of 
 
 
 
 . Conventionally, positive 
 
 
 
  represents flow to the right while negative 
 
 
 
  represents flow to the left. If we assume that equation (1) represents a flowing medium of constant area, we can sub-divide the spatial domain, 
 
 
 
 , into finite volumes or cells with cell centres indexed as 
 
 
 
 . For a particular cell, 
 
 
 
 , we can define the volume average value of 
 
 
 
  at time 
 
 
 
  and 
 
 
 
 , as



and at time 
 
 
 
  as,



where 
 
 
 
  and 
 
 
 
  represent locations of the upstream and downstream faces or edges respectively of the 
 
 
 
  cell.
Integrating equation (1) in time, we have:



where 
 
 
 
 .
To obtain the volume average of 
 
 
 
  at time 
 
 
 
 , we integrate 
 
 
 
  over the cell volume, 
 
 
 
  and divide the result by 
 
 
 
 , i.e.



We assume that 
 
 
 
  is well behaved and that we can reverse the order of integration. Also, recall that flow is normal to the unit area of the cell. Now, since in one dimension 
 
 
 
 , we can apply the divergence theorem, i.e. 
 
 
 
 , and substitute for the volume integral of the divergence with the values of 
 
 
 
  evaluated at the cell surface (edges 
 
 
 
  and 
 
 
 
 ) of the finite volume as follows:



where 
 
 
 
 .
We can therefore derive a semi-discrete numerical scheme for the above problem with cell centres indexed as 
 
 
 
 , and with cell edge fluxes indexed as 
 
 
 
 , by differentiating (6) with respect to time to obtain:



where values for the edge fluxes, 
 
 
 
 , can be reconstructed by interpolation or extrapolation of the cell averages. Equation (7) is exact for the volume averages; i.e., no approximations have been made during its derivation.
This method can also be applied to a 2D situation by considering the north and south faces along with the east and west faces around a node.
General conservation law
We can also consider the general conservation law problem, represented by the following PDE,



Here, 
 
 
 
  represents a vector of states and 
 
 
 
  represents the corresponding flux tensor. Again we can sub-divide the spatial domain into finite volumes or cells. For a particular cell, 
 
 
 
 
 , we take the volume integral over the total volume of the cell, 
 
 
 
 , which gives,



On integrating the first term to get the volume average and applying the divergence theorem to the second, this yields



where 
 
 
 
  represents the total surface area of the cell and 
 
 
 
  is a unit vector normal to the surface and pointing outward. So, finally, we are able to present the general result equivalent to (8), i.e.



Again, values for the edge fluxes can be reconstructed by interpolation or extrapolation of the cell averages. The actual numerical scheme will depend upon problem geometry and mesh construction. MUSCL reconstruction is often used in high resolution schemes where shocks or discontinuities are present in the solution.
Finite volume schemes are conservative as cell averages change through the edge fluxes. In other words, one cell's loss is another cell's gain!
See also

Finite element method
Flux limiter
Godunov's scheme
Godunov's theorem
High-resolution scheme
KIVA (Software)
MIT General Circulation Model
MUSCL scheme
Sergei K. Godunov
Total variation diminishing
Finite volume method for unsteady flow

References

Eymard, R. Gallouët, T. R. Herbin, R. (2000) The finite volume method Handbook of Numerical Analysis, Vol. VII, 2000, p. 713–1020. Editors: P.G. Ciarlet and J.L. Lions.
LeVeque, Randall (2002), Finite Volume Methods for Hyperbolic Problems, Cambridge University Press.
Toro, E. F. (1999), Riemann Solvers and Numerical Methods for Fluid Dynamics, Springer-Verlag.

Further reading

Patankar, Suhas V. (1980), Numerical Heat Transfer and Fluid Flow, Hemisphere.
Hirsch, C. (1990), Numerical Computation of Internal and External Flows, Volume 2: Computational Methods for Inviscid and Viscous Flows, Wiley.
Laney, Culbert B. (1998), Computational Gas Dynamics, Cambridge University Press.
LeVeque, Randall (1990), Numerical Methods for Conservation Laws, ETH Lectures in Mathematics Series, Birkhauser-Verlag.
Tannehill, John C., et al., (1997), Computational Fluid mechanics and Heat Transfer, 2nd Ed., Taylor and Francis.
Wesseling, Pieter (2001), Principles of Computational Fluid Dynamics, Springer-Verlag.

External links

The finite volume method by R. Eymard, T Gallouët and R. Herbin, update of the article published in Handbook of Numerical Analysis, 2000

, available under the GFDL.
FiPy: A Finite Volume PDE Solver Using Python from NIST.
CLAWPACK: a software package designed to compute numerical solutions to hyperbolic partial differential equations using a wave propagation approach

"
Category:Numerical differential equations Category:Computational fluid dynamics Category:Numerical analysis


