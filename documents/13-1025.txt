   Zig-zag product      Zig-zag product   In graph theory , the zig-zag product of regular graphs     G  ,  H     G  H    G,H   , denoted by    G  ∘  H      G  H    G\circ H   , takes a large graph (   G   G   G   ) and a small graph (   H   H   H   ), and produces a graph that approximately inherits the size of the large one but the degree of the small one. An important property of the zig-zag product is that if   H   H   H   is a good expander , then the expansion of the resulting graph is only slightly worse than the expansion of   G   G   G   .  Roughly speaking, the zig-zag product    G  ∘  H      G  H    G\circ H   replaces each vertex of   G   G   G   with a copy (cloud) of   H   H   H   , and connects the vertices by moving a small step (zig) inside a cloud, followed by a big step (zag) between two clouds, and finally performs another small step inside the destination cloud.  The zigzag product was introduced by . When the zig-zag product was first introduced, it was used for the explicit construction of constant degree expanders and extractors. Later on the zig-zag product was used in computational complexity theory to prove that symmetric logspace and logspace are equal .  Definition  Let   G   G   G   be a   D   D   D   -regular graph on    [  N  ]     delimited-[]  N    [N]   with rotation map     Rot  G     subscript  Rot  G    \mathrm{Rot}_{G}   and let   H   H   H   be a   d   d   d   -regular graph on    [  D  ]     delimited-[]  D    [D]   with rotation map    Rot  H     subscript  Rot  H    \mathrm{Rot}_{H}   . The zig-zag product    G  ∘  H      G  H    G\circ H   is defined to be the    d  2     superscript  d  2    d^{2}   -regular graph on     [  N  ]   ×   [  D  ]        delimited-[]  N    delimited-[]  D     [N]\times[D]   whose rotation map    Rot   G  ∘  H      subscript  Rot    G  H     \mathrm{Rot}_{G\circ H}   is as follows:      Rot   G  ∘  H     (   (  v  ,  a  )   ,   (  i  ,  j  )   )        subscript  Rot    G  H      v  a    i  j      \mathrm{Rot}_{G\circ H}((v,a),(i,j))   :   Let     (   a  ′   ,   i  ′   )   =    Rot  H    (  a  ,  i  )          superscript  a  normal-′    superscript  i  normal-′       subscript  Rot  H    a  i      (a^{\prime},i^{\prime})=\mathrm{Rot}_{H}(a,i)   .  Let     (  w  ,   b  ′   )   =    Rot  G    (  v  ,   a  ′   )         w   superscript  b  normal-′       subscript  Rot  G    v   superscript  a  normal-′       (w,b^{\prime})=\mathrm{Rot}_{G}(v,a^{\prime})   .  Let     (  b  ,   j  ′   )   =    Rot  H    (   b  ′   ,  j  )         b   superscript  j  normal-′       subscript  Rot  H     superscript  b  normal-′   j      (b,j^{\prime})=\mathrm{Rot}_{H}(b^{\prime},j)   .  Output    (   (  w  ,  b  )   ,   (   j  ′   ,   i  ′   )   )      w  b     superscript  j  normal-′    superscript  i  normal-′      ((w,b),(j^{\prime},i^{\prime}))   .   Properties  Reduction of the degree  It is immediate from the definition of the zigzag product that it transforms a graph   G   G   G   to a new graph which is    d  2     superscript  d  2    d^{2}   -regular. Thus if   G   G   G   is a significantly larger than   H   H   H   , the zigzag product will reduce the degree of   G   G   G   . Roughly speaking, by amplifying each vertex of   G   G   G   into a cloud of the size of   H   H   H   the product in fact splits the edges of each original vertex between the vertices of the cloud that replace it.  Spectral gap preservation  The expansion of a graph can be measured by its spectral gap. An important property of the zigzag product is the preservation of the spectral gap . That is, if   H   H   H   is a “good enough” expander (has a large spectral gap) then the expansion of the zigzag product is close to the original expansion of   G   G   G   .  Formally: Define a    (  N  ,  D  ,  λ  )     N  D  λ    (N,D,\lambda)   -graph as any   D   D   D   -regular graph on   N   N   N   vertices, whose second largest eigenvalue (of the associated random walk) has absolute value at most   λ   λ   \lambda   .  Let    G  1     subscript  G  1    G_{1}   be a    (   N  1   ,   D  1   ,   λ  1   )      subscript  N  1    subscript  D  1    subscript  λ  1     (N_{1},D_{1},\lambda_{1})   -graph and    G  2     subscript  G  2    G_{2}   be a    (   D  1   ,   D  2   ,   λ  2   )      subscript  D  1    subscript  D  2    subscript  λ  2     (D_{1},D_{2},\lambda_{2})   -graph, then     G  ∘  z   H        G  z   H    G\circ{z}H   is a    (    N  1   ⋅   D  1    ,   D  2  2   ,   f   (   λ  1   ,   λ  2   )    )      normal-⋅   subscript  N  1    subscript  D  1     superscript   subscript  D  2   2     f    subscript  λ  1    subscript  λ  2       (N_{1}\cdot D_{1},D_{2}^{2},f(\lambda_{1},\lambda_{2}))   -graph, where     f   (   λ  1   ,   λ  2   )    <    λ  1   +   λ  2   +   λ  2  2          f    subscript  λ  1    subscript  λ  2        subscript  λ  1    subscript  λ  2    superscript   subscript  λ  2   2      f(\lambda_{1},\lambda_{2})<\lambda_{1}+\lambda_{2}+\lambda_{2}^{2}   .  Connectivity preservation  The zigzag product    G  ∘  H      G  H    G\circ H   operates separately on each connected component of   G   G   G   .  Formally speaking, given two graphs   G   G   G   , a   D   D   D   -regular graph on    [  N  ]     delimited-[]  N    [N]   and   H   H   H   , a   d   d   d   -regular graph on    [  D  ]     delimited-[]  D    [D]   - if    S  ⊆   [  N  ]       S   delimited-[]  N     S\subseteq[N]   is a connected component of   G   G   G   then       G  |   S   ∘  H   =     G  ∘  H   |    S  ×  D           evaluated-at  G  S   H    evaluated-at    G  H     S  D      G|_{S}\circ H=G\circ H|_{S\times D}   , where     G  |   S     evaluated-at  G  S    G|_{S}   is the subgraph of   G   G   G   induced by   S   S   S   (i.e., the graph on   S   S   S   which contains all of the edges in   G   G   G   between vertices in   S   S   S   ).  Applications  Construction of constant degree expanders  In 2002 Omer Reingold, Salil Vadhan, and Avi Wigderson have given a simple, explicit combinatorial construction of constant-degree expander graphs. The construction is iterative, and needs as a basic building block a single, expander of constant size. In each iteration the zigzag product is used in order to generate another graph whose size is increased but its degree and expansion remains unchanged. This process continues, yielding arbitrarily large expanders.  From the properties of the zigzag product mentioned above, we see that the product of a large graph with a small graph, inherits a size similar to the large graph, and degree similar to the small graph, while preserving its expansion properties from both, thus enabling to increase the size of the expander without deleterious effects.  Solving the undirected s-t connectivity problem in logarithmic space  In 2005 Omer Reingold introduced an algorithm that solves the undirected st-connectivity problem, the problem of testing whether there is a path between two given vertices in an undirected graph, using only logarithmic space. The algorithm relies heavily on the zigzag product.  Roughly speaking, in order to solve the undirected s-t connectivity problem in logarithmic space, the input graph is transformed, using a combination of powering and the zigzag product, into a constant-degree regular graph with a logarithmic diameter. The power product increases the expansion (hence reduces the diameter) at the price of increasing the degree, and the zigzag product is used to reduce the degree while preserving the expansion.  See also   Graph operations   References    .   .   .   "  Category:Graph products   