   Neumann–Neumann methods      Neumann–Neumann methods   In mathematics, Neumann–Neumann methods are domain decomposition preconditioners named so because they solve a Neumann problem on each subdomain on both sides of the interface between the subdomains. 1 Just like all domain decomposition methods, so that the number of iterations does not grow with the number of subdomains, Neumann–Neumann methods require the solution of a coarse problem to provide global communication. The balancing domain decomposition is a Neumann–Neumann method with a special kind of coarse problem.  More specifically, consider a domain Ω, on which we wish to solve the Poisson equation        -   Δ  u    =  f   ,     u  |    ∂  Ω    =  0      formulae-sequence        normal-Δ  u    f      evaluated-at  u    normal-Ω    0     -\Delta u=f,\qquad u|_{\partial\Omega}=0     for some function f . Split the domain into two non-overlapping subdomains Ω 1 and Ω 2 with common boundary Γ and let u 1 and u 2 be the values of u in each subdomain. At the interface between the two subdomains, the two solutions must satisfy the matching conditions        u  1   =   u  2    ,     ∂  n    u  1    =    ∂  n    u  2        formulae-sequence     subscript  u  1    subscript  u  2        subscript   n    subscript  u  1      subscript   n    subscript  u  2       u_{1}=u_{2},\qquad\partial_{n}u_{1}=\partial_{n}u_{2}     where n is the unit normal vector to Γ.  An iterative method for approximating each u i satisfying the matching conditions is to first solve the decoupled problems (i=1,2)        -   Δ   u  i   (  k  )      =   f  i    ,       u  i   (  k  )    |    ∂  Ω    =  0   ,      u  i   (  k  )    |   Γ   =   λ   (  k  )         formulae-sequence        normal-Δ   superscript   subscript  u  i   k      subscript  f  i     formulae-sequence     evaluated-at   superscript   subscript  u  i   k     normal-Ω    0      evaluated-at   subscript   superscript  u  k   i   normal-Γ    superscript  λ  k       -\Delta u_{i}^{(k)}=f_{i},\qquad u_{i}^{(k)}|_{\partial\Omega}=0,\quad u^{(k)}%
 _{i}|_{\Gamma}=\lambda^{(k)}     for some function λ (k) on Γ. We then solve the two Neumann problems         -   Δ   ψ  i   (  k  )      =  0   ,       ψ  i   (  k  )    |    ∂  Ω    =  0   ,     ∂  n    ψ  i   (  k  )     =     ∂  n    u  1   (  k  )     -    ∂  n    u  2   (  k  )         .     formulae-sequence        normal-Δ   superscript   subscript  ψ  i   k     0    formulae-sequence     evaluated-at   superscript   subscript  ψ  i   k     normal-Ω    0       subscript   n    superscript   subscript  ψ  i   k        subscript   n    superscript   subscript  u  1   k      subscript   n    superscript   subscript  u  2   k         -\Delta\psi_{i}^{(k)}=0,\qquad\psi_{i}^{(k)}|_{\partial\Omega}=0,\quad\partial%
 _{n}\psi_{i}^{(k)}=\partial_{n}u_{1}^{(k)}-\partial_{n}u_{2}^{(k)}.     We then obtain the next iterate by setting       λ   (   k  +  1   )    =    λ   (  k  )    -   ω   (       θ  1    ψ  1   (  k  )     |   Γ   -      θ  2    ψ  2   (  k  )     |   Γ    )          superscript  λ    k  1       superscript  λ  k     ω     evaluated-at     subscript  θ  1    superscript   subscript  ψ  1   k    normal-Γ    evaluated-at     subscript  θ  2    superscript   subscript  ψ  2   k    normal-Γ        \lambda^{(k+1)}=\lambda^{(k)}-\omega(\theta_{1}\psi_{1}^{(k)}|_{\Gamma}-\theta%
 _{2}\psi_{2}^{(k)}|_{\Gamma})     for some parameters ω, θ 1 and θ 2 .  This procedure can be viewed as a Richardson iteration for the iterative solution of the equations arising from the Schur complement method . 2  This continuous iteration can be discretized by the finite element method and then solved—in parallel—on a computer. The extension to more subdomains is straightforward, but using this method as stated as a preconditioner for the Schur complement system is not scalable with the number of subdomains; hence the need for a global coarse solve.  See also   Neumann–Dirichlet method   References    "  Category:Domain decomposition methods     A. Klawonn and O. B. Widlund, FETI and Neumann–Neumann iterative substructuring methods: connections and new results , Comm. Pure Appl. Math., 54 (2001), pp. 57–90. ↩  A. Quarteroni and A. Valli, Domain Decomposition Methods for Partial Differential Equations , Oxford Science Publications 1999. ↩     