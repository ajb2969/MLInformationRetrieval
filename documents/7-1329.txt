   Ellipsoid method      Ellipsoid method   In mathematical optimization , the ellipsoid method is an iterative method for minimizing  convex functions . When specialized to solving feasible linear optimization problems with rational data, the ellipsoid method is an algorithm which finds an optimal solution in a finite number of steps.  The ellipsoid method generates a sequence of ellipsoids whose volume uniformly decreases at every step, thus enclosing a minimizer of a convex function .  History  The ellipsoid method has a long history. As an iterative method , a preliminary version was introduced by Naum Z. Shor . In 1972, an approximation algorithm for real convex minimization was studied by Arkadi Nemirovski and David B. Yudin (Judin). As an algorithm for solving linear programming problems with rational data, the ellipsoid algorithm was studied by Leonid Khachiyan : Khachiyan's achievement was to prove the polynomial-time solvability of linear programs.  Following Khachiyan's work, the ellipsoid method was the only algorithm for solving linear programs whose runtime had been proved to be polynomial until Karmarkar's algorithm . However, the interior-point method and variants of the simplex algorithm are much faster than the ellipsoid method in practice. Karmarkar's algorithm is also faster in the worst case.  However, the ellipsoidal algorithm allows complexity theorists to achieve (worst-case) bounds that depend on the dimension of the problem and on the size of the data, but not on the number of rows, so it remained important in combinatorial optimization theory for many decades. 1 2 3 4 Only in the 21st century have interior-point algorithms with similar complexity properties appeared.  Description  A convex minimization problem consists of a convex function       f  0    (  x  )    :    ℝ  n   →  ℝ      normal-:     subscript  f  0   x    normal-→   superscript  ℝ  n   ℝ     f_{0}(x):\mathbb{R}^{n}\to\mathbb{R}   to be minimized over the variable   x   x   x   , convex inequality constraints of the form      f  i    (  x  )    ≤  0         subscript  f  i   x   0    f_{i}(x)\leq 0   , where the functions     f   i     subscript  f  i    \ f_{i}   are convex, and linear equality constraints of the form       h   i    (  x  )    =  0         subscript  h  i   x   0    \ h_{i}(x)=0   . We are also given an initial ellipsoid      ℰ   (  0  )    ⊂   ℝ  n        superscript  ℰ  0    superscript  ℝ  n     \mathcal{E}^{(0)}\subset\mathbb{R}^{n}   defined as       ℰ   (  0  )    =   {   z  ∈   ℝ  n    :      (   z  -   x  0    )   T    P   (  0  )    -  1     (   z  -   x  0    )    ≤  1   }        superscript  ℰ  0    conditional-set    z   superscript  ℝ  n         superscript    z   subscript  x  0    T    superscript   subscript  P  0     1      z   subscript  x  0     1      \mathcal{E}^{(0)}=\left\{z\in\mathbb{R}^{n}:(z-x_{0})^{T}P_{(0)}^{-1}(z-x_{0})%
 \leq 1\right\}     containing a minimizer     x   *     superscript  x     \ x^{*}   , where    P  ≻  0     succeeds  P  0    P\succ 0   and    x  0     subscript  x  0    x_{0}   is the center of   ℰ   ℰ   \mathcal{E}   . Finally, we require the existence of a cutting-plane oracle for the function   f   f   f   . One example of a cutting-plane is given by a subgradient    g   g   g   of   f   f   f   .  Unconstrained minimization  At the   k   k   k   -th iteration of the algorithm, we have a point    x   (  k  )      superscript  x  k    x^{(k)}   at the center of an ellipsoid     ℰ   (  k  )    =   {   x  ∈   ℝ  n    :      (   x  -   x   (  k  )     )   T    P   (  k  )    -  1     (   x  -   x   (  k  )     )    ≤  1   }        superscript  ℰ  k    conditional-set    x   superscript  ℝ  n         superscript    x   superscript  x  k    T    superscript   subscript  P  k     1      x   superscript  x  k     1      \mathcal{E}^{(k)}=\left\{x\in\mathbb{R}^{n}:(x-x^{(k)})^{T}P_{(k)}^{-1}(x-x^{(%
 k)})\leq 1\right\}   . We query the cutting-plane oracle to obtain a vector     g   (   k  +  1   )    ∈   ℝ  n        superscript  g    k  1     superscript  ℝ  n     g^{(k+1)}\in\mathbb{R}^{n}   such that      g    (   k  +  1   )   T     (    x  *   -   x   (  k  )     )    ≤  0         superscript  g      k  1   T       superscript  x     superscript  x  k     0    g^{(k+1)T}(x^{*}-x^{(k)})\leq 0   . We therefore conclude that        x  *   ∈    ℰ   (  k  )    ∩   {  z  :     g    (   k  +  1   )   T     (   z  -   x   (  k  )     )    ≤  0   }     .       superscript  x       superscript  ℰ  k    conditional-set  z       superscript  g      k  1   T      z   superscript  x  k     0       x^{*}\in\mathcal{E}^{(k)}\cap\{z:g^{(k+1)T}(z-x^{(k)})\leq 0\}.     We set    ℰ   (   k  +  1   )      superscript  ℰ    k  1     \mathcal{E}^{(k+1)}   to be the ellipsoid of minimal volume containing the half-ellipsoid described above and compute    x   (   k  +  1   )      superscript  x    k  1     x^{(k+1)}   . The update is given by       x   (   k  +  1   )    =    x   (  k  )    -    1   n  +  1     P   (  k  )      g  ~    (   k  +  1   )           superscript  x    k  1       superscript  x  k       1    n  1     subscript  P  k    superscript   normal-~  g     k  1        x^{(k+1)}=x^{(k)}-\frac{1}{n+1}P_{(k)}\tilde{g}^{(k+1)}          P   (   k  +  1   )    =     n  2     n  2   -  1     (    P   (  k  )    -    2   n  +  1     P   (  k  )      g  ~    (   k  +  1   )      g  ~     (   k  +  1   )   T     P   (  k  )      )         subscript  P    k  1         superscript  n  2      superscript  n  2   1       subscript  P  k       2    n  1     subscript  P  k    superscript   normal-~  g     k  1     superscript   normal-~  g       k  1   T     subscript  P  k        P_{(k+1)}=\frac{n^{2}}{n^{2}-1}\left(P_{(k)}-\frac{2}{n+1}P_{(k)}\tilde{g}^{(k%
 +1)}\tilde{g}^{(k+1)T}P_{(k)}\right)     where      g  ~    (   k  +  1   )    =    (   1  /     g    (   k  +  1   )   T    P   g   (   k  +  1   )       )    g   (   k  +  1   )          superscript   normal-~  g     k  1        1       superscript  g      k  1   T    P   superscript  g    k  1        superscript  g    k  1       \tilde{g}^{(k+1)}=(1/\sqrt{g^{(k+1)T}Pg^{(k+1)}})g^{(k+1)}   . The stopping criterion is given by the property that          g    (  k  )   T     P   (  k  )     g   (  k  )      ≤  ϵ  ⇒    f   (   x   (  k  )    )    -   f   (   x  *   )     ≤  ϵ   .             superscript  g    k  T     subscript  P  k    superscript  g  k     ϵ    normal-⇒        f   superscript  x  k      f   superscript  x           ϵ     \sqrt{g^{(k)T}P_{(k)}g^{(k)}}\leq\epsilon\Rightarrow f(x^{(k)})-f(x^{*})\leq\epsilon.         Sample sequence of iterates    (Figure)      k  =  0      k  0    k=0        (Figure)      k  =  3      k  3    k=3         Inequality-constrained minimization  At the   k   k   k   -th iteration of the algorithm for constrained minimization, we have a point    x   (  k  )      superscript  x  k    x^{(k)}   at the center of an ellipsoid    ℰ   (  k  )      superscript  ℰ  k    \mathcal{E}^{(k)}   as before. We also must maintain a list of values    f  best   (  k  )      superscript   subscript  f  best   k    f_{\rm{best}}^{(k)}   recording the smallest objective value of feasible iterates so far. Depending on whether or not the point    x   (  k  )      superscript  x  k    x^{(k)}   is feasible, we perform one of two tasks:   If    x   (  k  )      superscript  x  k    x^{(k)}   is feasible, perform essentially the same update as in the unconstrained case, by choosing a subgradient    g  0     subscript  g  0    g_{0}   that satisfies           g  0  T    (    x  *   -   x   (  k  )     )    +    f  0    (   x   (  k  )    )     -   f  best   (  k  )     ≤  0             superscript   subscript  g  0   T      superscript  x     superscript  x  k        subscript  f  0    superscript  x  k      superscript   subscript  f  best   k    0    g_{0}^{T}(x^{*}-x^{(k)})+f_{0}(x^{(k)})-f_{\rm{best}}^{(k)}\leq 0      If    x   (  k  )      superscript  x  k    x^{(k)}   is infeasible and violates the   j   j   j   -th constraint, update the ellipsoid with a feasibility cut. Our feasibility cut may be a subgradient    g  j     subscript  g  j    g_{j}   of    f  j     subscript  f  j    f_{j}   which must satisfy          g  j  T    (   z  -   x   (  k  )     )    +    f  j    (   x   (  k  )    )     ≤  0           superscript   subscript  g  j   T     z   superscript  x  k        subscript  f  j    superscript  x  k     0    g_{j}^{T}(z-x^{(k)})+f_{j}(x^{(k)})\leq 0     for all feasible   z   z   z   .  Application to linear programming  Inequality-constrained minimization of a function that is zero everywhere corresponds to the problem of simply identifying any feasible point. It turns out that any linear programming problem can be reduced to a linear feasibility problem (e.g. minimize the zero function subject to some linear inequality and equality constraints). One way to do this is by combining the primal and dual linear programs together into one program, and adding the additional (linear) constraint that the value of the primal solution is no worse than the value of the dual solution. Another way is to treat the objective of the linear program as an additional constraint, and use binary search to find the optimum value.  Performance  The ellipsoid method is used on low-dimensional problems, such as planar location problems, where it is numerically stable . On even "small"-sized problems, it suffers from numerical instability and poor performance in practice.  However, the ellipsoid method is an important theoretical technique in combinatorial optimization . In computational complexity theory , the ellipsoid algorithm is attractive because its complexity depends on the number of columns and the digital size of the coefficients, but not on the number of rows. In the 21st century, interior-point algorithms with similar properties have appeared .  Notes    Further reading   Dmitris Alevras and Manfred W. Padberg, Linear Optimization and Extensions: Problems and Extensions , Universitext, Springer-Verlag, 2001. (Problems from Padberg with solutions.)  V. Chandru and M.R.Rao, Linear Programming, Chapter 31 in Algorithms and Theory of Computation Handbook , edited by M.J.Atallah, CRC Press 1999, 31-1 to 31-37.  V. Chandru and M.R.Rao, Integer Programming, Chapter 32 in '' Algorithms and Theory of Computation Handbook'', edited by M.J.Atallah, CRC Press 1999, 32-1 to 32-45.  George B. Dantzig and Mukund N. Thapa. 1997. Linear programming 1: Introduction . Springer-Verlag.  George B. Dantzig and Mukund N. Thapa. 2003. Linear Programming 2: Theory and Extensions . Springer-Verlag.  M. Grötschel, L. Lovász , A. Schrijver : Geometric Algorithms and Combinatorial Optimization , Springer, 1988    L. Lovász : An Algorithmic Theory of Numbers, Graphs, and Convexity , CBMS-NSF Regional Conference Series in Applied Mathematics 50, SIAM, Philadelphia, Pennsylvania, 1986  Kattta G. Murty, Linear Programming , Wiley, 1983.  M. Padberg, Linear Optimization and Extensions , Second Edition, Springer-Verlag, 1999.  Christos H. Papadimitriou and Kenneth Steiglitz, Combinatorial Optimization: Algorithms and Complexity , Corrected republication with a new preface, Dover.  Alexander Schrijver , Theory of Linear and Integer Programming . John Wiley & sons, 1998, ISBN 0-471-98232-6   External links   EE364b , a Stanford course homepage   "  Category:Combinatorial optimization  Category:Operations research  Category:Convex optimization  Category:Linear programming     M. Grötschel, L. Lovász , A. Schrijver : Geometric Algorithms and Combinatorial Optimization , Springer, 1988. ↩  L. Lovász : An Algorithmic Theory of Numbers, Graphs, and Convexity , CBMS-NSF Regional Conference Series in Applied Mathematics 50, SIAM, Philadelphia, Pennsylvania, 1986. ↩  V. Chandru and M.R.Rao, Linear Programming, Chapter 31 in Algorithms and Theory of Computation Handbook , edited by M. J. Atallah , CRC Press 1999, 31-1 to 31-37. ↩  V. Chandru and M.R.Rao, Integer Programming, Chapter 32 in '' Algorithms and Theory of Computation Handbook'', edited by M.J.Atallah, CRC Press 1999, 32-1 to 32-45. ↩     