   De Boor's algorithm      De Boor's algorithm   In the mathematical subfield of numerical analysis the de Boor's algorithm is a fast and numerically stable  algorithm for evaluating spline curves in B-spline form. It is a generalization of the de Casteljau's algorithm for Bézier curves . The algorithm was devised by Carl R. de Boor . Simplified, potentially faster variants of the de Boor algorithm have been created but they suffer from comparatively lower stability. 1 2  Introduction  The general setting is as follows. We would like to construct a curve whose shape is described by a sequence of p points     𝐝  0   ,   𝐝  1   ,  …  ,   𝐝   p  -  1        subscript  𝐝  0    subscript  𝐝  1   normal-…   subscript  𝐝    p  1      \mathbf{d}_{0},\mathbf{d}_{1},\dots,\mathbf{d}_{p-1}   , which plays the role of a control polygon . The curve can be described as a function    𝐬   (  x  )       𝐬  x    \mathbf{s}(x)   of one parameter x . To pass through the sequence of points, the curve must satisfy      𝐬   (   u  0   )    =    𝐝  0   ,  …    ,    𝐬   (   u   p  -  1    )    =   𝐝   p  -  1        formulae-sequence      𝐬   subscript  u  0      subscript  𝐝  0   normal-…        𝐬   subscript  u    p  1      subscript  𝐝    p  1       \mathbf{s}(u_{0})=\mathbf{d}_{0},\dots,\mathbf{s}(u_{p-1})=\mathbf{d}_{p-1}   . But this is not quite the case: in general we are satisfied that the curve "approximates" the control polygon. We assume that u 0 , ..., u p-1 are given to us along with     𝐝  0   ,   𝐝  1   ,  …  ,   𝐝   p  -  1        subscript  𝐝  0    subscript  𝐝  1   normal-…   subscript  𝐝    p  1      \mathbf{d}_{0},\mathbf{d}_{1},\dots,\mathbf{d}_{p-1}   .  One approach to solve this problem is by splines . A spline is a curve that is a piecewise n th degree polynomial. This means that, on any interval [u i , u i+1 ) , the curve must be equal to a polynomial of degree at most n . It may be equal to different polynomials on different intervals. The polynomials must be synchronized : when the polynomials from intervals [u i-1 , u i ) and [u i , u i+1 ) meet at the point u i , they must have the same value at this point and their derivatives must be equal (to ensure that the curve is smooth).  De Boor's algorithm is an algorithm which, given u 0 , ..., u p-1 and     𝐝  0   ,   𝐝  1   ,  …  ,   𝐝   p  -  1        subscript  𝐝  0    subscript  𝐝  1   normal-…   subscript  𝐝    p  1      \mathbf{d}_{0},\mathbf{d}_{1},\dots,\mathbf{d}_{p-1}   , finds the value of spline curve    𝐬   (  x  )       𝐬  x    \mathbf{s}(x)   at a point x . It uses O (n 2 ) + O (n + p) operations where n is the degree and p the number of control points of s .  Outline of the algorithm  Suppose we want to evaluate the spline curve for a parameter value    x  ∈   [   u  ℓ   ,   u   ℓ  +  1    ]       x    subscript  u  normal-ℓ    subscript  u    normal-ℓ  1       x\in[u_{\ell},u_{\ell+1}]   . We can express the curve as        𝐬   (  x  )    =    ∑   i  =  0    p  -  1      𝐝  i    N  i  n    (  x  )      ,        𝐬  x     superscript   subscript     i  0      p  1       subscript  𝐝  i    superscript   subscript  N  i   n   x      \mathbf{s}(x)=\sum_{i=0}^{p-1}\mathbf{d}_{i}N_{i}^{n}(x),   where 3         N  i  n    (  x  )    =      x  -   u  i      u   i  +  n    -   u  i      N  i   n  -  1     (  x  )    +      u   i  +  n  +  1    -  x     u   i  +  n  +  1    -   u   i  +  1       N   i  +  1    n  -  1     (  x  )      ,         superscript   subscript  N  i   n   x           x   subscript  u  i       subscript  u    i  n     subscript  u  i      superscript   subscript  N  i     n  1    x          subscript  u    i  n  1    x      subscript  u    i  n  1     subscript  u    i  1       superscript   subscript  N    i  1      n  1    x      N_{i}^{n}(x)=\frac{x-u_{i}}{u_{i+n}-u_{i}}N_{i}^{n-1}(x)+\frac{u_{i+n+1}-x}{u_%
 {i+n+1}-u_{i+1}}N_{i+1}^{n-1}(x),     and       N  i  0    (  x  )   =   {      1  ,       if  x   ∈   [   u  i   ,   u   i  +  1    )         0  ,     otherwise         fragments   superscript   subscript  N  i   0    fragments  normal-(  x  normal-)     fragments  normal-{    1      if  x     subscript  u  i    subscript  u    i  1        0  otherwise       N_{i}^{0}(x)=\left\{\begin{matrix}1,&\mbox{if }x\in[u_{i},u_{i+1})\\
 0,&\mbox{otherwise }\end{matrix}\right.     Due to the spline locality property,       𝐬   (  x  )    =    ∑   i  =   ℓ  -  n    ℓ     𝐝  i    N  i  n    (  x  )           𝐬  x     superscript   subscript     i    normal-ℓ  n     normal-ℓ      subscript  𝐝  i    superscript   subscript  N  i   n   x      \mathbf{s}(x)=\sum_{i=\ell-n}^{\ell}\mathbf{d}_{i}N_{i}^{n}(x)   So the value    𝐬   (  x  )       𝐬  x    \mathbf{s}(x)   is determined by the control points     𝐝   ℓ  -  n    ,   𝐝    ℓ  -  n   +  1    ,  …  ,   𝐝  ℓ       subscript  𝐝    normal-ℓ  n     subscript  𝐝      normal-ℓ  n   1    normal-…   subscript  𝐝  normal-ℓ     \mathbf{d}_{\ell-n},\mathbf{d}_{\ell-n+1},\dots,\mathbf{d}_{\ell}   ; the other control points    𝐝  i     subscript  𝐝  i    \mathbf{d}_{i}   have no influence. De Boor's algorithm, described in the next section, is a procedure which efficiently calculates the expression for    𝐬   (  x  )       𝐬  x    \mathbf{s}(x)   .  The algorithm  Suppose    x  ∈   [   u  ℓ   ,   u   ℓ  +  1    )       x    subscript  u  normal-ℓ    subscript  u    normal-ℓ  1       x\in[u_{\ell},u_{\ell+1})   and     𝐝  i   [  0  ]    =   𝐝  i        superscript   subscript  𝐝  i    delimited-[]  0     subscript  𝐝  i     \mathbf{d}_{i}^{[0]}=\mathbf{d}_{i}   for    i  =    ℓ  -  n   ,  …  ,  ℓ       i     normal-ℓ  n   normal-…  normal-ℓ     i=\ell-n,\dots,\ell   . Now calculate        𝐝  i   [  k  ]    =     (   1  -   α   k  ,  i     )    𝐝   i  -  1    [   k  -  1   ]     +    α   k  ,  i     𝐝  i   [   k  -  1   ]       ;    k  =   1  ,  …  ,  n    ;   i  =     ℓ  -  n   +  k   ,  …  ,  ℓ        formulae-sequence     superscript   subscript  𝐝  i    delimited-[]  k          1   subscript  α   k  i      superscript   subscript  𝐝    i  1     delimited-[]    k  1         subscript  α   k  i     superscript   subscript  𝐝  i    delimited-[]    k  1         formulae-sequence    k   1  normal-…  n      i       normal-ℓ  n   k   normal-…  normal-ℓ       \mathbf{d}_{i}^{[k]}=(1-\alpha_{k,i})\mathbf{d}_{i-1}^{[k-1]}+\alpha_{k,i}%
 \mathbf{d}_{i}^{[k-1]};\qquad k=1,\dots,n;\quad i=\ell-n+k,\dots,\ell   with        α   k  ,  i    =    x  -   u  i      u    i  +  n  +  1   -  k    -   u  i      .       subscript  α   k  i        x   subscript  u  i       subscript  u      i  n  1   k     subscript  u  i       \alpha_{k,i}=\frac{x-u_{i}}{u_{i+n+1-k}-u_{i}}.   Then     𝐬   (  x  )    =   𝐝  ℓ   [  n  ]          𝐬  x    superscript   subscript  𝐝  normal-ℓ    delimited-[]  n      \mathbf{s}(x)=\mathbf{d}_{\ell}^{[n]}   .  See also   De Casteljau's algorithm  Bézier curve  NURBS   External links   De Boor's Algorithm  The DeBoor-Cox Calculation   Computer code  TinySpline: Open source C-library for splines which implements De Boor's algorithm  References    "  Category:Numerical analysis  Category:Splines  Category:Interpolation     ↩  ↩  http://www.cs.mtu.edu/~shene/COURSES/cs3621/NOTES/spline/B-spline/bspline-basis.html ↩     