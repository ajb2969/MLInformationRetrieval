


Block matrix pseudoinverse




Block matrix pseudoinverse

In mathematics, block matrix pseudoinverse is a formula of pseudoinverse of a partitioned matrix. This is useful for decomposing or approximating many algorithms updating parameters in signal processing, which are based on least squares method.
Derivation
Consider a column-wise partitioned matrix:



If the above matrix is full rank, the pseudoinverse matrices of it and its transpose are as follows.





 
  The pseudoinverse requires (n + p)-square matrix inversion.
To reduce complexity and introduce parallelism, we derive the following decomposed formula. From a block matrix inverse
 
 
 
 , we can have





 
  where orthogonal projection matrices are defined by






\begin{align} \mathbf P_A^\perp & = \mathbf I - \mathbf A (\mathbf A^T \mathbf A)^{-1} \mathbf A^T, \\ \mathbf P_B^\perp & = \mathbf I - \mathbf B (\mathbf B^T \mathbf B)^{-1} \mathbf B^T. \end{align} 
Interestingly, from the idempotence of projection matrix, we can verify that the pseudoinverse of block matrix consists of pseudoinverse of projected matrices:






Thus, we decomposed the block matrix pseudoinverse into two submatrix pseudoinverses, which cost n- and p-square matrix inversions, respectively.
Note that the above formulae are not necessarily valid if 
 
 
 
  does not have full rank – for example, if 
 
 
 
 , then



Application to least squares problems
Given the same matrices as above, we consider the following least squares problems, which appear as multiple objective optimizations or constrained problems in signal processing. Eventually, we can implement a parallel algorithm for least squares based on the following results.
Column-wise partitioning in over-determined least squares
Suppose a solution 
 
 
 
  solves an over-determined system:



Using the block matrix pseudoinverse, we have


 
  Therefore, we have a decomposed solution:



Row-wise partitioning in under-determined least squares
Suppose a solution 
 
 
 
  solves an under-determined system:



The minimum-norm solution is given by



Using the block matrix pseudoinverse, we have



Comments on matrix inversion
Instead of 
 
 
 
 , we need to calculate directly or indirectly



In a dense and small system, we can use singular value decomposition, QR decomposition, or Cholesky decomposition to replace the matrix inversions with numerical routines. In a large system, we may employ iterative methods such as Krylov subspace methods.
Considering parallel algorithms, we can compute 
 
 
 
  and 
 
 
 
  in parallel. Then, we finish to compute 
 
 
 
  and 
 
 
 
  also in parallel.
Block matrix inversion
Let a block matrix be


 
  We can get an inverse formula by combining the previous results in.1


 
  where 
 
 
 
  and 
 
 
 
 , respectively, Schur complements of 
 
 
 
  and 
 
 
 
 , are defined by 
 
 
 
 , and 
 
 
 
 
 . This relation is derived by using Block Triangular Decomposition. It is called simple block matrix inversion.2
Now we can obtain the inverse of the symmetric block matrix:









= \begin{bmatrix}
                (\mathbf A^T \mathbf P_B^\perp \mathbf A)^{-1}         
                & -(\mathbf A^T \mathbf A)^{-1}\mathbf A^T \mathbf B(\mathbf B^T \mathbf P_A^\perp \mathbf B)^{-1}
\\
                -(\mathbf B^T \mathbf B)^{-1}\mathbf B^T \mathbf A(\mathbf A^T \mathbf P_B^\perp \mathbf A)^{-1}
                & (\mathbf B^T \mathbf P_A^{\perp} \mathbf B)^{-1}
\end{bmatrix}  Since the block matrix is symmetric, we also have



Then, we can see how the Schur complements are connected to the projection matrices of the symmetric, partitioned matrix.
See also

Invertible matrix#Blockwise inversion

References
External links

The Matrix Reference Manual by Mike Brookes
Linear Algebra Glossary by John Burkardt
The Matrix Cookbook by Kaare Brandt Petersen
Lecture 8: Least-norm solutions of undetermined equations by Stephen P. Boyd

"
Category:Numerical linear algebra Category:Matrix theory



↩
[http://ieeexplore.ieee.org/xpls/abs_all.jsp?isnumber=30419&arnumber;;=1399280&count;=249&index;=181 S. Jo, S. W. Kim and T. J. Park, "Equally constrained affine projection algorithm," in Conference Record of the Thirty-Eighth Asilomar Conference on Signals, Systems and Computers, vol. 1, pp. 955–959, Nov. 7–10, 2004.]↩




