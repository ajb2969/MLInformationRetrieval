


Vector addition system




Vector addition system
A '''vector addition system (VAS)'''  is one of several mathematical modeling languages for the description of distributed systems. Vector addition systems were introduced by [[Richard M. Karp]] and Raymond E. Miller in 1969,{{cite journal|last1=Karp|first1=Ric
 hard M.|last2=Miller|first2=Raymond E.|title=Parallel program schemata|journal=Journal of Computer and System Sciences|date=May 1969|volume=3|issue=2|pages=147â€“195|doi=10.1016/S0022-0000(69)80011-5|url=http://dx.doi.org/10.1016/S0022-0000(69)80011-5}} and generalized to vector addition systems with states (VASS) by John E. Hopcroft and Jean-Jacques Pansiot in 1979.1 Both VAS and VASS are equivalent in many ways to Petri nets introduced earlier by Carl Adam Petri. 
Informal definition
A vector addition system consists of a finite set of integer vectors. An initial vector is seen as the initial values of multiple counters, and the vectors of the VAS are seen as updates. These counters may never drop below zero. More precisely, given an initial vector with non negative values, the vectors of the VAS can be added componentwise, given that every intermediate vector has non negative values. A vector addition system with states is a VAS equipped with control states. More precisely, it is a finite directed graph with arcs labelled by integer vectors. VASS have the same restriction that the counter values should never drop below zero.
Formal definitions and basic terminology

A VAS is a finite set 
 
 
 
  for some 
 
 
 
 
 .


A VASS is a finite directed graph

 
  such that 
 
 
 
  for some 
 
 
 
 .

Transitions

Let 
 
 
 
  be a VAS. Given a vector 
 
 
 
 
 , the vector 
 
 
 
  can be reached, in one transition, if 
 
 
 
  and 
 
 
 
 .


Let 
 
 
 
  be a VASS. Given a configuration

 
 
 , the configuration 
 
 
 
  can be reached, in one transition, if 
 
 
 
  and 
 
 
 
 .

See also

Petri net
Finite state machine
Communicating finite-state machine

References
"
Category:Formal specification languages Category:Models of computation Category:Concurrency (computer science) Category:Diagrams   Category:Software modeling language








