


Hermite interpolation




Hermite interpolation

In numerical analysis, Hermite interpolation, named after Charles Hermite, is a method of interpolating data points as a polynomial function. The generated Hermite polynomial is closely related to the Newton polynomial, in that both are derived from the calculation of divided differences.
Unlike Newton interpolation, Hermite interpolation matches an unknown function both in observed value, and the observed value of its first m derivatives. This means that n(m + 1) values


 
  must be known, rather than just the first n values required for Newton interpolation. The resulting polynomial may have degree at most n(m + 1) − 1, whereas the Newton polynomial has maximum degree n − 1. (In the general case, there is no need for m to be a fixed value; that is, some points may have more known derivatives than others. In this case the resulting polynomial may have degree N − 1, with N the number of data points.)
Usage
Simple case
When using divided differences to calculate the Hermite polynomial of a function f, the first step is to copy each point m times. (Here we will consider the simplest case 
 
 
 
  for all points.) Therefore, given 
 
 
 
  data points 
 
 
 
 , and values 
 
 
 
  and 
 
 
 
  for a function 
 
 
 
  that we want to interpolate, we create a new dataset


 
  such that



Now, we create a divided differences table for the points 
 
 
 
 . However, for some divided differences,


 
  which is undefined! In this case, we replace the divided difference by 
 
 
 
 . All others are calculated normally.
General case
In the general case, suppose a given point 
 
 
 
  has k derivatives. Then the dataset 
 
 
 
  contains k identical copies of 
 
 
 
 . When creating the table, divided differences of 
 
 
 
  identical values will be calculated as



For example,





 
  etc.
Example
Consider the function 
 
 
 
 . Evaluating the function and its first two derivatives at 
 
 
 
 , we obtain the following data:






x

ƒ(x)

ƒ'(x)

ƒ''(x)



−1

2

−8

56



0

1

0

0



1

2

8

56





Since we have two derivatives to work with, we construct the set 
 
 
 
 . Our divided difference table is then:


 
  and the generated polynomial is


 
 
  by taking the coefficients from the diagonal of the divided difference table, and multiplying the kth coefficient by 
 
 
 
 , as we would when generating a Newton polynomial.
Error
Call the calculated polynomial H and original function f. Evaluating a point 
 
 
 
 , the error function is


 
  where c is an unknown within the range 
 
 
 
 , K is the total number of data-points, and 
 
 
 
  is the number of derivatives known at each 
 
 
 
  plus one.
See also

Cubic Hermite spline
Newton series, also known as finite differences
Neville's schema
Polynomial interpolation
Lagrange form of the interpolation polynomial
Bernstein form of the interpolation polynomial
Chinese remainder theorem - Applications

References




External links

Hermites Interpolating Polynomial at Mathworld

"
Category:Interpolation Category:Finite differences Category:Factorial and binomial topics


