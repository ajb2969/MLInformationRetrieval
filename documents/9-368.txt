   Error diffusion      Error diffusion   Error diffusion is a type of halftoning in which the quantization residual is distributed to neighboring pixels that have not yet been processed. Its main use is to convert a multi-level image into a binary image, though it has other applications.  Unlike many other halftoning methods, error diffusion is classified as an area operation, because what the algorithm does at one location influences what happens at other locations. This means buffering is required, and complicates parallel processing . Point operations, such as ordered dither , do not have these complications.  Error diffusion has the tendency to enhance edges in an image. This can make text in images more readable than in other halftoning techniques.  (Figure)  An error-diffused image   Early history  Richard Howland Ranger received United States patent 1790723 for his invention , "Facsimile system." The patent, which issued in 1931, describes a system for transmitting images over telephone or telegraph lines, or by radio. 1 Ranger's invention permitted continuous tone  photographs to be converted first into black and white, then transmitted to remote locations, which had a pen moving over a piece of paper. To render black, the pen was lowered to the paper; to produce white, the pen was raised. Shades of gray were rendered by intermittently raising and lowering the pen, depending upon the luminance of the gray desired.  Ranger's invention used capacitors to store charges, and vacuum tube comparators to determine when the present luminance, plus any accumulated error, was above a threshold (causing the pen to be raised) or below (causing the pen to be lowered). In this sense, it was an analog version of error diffusion.  Enter the digital era  Floyd and Steinberg described a system for performing error diffusion on digital images based on a simple kernel:       1  16    [     -    #    7        3    5    1       ]         1  16    delimited-[]     normal-#  7   missing-subexpression    missing-subexpression     3  5  1   missing-subexpression    missing-subexpression        \frac{1}{16}\left[\begin{array}[]{ccccc}-&\#&7\\
 3&5&1\end{array}\right]     where "   -     -   " denotes a pixel in the current row which has already been processed (hence diffusing error to it would be pointless), and "#" denotes the pixel currently being processed.  Nearly concurrently, J F Jarvis, C N Judice, and W H Ninke of Bell Labs disclosed a similar method which they termed "minimized average error," using a larger kernel : 2       1  48    [     -    -    #    7    5      3    5    7    5    3      1    3    5    3    1     ]         1  48    delimited-[]      normal-#  7  5    3  5  7  5  3    1  3  5  3  1       \frac{1}{48}\left[\begin{array}[]{ccccc}-&-&\#&7&5\\
 3&5&7&5&3\\
 1&3&5&3&1\end{array}\right]     Algorithm description  Error diffusion takes a monochrome or color image and reduces the number of quantization levels. A popular application of error diffusion involves reducing the number of quantization states to just two per channel. This makes the image suitable for printing on binary printers such as black and white laser printers.  In the discussion which follows, it is assumed that the number of quantization states in the error diffused image is two per channel, unless otherwise stated.  One-dimensional error diffusion  The simplest form of the algorithm scans the image one row at a time and one pixel at a time. The current pixel is compared to a half-gray value. If it is above the value a white pixel is generated in the resulting image. If the pixel is below the half way brightness, a black pixel is generated. The generated pixel is either full bright, or full black, so there is an error in the image. The error is then added to the next pixel in the image and the process repeats.  Two-dimensional error diffusion  One dimensional error diffusion tends to have severe image artifacts that show up as distinct vertical lines. Two dimensional error diffusion reduces the visual artifacts. The simplest algorithm is exactly like one dimensional error diffusion, except half the error is added to the next pixel, and one quarter of the error is added to the pixel on the next line below, and one quarter of the error is added to the pixel on the next line below and one pixel forward.  The kernel is:       1  4    [     #    2      1    1     ]         1  4    delimited-[]    normal-#  2    1  1       \frac{1}{4}\left[\begin{array}[]{cc}\#&2\\
 1&1\end{array}\right]     where "#" denotes the pixel currently being processed.  Further refinement can be had by dispersing the error further away from the current pixel, as in the matrix given above in Enter the digital era . The sample image at the start of this article is an example of two dimensional error diffusion.  Color error diffusion  The same algorithms may be applied to each of the red, green, and blue (or cyan, magenta, yellow, black) channels of a color image to achieve a color effect on printers such as color laser printers that can only print single color values.  However, better visual results may be obtained by first converting the color channels into a perceptive color model that will separate lightness, hue and saturation channels, so that a higher weight for error diffusion will be given to the lightness channel, than to the hue channel. The motivation for this conversion is that human vision better perceives small differences of lightness in small local areas, than similar differences of hue in the same area, and even more than similar differences of saturation on the same area.  For example, if there is a small error in the green channel that cannot be represented, and another small error in the red channel in the same case, the properly weighted sum of these two errors may be used to adjust a perceptible lightness error, that can be represented in a balanced way between all three color channels (according to their respective statistical contribution to the lightness), even if this produces a larger error for the hue when converting the green channel. This error will be diffused in the neighboring pixels.  In addition, gamma correction may be needed on each of these perceptive channels, if they don't scale linearly with the human vision, so that error diffusion can be accumulated linearly to these gamma-corrected linear channels, before computing the final color channels of the rounded pixel colors, using a reverse conversion to the native non gamma-corrected image format and from which the new residual error will be computed and converted again to be distributed to the next pixels.  It should also be noted that, due to limitations of precision during the numeric conversion between color models (notably if this conversion is not linear or uses non integer weights), additional roundoff errors may occur that should be taken into account into the residual error.  Error diffusion with several gray levels  Error Diffusion may also be used to produce output images with more than two levels (per channel, in the case of color images). This has application in displays and printers which can produce 4, 8, or 16 levels in each image plane, such as electrostatic printers and displays in compact mobile telephones. Rather than use a single threshold to produce binary output, the closest permitted level is determined, and the error, if any, is diffused as described above.  Printer considerations  Most printers overlap the black dots slightly so there is not an exact one-to-one relationship to dot frequency (in dots per unit area) and lightness . Tone scale linearization may be applied to the source image to get the printed image to look correct.  Edge enhancement versus lightness preservation  When an image has a transition from light to dark the error diffusion algorithm tends to make the next generated pixel be black. Dark to light transitions tend to result in the next generated pixel being white. This causes an edge enhancement effect at the expense of gray level reproduction accuracy. This results in error diffusion having a higher apparent resolution than halftone methods. This is especially beneficial with images with text in them such as the typical facsimile.  This effect shows fairly well in the picture at the top of this article. The grass detail and the text on the sign is well preserved, and the lightness in the sky, containing little detail. A cluster-dot halftone image of the same resolution would be much less sharp.  See also   Floyd–Steinberg dithering  Halftone   References    External links   Error diffusion in Matlab   "  Category:Printing terminology  Category:Image processing     Richard Howland Ranger, Facsimile system. United States Patent 1790723, issued 3 February 1931. ↩  J F Jarvis, C N Judice, and W H Ninke, A survey of techniques for the display of continuous tone pictures on bilevel displays. Computer Graphics and Image Processing,  5 :1:13–40 (1976). ↩     