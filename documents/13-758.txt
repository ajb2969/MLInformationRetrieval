   Non-uniform discrete Fourier transform      Non-uniform discrete Fourier transform   In applied mathematics, the non-uniform discrete Fourier transform (NDFT) of a signal is a type of Fourier transform , related to a discrete Fourier transform or discrete-time Fourier transform , but in which the input signal is not sampled at equally spaced intervals. As a result of this, the computed Discrete Fourier Transform can also consist of unevenly sampled frequency values. It is however also possible to compute uniformly sampled frequency values from an unevenly sampled input signal.  As a generalized approach for nonuniform sampling , NDFT can help us to get the information of a finite length signal in frequency domain at any frequency. It can also be used to design the FIR filters as the role of DFT, no matter if it's 1-D or 2-D.  One of the reasons to adopt NDFT is that most signals have their energy distributed nonuniformly in the frequency domain. Therefore, a nonuniform sampling scheme could be more convenient and useful in lots of applications of Digital Signal Processing (DSP) . For example, NDFT provides a variable spectral resolution controlled by the users.  Note that NDFT reduces to DFT when the sampling points are located on the unit circle at equally spaced angles.  1-D NDFT  Definition  1-D NDFT of a sequence x[n] of length N is 1         X   (   z  k   )    =     X   (  z  )    |    z  =   z  k     =    ∑   n  =  0    N  -  1     x   [  n  ]    z  k   -  n       ,   k  =   0  ,  1  ,  …  ,   N  -  1      ,     formulae-sequence        X   subscript  z  k     evaluated-at    X  z     z   subscript  z  k            superscript   subscript     n  0      N  1      x   delimited-[]  n    superscript   subscript  z  k     n          k   0  1  normal-…    N  1       X(z_{k})=X(z)|_{z=z_{k}}=\sum_{n=0}^{N-1}x[n]z_{k}^{-n},\quad k=0,1,...,N-1,     where    X   (  z  )       X  z    X(z)   is the Z-transform of    x   [  n  ]       x   delimited-[]  n     x[n]   , and     {   z  i   }    i  =   0  ,  1  ,  …  ,   N  -  1        subscript    subscript  z  i      i   0  1  normal-…    N  1       \{z_{i}\}_{i=0,1,...,N-1}   are arbitrarily distinct points in the z-plane.  Expressing the above as matrix, we get      𝐗  =  𝐃𝐱      𝐗  𝐃𝐱    \mathbf{X}=\mathbf{D}\mathbf{x}     where        𝐗  =   [      X   (   z  0   )         X   (   z  1   )        ⋮       X   (   z   N  -  1    )       ]    ,    𝐱  =    [      x   [  0  ]         x   [  1  ]        ⋮       x   [   N  -  1   ]       ]   ,  and     𝐃  =   [     1     z  0   -  1       z  0   -  2      ⋯     z  0   -   (   N  -  1   )         1     z  1   -  1       z  1   -  2      ⋯     z  1   -   (   N  -  1   )         ⋮    ⋮    ⋮    ⋱    ⋮      1     z   N  -  1    -  1       z   N  -  1    -  2      ⋯     z   N  -  1    -   (   N  -  1   )        ]      .     formulae-sequence    𝐗      X   subscript  z  0        X   subscript  z  1      normal-⋮      X   subscript  z    N  1         formulae-sequence    𝐱       x   delimited-[]  0        x   delimited-[]  1      normal-⋮      x   delimited-[]    N  1       and      𝐃    1   superscript   subscript  z  0     1     superscript   subscript  z  0     2    normal-⋯   superscript   subscript  z  0       N  1       1   superscript   subscript  z  1     1     superscript   subscript  z  1     2    normal-⋯   superscript   subscript  z  1       N  1       normal-⋮  normal-⋮  normal-⋮  normal-⋱  normal-⋮    1   superscript   subscript  z    N  1      1     superscript   subscript  z    N  1      2    normal-⋯   superscript   subscript  z    N  1        N  1           \mathbf{X}=\begin{bmatrix}X(z_{0})\\
 X(z_{1})\\
 \vdots\\
 X(z_{N-1})\end{bmatrix},\quad\mathbf{x}=\begin{bmatrix}x[0]\\
 x[1]\\
 \vdots\\
 x[N-1]\end{bmatrix},\text{ and}\quad\mathbf{D}=\begin{bmatrix}1&z_{0}^{-1}&z_{%
 0}^{-2}&\cdots&z_{0}^{-(N-1)}\\
 1&z_{1}^{-1}&z_{1}^{-2}&\cdots&z_{1}^{-(N-1)}\\
 \vdots&\vdots&\vdots&\ddots&\vdots\\
 1&z_{N-1}^{-1}&z_{N-1}^{-2}&\cdots&z_{N-1}^{-(N-1)}\end{bmatrix}.     As we can see, the NDFT is characterized by   𝐃   𝐃   \mathbf{D}   and hence the N    z  k     subscript  z  k    {z_{k}}   points. If we further factorize    d  e  t   (  𝐃  )       d  e  t  𝐃    det(\mathbf{D})   , we can see that   𝐃   𝐃   \mathbf{D}   is nonsingular provided the N    z  k     subscript  z  k    {z_{k}}   points are distinct. If   𝐃   𝐃   \mathbf{D}   is nonsingular, we can get a unique inverse NDFT as following:      𝐱  =    𝐃   -  𝟏    𝐗       𝐱     superscript  𝐃    1    𝐗     \mathbf{x}=\mathbf{D^{-1}}\mathbf{X}     Given    𝐗  and  𝐃      𝐗  and  𝐃    \mathbf{X}\text{ and }\mathbf{D}   , we can use Gaussian elimination to solve   𝐱   𝐱   \mathbf{x}   . However, the complexity of this method is    O   (   N  3   )       O   superscript  N  3     O(N^{3})   . To solve this problem more efficiently, we first determine    X   (  z  )       X  z    X(z)   directly by polynomial interpolation          X  ^    [  k  ]    =   X   (   z  k   )     ,   k  =   0  ,  1  ,  …  ,   N  -  1      ,     formulae-sequence       normal-^  X    delimited-[]  k      X   subscript  z  k       k   0  1  normal-…    N  1       \hat{X}[k]=X(z_{k}),\quad k=0,1,...,N-1,     then x[n] is the coefficients of the above interpolating polynomial which can be solved more efficiently. This is illustrated in the next subsection.  Solving The Inverse NDFT  Expressing    X   (  z  )       X  z    X(z)   as the Lagrange polynomial of order N-1, we get        X   (  z  )    =    ∑   k  =  0    N  -  1        L  k    (  z  )      L  k    (   z  k   )      X  ^    [  k  ]      ,        X  z     superscript   subscript     k  0      N  1           subscript  L  k   z      subscript  L  k    subscript  z  k      normal-^  X    delimited-[]  k       X(z)=\sum_{k=0}^{N-1}\frac{L_{k}(z)}{L_{k}(z_{k})}\hat{X}[k],     where     {    L  i    (  z  )    }    i  =   0  ,  1  ,  …  ,   N  -  1        subscript      subscript  L  i   z      i   0  1  normal-…    N  1       \{L_{i}(z)\}_{i=0,1,...,N-1}   are the fundamental polynomials:         L  k    (  z  )    =    ∏   i  ≠  k     (   1  -    z  i    z   -  1      )     ,   k  =   0  ,  1  ,  …  ,   N  -  1        formulae-sequence       subscript  L  k   z     subscript  product    i  k      1     subscript  z  i    superscript  z    1          k   0  1  normal-…    N  1       L_{k}(z)=\prod_{i\neq k}(1-z_{i}z^{-1}),\quad k=0,1,...,N-1     Expressing    X   (  z  )       X  z    X(z)   by Newton interpolation method, we get        X   (  z  )    =    c  0   +    c  1    (   1  -    z  0    z   -  1      )    +    c  2    (   1  -    z  0    z   -  1      )    (   1  -    z  1    z   -  1      )    +  …  +    C   N  -  1      ∏   k  =  0    N  -  2     (   1  -    z  k    z   -  1      )       ,        X  z      subscript  c  0      subscript  c  1     1     subscript  z  0    superscript  z    1          subscript  c  2     1     subscript  z  0    superscript  z    1        1     subscript  z  1    superscript  z    1       normal-…     subscript  C    N  1      superscript   subscript  product    k  0      N  2      1     subscript  z  k    superscript  z    1           X(z)=c_{0}+c_{1}(1-z_{0}z^{-1})+c_{2}(1-z_{0}z^{-1})(1-z_{1}z^{-1})+...+C_{N-1%
 }\prod_{k=0}^{N-2}(1-z_{k}z^{-1}),     where    c  j     subscript  c  j    c_{j}   is the divided difference of the jth order of      X  ^    [  0  ]    ,    X  ^    [  1  ]    ,  …  ,    X  ^    [  j  ]          normal-^  X    delimited-[]  0       normal-^  X    delimited-[]  1    normal-…     normal-^  X    delimited-[]  j      \hat{X}[0],\hat{X}[1],...,\hat{X}[j]   with respect to     z  0   ,   z  1   ,  …  ,   z  j       subscript  z  0    subscript  z  1   normal-…   subscript  z  j     z_{0},z_{1},...,z_{j}   :        c  0   =    X  ^    [  0  ]     ,       subscript  c  0      normal-^  X    delimited-[]  0      c_{0}=\hat{X}[0],           c  1   =      X  ^    [  1  ]    -   c  0     1  -    z  0    z  1   -  1        ,       subscript  c  1          normal-^  X    delimited-[]  1     subscript  c  0      1     subscript  z  0    superscript   subscript  z  1     1         c_{1}=\frac{\hat{X}[1]-c_{0}}{1-z_{0}z_{1}^{-1}},           c  2   =      X  ^    [  2  ]    -   c  0   -    c  1    (   1  -    z  0    z   -  1      )       (   1  -    z  0    z  2   -  1      )    (   1  -    z  1    z  2   -  1      )      ,       subscript  c  2          normal-^  X    delimited-[]  2     subscript  c  0      subscript  c  1     1     subscript  z  0    superscript  z    1            1     subscript  z  0    superscript   subscript  z  2     1        1     subscript  z  1    superscript   subscript  z  2     1          c_{2}=\frac{\hat{X}[2]-c_{0}-c_{1}(1-z_{0}z^{-1})}{(1-z_{0}z_{2}^{-1})(1-z_{1}%
 z_{2}^{-1})},          ⋮   normal-⋮   \vdots        The disadvantage of Lagrange representation is that any additional point included will increase the order of the interpolating polynomial, leading to the need of recomputing all the fundamental polynomials. However, any additional point included in Newton representation only require one more term.  We can use a lower triangular system to solve    {   c  j   }      subscript  c  j     \{c_{j}\}   :      𝐋𝐜  =  𝐗      𝐋𝐜  𝐗    \mathbf{L}\mathbf{c}=\mathbf{X}     where        𝐗  =   [       X  ^    [  0  ]          X  ^    [  1  ]        ⋮        X  ^    [   N  -  1   ]       ]    ,    𝐜  =    [      c  0        c  1       ⋮       c   N  -  1       ]   ,  and     𝐋  =   [     1    0    0    0    ⋯    0      1     (   1  -    z  0    z  1   -  1      )     0    0    ⋯    0      1     (   1  -    z  0    z  2   -  1      )       (   1  -    z  0    z  2   -  1      )    (   1  -    z  1    z  2   -  1      )      0    ⋯    0      ⋮    ⋮    ⋮    ⋮    ⋱    ⋮      1     (   1  -    z  0    z   N  -  1    -  1      )       (   1  -    z  0    z   N  -  1    -  1      )    (   1  -    z  1    z   N  -  1    -  1      )      ⋯       ∏   k  =  0    N  -  2      (   1  -    z  k    z   N  -  1    -  1      )       ]      .     formulae-sequence    𝐗       normal-^  X    delimited-[]  0         normal-^  X    delimited-[]  1      normal-⋮       normal-^  X    delimited-[]    N  1         formulae-sequence    𝐜      subscript  c  0      subscript  c  1     normal-⋮     subscript  c    N  1      and      𝐋    1  0  0  0  normal-⋯  0    1    1     subscript  z  0    superscript   subscript  z  1     1      0  0  normal-⋯  0    1    1     subscript  z  0    superscript   subscript  z  2     1          1     subscript  z  0    superscript   subscript  z  2     1        1     subscript  z  1    superscript   subscript  z  2     1       0  normal-⋯  0    normal-⋮  normal-⋮  normal-⋮  normal-⋮  normal-⋱  normal-⋮    1    1     subscript  z  0    superscript   subscript  z    N  1      1          1     subscript  z  0    superscript   subscript  z    N  1      1        1     subscript  z  1    superscript   subscript  z    N  1      1       normal-⋯    superscript   subscript  product    k  0      N  2      1     subscript  z  k    superscript   subscript  z    N  1      1             \mathbf{X}=\begin{bmatrix}\hat{X}[0]\\
 \hat{X}[1]\\
 \vdots\\
 \hat{X}[N-1]\end{bmatrix},\quad\mathbf{c}=\begin{bmatrix}c_{0}\\
 c_{1}\\
 \vdots\\
 c_{N-1}\end{bmatrix},\text{ and}\quad\mathbf{L}=\begin{bmatrix}1&0&0&0&\cdots&%
 0\\
 1&(1-z_{0}z_{1}^{-1})&0&0&\cdots&0\\
 1&(1-z_{0}z_{2}^{-1})&(1-z_{0}z_{2}^{-1})(1-z_{1}z_{2}^{-1})&0&\cdots&0\\
 \vdots&\vdots&\vdots&\vdots&\ddots&\vdots\\
 1&(1-z_{0}z_{N-1}^{-1})&(1-z_{0}z_{N-1}^{-1})(1-z_{1}z_{N-1}^{-1})&\cdots&%
 \prod_{k=0}^{N-2}(1-z_{k}z_{N-1}^{-1})\end{bmatrix}.     By the above equation,    {   c  j   }      subscript  c  j     \{c_{j}\}   can be computed within    O   (   N  3   )       O   superscript  N  3     O(N^{3})   operations. In this way Newton interpolation is more efficient than Lagrange Interpolation unless the latter is modified by         L   k  +  1     (  z  )    =     (   1  -    z   k  +  1     z   -  1      )    (   1  -    z  k    z   -  1      )     L  k    (  z  )     ,   k  =   0  ,  1  ,  …  ,   N  -  1        formulae-sequence       subscript  L    k  1    z         1     subscript  z    k  1     superscript  z    1        1     subscript  z  k    superscript  z    1        subscript  L  k   z      k   0  1  normal-…    N  1       L_{k+1}(z)=\frac{(1-z_{k+1}z^{-1})}{(1-z_{k}z^{-1})}L_{k}(z),\quad k=0,1,...,N-1     2-D NDFT  2-D NDFT of a sequence    x   [   n  1   ,   n  2   ]       x    subscript  n  1    subscript  n  2      x[n_{1},n_{2}]   of size     N  1   ×   N  2        subscript  N  1    subscript  N  2     N_{1}\times N_{2}   is 2          X  ^    (   z   1  k    ,   z   2  k    )    =    ∑    n  1   =  0     N  1   -  1      ∑    n  2   =  0     N  2   -  1     x   [   n  1   ,   n  2   ]    z   1  k    -   n  1      z   2  k    -   n  2         ,   k  =   0  ,  1  ,  …  ,     N  1    N  2    -  1      ,     formulae-sequence       normal-^  X     subscript  z    1  k     subscript  z    2  k        superscript   subscript      subscript  n  1   0       subscript  N  1   1      superscript   subscript      subscript  n  2   0       subscript  N  2   1      x    subscript  n  1    subscript  n  2     superscript   subscript  z    1  k       subscript  n  1      superscript   subscript  z    2  k       subscript  n  2           k   0  1  normal-…       subscript  N  1    subscript  N  2    1       \hat{X}(z_{1k},z_{2k})=\sum_{n_{1}=0}^{N_{1}-1}\sum_{n_{2}=0}^{N_{2}-1}x[n_{1}%
 ,n_{2}]z_{1k}^{-n_{1}}z_{2k}^{-n_{2}},\quad k=0,1,...,N_{1}N_{2}-1,     where     X  ^    (   z   1  k    ,   z   2  k    )        normal-^  X     subscript  z    1  k     subscript  z    2  k       \hat{X}(z_{1k},z_{2k})   is the 2-D z-transform of    x   [   n  1   ,   n  2   ]       x    subscript  n  1    subscript  n  2      x[n_{1},n_{2}]   , and    (   z   1  k    ,   z   2  k    )      subscript  z    1  k     subscript  z    2  k      (z_{1k},z_{2k})   are arbitrarily distinct     N  1    N  2        subscript  N  1    subscript  N  2     N_{1}N_{2}   points in the 4-D    (   z  1   ,   z  2   )      subscript  z  1    subscript  z  2     (z_{1},z_{2})   space.  As in the 1-D case, we can express the above equation as        𝐗  ^   =  𝐃𝐗   ,       normal-^  𝐗   𝐃𝐗    \mathbf{\hat{X}}=\mathbf{D}\mathbf{X},     and the matrix   𝐃   𝐃   \mathbf{D}   is also depends only on the choice of those sampling points. However, even if those sampling points are distinct,   𝐃   𝐃   \mathbf{D}   could still be singular. No rules for determining whether the matrix is nonsingular or not have been found. Therefore, for all implementation of 2-D NDFT, we just check    d  e  t   (  𝐃  )       d  e  t  𝐃    det(\mathbf{D})   for a specific set of sampling points. In general, the complexity of 2-D NDFT    O   (    N  1  3    N  2  3    )       O     superscript   subscript  N  1   3    superscript   subscript  N  2   3      O(N_{1}^{3}N_{2}^{3})   .  Applications  The applications of NDFT are:   Digital filter design  Spectral analysis  Antenna array design  Antenna pattern synthesis with prescribed nulls  Decoding of dual-tone multi-frequency(DTMF) signals  Dual-tone multi-frequency tone detection   See also   Spectral estimation   External links   Non-Uniform Fourier Transform: A Tutorial .   Notation, the NDFT and the NFFT  NFFT 3.0 – Tutorial   Notes  References   F. Marvasti, Nonuniform sampling: Theory and Practice. Plenum Publishers Co., 2001, pp. 325–360.   "  Category:Fourier analysis  Category:Transforms  Category:Digital signal processing     Marvasti 2001, p. 326. ↩  Marvasti 2001, p. 334. ↩     