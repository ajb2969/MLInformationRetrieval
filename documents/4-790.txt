


Ext functor




Ext functor

In mathematics, the Ext functors of homological algebra are derived functors of Hom functors. They were first used in algebraic topology, but are common in many areas of mathematics. The name "Ext" comes from group theory, as the Ext functor is used in group cohomology to classify abelian group extensions.1
Definition and computation
Let R be a ring and let ModR be the category of modules over R. Let B be in ModR and set T(B) = HomR(A,B), for fixed A in ModR. This is a left exact functor and thus has right derived functors RnT. The Ext functor is defined by



This can be calculated by taking any injective resolution



and computing



Then (RnT)(B) is the homology of this complex. Note that HomR(A,B) is excluded from the complex.
An alternative definition is given using the functor G(A)=HomR(A,B). For a fixed module B, this is a contravariant left exact functor, and thus we also have right derived functors RnG, and can define



This can be calculated by choosing any projective resolution



and proceeding dually by computing



Then (RnG)(A) is the homology of this complex. Again note that HomR(A,B) is excluded.
These two constructions turn out to yield isomorphic results, and so both may be used to calculate the Ext functor.
Ext and extensions
Equivalence of extensions
Ext functors derive their name from the relationship to extensions of modules. Given R-modules A and B, an extension of A by B is a short exact sequence of R-modules



Two extensions






are said to be equivalent (as extensions of A by B) if there is a commutative diagram
.
Note that the Five Lemma implies that the middle arrow is an isomorphism. An extension of A by B is called split if it is equivalent to the trivial extension



There is a bijective correspondence between equivalence classes of extensions



of A by B and elements of



The Baer sum of extensions
Given two extensions






we can construct the Baer sum, by forming the pullback over 
 
 
 
 ,



We form the quotient


 
 ,
that is, we mod out by the relation 
 
 
 
 . The extension



where the first arrow is 
 
 
 
  and the second 
 
 
 
  thus formed is called the Baer sum of the extensions E and E'.
Up to equivalence of extensions, the Baer sum is commutative and has the trivial extension as identity element. The extension 0 → B → E → A → 0 has for opposite the same extension with exactly one of the central arrows turned to their opposite eg the morphism g is replaced by -g.
The set of extensions up to equivalence is an abelian group that is a realization of the functor Ext(A, B)
Construction of Ext in abelian categories
The above identification enables us to define Ext(A, B) even for abelian categories Ab without reference to projectives and injectives (even if the category has no projectives or injectives). We simply take Ext(A, B) to be the set of equivalence classes of extensions of A by B, forming an abelian group under the Baer sum. Similarly, we can define higher Ext groups Ext(A, B) as equivalence classes of n-extensions, which are exact sequences



under the equivalence relation generated by the relation that identifies two extensions






if there are maps Xm → X′m for all m in {1, 2, ..., n} so that every resulting square commutes, i.e. if there is a chain map X
 
 
 
 →
 
 
'.
The Baer sum of the two n-extensions above is formed by letting X be the pullback of X1 and X over A, and X be the pushout of Xn and X under B quotiented by the skew diagonal copy of B; see Weibel, §3.4. Then we define the Baer sum of the extensions to be



Further properties of Ext
The Ext functor exhibits some convenient properties, useful in computations.

Ext(A, B) = 0 for i > 0 if either B is injective or A projective.


A converse also holds: if Ext(A, B) = 0 for all A, then Ext(A, B) = 0 for all A, and B is injective; if Ext(A, B) = 0 for all B, then Ext(A, B) = 0 for all B, and A is projective.











Ring structure and module structure on specific Exts
One more very useful way to view the Ext functor is this: when an element of Ext(A, B) = 0 is considered as an equivalence class of maps f: Pn → B for a projective resolution P* of A ; so, then we can pick a long exact sequence Q* ending with B and lift the map f using the projectivity of the modules Pm to a chain map f*: P* → Q* of degree -n. It turns out that homotopy classes of such chain maps correspond precisely to the equivalence classes in the definition of Ext above.
Under sufficiently nice circumstances, such as when the ring R is a group ring over a field k, or an augmented k-algebra, we can impose a ring structure on Ext(k, k). The multiplication has quite a few equivalent interpretations, corresponding to different interpretations of the elements of Ext(k, k).
One interpretation is in terms of these homotopy classes of chain maps. Then the product of two elements is represented by the composition of the corresponding representatives. We can choose a single resolution of k, and do all the calculations inside HomR(P*,P*), which is a differential graded algebra, with cohomology precisely ExtR(k,k).
The Ext groups can also be interpreted in terms of exact sequences; this has the advantage that it does not rely on the existence of projective or injective modules. Then we take the viewpoint above that an element of Ext(A, B) is a class, under a certain equivalence relation, of exact sequences of length n + 2 starting with B and ending with A. This can then be spliced with an element in Ext(C, A), by replacing ... → X1 → A → 0 and 0 → A → Yn → ... with:



where the middle arrow is the composition of the functions X1 → A and A → Yn. This product is called the Yoneda splice.
These viewpoints turn out to be equivalent whenever both make sense.
Using similar interpretations, we find that Ext(k, M) is a module over Ext(k, k), again for sufficiently nice situations.
Interesting examples
If Z[G] is the integral group ring for a group G, then Ext(Z, M) is the group cohomology H*(G,M) with coefficients in M.
For Fp the finite field on p elements, we also have that H*(G,M) = Ext(Fp, M), and it turns out that the group cohomology doesn't depend on the base ring chosen.
If A is a k-algebra, then Ext(A, M) is the Hochschild cohomology HH*(A,M) with coefficients in the A-bimodule M.
If R is chosen to be the universal enveloping algebra for a Lie algebra

 
  over a commutative ring k, then Ext(k, M) is the Lie algebra cohomology

 
  with coefficients in the module M.
See also

Tor functor
The Grothendieck group is a construction centered on extensions
The universal coefficient theorem for cohomology is one notable use of the Ext functor
Grothendieck duality
Yoneda product

References




"
Category:Homological algebra Category:Binary operations








