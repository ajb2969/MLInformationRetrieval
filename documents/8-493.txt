   Backward Euler method      Backward Euler method   In numerical analysis and scientific computing , the backward Euler method (or implicit Euler method ) is one of the most basic numerical methods for the solution of ordinary differential equations . It is similar to the (standard) Euler method , but differs in that it is an implicit method . The backward Euler method has order one and is A-stable .  Description  Consider the ordinary differential equation        d  y    d  t    =   f   (  t  ,  y  )            normal-d  y     normal-d  t      f   t  y      \frac{\mathrm{d}y}{\mathrm{d}t}=f(t,y)   with initial value      y   (   t  0   )    =   y  0    .        y   subscript  t  0     subscript  y  0     y(t_{0})=y_{0}.   Here the function   f   f   f   and the initial data    t  0     subscript  t  0    t_{0}   and    y  0     subscript  y  0    y_{0}   are known; the function   y   y   y   depends on the real variable   t   t   t   and is unknown. A numerical method produces a sequence     y  0   ,   y  1   ,   y  2   ,  …      subscript  y  0    subscript  y  1    subscript  y  2   normal-…    y_{0},y_{1},y_{2},\ldots   such that    y  k     subscript  y  k    y_{k}   approximates    y   (    t  0   +   k  h    )       y     subscript  t  0     k  h      y(t_{0}+kh)   , where   h   h   h   is called the step size.  The backward Euler method computes the approximations using        y   k  +  1    =    y  k   +   h  f   (   t   k  +  1    ,   y   k  +  1    )      .       subscript  y    k  1       subscript  y  k     h  f    subscript  t    k  1     subscript  y    k  1         y_{k+1}=y_{k}+hf(t_{k+1},y_{k+1}).    1 This differs from the (forward) Euler method in that the latter uses    f   (   t  k   ,   y  k   )       f    subscript  t  k    subscript  y  k      f(t_{k},y_{k})   in place of    f   (   t   k  +  1    ,   y   k  +  1    )       f    subscript  t    k  1     subscript  y    k  1       f(t_{k+1},y_{k+1})   .  The backward Euler method is an implicit method: the new approximation    y   k  +  1      subscript  y    k  1     y_{k+1}   appears on both sides of the equation, and thus the method needs to solve an algebraic equation for the unknown    y   k  +  1      subscript  y    k  1     y_{k+1}   . Sometimes, this can be done by fixed-point iteration :         y   k  +  1    [  0  ]    =   y  k    ,    y   k  +  1    [   i  +  1   ]    =    y  k   +   h  f   (   t   k  +  1    ,   y   k  +  1    [  i  ]    )       .     formulae-sequence     superscript   subscript  y    k  1     delimited-[]  0     subscript  y  k       superscript   subscript  y    k  1     delimited-[]    i  1        subscript  y  k     h  f    subscript  t    k  1     superscript   subscript  y    k  1     delimited-[]  i          y_{k+1}^{[0]}=y_{k},\quad y_{k+1}^{[i+1]}=y_{k}+hf(t_{k+1},y_{k+1}^{[i]}).   If this sequence converges (within a given tolerance), then the method takes its limit as the new approximation    y   k  +  1      subscript  y    k  1     y_{k+1}   . 2  Alternatively, one can use (some modification of) the Newton–Raphson method to solve the algebraic equation.  Derivation  Integrating the differential equation      d  y    d  t    =   f   (  t  ,  y  )            normal-d  y     normal-d  t      f   t  y      \frac{\mathrm{d}y}{\mathrm{d}t}=f(t,y)   from    t  k     subscript  t  k    t_{k}   to     t   k  +  1    =    t  k   +  h        subscript  t    k  1       subscript  t  k   h     t_{k+1}=t_{k}+h   yields         y   (   t   k  +  1    )    -   y   (   t  k   )     =    ∫   t  k    t   k  +  1      f   (  t  ,   y   (  t  )    )   d  t     .          y   subscript  t    k  1       y   subscript  t  k       superscript   subscript    subscript  t  k     subscript  t    k  1       f   t    y  t    normal-d  t      y(t_{k+1})-y(t_{k})=\int_{t_{k}}^{t_{k+1}}f(t,y(t))\,\mathrm{d}t.   Now approximate the integral on the right by the right-hand rectangle method (with one rectangle):         y   (   t   k  +  1    )    -   y   (   t  k   )     ≈   h  f   (   t   k  +  1    ,   y   (   t   k  +  1    )    )     .          y   subscript  t    k  1       y   subscript  t  k       h  f    subscript  t    k  1      y   subscript  t    k  1         y(t_{k+1})-y(t_{k})\approx hf(t_{k+1},y(t_{k+1})).   Finally, use that    y  k     subscript  y  k    y_{k}   is supposed to approximate    y   (   t  k   )       y   subscript  t  k     y(t_{k})   and the formula for the backward Euler method follows. 3  The same reasoning leads to the (standard) Euler method if the left-hand rectangle rule is used instead of the right-hand one.  Analysis  The backward Euler method has order one. This means that the local truncation error (defined as the error made in one step) is    O   (   h  2   )       O   superscript  h  2     O(h^{2})   , using the big O notation . The error at a specific time   t   t   t   is    O   (  h  )       O  h    O(h)   .  The region of absolute stability for the backward Euler method is the complement in the complex plane of the disk with radius 1 centered at 1, depicted in the figure. 4 This includes the whole left half of the complex plane, so the backward Euler method is A-stable , making it suitable for the solution of stiff equations . 5 In fact, the backward Euler method is even L-stable .  Extensions and modifications  The backward Euler method is a variant of the (forward) Euler method . Other variants are the semi-implicit Euler method and the exponential Euler method .  The backward Euler method can be seen as a Runge–Kutta method with one stage, described by the Butcher tableau:        1    1         1        1  1    absent  1     \begin{array}[]{c|c}1&1\\
 \hline&1\\
 \end{array}     The backward Euler method can also be seen as a linear multistep method with one step. It is the first method of the family of Adams–Moulton methods , and also of the family of backward differentiation formulas .  Notes  References    .   "  Category:Numerical differential equations  Category:Runge–Kutta methods     ↩  ↩  ↩  ↩  ↩     