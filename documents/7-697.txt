   Karmarkar's algorithm      Karmarkar's algorithm   Karmarkar's algorithm is an algorithm introduced by Narendra Karmarkar in 1984 for solving linear programming problems. It was the first reasonably efficient algorithm that solves these problems in polynomial time . The ellipsoid method is also polynomial time but proved to be inefficient in practice.  Where   n   n   n   is the number of variables and   L   L   L   is the number of bits of input to the algorithm, Karmarkar's algorithm requires    O   (    n  3.5   L   )       O     superscript  n  3.5   L     O(n^{3.5}L)   operations on    O   (  L  )       O  L    O(L)   digit numbers, as compared to    O   (    n  6   L   )       O     superscript  n  6   L     O(n^{6}L)   such operations for the ellipsoid algorithm. The runtime of Karmarkar's algorithm is thus      O   (     n  3.5    L  2    ⋅   log   L  ⋅   log   log  L       )       O   normal-⋅     superscript  n  3.5    superscript  L  2       normal-⋅  L      L         O(n^{3.5}L^{2}\cdot\log L\cdot\log\log L)     using FFT-based multiplication (see Big O notation ).  Karmarkar's algorithm falls within the class of interior point methods : the current guess for the solution does not follow the boundary of the feasible set as in the simplex method , but it moves through the interior of the feasible region, improving the approximation of the optimal solution by a definite fraction with every iteration, and converging to an optimal solution with rational data. 1  The Algorithm  Consider a Linear Programming problem in matrix form:      maximize c T x     subject to       The algorithm determines the next feasible direction toward optimality and scales back by a factor 0 http://dl.acm.org/citation.cfm?id=808695 2 3  4  5  6  7 A simplified version, called the affine-scaling method, analyzed by others, 8 can be described succinctly as follows. Note that the affine-scaling algorithm, while applicable to small scale problems, is not a polynomial time algorithm. For large scale and complex problems the original approach needs to be followed. Karmarkar also has extended the methodology 9 10 11 12 to solve problems with integer constraints and non-convex problems. 13   Input:  A, b, c,     x  0     superscript  x  0    x^{0}    , stopping  criterion ,    γ   γ   \gamma    .       k  ←  0     normal-←  k  0    k\leftarrow 0      do  while  stopping  criterion  not  satisfied        v  k   ←   b  -   A   x  k        normal-←   superscript  v  k     b    A   superscript  x  k       v^{k}\leftarrow b-Ax^{k}          D  v   ←   diag   (   v  1  k   ,  …  ,   v  m  k   )       normal-←   subscript  D  v    diag   superscript   subscript  v  1   k   normal-…   superscript   subscript  v  m   k      D_{v}\leftarrow\operatorname{diag}(v_{1}^{k},\ldots,v_{m}^{k})        h  x   ←     (    A  T    D  v   -  2    A   )    -  1    c      normal-←   subscript  h  x      superscript     superscript  A  T    superscript   subscript  D  v     2    A     1    c     h_{x}\leftarrow(A^{T}D_{v}^{-2}A)^{-1}c        h  v   ←   -   A   h  x        normal-←   subscript  h  v       A   subscript  h  x       h_{v}\leftarrow-Ah_{x}      if       h  v   ≥  0       subscript  h  v   0    h_{v}\geq 0     then   return unbounded   end  if       α  ←   γ  ⋅   min   {   -    v  i  k   /     (   h  v   )   i      |     (   h  v   )   i   <  0   ,   i  =  1   ,  …  ,  m  }        normal-←  α   normal-⋅  γ         superscript   subscript  v  i   k    subscript   subscript  h  v   i        subscript   subscript  h  v   i   0     i  1   normal-…  m      \alpha\leftarrow\gamma\cdot\min\{-v_{i}^{k}/(h_{v})_{i}\,\,|\,\,(h_{v})_{i}<0,%
 \,i=1,\ldots,m\}          x   k  +  1    ←    x  k   +   α   h  x        normal-←   superscript  x    k  1       superscript  x  k     α   subscript  h  x       x^{k+1}\leftarrow x^{k}+\alpha h_{x}       k  ←   k  +  1      normal-←  k    k  1     k\leftarrow k+1      end  do  Example  Consider the linear program      maximize        x  1     subscript  x  1    x_{1}      +       x  2     subscript  x  2    x_{2}        subject to        2  p   x  1       2  p   subscript  x  1     2px_{1}      +       x  2     subscript  x  2    x_{2}          That is, there are 2 variables     x  1   ,   x  2       subscript  x  1    subscript  x  2     x_{1},x_{2}   and 11 constraints associated with varying values of   p   p   p   . This figure shows each iteration of the algorithm as red circle points. The constraints are shown as blue lines.  Patent controversy - Can Mathematics be patented?  At the time he invented the algorithm, Narendra Karmarkar was employed by AT&T; . After applying the algorithm to optimizing AT&T; 's telephone network, 14 they realized that his invention could be of practical importance. In April 1985, AT&T; promptly applied for a patent on Karmarkar's algorithm and that became more fuel for the ongoing controversy over the issue of software patents . 15 This left many mathematicians uneasy, such as Ronald Rivest (himself one of the holders of the patent on the RSA algorithm), who expressed the opinion that research proceeded on the basis that algorithms should be free. Even before the patent was actually granted, some claimed that there might have been prior art that was applicable. 16  Mathematicians who specialize in numerical analysis such as Philip Gill and others claimed that Karmarkar's algorithm is equivalent to a projected Newton barrier method with a logarithmic barrier function , if the parameters are chosen suitably. 17 However, Gill's argument is flawed, insofar as the method they describe does not even qualify as an "algorithm", since it requires choices of parameters that don't follow from the internal logic of the method, but rely on external guidance, essentially from Karmarkar's algorithm. 18 Furthermore, Karmarkar's contributions are considered far from obvious in light of all prior work, including Fiacco-McCormick, Gill and others cited by Saltzman. 19 20 21 The patent was debated in the U.S. Senate and granted in recognition of the essential originality of Karmarkar's work, as : "Methods and apparatus for efficient resource allocation" in May 1988. AT&T; supplied the KORBX system 22  23 based on this patent to the Pentagon , 24 25 which enabled them to solve mathematical programming problems which were previously considered unsolvable.  Opponents of software patents have further alleged that the patents ruined the positive interaction cycles that previously characterized the relationship between researchers in linear programming and industry, and specifically it isolated Karmarkar himself from the network of mathematical researchers in his field. 26  The patent itself expired in April 2006, and the algorithm is presently in the public domain.  References   Ilan Adler, Narendra Karmarkar, Mauricio G.C. Resende and Geraldo Veiga (1989). "An Implementation of Karmarkar's Algorithm for Linear Programming". Mathematical Programming , Vol 44, p. 297–335.  Narendra Karmarkar (1984). " A New Polynomial Time Algorithm for Linear Programming ", Combinatorica , Vol 4 , nr. 4, p. 373–395.   "  Category:Optimization algorithms and methods  Category:Articles with example pseudocode  Category:Software patent law     ↩  http://link.springer.com/article/10.1007%2FBF02579150 ↩  http://onlinelibrary.wiley.com/doi/10.1002/j.1538-7305.1989.tb00316.x/abstract ↩  Karmarkar N.K., An InteriorPoint Approach to NPComplete Problems Part I, AMS series on Contemporary Mathematics 114, pp. 297308 (June 1990). http://www.ams.org/books/conm/114/conm114-endmatter.pdf ↩  Karmarkar, N.K.., Riemannian Geometry Underlying Interior Point Methods for Linear programming, AMS series on Contemporary Mathematics 114, pp. 5175 (June 1990). http://www.ams.org/books/conm/114/conm114-endmatter.pdf ↩  Karmarkar N. K., Lagarias, J.C., Slutsman, L., and Wang, P., Power Series Variants of KarmarkarType Algorithm, AT & T technical Journal 68, No. 3, May/June (1989). ↩  http://sanghv.com/download/Ebook/Machine%20Learning/Kalyanmoy%20Deb,%20Arnab%20Bhattacharya,%20Nirupam%20Chakraborti,%20Partha%20Chakroborty,%20Swagatam%20Das,%20Joydeep%20Dutta,%20Santosh%20K.%20Gupta,%20Ashu%20Jain,%20Varun%20Aggarwal,%20Juergen%20Branke,%20Sushil%20J.%20Louis,%20Kay%20Chen%20Tan%20Simulated%20E.pdf ↩  ↩  Karmarkar, N.K.,Interior Point Methods in Optimization, Proceedings of the Second International Conference on Industrial and Applied Mathematics, SIAM, pp. 160181 (1991) ↩  Karmarkar, N. K. and Kamath, A. P., A continuous Approach to Deriving Upper Bounds in Quadratic Maximization Problems with Integer Constraints, Recent Advances in Global Optimization, pp. 125140, Princeton University Press (1992). ↩  26. Karmarkar, N. K., Thakur, S. A., An Interior Point Approach to a Tensor Optimisation Problem with Application to Upper Bounds in Integer Quadratic Optimization Problems, Proceedings of Second Conference on Integer Programming and Combinatorial Optimisation, (May 1992). ↩  27. Kamath, A., Karmarkar, N. K., A Continuous Method for Computing Bounds in Integer Quadratic Optimisation Problems, Journal of Global Optimization (1992). ↩  Karmarkar, N. K., Beyond Convexity: New Perspectives in Computational Optimization. Springer Lecture Notes in Computer Science LNCS 6457, Dec 2010 ↩  Sinha L.P., Freedman, B. A., Karmarkar, N. K., Putcha, A., and Ramakrishnan K.G., Overseas Network Planning, Proceedings of the Third International Network Planning Symposium, NETWORKS' 86, Tarpon Springs, Florida (June 1986). ↩  ↩  Various posts by Matthew Saltzman, Clemson University ↩  ↩  ↩   Mark A. Paley (1995). "The Karmarkar Patent: Why Congress Should “Open the Door” to Algorithms as Patentable Subject Matter". 22 COMPUTER L. REP. 7 ↩  ↩  ↩  http://www.nytimes.com/1988/08/13/business/big-at-t-computer-for-complexities.html ↩  http://www.apnewsarchive.com/1989/Military-Is-First-Announced-Customer-Of-AT-T-Software/id-8a376783cd62cdf141de700a7c948f61 ↩  http://ieeexplore.ieee.org/xpl/login.jsp?tp =&arnumber;=70419&url;=http%3A%2F%2Fieeexplore.ieee.org%2Fxpls%2Fabs_all.jsp%3Farnumber%3D70419 ↩  ↩     