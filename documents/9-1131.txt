   Mathematical markup language      Mathematical markup language  table.sourceCode, tr.sourceCode, td.lineNumbers, td.sourceCode {
   margin: 0; padding: 0; vertical-align: baseline; border: none; }
 <style>
 table.sourceCode { width: 100%; line-height: 100%; }
 td.lineNumbers { text-align: right; padding-right: 4px; padding-left: 4px; color: #aaaaaa; border-right: 1px solid #aaaaaa; }
 td.sourceCode { padding-left: 5px; }
 code > span.kw { color: #007020; font-weight: bold; } /* Keyword */
 code > span.dt { color: #902000; } /* DataType */
 code > span.dv { color: #40a070; } /* DecVal */
 code > span.bn { color: #40a070; } /* BaseN */
 code > span.fl { color: #40a070; } /* Float */
 code > span.ch { color: #4070a0; } /* Char */
 code > span.st { color: #4070a0; } /* String */
 code > span.co { color: #60a0b0; font-style: italic; } /* Comment */
 code > span.ot { color: #007020; } /* Other */
 code > span.al { color: #ff0000; font-weight: bold; } /* Alert */
 code > span.fu { color: #06287e; } /* Function */
 code > span.er { color: #ff0000; font-weight: bold; } /* Error */
 code > span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */
 code > span.cn { color: #880000; } /* Constant */
 code > span.sc { color: #4070a0; } /* SpecialChar */
 code > span.vs { color: #4070a0; } /* VerbatimString */
 code > span.ss { color: #bb6688; } /* SpecialString */
 code > span.im { } /* Import */
 code > span.va { color: #19177c; } /* Variable */
 code > span.cf { color: #007020; font-weight: bold; } /* ControlFlow */
 code > span.op { color: #666666; } /* Operator */
 code > span.bu { } /* BuiltIn */
 code > span.ex { } /* Extension */
 code > span.pp { color: #bc7a00; } /* Preprocessor */
 code > span.at { color: #7d9029; } /* Attribute */
 code > span.do { color: #ba2121; font-style: italic; } /* Documentation */
 code > span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */
 code > span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */
 code > span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */     A mathematical markup language is a computer notation for representing mathematical formulae , based on mathematical notation . Specialized markup languages are necessary because computers normally deal with linear text and more limited character sets (although increasing support for Unicode is obsoleting very simple uses). A formally standardized syntax also allows a computer to interpret otherwise ambiguous content, for rendering or even evaluating. For computer-interpretable syntaxes, the most popular are TeX / LaTeX and MathML (Mathematical Markup Language).  Notations for human input  Popular languages for input by humans and interpretation by computers include TeX 1 / LaTeX 2 and eqn . 3  Computer algebra systems such as Macsyma , Mathematica , Maple , and MATLAB each have their own syntax.  When the purpose is informal communication with other humans, syntax is often ad hoc, sometimes called "ASCII math notation". Academics sometimes use syntax based on TeX due to familiarity with it from writing papers. Those used to programming languages may also use shorthands like "!" for   ¬     \neg   . Web pages may also use a limited amount of HTML to mark up a small subset, for example superscripting . 4 Ad hoc syntax requires context to interpret ambiguous syntax, for example ">=" could be "implies" or "greater than or equal to", and "dy/dx" is likely to denote a derivative , but strictly speaking could also mean a finite quantity dy divided by dx .  Examples        TeX   eqn   ad hoc ASCII   ad hoc Unicode   formula      $a^2$   a sup 2   a^2   a²       a  2     superscript  a  2    a^{2}       $\sum_{k=1}^N k^2 $   sum from { k = 1 } to N { k sup 2 }   sum_{k=1}^N k^2   Σ_{k=1}^N k²        ∑   k  =  1   N    k  2       superscript   subscript     k  1    N    superscript  k  2     \sum_{k=1}^{N}k^{2}       $\neg (a > 2) \Rightarrow a \le 2$    !(a > 2) => a <= 2   ¬(a > 2) ⇒ a ≤ 2        ¬   (   a  >  2   )    ⇒  a  ≤  2       normal-⇒      a  2    a       2     \neg(a>2)\Rightarrow a\leq 2          Markup languages for computer interchange  Markup languages optimized for computer-to-computer communication include MathML , 5  OpenMath , and OMDoc . These are designed for verbosity and to minimize ambiguity. However, the verbosity makes them clumsier for humans to type directly. 6  Conversion  Many input, rendering, and conversion tools exist.  Microsoft Word included Equation Editor , a limited version of MathType , until 2007. These allow entering formulae using a graphical user interface , and converting to standard markup languages such as MathML. With Microsoft's release of Microsoft Office 2007 and the Office Open XML file formats , they introduced a new equation editor which uses a new format, "Office Math Markup Language" (OMML). The lack of compatibility led some prestigious scientific journals to refuse to accept manuscripts which had been produced using Microsoft Office 2007 . 7 8  SciWriter is another GUI that can generate MathML and LaTeX. 9  ASCIIMathML , a JavaScript program, can convert ad hoc ASCII notation to MathML. 10  See also   List of document markup languages  Comparison of document markup languages   References  External links   MathML official website   "  Category:Markup languages       Donald E. Knuth. The TeXbook ( Computers and Typesetting , Volume A). Reading, Massachusetts: Addison-Wesley, 1984. ISBN 0-201-13448-9. ↩  ↩  Brian W. Kernighan and Lorinda L. Cherry. A System for Typesetting Mathematics , Communications of the ACM 18 (1975), 151–157. ↩  ↩  ↩   ↩  ↩  ↩  ↩    