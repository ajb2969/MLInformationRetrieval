   Infinite tree automaton      Infinite tree automaton   In computer science and mathematical logic , an infinite tree automaton is a state machine that deals with infinite tree structure . It can be viewed as an extension from a finite tree automaton , which accepts only finite tree structures. It can also be viewed as an extension of some infinite word automatons such as the Büchi automaton and the Muller automaton .  A finite automaton which runs on an infinite tree was first used by Rabin 1 for proving decidability of monadic second order logic . It has been further observed that tree automaton and logical theories are closely connected and it allows decision problems in logic to be reduced into decision problems for automaton.  Definition  Infinite tree automaton runs of over a    Σ   normal-Σ   \Sigma   -labeled tree . There are many slightly different formulations of tree automaton. Here one of the formulation is described. An infinite tree automaton is a tuple    A  =   (  Σ  ,  D  ,  Q  ,  δ  ,   q  0   ,  F  )       A   normal-Σ  D  Q  δ   subscript  q  0   F     A=(\Sigma,D,Q,\delta,q_{0},F)   where,      Σ   normal-Σ   \Sigma   is an alphabet.      D  ⊂  ℕ      D  ℕ    D\subset\mathbb{N}   is a finite set. Each element of   D   D   D   is an allowed degree in input tree .     Q   Q   Q   is a finite set of states.      δ  :    Q  ×  Σ  ×  D   →   2   Q  *        normal-:  δ   normal-→    Q  normal-Σ  D    superscript  2   superscript  Q        \delta:Q\times\Sigma\times D\rightarrow 2^{Q^{*}}   is a transition relation that maps an automaton state    q  ∈  Q      q  Q    q\in Q   , an input letter    σ  ∈  Σ      σ  normal-Σ    \sigma\in\Sigma   , and a degree    d  ∈  D      d  D    d\in D   to a set of d-tuple of states.       q  0   ∈  Q       subscript  q  0   Q    q_{0}\in Q   is an initial state of automaton.      F  ⊆   Σ  ω       F   superscript  normal-Σ  ω     F\subseteq\Sigma^{\omega}   is an accepting condition.   Run  A run of tree automaton   A   A   A   over a   Σ   normal-Σ   \Sigma   -labeled tree    (  T  ,  V  )     T  V    (T,V)   is a   Q   Q   Q   -labeled tree    (   T  r   ,  r  )      subscript  T  r   r    (T_{r},r)   . Lets suppose that the tree automaton is at state   q   q   q   and it has reached to a node t labeled with    σ  ∈  Σ      σ  normal-Σ    \sigma\in\Sigma   of input tree.    d   (  t  )       d  t    d(t)   is degree of node t. Then, the automaton proceeds by selecting a tuple    (   q  1   ,  …  ,   q   d   (  t  )     )      subscript  q  1   normal-…   subscript  q    d  t      (q_{1},...,q_{d(t)})   from set    δ   (  q  ,  σ  ,   d   (  t  )    )       δ   q  σ    d  t      \delta(q,\sigma,d(t))   and splitting into    d   (  t  )       d  t    d(t)   copies of itself. For each    0  <  i  ≤   d   (  t  )          0  i         d  t      0   , one copy enters into    q  i     subscript  q  i    q_{i}   state and proceeds to the node    t  .  i     formulae-sequence  t  i    t.i   . This process produces a run over a tree.  Formally, a run    (   T  r   ,  r  )      subscript  T  r   r    (T_{r},r)   on the input tree satisfy following two conditions:        r   (  ϵ  )    =   q  0         r  ϵ    subscript  q  0     r(\epsilon)=q_{0}     For every    t  ∈   T  r       t   subscript  T  r     t\in T_{r}   with     r   (  t  )    =  q        r  t   q    r(t)=q   , there exists a     (   q  1   ,  …  ,   q   d   (  t  )     )   ∈   δ   (  q  ,   V   (  t  )    ,   d   (  t  )    )          subscript  q  1   normal-…   subscript  q    d  t       δ   q    V  t     d  t       (q_{1},...,q_{d(t)})\in\delta(q,V(t),d(t))   such that for every    0  <  i  ≤   d   (  t  )          0  i         d  t      0   , we have    t  .   i  ∈   T  r       formulae-sequence  t    i   subscript  T  r      t.i\in T_{r}   and    r   (  t  .  i  )   =   q  i      fragments  r   fragments  normal-(  t  normal-.  i  normal-)     subscript  q  i     r(t.i)=q_{i}      Acceptance condition  In a run    (   T  r   ,  r  )      subscript  T  r   r    (T_{r},r)   , an infinite path is labeled by a sequence of states. This sequence of states form an infinite word over states. If all these infinite words belong to accepting condition   F   F   F   , then the run is accepting . The interesting accepting conditions are Büchi , Rabin , Streett and Muller . If for an input   Σ   normal-Σ   \Sigma   -labeled tree    (  T  ,  V  )     T  V    (T,V)   there exist an accepting run then the input tree is accepted by the automaton. The set of all the accepted   Σ   normal-Σ   \Sigma   -labeled trees is called tree language    ℒ   (  A  )       ℒ  A    \mathcal{L}(A)   which is recognized by tree automaton   A   A   A   .  Remarks  The set D may seem unusual to some people. Some times D is omitted from the definition when it is a singleton set that means input tree has fixed branching at each node. For example, if D = {2} then the input tree has to be a full binary tree.  Infinite tree automaton is deterministic if for some    q  ∈  Q      q  Q    q\in Q   ,    σ  ∈  Σ      σ  normal-Σ    \sigma\in\Sigma   , and    d  ∈  D      d  D    d\in D   transition relation    δ   (  q  ,  σ  ,  d  )       δ   q  σ  d     \delta(q,\sigma,d)   has exactly one element. Otherwise the automaton is non-deterministic .  Accepting tree languages  Muller, parity, Rabin, and Streett accepting conditions in an infinite tree automaton recognize the same tree languages.  But, Büchi accepting condition is strictly weaker than other accepting conditions, i.e., there exists a tree language which can be recognized by Muller accepting condition in infinite tree automata but can't be recognized by any Büchi accepting condition in some infinite tree automaton. 2  Tree languages which are recognized by Muller accepting conditions are closed under union, intersection, projection and complementation.  Reference list    "  Category:Trees (data structures)  Category:Automata theory     Rabin, M. O.: Decidability of second order theories and automata on infinite trees , Transactions of the American Mathematical Society , vol. 141, pp. 1–35, 1969. ↩  Rabin, M. O.: Weakly definable relations and special automata , Mathematical logic and foundation of set theory , pp. 1–23, 1970. ↩     