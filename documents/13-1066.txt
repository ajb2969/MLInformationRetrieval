


Vorticity confinement




Vorticity confinement

Vorticity confinement (VC), a physics-based computational fluid dynamics model analogous to shock capturing methods, was invented by Dr. John Steinhoff, professor at the University of Tennessee Space Institute, in the late 1980s 1 to solve vortex dominated flows. It was first formulated to capture concentrated vortices shed from the wings, and later became popular in a wide range of research areas.2 During the 1990s and 2000s, it became widely used in the field of engineering.34
The method
VC has a basic familiarity to solitary wave approach which is extensively used in many condensed matter physics applications.5 The effect of VC is to capture the small scale features over as few as 2 grid cells as they convect through the flow. The basic idea is similar to that of compression discontinuity in Eulerian shock capturing methods. The internal structure is maintained thin and so the details of the internal structure may not be important.
Example
Consider 2D Euler equations, modified using the confinement term, F:
$$\frac{\partial \bold u}{\partial t} + \bold u \cdot \nabla \bold u + \nabla\frac{P}{\rho}=F_D (\bold u) -F_C (\bold u)$$
The discretized Euler equations with the extra term can be solved on fairly coarse grids, with simple low order accurate numerical methods, but still yield concentrated vortices which convect without spreading. VC has different forms, one of which is VC1. It involves an added dissipation,$F_D$,to the partial differential equation, which when balanced with inward convection, $F_C$, produce stable solutions. Another form is termed as VC2 in which dissipation is balanced with nonlinear anti-diffusion to produce stable solitary wave-like solutions.
$$F_D$$ : Dissipation
$$F_C$$ : Inward convection for VC1 and nonlinear anti-diffusion for VC2 The main difference between VC1 and VC2 is that in the latter the centroid of the vortex follows the local velocity moment weighted by vorticity. This should provide greater accuracy than VC1 in cases where the convecting field is weak compared to the self-induced velocity of the vortex. One drawback is that VC2 is not as robust as VC1 because while VC1 involves convection like inward propagation of vorticity balanced by an outward second order diffusion, VC2 involves a second order inward propagation of vorticity balanced by 4th order outward dissipation. This approach has been further extended to solve wave equation and is called Wave confinement (WC).
Immersed boundary
To enforce no-slip boundary conditions on immersed surfaces, first, the surface is represented implicitly by a smooth “level set” function, “f”, defined at each grid point. This is the (signed) distance from each grid point to the nearest point on the surface of an object – positive outside, negative inside. Then, at each time step during the solution, velocities in the interior are set to zero. In a computation using VC, this results in a thin vortical region along the surface, which is smooth in the tangential direction, with no “staircase” effects.6 The important point is that no special logic is required in the “cut” cells, unlike many conventional schemes: only the same VC equations are applied, as in the rest of the grid, but with a different form for F. Also, unlike many conventional immersed surface schemes, which are inviscid because of cell size constraints, there is effectively a no-slip boundary condition, which results in a boundary layer with well-defined total vorticity and which, because of VC, remains thin, even after separation. The method is especially effective for complex configurations with separation from sharp corners. Also, even with constant coefficients, it can approximately treat separation from smooth surfaces. General blunt bodies, which typically shed turbulent vorticity that induces a velocity around an upstream body. It is inconsistent to use body fitted grids as the vorticity convects through a non fitted grid.
Applications
VC is used in many applications including rotor wake computations, computation of wing tip vortices, drag computations for vehicles, flow around urban layouts, smoke/contaminant propagation and special effects. Also, it is used in wave computations for communication purposes.
References
"
Category:Numerical differential equations Category:Computational fluid dynamics



↩
.↩
.↩
.↩
.↩
.↩




