   Bicubic interpolation      Bicubic interpolation     In mathematics , bicubic interpolation is an extension of cubic interpolation for interpolating data points on a two dimensional  regular grid . The interpolated surface is smoother than corresponding surfaces obtained by bilinear interpolation or nearest-neighbor interpolation . Bicubic interpolation can be accomplished using either Lagrange polynomials , cubic splines , or cubic convolution algorithm.  In image processing , bicubic interpolation is often chosen over bilinear interpolation or nearest neighbor in image resampling , when speed is not an issue. In contrast to bilinear interpolation, which only takes 4 pixels (2×2) into account, bicubic interpolation considers 16 pixels (4×4). Images resampled with bicubic interpolation are smoother and have fewer interpolation artifacts .  Suppose the function values   f   f   f   and the derivatives    f  x     subscript  f  x    f_{x}   ,    f  y     subscript  f  y    f_{y}   and    f   x  y      subscript  f    x  y     f_{xy}   are known at the four corners    (  0  ,  0  )     0  0    (0,0)   ,    (  1  ,  0  )     1  0    (1,0)   ,    (  0  ,  1  )     0  1    (0,1)   , and    (  1  ,  1  )     1  1    (1,1)   of the unit square. The interpolated surface can then be written        p   (  x  ,  y  )    =    ∑   i  =  0   3     ∑   j  =  0   3     a   i  j     x  i    y  j       .        p   x  y      superscript   subscript     i  0    3     superscript   subscript     j  0    3      subscript  a    i  j     superscript  x  i    superscript  y  j        p(x,y)=\sum_{i=0}^{3}\sum_{j=0}^{3}a_{ij}x^{i}y^{j}.     The interpolation problem consists of determining the 16 coefficients    a   i  j      subscript  a    i  j     a_{ij}   . Matching    p   (  x  ,  y  )       p   x  y     p(x,y)   with the function values yields four equations,        f   (  0  ,  0  )    =   p   (  0  ,  0  )    =   a  00           f   0  0      p   0  0          subscript  a  00      f(0,0)=p(0,0)=a_{00}          f   (  1  ,  0  )    =   p   (  1  ,  0  )    =    a  00   +   a  10   +   a  20   +   a  30            f   1  0      p   1  0            subscript  a  00    subscript  a  10    subscript  a  20    subscript  a  30       f(1,0)=p(1,0)=a_{00}+a_{10}+a_{20}+a_{30}          f   (  0  ,  1  )    =   p   (  0  ,  1  )    =    a  00   +   a  01   +   a  02   +   a  03            f   0  1      p   0  1            subscript  a  00    subscript  a  01    subscript  a  02    subscript  a  03       f(0,1)=p(0,1)=a_{00}+a_{01}+a_{02}+a_{03}          f   (  1  ,  1  )    =   p   (  1  ,  1  )    =    ∑   i  =  0   3     ∑   j  =  0   3    a   i  j              f   1  1      p   1  1           superscript   subscript     i  0    3     superscript   subscript     j  0    3    subscript  a    i  j         f(1,1)=p(1,1)=\textstyle\sum_{i=0}^{3}\sum_{j=0}^{3}a_{ij}      Likewise, eight equations for the derivatives in the   x   x   x   -direction and the   y   y   y   -direction         f  x    (  0  ,  0  )    =    p  x    (  0  ,  0  )    =   a  10            subscript  f  x    0  0       subscript  p  x    0  0          subscript  a  10      f_{x}(0,0)=p_{x}(0,0)=a_{10}           f  x    (  1  ,  0  )    =    p  x    (  1  ,  0  )    =    a  10   +   2   a  20    +   3   a  30              subscript  f  x    1  0       subscript  p  x    1  0            subscript  a  10     2   subscript  a  20      3   subscript  a  30        f_{x}(1,0)=p_{x}(1,0)=a_{10}+2a_{20}+3a_{30}           f  x    (  0  ,  1  )    =    p  x    (  0  ,  1  )    =    a  10   +   a  11   +   a  12   +   a  13             subscript  f  x    0  1       subscript  p  x    0  1            subscript  a  10    subscript  a  11    subscript  a  12    subscript  a  13       f_{x}(0,1)=p_{x}(0,1)=a_{10}+a_{11}+a_{12}+a_{13}           f  x    (  1  ,  1  )    =    p  x    (  1  ,  1  )    =    ∑   i  =  1   3     ∑   j  =  0   3     a   i  j    i              subscript  f  x    1  1       subscript  p  x    1  1           superscript   subscript     i  1    3     superscript   subscript     j  0    3      subscript  a    i  j    i        f_{x}(1,1)=p_{x}(1,1)=\textstyle\sum_{i=1}^{3}\sum_{j=0}^{3}a_{ij}i           f  y    (  0  ,  0  )    =    p  y    (  0  ,  0  )    =   a  01            subscript  f  y    0  0       subscript  p  y    0  0          subscript  a  01      f_{y}(0,0)=p_{y}(0,0)=a_{01}           f  y    (  1  ,  0  )    =    p  y    (  1  ,  0  )    =    a  01   +   a  11   +   a  21   +   a  31             subscript  f  y    1  0       subscript  p  y    1  0            subscript  a  01    subscript  a  11    subscript  a  21    subscript  a  31       f_{y}(1,0)=p_{y}(1,0)=a_{01}+a_{11}+a_{21}+a_{31}           f  y    (  0  ,  1  )    =    p  y    (  0  ,  1  )    =    a  01   +   2   a  02    +   3   a  03              subscript  f  y    0  1       subscript  p  y    0  1            subscript  a  01     2   subscript  a  02      3   subscript  a  03        f_{y}(0,1)=p_{y}(0,1)=a_{01}+2a_{02}+3a_{03}           f  y    (  1  ,  1  )    =    p  y    (  1  ,  1  )    =    ∑   i  =  0   3     ∑   j  =  1   3     a   i  j    j              subscript  f  y    1  1       subscript  p  y    1  1           superscript   subscript     i  0    3     superscript   subscript     j  1    3      subscript  a    i  j    j        f_{y}(1,1)=p_{y}(1,1)=\textstyle\sum_{i=0}^{3}\sum_{j=1}^{3}a_{ij}j      And four equations for the cross derivative     x  y      x  y    xy   .         f   x  y     (  0  ,  0  )    =    p   x  y     (  0  ,  0  )    =   a  11            subscript  f    x  y     0  0       subscript  p    x  y     0  0          subscript  a  11      f_{xy}(0,0)=p_{xy}(0,0)=a_{11}           f   x  y     (  1  ,  0  )    =    p   x  y     (  1  ,  0  )    =    a  11   +   2   a  21    +   3   a  31              subscript  f    x  y     1  0       subscript  p    x  y     1  0            subscript  a  11     2   subscript  a  21      3   subscript  a  31        f_{xy}(1,0)=p_{xy}(1,0)=a_{11}+2a_{21}+3a_{31}           f   x  y     (  0  ,  1  )    =    p   x  y     (  0  ,  1  )    =    a  11   +   2   a  12    +   3   a  13              subscript  f    x  y     0  1       subscript  p    x  y     0  1            subscript  a  11     2   subscript  a  12      3   subscript  a  13        f_{xy}(0,1)=p_{xy}(0,1)=a_{11}+2a_{12}+3a_{13}           f   x  y     (  1  ,  1  )    =    p   x  y     (  1  ,  1  )    =    ∑   i  =  1   3     ∑   j  =  1   3     a   i  j    i  j              subscript  f    x  y     1  1       subscript  p    x  y     1  1           superscript   subscript     i  1    3     superscript   subscript     j  1    3      subscript  a    i  j    i  j        f_{xy}(1,1)=p_{xy}(1,1)=\textstyle\sum_{i=1}^{3}\sum_{j=1}^{3}a_{ij}ij      where the expressions above have used the following identities,        p  x    (  x  ,  y  )    =     ∑   i  =  1   3       ∑   j  =  0   3      a   i  j    i   x   i  -  1     y  j             subscript  p  x    x  y      superscript   subscript     i  1    3     superscript   subscript     j  0    3      subscript  a    i  j    i   superscript  x    i  1     superscript  y  j        p_{x}(x,y)=\textstyle\sum_{i=1}^{3}\sum_{j=0}^{3}a_{ij}ix^{i-1}y^{j}           p  y    (  x  ,  y  )    =     ∑   i  =  0   3       ∑   j  =  1   3      a   i  j     x  i   j   y   j  -  1              subscript  p  y    x  y      superscript   subscript     i  0    3     superscript   subscript     j  1    3      subscript  a    i  j     superscript  x  i   j   superscript  y    j  1         p_{y}(x,y)=\textstyle\sum_{i=0}^{3}\sum_{j=1}^{3}a_{ij}x^{i}jy^{j-1}           p   x  y     (  x  ,  y  )    =     ∑   i  =  1   3       ∑   j  =  1   3      a   i  j    i   x   i  -  1    j   y   j  -  1              subscript  p    x  y     x  y      superscript   subscript     i  1    3     superscript   subscript     j  1    3      subscript  a    i  j    i   superscript  x    i  1    j   superscript  y    j  1         p_{xy}(x,y)=\textstyle\sum_{i=1}^{3}\sum_{j=1}^{3}a_{ij}ix^{i-1}jy^{j-1}   .  This procedure yields a surface    p   (  x  ,  y  )       p   x  y     p(x,y)   on the unit square      [  0  ,  1  ]   ×   [  0  ,  1  ]        0  1    0  1     [0,1]\times[0,1]   which is continuous and with continuous derivatives. Bicubic interpolation on an arbitrarily sized regular grid can then be accomplished by patching together such bicubic surfaces, ensuring that the derivatives match on the boundaries.  Grouping the unknown parameters    a   i  j      subscript  a    i  j     a_{ij}   in a vector,      α  =    [      a  00      a   ;  10       a   ;  20       a   ;  30       a   ;  01       a   ;  11       a   ;  21       a   ;  31       a   ;  02       a   ;  12       a   ;  22       a   ;  32       a   ;  03       a   ;  13       a   ;  23       a   ;  33       ]   T       α   superscript   delimited-[]     subscript  a  00    fragments  a   subscript  normal-;  10     fragments  a   subscript  normal-;  20     fragments  a   subscript  normal-;  30     fragments  a   subscript  normal-;  01     fragments  a   subscript  normal-;  11     fragments  a   subscript  normal-;  21     fragments  a   subscript  normal-;  31     fragments  a   subscript  normal-;  02     fragments  a   subscript  normal-;  12     fragments  a   subscript  normal-;  22     fragments  a   subscript  normal-;  32     fragments  a   subscript  normal-;  03     fragments  a   subscript  normal-;  13     fragments  a   subscript  normal-;  23     fragments  a   subscript  normal-;  33       T     \alpha=\left[\begin{smallmatrix}a_{00}&a_{10}&a_{20}&a_{30}&a_{01}&a_{11}%
 &a_{21}&a_{31}&a_{02}&a_{12}&a_{22}&a_{32}&a_{03}&a_{13}&a_{23}&a_{3%
 3}\end{smallmatrix}\right]^{T}   and letting      x  =    [      f   (  0  ,  0  )       f  ;   (  1  ,  0  )       f  ;   (  0  ,  1  )       f  ;   (  1  ,  1  )       f   ;  x    (  0  ,  0  )       f   ;  x    (  1  ,  0  )       f   ;  x    (  0  ,  1  )       f   ;  x    (  1  ,  1  )       f   ;  y    (  0  ,  0  )       f   ;  y    (  1  ,  0  )       f   ;  y    (  0  ,  1  )       f   ;  y    (  1  ,  1  )       f   ;   x  y     (  0  ,  0  )       f   ;   x  y     (  1  ,  0  )       f   ;   x  y     (  0  ,  1  )       f   ;   x  y     (  1  ,  1  )       ]   T       x   superscript   delimited-[]      f   0  0     f   1  0     f   0  1     f   1  1     fragments  f   subscript  normal-;  x    fragments  normal-(  0  normal-,  0  normal-)     fragments  f   subscript  normal-;  x    fragments  normal-(  1  normal-,  0  normal-)     fragments  f   subscript  normal-;  x    fragments  normal-(  0  normal-,  1  normal-)     fragments  f   subscript  normal-;  x    fragments  normal-(  1  normal-,  1  normal-)     fragments  f   subscript  normal-;  y    fragments  normal-(  0  normal-,  0  normal-)     fragments  f   subscript  normal-;  y    fragments  normal-(  1  normal-,  0  normal-)     fragments  f   subscript  normal-;  y    fragments  normal-(  0  normal-,  1  normal-)     fragments  f   subscript  normal-;  y    fragments  normal-(  1  normal-,  1  normal-)     fragments  f   subscript  normal-;    x  y     fragments  normal-(  0  normal-,  0  normal-)     fragments  f   subscript  normal-;    x  y     fragments  normal-(  1  normal-,  0  normal-)     fragments  f   subscript  normal-;    x  y     fragments  normal-(  0  normal-,  1  normal-)     fragments  f   subscript  normal-;    x  y     fragments  normal-(  1  normal-,  1  normal-)       T     x=\left[\begin{smallmatrix}f(0,0)&f(1,0)&f(0,1)&f(1,1)&f_{x}(0,0)&f_{x}(1%
 ,0)&f_{x}(0,1)&f_{x}(1,1)&f_{y}(0,0)&f_{y}(1,0)&f_{y}(0,1)&f_{y}(1,1)&f%
 _{xy}(0,0)&f_{xy}(1,0)&f_{xy}(0,1)&f_{xy}(1,1)\end{smallmatrix}\right]^{T}   , the above system of equations can be reformulated into a matrix for the linear equation     A  α   =  x        A  α   x    A\alpha=x   .  Inverting the matrix gives the more useful linear equation      A   -  1    x   =  α         superscript  A    1    x   α    A^{-1}x=\alpha   which allows   α   α   \alpha   to be calculated quickly and easily, where:       A   -  1    =   [     1    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0      0    0    0    0    1    0    0    0    0    0    0    0    0    0    0    0       -  3     3    0    0     -  2      -  1     0    0    0    0    0    0    0    0    0    0      2     -  2     0    0    1    1    0    0    0    0    0    0    0    0    0    0      0    0    0    0    0    0    0    0    1    0    0    0    0    0    0    0      0    0    0    0    0    0    0    0    0    0    0    0    1    0    0    0      0    0    0    0    0    0    0    0     -  3     3    0    0     -  2      -  1     0    0      0    0    0    0    0    0    0    0    2     -  2     0    0    1    1    0    0       -  3     0    3    0    0    0    0    0     -  2     0     -  1     0    0    0    0    0      0    0    0    0     -  3     0    3    0    0    0    0    0     -  2     0     -  1     0      9     -  9      -  9     9    6    3     -  6      -  3     6     -  6     3     -  3     4    2    2    1       -  6     6    6     -  6      -  3      -  3     3    3     -  4     4     -  2     2     -  2      -  2      -  1      -  1       2    0     -  2     0    0    0    0    0    1    0    1    0    0    0    0    0      0    0    0    0    2    0     -  2     0    0    0    0    0    1    0    1    0       -  6     6    6     -  6      -  4      -  2     4    2     -  3     3     -  3     3     -  2      -  1      -  2      -  1       4     -  4      -  4     4    2    2     -  2      -  2     2     -  2     2     -  2     1    1    1    1     ]        superscript  A    1     delimited-[]    1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0    0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0      3   3  0  0    2     1   0  0  0  0  0  0  0  0  0  0    2    2   0  0  1  1  0  0  0  0  0  0  0  0  0  0    0  0  0  0  0  0  0  0  1  0  0  0  0  0  0  0    0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0    0  0  0  0  0  0  0  0    3   3  0  0    2     1   0  0    0  0  0  0  0  0  0  0  2    2   0  0  1  1  0  0      3   0  3  0  0  0  0  0    2   0    1   0  0  0  0  0    0  0  0  0    3   0  3  0  0  0  0  0    2   0    1   0    9    9     9   9  6  3    6     3   6    6   3    3   4  2  2  1      6   6  6    6     3     3   3  3    4   4    2   2    2     2     1     1     2  0    2   0  0  0  0  0  1  0  1  0  0  0  0  0    0  0  0  0  2  0    2   0  0  0  0  0  1  0  1  0      6   6  6    6     4     2   4  2    3   3    3   3    2     1     2     1     4    4     4   4  2  2    2     2   2    2   2    2   1  1  1  1       A^{-1}=\left[\begin{smallmatrix}1&0&0&0&0&0&0&0&0&0&0&0&0&0&0&0\\
 0&0&0&0&1&0&0&0&0&0&0&0&0&0&0&0\\
 -3&3&0&0&-2&-1&0&0&0&0&0&0&0&0&0&0\\
 2&-2&0&0&1&1&0&0&0&0&0&0&0&0&0&0\\
 0&0&0&0&0&0&0&0&1&0&0&0&0&0&0&0\\
 0&0&0&0&0&0&0&0&0&0&0&0&1&0&0&0\\
 0&0&0&0&0&0&0&0&-3&3&0&0&-2&-1&0&0\\
 0&0&0&0&0&0&0&0&2&-2&0&0&1&1&0&0\\
 -3&0&3&0&0&0&0&0&-2&0&-1&0&0&0&0&0\\
 0&0&0&0&-3&0&3&0&0&0&0&0&-2&0&-1&0\\
 9&-9&-9&9&6&3&-6&-3&6&-6&3&-3&4&2&2&1\\
 -6&6&6&-6&-3&-3&3&3&-4&4&-2&2&-2&-2&-1&-1\\
 2&0&-2&0&0&0&0&0&1&0&1&0&0&0&0&0\\
 0&0&0&0&2&0&-2&0&0&0&0&0&1&0&1&0\\
 -6&6&6&-6&-4&-2&4&2&-3&3&-3&3&-2&-1&-2&-1\\
 4&-4&-4&4&2&2&-2&-2&2&-2&2&-2&1&1&1&1\end{smallmatrix}\right]   .  There can be another concise matrix form for 16 coefficients       [      f   (  0  ,  0  )       f  ;   (  0  ,  1  )       f   ;  y    (  0  ,  0  )       f   ;  y    (  0  ,  1  )         f   (  1  ,  0  )       f  ;   (  1  ,  1  )       f   ;  y    (  1  ,  0  )       f   ;  y    (  1  ,  1  )          f  x    (  0  ,  0  )       f   ;  x    (  0  ,  1  )       f   ;   x  y     (  0  ,  0  )       f   ;   x  y     (  0  ,  1  )          f  x    (  1  ,  0  )       f   ;  x    (  1  ,  1  )       f   ;   x  y     (  1  ,  0  )       f   ;   x  y     (  1  ,  1  )       ]   =    [     1    0    0    0      1    1    1    1      0    1    0    0      0    1    2    3     ]    [      a  00      a   ;  01       a   ;  02       a   ;  03         a  10      a   ;  11       a   ;  12       a   ;  13         a  20      a   ;  21       a   ;  22       a   ;  23         a  30      a   ;  31       a   ;  32       a   ;  33       ]    [     1    1    0    0      0    1    1    1      0    1    0    2      0    1    0    3     ]            f   0  0     f   0  1     fragments  f   subscript  normal-;  y    fragments  normal-(  0  normal-,  0  normal-)     fragments  f   subscript  normal-;  y    fragments  normal-(  0  normal-,  1  normal-)        f   1  0     f   1  1     fragments  f   subscript  normal-;  y    fragments  normal-(  1  normal-,  0  normal-)     fragments  f   subscript  normal-;  y    fragments  normal-(  1  normal-,  1  normal-)         subscript  f  x    0  0     fragments  f   subscript  normal-;  x    fragments  normal-(  0  normal-,  1  normal-)     fragments  f   subscript  normal-;    x  y     fragments  normal-(  0  normal-,  0  normal-)     fragments  f   subscript  normal-;    x  y     fragments  normal-(  0  normal-,  1  normal-)         subscript  f  x    1  0     fragments  f   subscript  normal-;  x    fragments  normal-(  1  normal-,  1  normal-)     fragments  f   subscript  normal-;    x  y     fragments  normal-(  1  normal-,  0  normal-)     fragments  f   subscript  normal-;    x  y     fragments  normal-(  1  normal-,  1  normal-)          1  0  0  0    1  1  1  1    0  1  0  0    0  1  2  3       subscript  a  00    fragments  a   subscript  normal-;  01     fragments  a   subscript  normal-;  02     fragments  a   subscript  normal-;  03       subscript  a  10    fragments  a   subscript  normal-;  11     fragments  a   subscript  normal-;  12     fragments  a   subscript  normal-;  13       subscript  a  20    fragments  a   subscript  normal-;  21     fragments  a   subscript  normal-;  22     fragments  a   subscript  normal-;  23       subscript  a  30    fragments  a   subscript  normal-;  31     fragments  a   subscript  normal-;  32     fragments  a   subscript  normal-;  33        1  1  0  0    0  1  1  1    0  1  0  2    0  1  0  3       \begin{bmatrix}f(0,0)&f(0,1)&f_{y}(0,0)&f_{y}(0,1)\\
 f(1,0)&f(1,1)&f_{y}(1,0)&f_{y}(1,1)\\
 f_{x}(0,0)&f_{x}(0,1)&f_{xy}(0,0)&f_{xy}(0,1)\\
 f_{x}(1,0)&f_{x}(1,1)&f_{xy}(1,0)&f_{xy}(1,1)\end{bmatrix}=\begin{bmatrix}1%
 &0&0&0\\
 1&1&1&1\\
 0&1&0&0\\
 0&1&2&3\end{bmatrix}\begin{bmatrix}a_{00}&a_{01}&a_{02}&a_{03}\\
 a_{10}&a_{11}&a_{12}&a_{13}\\
 a_{20}&a_{21}&a_{22}&a_{23}\\
 a_{30}&a_{31}&a_{32}&a_{33}\end{bmatrix}\begin{bmatrix}1&1&0&0\\
 0&1&1&1\\
 0&1&0&2\\
 0&1&0&3\end{bmatrix}   , or     [      a  00      a   ;  01       a   ;  02       a   ;  03         a  10      a   ;  11       a   ;  12       a   ;  13         a  20      a   ;  21       a   ;  22       a   ;  23         a  30      a   ;  31       a   ;  32       a   ;  33       ]   =    [     1    0    0    0      0    0    1    0       -  3     3     -  2      -  1       2     -  2     1    1     ]    [      f   (  0  ,  0  )       f  ;   (  0  ,  1  )       f   ;  y    (  0  ,  0  )       f   ;  y    (  0  ,  1  )         f   (  1  ,  0  )       f  ;   (  1  ,  1  )       f   ;  y    (  1  ,  0  )       f   ;  y    (  1  ,  1  )          f  x    (  0  ,  0  )       f   ;  x    (  0  ,  1  )       f   ;   x  y     (  0  ,  0  )       f   ;   x  y     (  0  ,  1  )          f  x    (  1  ,  0  )       f   ;  x    (  1  ,  1  )       f   ;   x  y     (  1  ,  0  )       f   ;   x  y     (  1  ,  1  )       ]    [     1    0     -  3     2      0    0    3     -  2       0    1     -  2     1      0    0     -  1     1     ]           subscript  a  00    fragments  a   subscript  normal-;  01     fragments  a   subscript  normal-;  02     fragments  a   subscript  normal-;  03       subscript  a  10    fragments  a   subscript  normal-;  11     fragments  a   subscript  normal-;  12     fragments  a   subscript  normal-;  13       subscript  a  20    fragments  a   subscript  normal-;  21     fragments  a   subscript  normal-;  22     fragments  a   subscript  normal-;  23       subscript  a  30    fragments  a   subscript  normal-;  31     fragments  a   subscript  normal-;  32     fragments  a   subscript  normal-;  33          1  0  0  0    0  0  1  0      3   3    2     1     2    2   1  1        f   0  0     f   0  1     fragments  f   subscript  normal-;  y    fragments  normal-(  0  normal-,  0  normal-)     fragments  f   subscript  normal-;  y    fragments  normal-(  0  normal-,  1  normal-)        f   1  0     f   1  1     fragments  f   subscript  normal-;  y    fragments  normal-(  1  normal-,  0  normal-)     fragments  f   subscript  normal-;  y    fragments  normal-(  1  normal-,  1  normal-)         subscript  f  x    0  0     fragments  f   subscript  normal-;  x    fragments  normal-(  0  normal-,  1  normal-)     fragments  f   subscript  normal-;    x  y     fragments  normal-(  0  normal-,  0  normal-)     fragments  f   subscript  normal-;    x  y     fragments  normal-(  0  normal-,  1  normal-)         subscript  f  x    1  0     fragments  f   subscript  normal-;  x    fragments  normal-(  1  normal-,  1  normal-)     fragments  f   subscript  normal-;    x  y     fragments  normal-(  1  normal-,  0  normal-)     fragments  f   subscript  normal-;    x  y     fragments  normal-(  1  normal-,  1  normal-)        1  0    3   2    0  0  3    2     0  1    2   1    0  0    1   1       \begin{bmatrix}a_{00}&a_{01}&a_{02}&a_{03}\\
 a_{10}&a_{11}&a_{12}&a_{13}\\
 a_{20}&a_{21}&a_{22}&a_{23}\\
 a_{30}&a_{31}&a_{32}&a_{33}\end{bmatrix}=\begin{bmatrix}1&0&0&0\\
 0&0&1&0\\
 -3&3&-2&-1\\
 2&-2&1&1\end{bmatrix}\begin{bmatrix}f(0,0)&f(0,1)&f_{y}(0,0)&f_{y}(0,1)\\
 f(1,0)&f(1,1)&f_{y}(1,0)&f_{y}(1,1)\\
 f_{x}(0,0)&f_{x}(0,1)&f_{xy}(0,0)&f_{xy}(0,1)\\
 f_{x}(1,0)&f_{x}(1,1)&f_{xy}(1,0)&f_{xy}(1,1)\end{bmatrix}\begin{bmatrix}1&%
 0&-3&2\\
 0&0&3&-2\\
 0&1&-2&1\\
 0&0&-1&1\end{bmatrix}   .  Finding derivatives from function values  If the derivatives are unknown, they are typically approximated from the function values at points neighbouring the corners of the unit square, e.g. using finite differences .  To find either of the single derivatives,    f  x     subscript  f  x    f_{x}   or    f  y     subscript  f  y    f_{y}   , using that method, find the slope between the two surrounding points in the appropriate axis. For example, to calculate    f  x     subscript  f  x    f_{x}   for one of the points, find    f   (  x  ,  y  )       f   x  y     f(x,y)   for the points to the left and right of the target point and calculate their slope, and similarly for    f  y     subscript  f  y    f_{y}   .  To find the cross derivative,    f   x  y      subscript  f    x  y     f_{xy}   , take the derivative in both axes, one at a time. For example, one can first use the    f  x     subscript  f  x    f_{x}   procedure to find the   x   x   x   derivatives of the points above and below the target point, then use the    f  y     subscript  f  y    f_{y}   procedure on those values (rather than, as usual, the values of   f   f   f   for those points) to obtain the value of     f   x  y     (  x  ,  y  )        subscript  f    x  y     x  y     f_{xy}(x,y)   for the target point. (Or one can do it in the opposite direction, first calculating    f  y     subscript  f  y    f_{y}   and then    f  x     subscript  f  x    f_{x}   off of those. The two give equivalent results.)  At the edges of the dataset, when one is missing some of the surrounding points, the missing points can be approximated by a number of methods. A simple and common method is to assume that the slope from the existing point to the target point continues without further change, and using this to calculate a hypothetical value for the missing point.  Bicubic convolution algorithm  Bicubic spline interpolation requires the solution of the linear system described above for each grid cell. An interpolator with similar properties can be obtained by applying a convolution with the following kernel in both dimensions:       W   (  x  )    =   {         (   a  +  2   )     |  x  |   3    -    (   a  +  3   )     |  x  |   2     +  1       for   |  x  |    ≤  1           a    |  x  |   3    -   5  a    |  x  |   2     +   8  a   |  x  |     -   4  a        for  1   <   |  x  |   <  2       0    otherwise            W  x    cases          a  2    superscript    x   3        a  3    superscript    x   2     1       for    x    1           a   superscript    x   3      5  a   superscript    x   2       8  a    x       4  a          for  1     x        2    0  otherwise     W(x)=\begin{cases}(a+2)|x|^{3}-(a+3)|x|^{2}+1&\text{for }|x|\leq 1\\
 a|x|^{3}-5a|x|^{2}+8a|x|-4a&\text{for }1<|x|<2\\
 0&\text{otherwise}\end{cases}   where   a   a   a   is usually set to -0.5 or -0.75. Note that     W   (  0  )    =  1        W  0   1    W(0)=1   and     W   (  n  )    =  0        W  n   0    W(n)=0   for all nonzero integers   n   n   n   .  This approach was proposed by Keys who showed that    a  =   -  0.5       a    0.5     a=-0.5   (which corresponds to cubic Hermite spline ) produces third-order convergence with respect to the original function. 1  If we use the matrix notation for the common case    a  =   -  0.5       a    0.5     a=-0.5   , we can express the equation in a more friendly manner:       p   (  t  )    =     1  2     [     1    t     t  2      t  3           ]    [     0    2    0    0       -  1     0    1    0      2     -  5     4     -  1        -  1     3     -  3     1          ]    [      a   -  1         a  0        a  1        a  2           ]          p  t       1  2     1  t   superscript  t  2    superscript  t  3     absent      0  2  0  0      1   0  1  0    2    5   4    1       1   3    3   1    absent       subscript  a    1       subscript  a  0      subscript  a  1      subscript  a  2     absent       p(t)=\tfrac{1}{2}\begin{bmatrix}\par
  1&t&t^{2}&t^{3}\\
 \par
 \end{bmatrix}\begin{bmatrix}\par
  0&2&0&0\\
 -1&0&1&0\\
 2&-5&4&-1\\
 -1&3&-3&1\\
 \par
 \end{bmatrix}\begin{bmatrix}\par
  a_{-1}\\
 a_{0}\\
 a_{1}\\
 a_{2}\\
 \par
 \end{bmatrix}   for   t   t   t   between 0 and 1 for one dimension. for two dimensions first applied once in   x   x   x   and again in   y   y   y   :       b   -  1    =   p   (   t  x   ,   a   (   -  1   ,   -  1   )    ,   a   (  0  ,   -  1   )    ,   a   (  1  ,   -  1   )    ,   a   (  2  ,   -  1   )    )         subscript  b    1      p    subscript  t  x    subscript  a     1     1      subscript  a   0    1      subscript  a   1    1      subscript  a   2    1         \textstyle b_{-1}=p(t_{x},a_{(-1,-1)},a_{(0,-1)},a_{(1,-1)},a_{(2,-1)})          b  0   =   p   (   t  x   ,   a   (   -  1   ,  0  )    ,   a   (  0  ,  0  )    ,   a   (  1  ,  0  )    ,   a   (  2  ,  0  )    )         subscript  b  0     p    subscript  t  x    subscript  a     1   0     subscript  a   0  0     subscript  a   1  0     subscript  a   2  0        \textstyle b_{0}=p(t_{x},a_{(-1,0)},a_{(0,0)},a_{(1,0)},a_{(2,0)})          b  1   =   p   (   t  x   ,   a   (   -  1   ,  1  )    ,   a   (  0  ,  1  )    ,   a   (  1  ,  1  )    ,   a   (  2  ,  1  )    )         subscript  b  1     p    subscript  t  x    subscript  a     1   1     subscript  a   0  1     subscript  a   1  1     subscript  a   2  1        \textstyle b_{1}=p(t_{x},a_{(-1,1)},a_{(0,1)},a_{(1,1)},a_{(2,1)})          b  2   =   p   (   t  x   ,   a   (   -  1   ,  2  )    ,   a   (  0  ,  2  )    ,   a   (  1  ,  2  )    ,   a   (  2  ,  2  )    )         subscript  b  2     p    subscript  t  x    subscript  a     1   2     subscript  a   0  2     subscript  a   1  2     subscript  a   2  2        \textstyle b_{2}=p(t_{x},a_{(-1,2)},a_{(0,2)},a_{(1,2)},a_{(2,2)})          p   (  x  ,  y  )    =   p   (   t  y   ,   b   -  1    ,   b  0   ,   b  1   ,   b  2   )          p   x  y      p    subscript  t  y    subscript  b    1     subscript  b  0    subscript  b  1    subscript  b  2       \textstyle p(x,y)=p(t_{y},b_{-1},b_{0},b_{1},b_{2})     Use in computer graphics  (Figure)  Bicubic interpolation causes overshoot, which increases acutance .   The bicubic algorithm is frequently used for scaling images and video for display (see bitmap resampling ). It preserves fine detail better than the common bilinear algorithm.  However, due to the negative lobes on the kernel, it causes overshoot (haloing). This can cause clipping , and is an artifact (see also ringing artifacts ), but it increases acutance (apparent sharpness), and can be desirable.  See also   Spatial anti-aliasing  Bézier surface  Bilinear interpolation  Cubic Hermite spline , the one-dimensional analogue of bicubic spline  Lanczos resampling  Natural neighbor interpolation  Sinc filter  Spline interpolation  Tricubic interpolation   References  External links   Application of interpolation to elevation samples  Interpolation theory  Explanation and Java/C++ implementation of (bi)cubic interpolation  Excel Worksheet Function for Bicubic Lagrange Interpolation   "  Category:Image processing  Category:Multivariate interpolation     ↩     