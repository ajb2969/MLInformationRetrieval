


De Bruijn notation




De Bruijn notation

In mathematical logic, the De Bruijn notation is a syntax for terms in the λ calculus invented by the Dutch mathematician Nicolaas Govert de Bruijn.1 It can be seen as a reversal of the usual syntax for the λ calculus where the argument in an application is placed next to its corresponding binder in the function instead of after the latter's body.
Formal definition
Terms (
 
 
 
 ) in the De Bruijn notation are either variables (
 
 
 
 ), or have one of two wagon prefixes. The abstractor wagon, written 
 
 
 
 , corresponds to the usual λ-binder of the λ calculus, and the applicator wagon, written 
 
 
 
 , corresponds to the argument in an application in the λ calculus.



Terms in the traditional syntax can be converted to the De Bruijn notation by defining an inductive function 
 
 
 
  for which:





All operations on λ-terms commute with respect to the 
 
 
 
  translation. For example, the usual β-reduction,


 
  in the De Bruijn notation is, predictably,



A feature of this notation is that abstractor and applicator wagons of β-redexes are paired like parentheses. For example, consider the stages in the β-reduction of the term 
 
 
 
 , where the redexes are underlined:2





Thus, if one views the applicator as an open paren ('(') and the abstractor as a close bracket (']'), then the pattern in the above term is '((](]]'. De Bruijn called an applicator and its corresponding abstractor in this interpretation partners, and wagons without partners bachelors. A sequence of wagons, which he called a segment, is well balanced if all its wagons are partnered.
Advantages of the De Bruijn notation
In a well balanced segment, the partnered wagons may be moved around arbitrarily and, as long as parity is not destroyed, the meaning of the term stays the same. For example, in the above example, the applicator 
 
 
 
  can be brought to its abstractor 
 
 
 
 , or the abstractor to the applicator. In fact, all commutatives and permutative conversions on lambda terms may be described simply in terms of parity-preserving reorderings of partnered wagons. One thus obtains a generalised conversion primitive for λ-terms in the De Bruijn notation.
Several properties of λ-terms that are difficult to state and prove using the traditional notation are easily expressed in the De Bruijn notation. For example, in a type-theoretic setting, one can easily compute the canonical class of types for a term in a typing context, and restate the type checking problem to one of verifying that the checked type is a member of this class.3 De Bruijn notation has also been shown to be useful in calculi for explicit substitution in pure type systems.4
See also

Mathematical notation

References
"
Category:Lambda calculus




 The example is from page 384.

.




