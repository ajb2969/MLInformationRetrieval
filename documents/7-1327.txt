   Generalized minimal residual method      Generalized minimal residual method   In mathematics, the generalized minimal residual method (usually abbreviated GMRES ) is an iterative method for the numerical solution of a nonsymmetric system of linear equations . The method approximates the solution by the vector in a Krylov subspace with minimal residual . The Arnoldi iteration is used to find this vector.  The GMRES method was developed by Yousef Saad and Martin H. Schultz in 1986. 1 GMRES is a generalization of the MINRES method developed by Chris Paige and Michael Saunders in 1975. GMRES also is a special case of the DIIS method developed by Peter Pulay in 1980. DIIS is also applicable to non-linear systems.  The method  Denote the Euclidean norm of any vector v by    ∥  v  ∥     norm  v    \|v\|   . Denote the system of linear equations to be solved by        A  x   =  b   .        A  x   b    Ax=b.\,   The matrix A is assumed to be invertible of size m -by- m . Furthermore, it is assumed that b is normalized, i.e., that || b || = 1.  The n th Krylov subspace for this problem is        K  n   =    K  n    (  A  ,  b  )    =   span   {  b  ,   A  b   ,    A  2   b   ,  …  ,    A   n  -  1    b   }     .         subscript  K  n      subscript  K  n    A  b          span  b    A  b      superscript  A  2   b   normal-…     superscript  A    n  1    b       K_{n}=K_{n}(A,b)=\operatorname{span}\,\{b,Ab,A^{2}b,\ldots,A^{n-1}b\}.\,   GMRES approximates the exact solution of Ax = b by the vector x n ∈ K n that minimizes the Euclidean norm of the residual  r n = Ax n − b .  The vectors b , Ab , …, A n −1 b might be almost linearly dependent , so instead of this basis, the Arnoldi iteration is used to find orthonormal vectors       q  1   ,   q  2   ,  …  ,    q  n        subscript  q  1    subscript  q  2   normal-…   subscript  q  n     q_{1},q_{2},\ldots,q_{n}\,   which form a basis for K n . Hence, the vector x n ∈ K n can be written as x n = Q n y n with y n ∈ R n , where Q n is the m -by- n matrix formed by q 1 , …, q n .  The Arnoldi process also produces an ( n +1)-by- n upper Hessenberg matrix      H  ~   n     subscript   normal-~  H   n    \tilde{H}_{n}   with        A   Q  n    =    Q   n  +  1      H  ~   n     .        A   subscript  Q  n       subscript  Q    n  1     subscript   normal-~  H   n      AQ_{n}=Q_{n+1}\tilde{H}_{n}.\,   Because columns of    Q  n     subscript  Q  n    Q_{n}   are orthogonal, we have        ∥    A   x  n    -  b   ∥   =   ∥      H  ~   n    y  n    -   β   e  1     ∥    ,       norm      A   subscript  x  n    b     norm       subscript   normal-~  H   n    subscript  y  n      β   subscript  e  1        \|Ax_{n}-b\|=\|\tilde{H}_{n}y_{n}-\beta e_{1}\|,\,   where       e  1   =     (  1  ,  0  ,  0  ,  …  ,  0  )   T         subscript  e  1    superscript   1  0  0  normal-…  0   T     e_{1}=(1,0,0,\ldots,0)^{T}\,   is the first vector in the standard basis of R n +1 , and       β  =   ∥   b  -   A   x  0     ∥    ,      β   norm    b    A   subscript  x  0        \beta=\|b-Ax_{0}\|\,,       x  0     subscript  x  0    x_{0}   being the first trial vector (usually zero). Hence,    x  n     subscript  x  n    x_{n}   can be found by minimizing the Euclidean norm of the residual        r  n   =      H  ~   n    y  n    -   β   e  1      .       subscript  r  n        subscript   normal-~  H   n    subscript  y  n      β   subscript  e  1       r_{n}=\tilde{H}_{n}y_{n}-\beta e_{1}.   This is a linear least squares problem of size n .  This yields the GMRES method. On the n -th iteration:   calculate    q  n     subscript  q  n    q_{n}   with the Arnoldi method;  find the    y  n     subscript  y  n    y_{n}   which minimizes || r n ||;  compute     x  n   =    Q  n    y  n         subscript  x  n      subscript  Q  n    subscript  y  n      x_{n}=Q_{n}y_{n}   ;  repeat if the residual is not yet small enough.   At every iteration, a matrix-vector product Aq n must be computed. This costs about 2 m 2  floating-point operations for general dense matrices of size m , but the cost can decrease to O( m ) for sparse matrices . In addition to the matrix-vector product, O( n  m ) floating-point operations must be computed at the n th iteration.  Convergence  The n th iterate minimizes the residual in the Krylov subspace K n . Since every subspace is contained in the next subspace, the residual decreases monotonically. After m iterations, where m is the size of the matrix A , the Krylov space K m is the whole of R m and hence the GMRES method arrives at the exact solution. However, the idea is that after a small number of iterations (relative to m ), the vector x n is already a good approximation to the exact solution.  This does not happen in general. Indeed, a theorem of Greenbaum, Pták and Strakoš states that for every monotonically decreasing sequence a 1 , …, a m −1 , a m = 0, one can find a matrix A such that the || r n || = a n for all n , where r n is the residual defined above. In particular, it is possible to find a matrix for which the residual stays constant for m − 1 iterations, and only drops to zero at the last iteration.  In practice, though, GMRES often performs well. This can be proven in specific situations. If A is positive definite , then        ∥   r  n   ∥   ≤     (   1  -     λ  min  2    (    1  /  2    (    A  T   +  A   )    )      λ  max    (    A  T   A   )      )    n  /  2     ∥   r  0   ∥     ,       norm   subscript  r  n       superscript    1       superscript   subscript  λ  min   2       1  2      superscript  A  T   A        subscript  λ  max      superscript  A  T   A        n  2     norm   subscript  r  0       \|r_{n}\|\leq\left(1-\frac{\lambda_{\mathrm{min}}^{2}(1/2(A^{T}+A))}{\lambda_{%
 \mathrm{max}}(A^{T}A)}\right)^{n/2}\|r_{0}\|,   where     λ  min    (  M  )        subscript  λ  min   M    \lambda_{\mathrm{min}}(M)   and     λ  max    (  M  )        subscript  λ  max   M    \lambda_{\mathrm{max}}(M)   denote the smallest and largest eigenvalue of the matrix   M   M   M   , respectively.  If A is symmetric and positive definite, then we even have        ∥   r  n   ∥   ≤     (     2   κ  2    (  A  )    -  1    2   κ  2    (  A  )     )    n  /  2     ∥   r  0   ∥     .       norm   subscript  r  n       superscript        2   subscript  κ  2   A   1     2   subscript  κ  2   A      n  2     norm   subscript  r  0       \|r_{n}\|\leq\left(\frac{2\kappa_{2}(A)-1}{2\kappa_{2}(A)}\right)^{n/2}\|r_{0}\|.   where     κ  2    (  A  )        subscript  κ  2   A    \kappa_{2}(A)   denotes the condition number of A in the Euclidean norm.  In the general case, where A is not positive definite, we have        ∥   r  n   ∥   ≤    inf   p  ∈   P  n      ∥   p   (  A  )    ∥    ≤    κ  2    (  V  )     inf   p  ∈   P  n       max   λ  ∈   σ   (  A  )        |   p   (  λ  )    |    ∥   r  0   ∥        ,         norm   subscript  r  n      subscript  infimum    p   subscript  P  n      norm    p  A             subscript  κ  2   V    subscript  infimum    p   subscript  P  n       subscript     λ    σ  A           p  λ     norm   subscript  r  0           \|r_{n}\|\leq\inf_{p\in P_{n}}\|p(A)\|\leq\kappa_{2}(V)\inf_{p\in P_{n}}\max_{%
 \lambda\in\sigma(A)}|p(\lambda)|\|r_{0}\|,\,   where P n denotes the set of polynomials of degree at most n with p (0) = 1, V is the matrix appearing in the spectral decomposition of A , and σ( A ) is the spectrum of A . Roughly speaking, this says that fast convergence occurs when the eigenvalues of A are clustered away from the origin and A is not too far from normality . 2  All these inequalities bound only the residuals instead of the actual error, that is, the distance between the current iterate x n and the exact solution.  Extensions of the method  Like other iterative methods, GMRES is usually combined with a preconditioning method in order to speed up convergence.  The cost of the iterations grow as O( n 2 ), where n is the iteration number. Therefore, the method is sometimes restarted after a number, say k , of iterations, with x k as initial guess. The resulting method is called GMRES( k ) or Restarted GMRES.  Comparison with other solvers  The Arnoldi iteration reduces to the Lanczos iteration for symmetric matrices. The corresponding Krylov subspace method is the minimal residual method (MinRes) of Paige and Saunders. Unlike the unsymmetric case, the MinRes method is given by a three-term recurrence relation . It can be shown that there is no Krylov subspace method for general matrices, which is given by a short recurrence relation and yet minimizes the norms of the residuals, as GMRES does.  Another class of methods builds on the unsymmetric Lanczos iteration , in particular the BiCG method . These use a three-term recurrence relation, but they do not attain the minimum residual, and hence the residual does not decrease monotonically for these methods. Convergence is not even guaranteed.  The third class is formed by methods like CGS and BiCGSTAB . These also work with a three-term recurrence relation (hence, without optimality) and they can even terminate prematurely without achieving convergence. The idea behind these methods is to choose the generating polynomials of the iteration sequence suitably.  None of these three classes is the best for all matrices; there are always examples in which one class outperforms the other. Therefore, multiple solvers are tried in practice to see which one is the best for a given problem.  Solving the least squares problem  One part of the GMRES method is to find the vector    y  n     subscript  y  n    y_{n}   which minimizes       ∥      H  ~   n    y  n    -   β   e  1     ∥   .     norm       subscript   normal-~  H   n    subscript  y  n      β   subscript  e  1       \|\tilde{H}_{n}y_{n}-\beta e_{1}\|.\,   Note that     H  ~   n     subscript   normal-~  H   n    \tilde{H}_{n}   is an ( n +1)-by- n matrix, hence it gives an over-constrained linear system of n +1 equations for n unknowns.  The minimum can be computed using a QR decomposition : find an ( n +1)-by-( n +1) orthogonal matrix Ω n and an ( n +1)-by- n upper triangular matrix      R  ~   n     subscript   normal-~  R   n    \tilde{R}_{n}   such that         Ω  n     H  ~   n    =    R  ~   n    .         subscript  normal-Ω  n    subscript   normal-~  H   n     subscript   normal-~  R   n     \Omega_{n}\tilde{H}_{n}=\tilde{R}_{n}.   The triangular matrix has one more row than it has columns, so its bottom row consists of zero. Hence, it can be decomposed as         R  ~   n   =   [      R  n       0     ]    ,       subscript   normal-~  R   n      subscript  R  n     0      \tilde{R}_{n}=\begin{bmatrix}R_{n}\\
 0\end{bmatrix},   where    R  n     subscript  R  n    R_{n}   is an n -by- n (thus square) triangular matrix.  The QR decomposition can be updated cheaply from one iteration to the next, because the Hessenberg matrices differ only by a row of zeros and a column:         H  ~    n  +  1    =   [       H  ~   n      h   n  +  1        0     h    n  +  2   ,   n  +  1        ]    ,       subscript   normal-~  H     n  1       subscript   normal-~  H   n    subscript  h    n  1      0   subscript  h     n  2     n  1         \tilde{H}_{n+1}=\begin{bmatrix}\tilde{H}_{n}&h_{n+1}\\
 0&h_{n+2,n+1}\end{bmatrix},   where h n+1 = ( h 1, n+1 , …, h n+1,n+1 ) T . This implies that premultiplying the Hessenberg matrix with Ω n , augmented with zeroes and a row with multiplicative identity, yields almost a triangular matrix:        [      Ω  n     0      0    1     ]     H  ~    n  +  1     =   [      R  n      r   n  +  1        0    ρ      0    σ     ]            subscript  normal-Ω  n   0    0  1     subscript   normal-~  H     n  1        subscript  R  n    subscript  r    n  1      0  ρ    0  σ      \begin{bmatrix}\Omega_{n}&0\\
 0&1\end{bmatrix}\tilde{H}_{n+1}=\begin{bmatrix}R_{n}&r_{n+1}\\
 0&\rho\\
 0&\sigma\end{bmatrix}   This would be triangular if σ is zero. To remedy this, one needs the Givens rotation       G  n   =   [      I  n     0    0      0     c  n      s  n       0     -   s  n       c  n      ]        subscript  G  n      subscript  I  n   0  0    0   subscript  c  n    subscript  s  n     0     subscript  s  n     subscript  c  n       G_{n}=\begin{bmatrix}I_{n}&0&0\\
 0&c_{n}&s_{n}\\
 0&-s_{n}&c_{n}\end{bmatrix}   where         c  n   =    ρ     ρ  2   +   σ  2      and      s  n   =   σ     ρ  2   +   σ  2        .     formulae-sequence     subscript  c  n      ρ       superscript  ρ  2    superscript  σ  2      and       subscript  s  n     σ       superscript  ρ  2    superscript  σ  2         c_{n}=\frac{\rho}{\sqrt{\rho^{2}+\sigma^{2}}}\quad\mbox{and}\quad s_{n}=\frac{%
 \sigma}{\sqrt{\rho^{2}+\sigma^{2}}}.   With this Givens rotation, we form        Ω   n  +  1    =    G  n    [      Ω  n     0      0    1     ]     .       subscript  normal-Ω    n  1       subscript  G  n      subscript  normal-Ω  n   0    0  1       \Omega_{n+1}=G_{n}\begin{bmatrix}\Omega_{n}&0\\
 0&1\end{bmatrix}.   Indeed,         Ω   n  +  1      H  ~    n  +  1     =    [      R  n      r   n  +  1        0     r    n  +  1   ,   n  +  1         0    0     ]   with      r    n  +  1   ,   n  +  1     =     ρ  2   +   σ  2         formulae-sequence       subscript  normal-Ω    n  1     subscript   normal-~  H     n  1         subscript  R  n    subscript  r    n  1      0   subscript  r     n  1     n  1       0  0    with       subscript  r     n  1     n  1          superscript  ρ  2    superscript  σ  2        \Omega_{n+1}\tilde{H}_{n+1}=\begin{bmatrix}R_{n}&r_{n+1}\\
 0&r_{n+1,n+1}\\
 0&0\end{bmatrix}\quad\text{with}\quad r_{n+1,n+1}=\sqrt{\rho^{2}+\sigma^{2}}   is a triangular matrix.  Given the QR decomposition, the minimization problem is easily solved by noting that        ∥      H  ~   n    y  n    -   β   e  1     ∥   =   ∥    Ω  n    (      H  ~   n    y  n    -   β   e  1     )    ∥   =   ∥      R  ~   n    y  n    -   β   Ω  n    e  1     ∥    .         norm       subscript   normal-~  H   n    subscript  y  n      β   subscript  e  1       norm     subscript  normal-Ω  n        subscript   normal-~  H   n    subscript  y  n      β   subscript  e  1             norm       subscript   normal-~  R   n    subscript  y  n      β   subscript  normal-Ω  n    subscript  e  1         \|\tilde{H}_{n}y_{n}-\beta e_{1}\|=\|\Omega_{n}(\tilde{H}_{n}y_{n}-\beta e_{1}%
 )\|=\|\tilde{R}_{n}y_{n}-\beta\Omega_{n}e_{1}\|.   Denoting the vector    β   Ω  n    e  1       β   subscript  normal-Ω  n    subscript  e  1     \beta\Omega_{n}e_{1}   by        g  ~   n   =   [      g  n        γ  n      ]        subscript   normal-~  g   n      subscript  g  n      subscript  γ  n       \tilde{g}_{n}=\begin{bmatrix}g_{n}\\
 \gamma_{n}\end{bmatrix}   with g n ∈ R n and γ n ∈ R , this is        ∥      H  ~   n    y  n    -   β   e  1     ∥   =   ∥      R  ~   n    y  n    -   β   Ω  n    e  1     ∥   =   ∥     [      R  n       0     ]    y  n    -   [      g  n        γ  n      ]    ∥    .         norm       subscript   normal-~  H   n    subscript  y  n      β   subscript  e  1       norm       subscript   normal-~  R   n    subscript  y  n      β   subscript  normal-Ω  n    subscript  e  1            norm         subscript  R  n     0     subscript  y  n       subscript  g  n      subscript  γ  n          \|\tilde{H}_{n}y_{n}-\beta e_{1}\|=\|\tilde{R}_{n}y_{n}-\beta\Omega_{n}e_{1}\|%
 =\left\|\begin{bmatrix}R_{n}\\
 0\end{bmatrix}y_{n}-\begin{bmatrix}g_{n}\\
 \gamma_{n}\end{bmatrix}\right\|.   The vector y that minimizes this expression is given by        y  n   =    R  n   -  1     g  n     .       subscript  y  n      superscript   subscript  R  n     1     subscript  g  n      y_{n}=R_{n}^{-1}g_{n}.   Again, the vectors    g  n     subscript  g  n    g_{n}   are easy to update. 3  See also   Biconjugate gradient method   Notes    References   A. Meister, Numerik linearer Gleichungssysteme , 2nd edition, Vieweg 2005, ISBN 978-3-528-13135-7.  Y. Saad, Iterative Methods for Sparse Linear Systems , 2nd edition, Society for Industrial and Applied Mathematics , 2003. ISBN 978-0-89871-534-7.  Y. Saad and M.H. Schultz, "GMRES: A generalized minimal residual algorithm for solving nonsymmetric linear systems", SIAM J. Sci. Stat. Comput. , 7 :856-869, 1986. .  J. Stoer and R. Bulirsch, Introduction to numerical analysis , 3rd edition, Springer, New York, 2002. ISBN 978-0-387-95452-3.  Lloyd N. Trefethen and David Bau, III, Numerical Linear Algebra , Society for Industrial and Applied Mathematics, 1997. ISBN 978-0-89871-361-9.  [ http://www.netlib.org/linalg/html_templates/node29.html#SECTION00734000000000000000|J . Dongarra et al. , Templates for the Solution of Linear Systems: Building Blocks for Iterative Methods ], 2nd Edition, SIAM, Philadelphia, 1994   "  Category:Numerical linear algebra  Category:Articles with example pseudocode     Saad and Schultz ↩  Trefethen & Bau, Thm 35.2 ↩  Stoer and Bulirsch, §8.7.2 ↩     