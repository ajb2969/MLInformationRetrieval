   Hadamard transform      Hadamard transform   The Hadamard transform (also known as the Walsh–Hadamard transform , Hadamard–Rademacher–Walsh transform , Walsh transform , or Walsh–Fourier transform ) is an example of a generalized class of Fourier transforms . It performs an orthogonal , symmetric , involutional , linear operation on    2  m     superscript  2  m    2^{m}    real numbers (or complex numbers , although the Hadamard matrices themselves are purely real).  The Hadamard transform can be regarded as being built out of size-2 discrete Fourier transforms (DFTs), and is in fact equivalent to a multidimensional DFT of size    2  ×  2  ×  ⋯  ×  2  ×  2      2  2  normal-⋯  2  2    2\times 2\times\cdots\times 2\times 2   . 1 It decomposes an arbitrary input vector into a superposition of Walsh functions .  The transform is named for the French  mathematician  Jacques Hadamard , the German-American mathematician Hans Rademacher , and the American mathematician Joseph L. Walsh .  Definition  The Hadamard transform H m is a 2 m × 2 m matrix, the Hadamard matrix (scaled by a normalization factor), that transforms 2 m real numbers x n into 2 m real numbers X k . The Hadamard transform can be defined in two ways: recursively , or by using the binary ( base -2) representation of the indices n and k .  Recursively, we define the 1 × 1 Hadamard transform H 0 by the identity  H 0 = 1, and then define H m for m > 0 by:       H  m   =    1   2     (      H   m  -  1       H   m  -  1         H   m  -  1       -   H   m  -  1        )    =    H  1   ⊗   H   m  -  1            subscript  H  m       1    2       subscript  H    m  1     subscript  H    m  1       subscript  H    m  1       subscript  H    m  1              tensor-product   subscript  H  1    subscript  H    m  1        H_{m}=\frac{1}{\sqrt{2}}\begin{pmatrix}H_{m-1}&H_{m-1}\\
 H_{m-1}&-H_{m-1}\end{pmatrix}=H_{1}\otimes H_{m-1}     where the 1/√2 is a normalization that is sometimes omitted. Thus, other than this normalization factor, the Hadamard matrices are made up entirely of 1 and −1.  Equivalently, we can define the Hadamard matrix by its ( k , n )-th entry by writing      k  =    ∑   i  =  0    m  -  1      k  i    2  i     =     k   m  -  1     2   m  -  1     +    k   m  -  2     2   m  -  2     +  ⋯  +    k  1   2   +   k  0          k    subscript   superscript     m  1      i  0       subscript  k  i    superscript  2  i               subscript  k    m  1     superscript  2    m  1        subscript  k    m  2     superscript  2    m  2     normal-⋯     subscript  k  1   2    subscript  k  0       k=\sum^{m-1}_{i=0}{k_{i}2^{i}}=k_{m-1}2^{m-1}+k_{m-2}2^{m-2}+\cdots+k_{1}2+k_{0}     and      n  =    ∑   i  =  0    m  -  1      n  i    2  i     =     n   m  -  1     2   m  -  1     +    n   m  -  2     2   m  -  2     +  ⋯  +    n  1   2   +   n  0          n    subscript   superscript     m  1      i  0       subscript  n  i    superscript  2  i               subscript  n    m  1     superscript  2    m  1        subscript  n    m  2     superscript  2    m  2     normal-⋯     subscript  n  1   2    subscript  n  0       n=\sum^{m-1}_{i=0}{n_{i}2^{i}}=n_{m-1}2^{m-1}+n_{m-2}2^{m-2}+\cdots+n_{1}2+n_{0}     where the k j and n j are the binary digits (0 or 1) of k and n , respectively. Note that for the element in the top left corner, we define    k  =  n  =  0        k  n       0     k=n=0   . In this case, we have:        (   H  m   )    k  ,  n    =    1   2   m  2       (   -  1   )      ∑  j      k  j    n  j            subscript   subscript  H  m    k  n        1   superscript  2    m  2      superscript    1     subscript   j      subscript  k  j    subscript  n  j         \left(H_{m}\right)_{k,n}=\frac{1}{2^{\frac{m}{2}}}(-1)^{\sum_{j}k_{j}n_{j}}     This is exactly the multidimensional     2   ×   2   ×   ⋯   ×   2   ×  2      2  2  normal-⋯  2  2    \scriptstyle 2\,\times\,2\,\times\,\cdots\,\times\,2\,\times\,2   DFT, normalized to be unitary , if the inputs and outputs are regarded as multidimensional arrays indexed by the n j and k j , respectively.  Some examples of the Hadamard matrices follow.       H  0   =        subscript  H  0   absent    \displaystyle H_{0}=     (This H 1 is precisely the size-2 DFT. It can also be regarded as the Fourier transform on the two-element additive group of Z /(2).)       H  2   =    1  2         subscript  H  2     1  2     \displaystyle H_{2}=\frac{1}{2}     where    i  ⋅  j     normal-⋅  i  j    i\cdot j   is the bitwise dot product of the binary representations of the numbers i and j. For example, if    n  ≥  2      n  2    \scriptstyle n\geq 2   , then       (   H  n   )    3  ,  2     =     (   -  1   )    3  ⋅  2     =     (   -  1   )     (  1  ,  1  )   ⋅   (  1  ,  0  )      =     (   -  1   )    1  +  0     =     (   -  1   )   1    =   -  1          subscript   subscript  H  n    3  2     superscript    1    normal-⋅  3  2          superscript    1    normal-⋅   1  1    1  0           superscript    1     1  0          superscript    1   1          1      \scriptstyle({H_{n}})_{3,2}\;=\;(-1)^{3\cdot 2}\;=\;(-1)^{(1,1)\cdot(1,0)}\;=%
 \;(-1)^{1+0}\;=\;(-1)^{1}\;=\;-1   , agreeing with the above (ignoring the overall constant). Note that the first row, first column of the matrix is denoted by     (   H  n   )    0  ,  0      subscript   subscript  H  n    0  0     \scriptstyle({H_{n}})_{0,0}   .  The rows of the Hadamard matrices are the Walsh functions .  Quantum computing applications  In quantum information processing the Hadamard transformation, more often called Hadamard gate in this context (cf. quantum gate ), is a one- qubit  rotation , mapping the qubit-basis states    |  0  ⟩     ket  0    |0\rangle   and    |  1  ⟩     ket  1    |1\rangle   to two superposition states with equal weight of the computational basis states    |  0  ⟩     ket  0    |0\rangle   and    |  1  ⟩     ket  1    |1\rangle   . Usually the phases are chosen so that we have      H  =       |  0  ⟩   +   |  1  ⟩     2     ⟨  0  |    +      |  0  ⟩   -   |  1  ⟩     2     ⟨  1  |         H           ket  0    ket  1      2     bra  0           ket  0    ket  1      2     bra  1       H=\frac{|0\rangle+|1\rangle}{\sqrt{2}}\langle 0|+\frac{|0\rangle-|1\rangle}{%
 \sqrt{2}}\langle 1|     in Dirac notation . This corresponds to the transformation matrix       H  1   =    1   2     (     1    1      1     -  1      )         subscript  H  1       1    2      1  1    1    1        H_{1}=\frac{1}{\sqrt{2}}\begin{pmatrix}1&1\\
 1&-1\end{pmatrix}     in the     |  0  ⟩   ,   |  1  ⟩       ket  0    ket  1     |0\rangle,|1\rangle   basis.  Many quantum algorithms use the Hadamard transform as an initial step, since it maps n qubits initialized with    |  0  ⟩     ket  0    |0\rangle   to a superposition of all 2 n orthogonal states in the     |  0  ⟩   ,   |  1  ⟩       ket  0    ket  1     |0\rangle,|1\rangle   basis with equal weight.  Hadamard gate operations       H   (   |  1  ⟩   )    =     1   2     |  0  ⟩    -    1   2     |  1  ⟩           H   ket  1          1    2     ket  0        1    2     ket  1       H(|1\rangle)=\frac{1}{\sqrt{2}}|0\rangle-\frac{1}{\sqrt{2}}|1\rangle          H   (   |  0  ⟩   )    =     1   2     |  0  ⟩    +    1   2     |  1  ⟩           H   ket  0          1    2     ket  0        1    2     ket  1       H(|0\rangle)=\frac{1}{\sqrt{2}}|0\rangle+\frac{1}{\sqrt{2}}|1\rangle          H   (     1   2     |  0  ⟩    +    1   2     |  1  ⟩     )    =     1  2    (    |  0  ⟩   +   |  1  ⟩    )    +    1  2    (    |  0  ⟩   -   |  1  ⟩    )     =   |  0  ⟩           H        1    2     ket  0        1    2     ket  1            1  2      ket  0    ket  1         1  2      ket  0    ket  1            ket  0      H\left(\frac{1}{\sqrt{2}}|0\rangle+\frac{1}{\sqrt{2}}|1\rangle\right)=\frac{1}%
 {2}(|0\rangle+|1\rangle)+\frac{1}{2}(|0\rangle-|1\rangle)=|0\rangle          H   (     1   2     |  0  ⟩    -    1   2     |  1  ⟩     )    =     1  2    (    |  0  ⟩   +   |  1  ⟩    )    -    1  2    (    |  0  ⟩   -   |  1  ⟩    )     =   |  1  ⟩           H        1    2     ket  0        1    2     ket  1            1  2      ket  0    ket  1         1  2      ket  0    ket  1            ket  1      H\left(\frac{1}{\sqrt{2}}|0\rangle-\frac{1}{\sqrt{2}}|1\rangle\right)=\frac{1}%
 {2}(|0\rangle+|1\rangle)-\frac{1}{2}(|0\rangle-|1\rangle)=|1\rangle     One application of the Hadamard gate to either a 0 or 1 qubit will produce a quantum state that, if observed, will be a 0 or 1 with equal probability (as seen in the first two operations). This is exactly like flipping a fair coin in the standard probabilistic model of computation . However, if the Hadamard gate is applied twice in succession (as is effectively being done in the last two operations), then the final state is always the same as the initial state. This would be like taking a fair coin that is showing heads, flipping it twice, and it always landing on heads after the second flip. The ket     |  0  ⟩   =   [     1      0          ]        ket  0     1    0    absent      |0\rangle=\par
 \begin{bmatrix}1\\
 0\\
 \par
 \end{bmatrix}     and the ket     |  1  ⟩   =   [     0      1          ]        ket  1     0    1    absent      |1\rangle=\par
 \begin{bmatrix}0\\
 1\\
 \par
 \end{bmatrix}   .  Computational complexity  The Hadamard transform can be computed in n log n operations ( n = 2 m ), using the fast Hadamard transform algorithm.  Other applications  The Hadamard transform is also used in data encryption , as well as many signal processing and data compression  algorithms , such as JPEG XR and MPEG-4 AVC . In video compression applications, it is usually used in the form of the sum of absolute transformed differences . It is also a crucial part of Grover's algorithm and Shor's algorithm in quantum computing. The Hadamard transform is also applied in scientific methods such as NMR , mass spectroscopy and crystallography  See also   Fast Walsh-Hadamard transform  Pseudo-Hadamard transform  Haar transform  Generalized Distributive Law   External links     Pan, Jeng-shyang Data Encryption Method Using Discrete Fractional Hadamard Transformation (May 28, 2009)     References  "  Category:Quantum algorithms  Category:Transforms     ↩     