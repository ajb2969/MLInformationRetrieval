   Principles of grid generation      Principles of grid generation   A grid is a small-sized geometrical shape that covers the physical domain, whose objective is to identify the discrete volumes or elements where conservation laws can be applied. Grid generation is the first process involved in computing numerical solutions to the equations that describe a physical process. The result of the solution depends upon the quality of grid. A well-constructed grid can improve the quality of solution whereas, deviations from the numerical solution can be observed with poorly constructed grid. Techniques for creating the cell forms the basis of grid generation. Various methods to generate grids are discussed below.  Algebraic methods  The grid generation by algebraic methods is done by using known functions in one, two or three dimensions taking arbitrary shaped regions. The computational domain might not be rectangular one, but for the sake of simplicity, the domain is taken to be rectangular. The simplest procedure that may be used to produce boundary fitted computational mesh is the normalization transformation. 1 For a nozzle, with the describing function    y  =   x  2       y   superscript  x  2     y=x^{2}   the grid can easily be generated using uniform division in y-direction with equally spaced increments in x-direction, which are described by      ξ  =   x       ξ  x    \xi=x\,         η  =    y   y  max         η    y   subscript  y       \eta=\frac{y}{y_{\max}}\,     where    y  max     subscript  y     y_{\max}   denotes the y-coordinate of the nozzle wall. For given values of (   ξ   ξ   \xi   ,   η   η   \eta   ) the values of (   x   x   x   ,   y   y   y   ) can be easily recovered.  Differential equation methods  Like algebraic methods, differential equation methods are also used to generate grids. The advantage of using the partial differential equations (PDEs) is that the solution of grid generating equations can be exploited to generate the mesh. Grid construction can be done using all three classes of partial differential equations.  Elliptic schemes  Elliptic PDEs generally have very smooth solutions leading to smooth contours. Using its smoothness as an advantage Laplace Equations can preferably be used because the Jacobian found out to be positive as a result of maximum principle for harmonic functions . After extensive work done by Crowley (1962) and Winslow (1966) 2 on PDEs by transforming physical domain into computational plane while mapping using Poisson’s equation , Thompson et al. (1974) 3 have worked extensively on elliptic PDEs to generate grids. In Poisson grid generators, the mapping is accomplished by marking the desired grid points (x, y) on the boundary of the physical domain, with the interior point distribution determined through the solution of equations written below        ξ   x  x    +   ξ   y  y     =   P   (  ξ  ,  η  )           subscript  ξ    x  x     subscript  ξ    y  y       P   ξ  η      \xi_{xx}+\xi_{yy}=P(\xi,\eta)           η   x  x    +   η   y  y     =   Q   (  ξ  ,  η  )           subscript  η    x  x     subscript  η    y  y       Q   ξ  η      \eta_{xx}+\eta_{yy}=Q(\xi,\eta)     where ( ξ , η ) are the co-ordiantes in the computational domain, while P and Q are responsible for point spacing within D. Transforming above equations in computational space yields a set of two elliptical PDEs of the form,         α   x   ξ  ξ     -   2  β   x   ξ  η      +   γ   x   η  η      =   -    I  2    (    P   x  ξ    +   Q   x  η     )               α   subscript  x    ξ  ξ       2  β   subscript  x    ξ  η        γ   subscript  x    η  η           superscript  I  2       P   subscript  x  ξ      Q   subscript  x  η         \alpha x_{\xi\xi}-2\beta x_{\xi\eta}+\gamma x_{\eta\eta}=-I^{2}(Px_{\xi}+Qx_{%
 \eta})            α   y   ξ  ξ     -   2  β   y   ξ  η      +   γ   y   η  η      =   -    I  2    (    P   y  ξ    +   Q   y  η     )               α   subscript  y    ξ  ξ       2  β   subscript  y    ξ  η        γ   subscript  y    η  η           superscript  I  2       P   subscript  y  ξ      Q   subscript  y  η         \alpha y_{\xi\xi}-2\beta y_{\xi\eta}+\gamma y_{\eta\eta}=-I^{2}(Py_{\xi}+Qy_{%
 \eta})     where     α   α   \displaystyle\alpha     These systems of equations are solved in the computational plane on uniformly spaced grid which provides us with the ( x , y ) co-ordinates of each point in physical space. The advantage of using Elliptical PDEs is the solution linked to them is smooth and the resulting grid is smooth. But, specification of P and Q becomes a difficult task thus adding it to its disadvantages. Moreover, the grid has to be computed after each time step which adds up to computational time. 4  Hyperbolic schemes  This grid generation scheme is generally applicable to problems with open domains consistent with the type of PDE describing the physical problem. The advantage associated with Hyperbolic PDEs is that the governing equations need to be solved only once for generating grid. The initial point distribution along with the approximate boundary conditions forms the required input and the solution is the then marched outward. Steger and Sorenson (1980) 5 proposed a volume orthogonality method that uses Hyperbolic PDEs for mesh generation. For a 2-D problem, Considering computational space to be given by     Δ  ξ   =   Δ  η   =  1          normal-Δ  ξ     normal-Δ  η        1     \Delta\xi=\Delta\eta=1   , the inverse of the Jacobian is given by,         x  ξ    y  η    -    x  η    y  ξ     =  I           subscript  x  ξ    subscript  y  η       subscript  x  η    subscript  y  ξ     I    x_{\xi}y_{\eta}-x_{\eta}y_{\xi}=I     where   I   I   I   represents the area in physical space for a given area in computational space. The second equation links the orthogonality of grid lines at the boundary in physical space which can be written as        d  ξ   =  0  =      ξ  x    d  x   +     ξ  y    d  y     .          d  ξ   0            subscript  ξ  x   d  x      subscript  ξ  y   d  y       d\xi=0=\xi_{x}\,dx+\xi_{y}\,dy.     For   ξ   ξ   \xi   and   η   η   \eta   surfaces to be perpendicular the equation becomes         x  ξ    x  η    +    y  ξ    y  η     =  0.           subscript  x  ξ    subscript  x  η       subscript  y  ξ    subscript  y  η     0.    x_{\xi}x_{\eta}+y_{\xi}y_{\eta}=0.     The problem associated with such system of equations is the specification of   I   I   I   . Poor selection of   I   I   I   may lead to shock and discontinuous propagation of this information throughout the mesh. While mesh being orthogonal is generated very rapidly which comes out as an advantage with this method.  Parabolic schemes  The solving technique is similar to that of hyperbolic PDEs by advancing the solution away from the initial data surface satisfying the boundary conditions at the end. Nakamura (1982) and Edwards (1985) developed the basic ideas for parabolic grid generation. The idea uses either of Laplace or the Poisson's equation and especially treating the parts which controls elliptic behavior. The initial values are given as the coordinates of the point along the surface    η  =  0      η  0    \eta=0   and the advancing the solutions to the outer surface of the object satisfying the boundary conditions along   ξ   ξ   \xi   edges.  The control of the grid spacing has not been suggested till now. Nakamura and Edwards, grid control was accomplished using non uniform spacing. The parabolic grid generation shows an advantage over the hyperbolic grid generation that, no shocks or discontinuities occur and the grid is relatively smooth. The specifications of initial values and selection of step size to control the grid points is however time consuming, but these techniques can be effective when familiarity and experience is gained.  Variational method  This method includes a technique that minimizes grid smoothness, orthogonality and volume variation. This method forms mathematical platform to solve grid generation problems. In this method an alternative grid is generated by a new mesh after each iteration and computing the grid speed using backward difference method . This technique is a powerful one with a disadvantage that effort is required to solve the equations related to grid. Further work needed to be done to minimize the integrals that will reduce the CPU time.  Unstructured grid generation  The main importance of this scheme is that it provides a method that will generate the grid automatically. Using this method, grids are segmented into blocks according to the surface of the element and a structure is provided to ensure appropriate connectivity. To interpret the data flow solver is used. When an unstructured scheme is employed, the main interest is to fulfill the demand of the user and a grid generator is used to accomplish this task. The information storage in structured scheme is cell to cell instead of grid to grid and hence the more memory space is needed. Due to random cell location, the solver efficiency in unstructured is less as compared to the structured scheme. 6  Some points are needed to be kept in mind at the time of grid construction . The grid point with high resolution creates difficulty for both structured and unstructured. For example, in case of boundary layer , structured scheme produces elongated grid in the direction of flow. On the other hand unstructured grids require a higher cell density in the boundary layer because the cell needs to be as equilateral as possible to avoid errors. 7  Connectivity information  We must identify what information is required to identify the cell and all the neighbors of the cell in the computational mesh. We can choose to locate the arbitrary points anywhere we want for the unstructured grid. A point insertion scheme is used to insert the points independently and the cell connectivity is determined. This suggests that the point be identified as they are inserted. Logic for establishing new connectivity is determined once the points are inserted. Data that form grid point that identifies grid cell are needed. As each cell is formed it is numbered and the points are sorted. In addition the neighbor cell information is needed.  Adaptive grid  A problem in solving partial differential equations using previous methods is that the grid is constructed and the points are distributed in the physical domain before details of the solution is known. So the grid may or may not be the best for the given problem. 8  Adaptive methods are used to improve the accuracy of the solutions. The adaptive method is referred to as ‘h’ method if mesh refinement is used, ‘r’ method if the number of grid point is fixed and not redistributed and ‘p’ if the order of solution scheme is increased in finite-element theory. The multi diemensional problems using the equi-distribution scheme can be accomplished in several ways. The simplest to understand are the Poisson Grid Generators with control function based on the equidistribution of the weight function with the diffusion set as a multiple of desired cell volume. The equidistribution scheme can also be applied to the unstructured problem. The problem is the connectivity hampers if mesh point movement is very large.  Steady flow and the time-accurate flow calculation can be solved through this adaptive method. The grid is refined and after a predetermined number of iteration in order to adapt it in a steady flow problem. The grid will stop adjusting to the changes once the solution converges. In time accurate case coupling of the Partial Differential Equations of the physical problem and those describing the grid movement is required.  References  "  Category:Numerical differential equations     ↩  ↩  ↩  ↩  ↩  ↩  ↩  ↩     