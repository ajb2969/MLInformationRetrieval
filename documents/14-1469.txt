


Hierarchical matrix




Hierarchical matrix

In numerical mathematics, hierarchical matrices (H-matrices) 1 2 3 are used as data-sparse approximations of non-sparse matrices. While a sparse matrix of dimension 
 
 
 
  can be represented efficiently in 
 
 
 
  units of storage by storing only its non-zero entries, a non-sparse matrix would require 
 
 
 
  units of storage, and using this type of matrices for large problems would therefore be prohibitively expensive in terms of storage and computing time. Hierarchical matrices provide an approximation requiring only 
 
 
 
  units of storage, where 
 
 
 
  is a parameter controlling the accuracy of the approximation. In typical applications, e.g., when discretizing integral equations 4 5 6 7 or solving elliptic partial differential equations 8 9 10 a rank proportional to 
 
 
 
  with a small constant 
 
 
 
  is sufficient to ensure an accuracy of 
 
 
 
 . Compared to many other data-sparse representations of non-sparse matrices, hierarchical matrices offer a major advantage: the results of matrix arithmetic operations like matrix multiplication, factorization or inversion can be approximated in 
 
 
 
  operations, where 
 
 
11
Basic idea
Hierarchical matrices rely on local low-rank approximations: let 
 
 
 
  be index sets, and let 
 
 
 
  denote the matrix we have to approximate. In many applications (see above), we can find subsets 
 
 
 
  such that 
 
 
 
  can be approximated by a rank-
 
 
 
  matrix. This approximation can be represented in factorized form 
 
 
 
  with factors 
 
 
 
 . While the standard representation of the matrix 
 
 
 
  requires 
 
 
 
  units of storage, the factorized representation requires only 
 
 
 
  units. If 
 
 
 
  is not too large, the storage requirements are reduced significantly.
In order to approximate the entire matrix 
 
 
 
 , it is split into a family of submatrices. Large submatrices are stored in factorized representation, while small submatrices are stored in standard representation in order to improve the efficiency.
Low-rank matrices are closely related to degenerate expansions used in panel clustering and the fast multipole method to approximate integral operators. In this sense, hierarchical matrices can be considered the algebraic counterparts of these techniques.
Application to integral operators
Hierarchical matrices are successfully used to treat integral equations, e.g., the single and double layer potential operators appearing in the boundary element method. A typical operator has the form



The Galerkin method leads to matrix entries of the form



where 
 
 
 
  and 
 
 
 
  are families of finite element basis functions. If the kernel function 
 
 
 
  is sufficiently smooth, we can approximate it by polynomial interpolation to obtain



where 
 
 
 
  is the family of interpolation points and 
 
 
 
  is the corresponding family of Lagrange polynomials. Replacing 
 
 
 
  by 
 
 
 
  yields an approximation



with the coefficients






If we choose 
 
 
 
  and use the same interpolation points for all 
 
 
 
 , we obtain 
 
 
 
 .
Obviously, any other approximation separating the variables 
 
 
 
  and 
 
 
 
 , e.g., the multipole expansion, would also allow us to split the double integral into two single integrals and thus arrive at a similar factorized low-rank matrix.
Of particular interest are cross approximation techniques 12 13 14 that use only the entries of the original matrix 
 
 
 
  to construct a low-rank approximation.
Application to elliptic partial differential equations
Since the solution operator of an elliptic partial differential equation can be expressed as an integral operator involving Green's function, it is not surprising that the inverse of the stiffness matrix arising from the finite element method can be approximated by a hierarchical matrix.
Green's function depends on the shape of the computational domain, therefore it is usually not known. Nevertheless, approximate arithmetic operations can be employed to compute an approximate inverse without knowing the function explicitly.
Surprisingly, it is possible to prove1516 that the inverse can be approximated even if the differential operator involves non-smooth coefficients and Green's function is therefore not smooth.
Arithmetic operations
The most important innovation of the hierarchical matrix method is the development of efficient algorithms for performing (approximate) matrix arithmetic operations on non-sparse matrices, e.g., to compute approximate inverses, LU decompositions and solutions to matrix equations.
The central algorithm is the efficient matrix-matrix multiplication, i.e., the computation of 
 
 
 
  for hierarchical matrices 
 
 
 
  and a scalar factor 
 
 
 
 . The algorithm requires the submatrices of the hierarchical matrices to be organized in a block tree structure and takes advantage of the properties of factorized low-rank matrices to compute the updated 
 
 
 
  in 
 
 
 
  operations.
Taking advantage of the block structure, the inverse can be computed by using recursion to compute inverses and Schur complements of diagonal blocks and combining both using the matrix-matrix multiplication. In a similar way, the LU decomposition 17 18 can be constructed using only recursion and multiplication. Both operations also require 
 
 
 
  operations.
H2-matrices
In order to treat very large problems, the structure of hierarchical matrices can be improved: H2-matrices 19 20 replace the general low-rank structure of the blocks by a hierarchical representation closely related to the fast multipole method in order to reduce the storage complexity to 
 
 
 
 .
In the context of boundary integral operators, replacing the fixed rank 
 
 
 
  by block-dependent ranks leads to approximations that preserve the rate of convergence of the underlying boundary element method at a complexity of 
 
 
2122
Literature


Software
HLib is a C software library implementing the most important algorithms for hierarchical and 
 
 
 
 -matrices.
AHMED is a C++ software library that can be downloaded for educational purposes.
HLIBpro is an implementation of the core hierarchical matrix algorithms for commercial applications.
H2Lib is an open source implementation of hierarchical matrix algorithms intended for research and teaching.
awesome-hierarchical-matrices is a repository containing a list of other H-Matrices implementations.
"
Category:Matrices



W. Hackbusch, A sparse matrix arithmetic based on H-matrices. Part I: Introduction to H-matrices, Computing (1999), 62:89–108↩
M. Bebendorf, Hierarchical matrices: A means to efficiently solve elliptic boundary value problems, Springer (2008)↩
W. Hackbusch, Hierarchische Matrizen. Algorithmen und Analysis, Springer (2009)↩
W. Hackbusch and B. N. Khoromskij, A sparse H-Matrix Arithmetic. Part II: Application to Multi-Dimensional Problems, Computing (2000), 64:21–47↩
M. Bebendorf, Approximation of boundary element matrices, Num. Math. (2000), 86:565--589↩
M. Bebendorf and S. Rjasanow, Adaptive low-rank approximation of collocation matrices, Computing (2003), 70:1–24↩
S. Börm and L. Grasedyck, Hybrid cross approximation of integral operators, Num. Math. (2005), 101:221–249↩
M. Bebendorf and W. Hackbusch, Existence of H-matrix approximants to the inverse FE-matrix of elliptic operators with 
 
 
 
 -coefficients, Num. Math. (2003), 95:1–28↩
S. Börm, Approximation of solution operators of elliptic partial differential equations by H- and H2-matrices, Num. Math. (2010), 115:165–193↩
M. Faustmann, J. M. Melenk and D. Praetorius, H-matrix approximability of the inverses of FEM matrices, to appear in Num. Math., preprint available at arXiv.org↩
L. Grasedyck and W. Hackbusch, Construction and Arithmetics of H-Matrices, Computing (2003), 70:295–334↩


E. Tyrtyshnikov, Incomplete cross approximation in the mosaic-skeleton method, Computing (2000), 64:367–380↩


M. Bebendorf, Why finite element discretizations can be factored by triangular hierarchical matrices, SIAM J. Num. Anal. (2007), 45:1472–1494↩
L. Grasedyck, R. Kriemann and S. Le Borne, Domain decomposition based H-LU preconditioning, Num. Math. (2009), 112:565–600↩
W. Hackbusch, B. N. Khoromskij and S. A. Sauter, On H2-matrices, Lectures on Applied Mathematics (2002), 9–29↩
S. Börm, Efficient Numerical Methods for Non-local Operators: H2-Matrix Compression, Algorithms and Analysis, EMS Tracts in Mathematics 14 (2010)↩
S. A. Sauter, Variable order panel clustering, Computing (2000), 64:223–261↩
S. Börm and S. A. Sauter, BEM with linear complexity for the classical boundary integral operators, Math. Comp. (2005), 74:1139–1177↩




