


Reflected Brownian motion




Reflected Brownian motion

 table.sourceCode, tr.sourceCode, td.lineNumbers, td.sourceCode {
   margin: 0; padding: 0; vertical-align: baseline; border: none; }
 <style>
 table.sourceCode { width: 100%; line-height: 100%; }
 td.lineNumbers { text-align: right; padding-right: 4px; padding-left: 4px; color: #aaaaaa; border-right: 1px solid #aaaaaa; }
 td.sourceCode { padding-left: 5px; }
 code > span.kw { color: #007020; font-weight: bold; } /* Keyword */
 code > span.dt { color: #902000; } /* DataType */
 code > span.dv { color: #40a070; } /* DecVal */
 code > span.bn { color: #40a070; } /* BaseN */
 code > span.fl { color: #40a070; } /* Float */
 code > span.ch { color: #4070a0; } /* Char */
 code > span.st { color: #4070a0; } /* String */
 code > span.co { color: #60a0b0; font-style: italic; } /* Comment */
 code > span.ot { color: #007020; } /* Other */
 code > span.al { color: #ff0000; font-weight: bold; } /* Alert */
 code > span.fu { color: #06287e; } /* Function */
 code > span.er { color: #ff0000; font-weight: bold; } /* Error */
 code > span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */
 code > span.cn { color: #880000; } /* Constant */
 code > span.sc { color: #4070a0; } /* SpecialChar */
 code > span.vs { color: #4070a0; } /* VerbatimString */
 code > span.ss { color: #bb6688; } /* SpecialString */
 code > span.im { } /* Import */
 code > span.va { color: #19177c; } /* Variable */
 code > span.cf { color: #007020; font-weight: bold; } /* ControlFlow */
 code > span.op { color: #666666; } /* Operator */
 code > span.bu { } /* BuiltIn */
 code > span.ex { } /* Extension */
 code > span.pp { color: #bc7a00; } /* Preprocessor */
 code > span.at { color: #7d9029; } /* Attribute */
 code > span.do { color: #ba2121; font-style: italic; } /* Documentation */
 code > span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */
 code > span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */
 code > span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */
   



In probability theory, reflected Brownian motion (or regulated Brownian motion,12 both with the acronym RBM) is a Wiener process in a space with reflecting boundaries.3
RBMs have been shown to describe queueing models experiencing heavy traffic4 as first proposed by Kingman5 and proven by Iglehart and Whitt.67
Definition
A d–dimensional reflected Brownian motion Z is a stochastic process on 
 
 
 
  uniquely defined by

a d–dimensional drift vector μ
a d×d non-singular covariance matrix Σ and
a d×d reflection matrix R.8

where X(t) is an unconstrained Brownian motion and9








with Y(t) a d–dimensional vector where

Y is continuous and non–decreasing with Y(0) = 0
Yj only increases at times for which Zj = 0 for j = 1,2,...,d
Z(t) ∈ S, t ≥ 0.

The reflection matrix describes boundary behaviour. In the interior of 
 
 
 
  the process behaves like a Wiener process, on the boundary "roughly speaking, Z is pushed in direction Rj whenever the boundary surface 
 
 
 
  is hit, where Rj is the jth column of the matrix R."10
Stability conditions
Stability conditions are known for RBMs in 1, 2, and 3 dimensions. "The problem of recurrence classification for SRBMs in four and higher dimensions remains open."11 In the special case where R is an M-matrix then necessary and sufficient conditions for stability are12

R is a non-singular matrix and
R−1μ < 0.

Marginal and stationary distribution
One dimension
The marginal distribution (transient distribution) of a one-dimensional Brownian motion starting at 0 restricted to positive values (a single reflecting barrier at 0) with drift ''μ '' and variance σ2 is








for all t ≥ 0, (with Φ the cumulative distribution function of the normal distribution) which yields (for μ 






For fixed t, the distribution of Z(t) coincides with the distribution of the running maximum M(t) of the Brownian motion,








But be aware that the distributions of the processes as a whole are very different. In particular, M(t) is increasing in t, which is not the case for Z(t).
The heat kernel for reflected Brownian motion at 
 
 
 
 :



For the plane above 
 
 

Multiple dimensions
The stationary distribution of a reflected Brownian motion in multiple dimensions is tractable analytically when there is a product form stationary distribution,13 which occurs when the process is stable and14








where D = diag(Σ). In this case the probability density function is15








where ηk = 2μkγk/Σkk and γ = R−1μ. Closed-form expressions for situations where the product form condition does not hold can be computed numerically as described below in the simulation section.
Hitting times
One dimension
Simulation
One dimension
In one dimension the simulated process is the absolute value of a Wiener process. The following MATLAB program creates a sample path.16
%rbm.m
 n=10^4; h=10^(-3); t=h.*(0:n); mu=-1;
 X=zeros(1,n+1); M=X; B=X;
 B(1)=3; X(1)=3;
 for k=2:n+1
   Y=sqrt(h)*randn; U=rand(1);
   B(k)=B(k-1)+mu*h-Y;
   M=(Y + sqrt(Y^2-2*h*log(U)))/2;
   X(k)=max(M-Y,X(k-1)+h*mu-Y);
 end
 subplot(2,1,1)
 plot(t,X,'k-');
 subplot(2,1,2)
 plot(t,X-B,'k-');
The error involved in discrete simulations has been quantified.17
Multiple dimensions
QNET allows simulation of steady state RBMs.181920
Other boundary conditions
Feller described possible boundary condition for the process212223

absorption24 or killed Brownian motion,25 a Dirichlet boundary condition
instantaneous reflection,26 as described above a Neumann boundary condition
elastic reflection, a Robin boundary condition
delayed reflection27 (the time spent on the boundary is positive with probability one)
partial reflection28 where the process is either immediately reflected or is absorbed
sticky Brownian motion.29

See also

Skorokhod problem

References
"
Category:Stochastic processes Category:Variants of random walks



↩

↩

↩
↩
↩
↩


↩

↩
↩

↩
↩
↩
↩
↩
↩
↩
↩

↩



↩



