   Negation normal form      Negation normal form   In mathematical logic , a formula is in negation normal form if the negation operator (   ¬     \lnot   , ) is only applied to variables and the only other allowed Boolean operators are conjunction (   ∧     \land   , ) and disjunction (   ∨     \lor   , ).  Negation normal form is not a canonical form: for example,    a  ∧   (   b  ∨   ¬  c    )       a    b     c      a\land(b\lor\lnot c)   and     (   a  ∧  b   )   ∨   (   a  ∧   ¬  c    )         a  b     a     c      (a\land b)\lor(a\land\lnot c)   are equivalent, and are both in negation normal form.  In classical logic and many modal logics , every formula can be brought into this form by replacing implications and equivalences by their definitions, using De Morgan's laws to push negation inwards, and eliminating double negations. This process can be represented using the following rewrite rules :      ¬   (  ∀  x  .  G  )   →  ∃  x  .  ¬  G     fragments    fragments  normal-(  for-all  x  normal-.  G  normal-)   normal-→   x  normal-.   G    \lnot(\forall x.G)\to\exists x.\lnot G         ¬   (  ∃  x  .  G  )   →  ∀  x  .  ¬  G     fragments    fragments  normal-(   x  normal-.  G  normal-)   normal-→  for-all  x  normal-.   G    \lnot(\exists x.G)\to\forall x.\lnot G          ¬  ¬  G   →  G     normal-→      G   G    \lnot\lnot G\to G          ¬   (    G  1   ∧   G  2    )    →    (   ¬   G  1    )   ∨   (   ¬   G  2    )       normal-→       subscript  G  1    subscript  G  2           subscript  G  1        subscript  G  2       \lnot(G_{1}\land G_{2})\to(\lnot G_{1})\lor(\lnot G_{2})          ¬   (    G  1   ∨   G  2    )    →    (   ¬   G  1    )   ∧   (   ¬   G  2    )       normal-→       subscript  G  1    subscript  G  2           subscript  G  1        subscript  G  2       \lnot(G_{1}\lor G_{2})\to(\lnot G_{1})\land(\lnot G_{2})     A formula in negation normal form can be put into the stronger conjunctive normal form or disjunctive normal form by applying distributivity .  Examples and counterexamples  The following formulae are all in negation normal form:       (   A  ∨  B   )   ∧  C        A  B   C    (A\vee B)\wedge C          (   A  ∧   (    ¬  B   ∨  C   )   ∧   ¬  C    )   ∨  D        A       B   C      C    D    (A\wedge(\lnot B\vee C)\wedge\lnot C)\vee D         A  ∨   ¬  B       A     B     A\vee\lnot B         A  ∧   ¬  B       A     B     A\wedge\lnot B     The first example is also in conjunctive normal form and the last two are in both conjunctive normal form and disjunctive normal form , but the second example is in neither.  The following formulae are not in negation normal form:      A  ⇒  B     normal-⇒  A  B    A\Rightarrow B         ¬   (   A  ∨  B   )         A  B     \lnot(A\vee B)         ¬   (   A  ∧  B   )         A  B     \lnot(A\wedge B)         ¬   (   A  ∨   ¬  C    )         A     C      \lnot(A\vee\lnot C)     They are however respectively equivalent to the following formulae in negation normal form:       ¬  A   ∨  B         A   B    \lnot A\vee B          ¬  A   ∧   ¬  B          A      B     \lnot A\wedge\lnot B          ¬  A   ∨   ¬  B          A      B     \lnot A\vee\lnot B          ¬  A   ∧  C         A   C    \lnot A\wedge C     References   Alan J.A. Robinson and Andrei Voronkov, Handbook of Automated Reasoning  1 :203 ff (2001) ISBN 0444829490.   External links   Java applet for converting logical formula to Negation Normal Form, showing laws used   "  Category:Propositional calculus  Category:Normal forms (logic)   