   Stiffness matrix      Stiffness matrix    For the stiffness tensor in solid mechanics, see Hooke's law#Matrix representation (stiffness tensor) .    In the finite element method for the numerical solution of elliptic partial differential equations , the stiffness matrix represents the system of linear equations that must be solved in order to ascertain an approximate solution to the differential equation.  The stiffness matrix for the Poisson problem  For simplicity, we will first consider the Poisson problem       -    ∇  2   u    =  f          superscript  normal-∇  2   u    f    -\nabla^{2}u=f     on some domain Ω, subject to the boundary condition u = 0 on the boundary of Ω. To discretize this equation by the finite element method, one chooses a set of basis functions { φ 1 , ..., φ n } defined on Ω which also vanish on the boundary. One then approximates       u  ≈   u  h   =     u  1    φ  1    +  ⋯  +    u  n    φ  n      .        u   superscript  u  h             subscript  u  1    subscript  φ  1    normal-⋯     subscript  u  n    subscript  φ  n        u\approx u^{h}=u_{1}\varphi_{1}+\cdots+u_{n}\varphi_{n}.     The coefficients u 1 , ..., u n are determined so that the error in the approximation is orthogonal to each basis function φ i :         ∫  Ω      φ  i   ⋅   f    d  x    =   -    ∫  Ω     φ  i     ∇  2      u  h    d  x       =   -    ∑  j     (    ∫  Ω     φ  i     ∇  2      φ  j    d  x      )    u  j      =    ∑  j     (    ∫  Ω     ∇   φ  i    ⋅   ∇     φ  j    d  x      )    u  j      .          subscript   normal-Ω      normal-⋅   subscript  φ  i   f   d  x        subscript   normal-Ω      subscript  φ  i     superscript  normal-∇  2      superscript  u  h   d  x                subscript   j       subscript   normal-Ω      subscript  φ  i     superscript  normal-∇  2      subscript  φ  j   d  x       subscript  u  j             subscript   j       subscript   normal-Ω    normal-⋅   normal-∇   subscript  φ  i     normal-∇     subscript  φ  j   d  x       subscript  u  j        \int_{\Omega}\varphi_{i}\cdot f\,dx=-\int_{\Omega}\varphi_{i}\nabla^{2}u^{h}\,%
 dx=-\sum_{j}\left(\int_{\Omega}\varphi_{i}\nabla^{2}\varphi_{j}\,dx\right)\,u_%
 {j}=\sum_{j}\left(\int_{\Omega}\nabla\varphi_{i}\cdot\nabla\varphi_{j}\,dx%
 \right)u_{j}.     The stiffness matrix is the n-element square matrix A defined by        A   i  j    =    ∫  Ω     ∇   φ  i    ⋅   ∇     φ  j    d  x       .       subscript  A    i  j      subscript   normal-Ω    normal-⋅   normal-∇   subscript  φ  i     normal-∇     subscript  φ  j   d  x        A_{ij}=\int_{\Omega}\nabla\varphi_{i}\cdot\nabla\varphi_{j}\,dx.     By defining the vector F with components F i = ( φ i , f ), the coefficients u i are determined by the linear system AU = F . The stiffness matrix is symmetric, i.e. A ij = A ji , so all its eigenvalues are real. Moreover, it is a strictly positive-definite matrix , so that the system AU = F always has a unique solution. (For other problems, these nice properties will be lost.)  Note that the stiffness matrix will be different depending on the computational grid used for the domain and what type of finite element is used. For example, the stiffness matrix when piecewise quadratic finite elements are used will have more degrees of freedom than piecewise linear elements.  The stiffness matrix for other problems  Determining the stiffness matrix for other PDE follows essentially the same procedure, but it can be complicated by the choice of boundary conditions. As a more complex example, consider the elliptic equation       -    ∑   k  ,  l      ∂   ∂   x  k      (    a   k  l      ∂  u    ∂   x  l      )      =  f          subscript    k  l            subscript  x  k        superscript  a    k  l        u      subscript  x  l         f    -\sum_{k,l}\frac{\partial}{\partial x_{k}}\left(a^{kl}\frac{\partial u}{%
 \partial x_{l}}\right)=f     where A ( x ) = a kl ( x ) is a positive-definite matrix defined for each point x in the domain. We impose the Robin boundary condition        -    ∑   k  ,  l      ν  k    a   k  l      ∂  u    ∂   x  l        =   c   (   u  -  g   )     ,          subscript    k  l       subscript  ν  k    superscript  a    k  l        u      subscript  x  l          c    u  g      -\sum_{k,l}\nu_{k}a^{kl}\frac{\partial u}{\partial x_{l}}=c(u-g),     where ν k is the component of the unit outward normal vector ν in the k -th direction. The system to be solved is         ∑  j     (     ∑   k  ,  l      ∫  Ω     a   k  l      ∂   φ  i     ∂   x  k       ∂   φ  j     ∂   x  l     d  x     +    ∫   ∂  Ω     c   φ  i     φ  j    d  s     )    u  j     =     ∫  Ω     φ  i    f   d  x    +    ∫   ∂  Ω     c   φ  i    g   d  s      ,        subscript   j         subscript    k  l      subscript   normal-Ω      superscript  a    k  l         subscript  φ  i       subscript  x  k          subscript  φ  j       subscript  x  l     d  x       subscript     normal-Ω      c   subscript  φ  i    subscript  φ  j   d  s      subscript  u  j         subscript   normal-Ω      subscript  φ  i   f  d  x      subscript     normal-Ω      c   subscript  φ  i   g  d  s       \sum_{j}\left(\sum_{k,l}\int_{\Omega}a^{kl}\frac{\partial\varphi_{i}}{\partial
 x%
 _{k}}\frac{\partial\varphi_{j}}{\partial x_{l}}dx+\int_{\partial\Omega}c%
 \varphi_{i}\varphi_{j}\,ds\right)u_{j}=\int_{\Omega}\varphi_{i}f\,dx+\int_{%
 \partial\Omega}c\varphi_{i}g\,ds,     as can be shown using an analogue of Green's identity. The coefficients u i are still found by solving a system of linear equations, but the matrix representing the system is markedly different from that for the ordinary Poisson problem.  In general, to each scalar elliptic operator L of order 2 k , there is associated a bilinear form B on the Sobolev space  H k , so that the weak formulation of the equation Lu = f is       B   [  u  ,  v  ]    =   (  f  ,  v  )         B   u  v     f  v     B[u,v]=(f,v)     for all functions v in H k . Then the stiffness matrix for this problem is        A   i  j    =   B   [   φ  j   ,   φ  i   ]     .       subscript  A    i  j      B    subscript  φ  j    subscript  φ  i       A_{ij}=B[\varphi_{j},\varphi_{i}].     Practical assembly of the stiffness matrix  In order to implement the finite element method on a computer, one must first choose a set of basis functions and then compute the integrals defining the stiffness matrix. Usually, the domain Ω is discretized by some form of mesh generation , wherein it is divided into non-overlapping triangles or quadrilaterals, which are generally referred to as elements. The basis functions are then chosen to be polynomials of some order within each element, and continuous across element boundaries. The simplest choices are piecewise linear for triangular elements and piecewise bilinear for rectangular elements.  The element stiffness matrix  A [ k ] for element T k is the matrix        A   i  j    [  k  ]    =    ∫   T  k      ∇   φ  i    ⋅   ∇     φ  j    d  x       .       subscript   superscript  A   delimited-[]  k      i  j      subscript    subscript  T  k     normal-⋅   normal-∇   subscript  φ  i     normal-∇     subscript  φ  j   d  x        A^{[k]}_{ij}=\int_{T_{k}}\nabla\varphi_{i}\cdot\nabla\varphi_{j}\,dx.     The element stiffness matrix is zero for most values of i and j, for which the corresponding basis functions are zero within T k . The full stiffness matrix A is the sum of the element stiffness matrices. In particular, for basis functions that are only supported locally, the stiffness matrix is sparse .  For many standard choices of basis functions, i.e. piecewise linear basis functions on triangles, there are simple formulas for the element stiffness matrices. For example, for piecewise linear elements, consider a triangle with vertices ( x 1 , y 1 ), ( x 2 , y 2 ), ( x 3 , y 3 ), and define the 2×3 matrix       D  =   [       x  3   -   x  2        x  1   -   x  3        x  2   -   x  1          y  3   -   y  2        y  1   -   y  3        y  2   -   y  1       ]    .      D   delimited-[]       subscript  x  3    subscript  x  2       subscript  x  1    subscript  x  3       subscript  x  2    subscript  x  1         subscript  y  3    subscript  y  2       subscript  y  1    subscript  y  3       subscript  y  2    subscript  y  1         D=\left[\begin{matrix}x_{3}-x_{2}&x_{1}-x_{3}&x_{2}-x_{1}\\
 y_{3}-y_{2}&y_{1}-y_{3}&y_{2}-y_{1}\end{matrix}\right].     Then the element stiffness matrix is       A   [  k  ]    =     D  ⊤   D   /   (    4  ⋅  area    (  T  )    )         superscript  A   delimited-[]  k         superscript  D  top   D      normal-⋅  4  area   T      A^{[k]}=D^{\top}D/(4\cdot\mathrm{area}(T))   .  When the differential equation is more complicated, say by having an inhomogeneous diffusion coefficient, the integral defining the element stiffness matrix can be evaluated by Gaussian quadrature .  The condition number of the stiffness matrix depends strongly on the quality of the numerical grid. In particular, triangles with small angles in the finite element mesh induce large eigenvalues of the stiffness matrix, degrading the solution quality.  References         "  Category:Applied mathematics  Category:Numerical analysis   