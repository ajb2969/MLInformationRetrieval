


Referential integrity




Referential integrity

 Referential integrity is a property of data which, when satisfied, requires every value of one attribute (column) of a relation (table) to exist as a value of another attribute in a different (or the same) relation (table).1
For referential integrity to hold in a relational database, any field in a table that is declared a foreign key can contain either a null value, or only values from a parent table's primary key or a candidate key.2 In other words, when a foreign key value is used it must reference a valid, existing primary key in the parent table. For instance, deleting a record that contains a value referred to by a foreign key in another table would break referential integrity. Some relational database management systems (RDBMS) can enforce referential integrity, normally either by deleting the foreign key rows as well to maintain integrity, or by returning an error and not performing the delete. Which method is used may be determined by a referential integrity constraint defined in a data dictionary.
The adjective 'referential' describes the action that a foreign key performs, 'referring' to a link field in another table. In simple terms, 'referential integrity' is a guarantee that the target it 'refers' to will be found. A lack of referential integrity in a database can lead relational databases to return incomplete data, usually with no indication of an error.
Formalization
An inclusion dependency over two (possibly identical) predicates 
 
 
 
  and 
 
 
 
  from a schema is written 
 
 
 
 , where the 
 
 
 
 , 
 
 
 
  are distinct attributes (column names) of 
 
 
 
  and 
 
 
 
 . It implies that the tuples of values appearing in columns 
 
 
 
  for facts of 
 
 
 
  must also appear as a tuple of values in columns 
 
 
 
  for some fact of 
 
 
 
 .
Logical implication between inclusion dependencies can be axiomatized by inference rules 3 and can be decided by a PSPACE algorithm. The problem can be shown to be PSPACE-complete by reduction from the acceptance problem for a linear bounded automaton.4 However, logical implication between dependencies that can be inclusion dependencies or functional dependencies is undecidable by reduction from the word problem for monoids.5
See also

Dangling pointer
Declarative Referential Integrity
Domain/key normal form
Entity integrity
Functional dependency
Propagation constraint
Surrogate key
Slowly changing dimension

References
"
Category:Database management systems Category:Data quality




Coronel et al. (2013). Database Systems 10th ed. Cengage Learning, ISBN 978-1-111-96960-8
Abiteboul, Hull, Vianu. Foundations of Databases Addison-Wesley, 1994. Section 9.1, p. 193. Freely available online.
ibid., p. 196
ibid., p. 199




