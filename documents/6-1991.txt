


Ikeda map




Ikeda map

 table.sourceCode, tr.sourceCode, td.lineNumbers, td.sourceCode {
   margin: 0; padding: 0; vertical-align: baseline; border: none; }
 <style>
 table.sourceCode { width: 100%; line-height: 100%; }
 td.lineNumbers { text-align: right; padding-right: 4px; padding-left: 4px; color: #aaaaaa; border-right: 1px solid #aaaaaa; }
 td.sourceCode { padding-left: 5px; }
 code > span.kw { color: #007020; font-weight: bold; } /* Keyword */
 code > span.dt { color: #902000; } /* DataType */
 code > span.dv { color: #40a070; } /* DecVal */
 code > span.bn { color: #40a070; } /* BaseN */
 code > span.fl { color: #40a070; } /* Float */
 code > span.ch { color: #4070a0; } /* Char */
 code > span.st { color: #4070a0; } /* String */
 code > span.co { color: #60a0b0; font-style: italic; } /* Comment */
 code > span.ot { color: #007020; } /* Other */
 code > span.al { color: #ff0000; font-weight: bold; } /* Alert */
 code > span.fu { color: #06287e; } /* Function */
 code > span.er { color: #ff0000; font-weight: bold; } /* Error */
 code > span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */
 code > span.cn { color: #880000; } /* Constant */
 code > span.sc { color: #4070a0; } /* SpecialChar */
 code > span.vs { color: #4070a0; } /* VerbatimString */
 code > span.ss { color: #bb6688; } /* SpecialString */
 code > span.im { } /* Import */
 code > span.va { color: #19177c; } /* Variable */
 code > span.cf { color: #007020; font-weight: bold; } /* ControlFlow */
 code > span.op { color: #666666; } /* Operator */
 code > span.bu { } /* BuiltIn */
 code > span.ex { } /* Extension */
 code > span.pp { color: #bc7a00; } /* Preprocessor */
 code > span.at { color: #7d9029; } /* Attribute */
 code > span.do { color: #ba2121; font-style: italic; } /* Documentation */
 code > span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */
 code > span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */
 code > span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */
   



 In physics and mathematics, the Ikeda map is a discrete-time dynamical system given by the complex map



The original map was proposed first by Ikeda as a model of light going around across a nonlinear optical resonator (ring cavity containing a nonlinear dielectric medium) in a more general form. It is reduced to the above simplified "normal" form by Ikeda, Daido and Akimoto 1

 
  stands for the electric field inside the resonator at the n-th step of rotation in the resonator, and 
 
 
 
  and 
 
 
 
 
  are parameters which indicates laser light applied from the outside, and linear phase across the resonator, respectively. In particular the parameter 
 
 
 
  is called dissipation parameter characterizing the loss of resonator, and in the limit of 
 
 
 
  the Ikeda map becomes a conservative map.
The original Ikeda map is often used in another modified form in order to take the saturation effect of nonlinear dielectric medium into account:



A 2D real example of the above form is:






where u is a parameter and



For 
 
 
 
 , this system has a chaotic attractor.
Attractor
This animation shows how the attractor of the system changes as the parameter 
 
 
 
  is varied from 0.0 to 1.0 in steps of 0.01. The Ikeda dynamical system is simulated for 500 steps, starting from 20000 randomly placed starting points. The last 20 points of each trajectory are plotted to depict the attractor. Note the bifurcation of attractor points as 
 
 
 
  is increased.




thumb|left| 
 
 


thumb|left| 
 
 




thumb|left| 
 
 


thumb|left| 
 
 




Point trajectories
The plots below show trajectories of 200 random points for various values of 
 
 
 
 . The inset plot on the left shows an estimate of the attractor while the inset on the right shows a zoomed in view of the main trajectory plot.




thumb|250px|left| u = 0.1

thumb|250px|left| u = 0.5

thumb|250px|left| u = 0.65



thumb|250px|left| u = 0.7

thumb|250px|left| u = 0.8

thumb|250px|left| u = 0.85



thumb|250px|left| u = 0.9

thumb|250px|left| u = 0.908

thumb|250px|right| u = 0.92





Octave/MATLAB code for point trajectories
The Octave/MATLAB code to generate these plots is given below:

 % u = ikeda parameter
 % option = what to plot
 %  'trajectory' - plot trajectory of random starting points
 %  'limit' - plot the last few iterations of random starting points
 function ikeda(u, option)
     P = 200;%how many starting points
     N = 1000;%how many iterations
     Nlimit = 20; %plot these many last points for 'limit' option
 
     x = randn(1,P)*10;%the random starting points
     y = randn(1,P)*10;
 
     for n=1:P,
         X = compute_ikeda_trajectory(u, x(n), y(n), N);
 
         switch option
         case 'trajectory' %plot the trajectories of a bunch of points
             plot_ikeda_trajectory(X);hold on;
 
         case 'limit'
             plot_limit(X, Nlimit); hold on;
 
         otherwise
             disp('Not implemented');
         end
     end
 
     axis tight; axis equal
     text(-25,-15,['u = ' num2str(u)]);
     text(-25,-18,['N = ' num2str(N) ' iterations']);
     end
 
     % Plot the last n points of the curve - to see end point or limit cycle
     function plot_limit(X,n)
     plot(X(end-n:end,1),X(end-n:end,2),'ko');
 end
 
 % Plot the whole trajectory
 function plot_ikeda_trajectory(X)
     plot(X(:,1),X(:,2),'k');
     %hold on; plot(X(1,1),X(1,2),'bo','markerfacecolor','g'); hold off
 end
 
 %u is the ikeda parameter
 %x,y is the starting point
 %N is the number of iterations
 function [X] = compute_ikeda_trajectory(u, x, y, N)
     X = zeros(N,2);
     X(1,:) = [x y];
 
     for n = 2:N
 
         t = 0.4 - 6/(1 + x^2 + y^2);
         x1 = 1 + u*(x*cos(t) - y*sin(t)) ;
         y1 = u*(x*sin(t) + y*cos(t)) ;
         x = x1;
         y = y1;
 
         X(n,:) = [x y];
 
     end
 end
References
"
Category:Chaotic maps Category:Articles with example MATLAB/Octave code Category:Articles containing video clips



K.Ikeda, Multiple-valued Stationary State and its Instability of the Transmitted Light by a Ring Cavity System, Opt. Commun. 30 257-261 (1979); K. Ikeda, H. Daido and O. Akimoto, Optical Turbulence: Chaotic Behavior of Transmitted Light from a Ring Cavity, Phys. Rev. Lett. 45, 709–712 (1980)↩



