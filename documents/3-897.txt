


Short-time Fourier transform




Short-time Fourier transform

The short-time Fourier transform (STFT), or alternatively short-term Fourier transform, is a Fourier-related transform used to determine the sinusoidal frequency and phase content of local sections of a signal as it changes over time. In practice, the procedure for computing STFTs is to divide a longer time signal into shorter segments of equal length and then compute the Fourier transform separately on each shorter segment. This reveals the Fourier spectrum on each shorter segment. One then usually plots the changing spectra as a function of time.
(Figure)
400 px| Example of short time Fourier transforms used to determine time of impact from audio signal.

STFT
Continuous-time STFT
Simply, in the continuous-time case, the function to be transformed is multiplied by a window function which is nonzero for only a short period of time. The Fourier transform (a one-dimensional function) of the resulting signal is taken as the window is slid along the time axis, resulting in a two-dimensional representation of the signal. Mathematically, this is written as:



where w(t) is the window function, commonly a Hann window or Gaussian window bell centered around zero, and x(t) is the signal to be transformed. (Note the difference between w and ω.) X(τ,ω) is essentially the Fourier Transform of x(t)w(t-τ), a complex function representing the phase and magnitude of the signal over time and frequency. Often phase unwrapping is employed along either or both the time axis, τ, and frequency axis, ω, to suppress any jump discontinuity of the phase result of the STFT. The time index τ is normally considered to be "slow" time and usually not expressed in as high resolution as time t.
Discrete-time STFT
In the discrete time case, the data to be transformed could be broken up into chunks or frames (which usually overlap each other, to reduce artifacts at the boundary). Each chunk is Fourier transformed, and the complex result is added to a matrix, which records magnitude and phase for each point in time and frequency. This can be expressed as:



likewise, with signal x[n] and window w[n]. In this case, m is discrete and ω is continuous, but in most typical applications the STFT is performed on a computer using the Fast Fourier Transform, so both variables are discrete and quantized.
The magnitude squared of the STFT yields the spectrogram of the function:



See also the modified discrete cosine transform (MDCT), which is also a Fourier-related transform that uses overlapping windows.
Sliding DFT
If only a small number of ω are desired, or if the STFT is desired to be evaluated for every shift m of the window, then the STFT may be more efficiently evaluated using a sliding DFT algorithm.1
Inverse STFT
The STFT is invertible, that is, the original signal can be recovered from the transform by the Inverse STFT. The most widely accepted way of inverting the STFT is by using the overlap-add (OLA) method, which also allows for modifications to the STFT complex spectrum. This makes for a versatile signal processing method,2 referred to as the overlap and add with modifications method.
Continuous-time STFT
Given the width and definition of the window function w(t), we initially require the area of the window function to be scaled so that



It easily follows that



and



The continuous Fourier Transform is



Substituting x(t) from above:











Swapping order of integration:



















So the Fourier Transform can be seen as a sort of phase coherent sum of all of the STFTs of x(t). Since the inverse Fourier transform is



then x(t) can be recovered from X(τ,ω) as



or



It can be seen, comparing to above that windowed "grain" or "wavelet" of x(t) is



the inverse Fourier transform of X(τ,ω) for τ fixed.
Resolution issues
One of the pitfalls of the STFT is that it has a fixed resolution. The width of the windowing function relates to how the signal is represented—it determines whether there is good frequency resolution (frequency components close together can be separated) or good time resolution (the time at which frequencies change). A wide window gives better frequency resolution but poor time resolution. A narrower window gives good time resolution but poor frequency resolution. These are called narrowband and wideband transforms, respectively.
(Figure)
Comparison of STFT resolution. Left has better time resolution, and right has better frequency resolution.

This is one of the reasons for the creation of the wavelet transform and multiresolution analysis, which can give good time resolution for high-frequency events and good frequency resolution for low-frequency events, the combination best suited for many real signals.
This property is related to the Heisenberg uncertainty principle, but not directly – see Gabor limit for discussion. The product of the standard deviation in time and frequency is limited. The boundary of the uncertainty principle (best simultaneous resolution of both) is reached with a Gaussian window function, as the Gaussian minimizes the Fourier uncertainty principle. This is called the Gabor transform (and with modifications for multiresolution becomes the Morlet wavelet transform).
One can consider the STFT for varying window size as a two-dimensional domain (time and frequency), as illustrated in the example below, which can be calculated by varying the window size. However, this is no longer a strictly time–frequency representation – the kernel is not constant over the entire signal.
Example
Using the following sample signal 
 
 
 
  that is composed of a set of four sinusoidal waveforms joined together in sequence. Each waveform is only composed of one of four frequencies (10, 25, 50, 100 Hz). The definition of 
 
 
 
  is:



Then it is sampled at 400 Hz. The following spectrograms were produced:



(Figure)
25 ms window

(Figure)
125 ms window



(Figure)
375 ms window

(Figure)
1000 ms window






The 25 ms window allows us to identify a precise time at which the signals change but the precise frequencies are difficult to identify. At the other end of the scale, the 1000 ms window allows the frequencies to be precisely seen but the time between frequency changes is blurred.
Explanation
It can also be explained with reference to the sampling and Nyquist frequency.
Take a window of N samples from an arbitrary real-valued signal at sampling rate fs . Taking the Fourier transform produces N complex coefficients. Of these coefficients only half are useful (the last N/2 being the complex conjugate of the first N/2 in reverse order, as this is a real valued signal).
These N/2 coefficients represent the frequencies 0 to fs/2 (Nyquist) and two consecutive coefficients are spaced apart by fs/N Hz.
To increase the frequency resolution of the window the frequency spacing of the coefficients needs to be reduced. There are only two variables, but decreasing fs (and keeping N constant) will cause the window size to increase — since there are now fewer samples per unit time. The other alternative is to increase N, but this again causes the window size to increase. So any attempt to increase the frequency resolution causes a larger window size and therefore a reduction in time resolution—and vice versa.
Rayleigh frequency
As the Nyquist frequency is a limitation in the maximum frequency that can be meaningfully analysed, so is the Rayleigh frequency a limitation on the minimum frequency.
Rayleigh frequency is the minimum frequency that can be resolved by a finite duration time window.34
Given a time window that is Τ seconds long, the minimum frequency that can be resolved is 1 ÷ Τ Hz.
Rayleigh frequency is important to consider in applications of the short-time Fourier transform (STFT), such as in analysing neural signals56
Application
 STFTs as well as standard Fourier transforms and other tools are frequently used to analyze music. The spectrogram can, for example, show frequency on the horizontal axis, with the lowest frequencies at left, and the highest at the right. The height of each bar (augmented by color) represents the amplitude of the frequencies within that band. The depth dimension represents time, where each new bar was a separate distinct transform. Audio engineers use this kind of visual to gain information about an audio sample, for example, to locate the frequencies of specific noises (especially when used with greater frequency resolution) or to find frequencies which may be more or less resonant in the space where the signal was recorded. This information can be used for equalization or tuning other audio effects.
See also

Spectral density estimation
Time-frequency representation
Reassignment method

Other time-frequency transforms:

wavelet transform
chirplet transform
fractional Fourier transform
Newland transform
Constant Q transform
Gabor transform
cone-shape distribution function

References


External links

DiscreteTFDs – software for computing the short-time Fourier transform and other time-frequency distributions
Singular Spectral Analysis - MultiTaper Method Toolkit - a free software program to analyze short, noisy time series.
kSpectra Toolkit for Mac OS X from SpectraWorks
Time stretched short time Fourier transform for time frequency analysis of ultra wideband signals
A BSD-licensed Matlab class to perform STFT and inverse STFT
LTFAT - A free (GPL) Matlab / Octave toolbox to work with short-time Fourier transforms and time-frequency analysis

"
Category:Fourier analysis Category:Time–frequency analysis Category:Transforms Category:Signal processing



E. Jacobsen and R. Lyons, The sliding DFT, Signal Processing Magazine vol. 20, issue 2, pp. 74–80 (March 2003).↩
↩
https://physics.ucsd.edu/neurophysics/publications/Cold%20Spring%20Harb%20Protoc-2014-Kleinfeld-pdb.top081075.pdf↩
http://fieldtrip.fcdonders.nl/faq/what_does_padding_not_sufficient_for_requested_frequency_resolution_mean↩
http://www.ncbi.nlm.nih.gov/pmc/articles/PMC2441488↩
http://www.jneurosci.org/content/30/20/7078.full↩




