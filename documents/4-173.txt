   Exponential hierarchy      Exponential hierarchy   In computational complexity theory , the exponential hierarchy is a hierarchy of complexity classes , which is an exponential time analogue of the polynomial hierarchy . As elsewhere in complexity theory, “exponential” is used in two different meanings (linear exponential bounds    2   c  n      superscript  2    c  n     2^{cn}   for a constant c , and full exponential bounds    2   n  c      superscript  2   superscript  n  c     2^{n^{c}}   ), leading to two versions of the exponential hierarchy: 1 2   EH is the union of the classes    Σ  k  E     subscript   superscript  normal-Σ  E   k    \Sigma^{E}_{k}   for all k , where     Σ  k  E   =   NE   Σ   k  -  1   P         subscript   superscript  normal-Σ  E   k    superscript  NE   subscript   superscript  normal-Σ  P     k  1       \Sigma^{E}_{k}=\mathrm{NE}^{\Sigma^{P}_{k-1}}   (i.e., languages computable in nondeterministic time    2   c  n      superscript  2    c  n     2^{cn}   for some constant c with a    Σ   k  -  1   P     subscript   superscript  normal-Σ  P     k  1     \Sigma^{P}_{k-1}    oracle ). One also defines     Π  k  E   =   coNE   Σ   k  -  1   P         subscript   superscript  normal-Π  E   k    superscript  coNE   subscript   superscript  normal-Σ  P     k  1       \Pi^{E}_{k}=\mathrm{coNE}^{\Sigma^{P}_{k-1}}   ,     Δ  k  E   =   E   Σ   k  -  1   P         subscript   superscript  normal-Δ  E   k    superscript  normal-E   subscript   superscript  normal-Σ  P     k  1       \Delta^{E}_{k}=\mathrm{E}^{\Sigma^{P}_{k-1}}   . An equivalent definition is that a language L is in    Σ  k  E     subscript   superscript  normal-Σ  E   k    \Sigma^{E}_{k}   if and only if it can be written in the form           x  ∈  L   ⇔   ∃     y  1     ∀    y  2   …  Q    y  k    R   (  x  ,   y  1   ,  …  ,   y  k   )        ,     iff    x  L        subscript  y  1    for-all     subscript  y  2   normal-…  Q   subscript  y  k   R   x   subscript  y  1   normal-…   subscript  y  k          x\in L\iff\exists y_{1}\,\forall y_{2}\dots Qy_{k}\,R(x,y_{1},\dots,y_{k}),       where    R   (  x  ,   y  1   ,  …  ,   y  n   )       R   x   subscript  y  1   normal-…   subscript  y  n      R(x,y_{1},\dots,y_{n})   is a predicate computable in time    2   c   |  x  |       superscript  2    c    x      2^{c|x|}   (which implicitly bounds the length of y i ). Also equivalently, EH is the class of languages computable on an alternating Turing machine in time    2   c  n      superscript  2    c  n     2^{cn}   for some c with constantly many alternations.    EXPH is the union of the classes    Σ  k   E  X  P      subscript   superscript  normal-Σ    E  X  P    k    \Sigma^{EXP}_{k}   , where     Σ  k   E  X  P    =   NEXP   Σ   k  -  1   P         subscript   superscript  normal-Σ    E  X  P    k    superscript  NEXP   subscript   superscript  normal-Σ  P     k  1       \Sigma^{EXP}_{k}=\mathrm{NEXP}^{\Sigma^{P}_{k-1}}   (languages computable in nondeterministic time    2   n  c      superscript  2   superscript  n  c     2^{n^{c}}   for some constant c with a    Σ   k  -  1   P     subscript   superscript  normal-Σ  P     k  1     \Sigma^{P}_{k-1}   oracle), and again     Π  k   E  X  P    =   coNEXP   Σ   k  -  1   P         subscript   superscript  normal-Π    E  X  P    k    superscript  coNEXP   subscript   superscript  normal-Σ  P     k  1       \Pi^{EXP}_{k}=\mathrm{coNEXP}^{\Sigma^{P}_{k-1}}   ,     Δ  k   E  X  P    =   EXP   Σ   k  -  1   P         subscript   superscript  normal-Δ    E  X  P    k    superscript  EXP   subscript   superscript  normal-Σ  P     k  1       \Delta^{EXP}_{k}=\mathrm{EXP}^{\Sigma^{P}_{k-1}}   . A language L is in    Σ  k   E  X  P      subscript   superscript  normal-Σ    E  X  P    k    \Sigma^{EXP}_{k}   if and only if it can be written as           x  ∈  L   ⇔   ∃     y  1     ∀    y  2   …  Q    y  k    R   (  x  ,   y  1   ,  …  ,   y  k   )        ,     iff    x  L        subscript  y  1    for-all     subscript  y  2   normal-…  Q   subscript  y  k   R   x   subscript  y  1   normal-…   subscript  y  k          x\in L\iff\exists y_{1}\,\forall y_{2}\dots Qy_{k}\,R(x,y_{1},\dots,y_{k}),       where    R   (  x  ,   y  1   ,  …  ,   y  k   )       R   x   subscript  y  1   normal-…   subscript  y  k      R(x,y_{1},\dots,y_{k})   is computable in time    2    |  x  |   c      superscript  2   superscript    x   c     2^{|x|^{c}}   for some c , which again implicitly bounds the length of y i . Equivalently, EXPH is the class of languages computable in time    2   n  c      superscript  2   superscript  n  c     2^{n^{c}}   on an alternating Turing machine with constantly many alternations.   We have E ⊆ NE ⊆ EH ⊆ ESPACE , EXP ⊆ NEXP ⊆ EXPH ⊆ EXPSPACE , and EH ⊆ EXPH.  References  External links  "  Category:Complexity classes     Sarah Mocas, Separating classes in the exponential-time hierarchy from classes in PH , Theoretical Computer Science 158 (1996), no. 1–2, pp. 221–231. ↩  Anuj Dawar, Georg Gottlob, Lauri Hella, Capturing relativized complexity classes without order, Mathematical Logic Quarterly 44 (1998), no. 1, pp. 109–122. ↩     