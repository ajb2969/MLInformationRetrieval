   RSA/Intuitive      RSA/Intuitive   Intuitive Proof  The algorithm is based on a Fermat's little theorem       a   (   p  -  1   )    ≡   1     (   mod  p   )         superscript  a    p  1     annotated  1   pmod  p      a^{(p-1)}\equiv 1\;\;(\mathop{{\rm mod}}p)   p prime, a & p coprime.  So, if we choose d such that       e  d   ≡   1     (   mod   p  -  1    )          e  d    annotated  1   pmod    p  1       ed\equiv 1\;\;(\mathop{{\rm mod}}p-1)   i.e.        e  d   -  1   =   k   (   p  -  1   )            e  d   1     k    p  1      ed-1=k(p-1)   Then for a message m       m   e  d    ≡   m   e  d    ≡    m   (    e  d   -  1   )    ⋅   m  1    ≡    m   k   (   p  -  1   )     m   ≡    1  k   m   ≡   m     (   mod  p   )           superscript  m   superscript  e  d     superscript  m    e  d          normal-⋅   superscript  m      e  d   1     superscript  m  1            superscript  m    k    p  1     m           superscript  1  k   m         annotated  m   pmod  p       m^{e^{d}}\equiv m^{ed}\equiv m^{(ed-1)}\cdot m^{1}\equiv m^{k(p-1)}m\equiv 1^{%
 k}m\equiv m\;\;(\mathop{{\rm mod}}p)     So a message that is encrypted by raising m to e can be decrypted by raising the result to d .  In order to provide security, RSA actually calculates      n  =   p  q       n    p  q     n=pq   ( p , q prime) and then d such that       e  d   ≡   1     (   mod    (   p  -  1   )    (   q  -  1   )     )          e  d    annotated  1   pmod      p  1     q  1        ed\equiv 1\;\;(\mathop{{\rm mod}}(p-1)(q-1))   so        e  d   -  1   =   k   (   p  -  1   )    (   q  -  1   )            e  d   1     k    p  1     q  1      ed-1=k(p-1)(q-1)     We can then continue to calculate       m   e  d    ≡   m   e  d    ≡    m   (    e  d   -  1   )    m   ≡    m   k   (   p  -  1   )    (   q  -  1   )     m   ≡    1   k   (   q  -  1   )     m   ≡   m     (   mod  p   )           superscript  m   superscript  e  d     superscript  m    e  d            superscript  m      e  d   1    m           superscript  m    k    p  1     q  1     m           superscript  1    k    q  1     m         annotated  m   pmod  p       m^{e^{d}}\equiv m^{ed}\equiv m^{(ed-1)}m\equiv m^{k(p-1)(q-1)}m\equiv 1^{k(q-1%
 )}m\equiv m\;\;(\mathop{{\rm mod}}p)     And likewise for q       m   e  d    ≡   m   e  d    ≡    m   (    e  d   -  1   )    m   ≡    m   k   (   p  -  1   )    (   q  -  1   )     m   ≡    1   k   (   p  -  1   )     m   ≡   m     (   mod  q   )           superscript  m   superscript  e  d     superscript  m    e  d            superscript  m      e  d   1    m           superscript  m    k    p  1     q  1     m           superscript  1    k    p  1     m         annotated  m   pmod  q       m^{e^{d}}\equiv m^{ed}\equiv m^{(ed-1)}m\equiv m^{k(p-1)(q-1)}m\equiv 1^{k(p-1%
 )}m\equiv m\;\;(\mathop{{\rm mod}}q)     Now if    a  ≡   b     (   mod  p   )        a   annotated  b   pmod  p      a\equiv b\;\;(\mathop{{\rm mod}}p)   and    a  ≡   b     (   mod  q   )        a   annotated  b   pmod  q      a\equiv b\;\;(\mathop{{\rm mod}}q)   then    a  ≡   b     (   mod   p  q    )        a   annotated  b   pmod    p  q       a\equiv b\;\;(\mathop{{\rm mod}}pq)   , p , q coprime.  so       m   e  d    ≡   m     (   mod   p  q    )         superscript  m   superscript  e  d     annotated  m   pmod    p  q       m^{e^{d}}\equiv m\;\;(\mathop{{\rm mod}}pq)     An attacker would need to factor n into p and q in order to determine d , and this is a hard problem.  Note that while an attacker could easily calculate f as       e  f   ≡   1     (   mod   n  -  1    )          e  f    annotated  1   pmod    n  1       ef\equiv 1\;\;(\mathop{{\rm mod}}n-1)   that       m   e  f    ≡    m   k   (   n  -  1   )     m   ≠   m     (   mod  n   )           superscript  m   superscript  e  f       superscript  m    k    n  1     m         annotated  m   pmod  n       m^{e^{f}}\equiv m^{k(n-1)}m\neq m\;\;(\mathop{{\rm mod}}n)     because n is not prime.  "  Category:Public-key cryptography   