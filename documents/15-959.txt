


Loss network




Loss network

In queueing theory, a loss network is a stochastic model of a telephony network in which calls are routed around a network between nodes. The links between nodes have finite capacity and thus some calls arriving may find no route available to their destination. These calls are lost from the network, hence the name loss networks.1
The loss network was first studied by Erlang for a single telephone link.2 Frank Kelly was awarded the Frederick W. Lanchester Prize3 for his 1991 paper Loss Networks45 where he demonstrated the behaviour of loss networks can exhibit hysteresis.
Model
Fixed routing
Consider a network with J links labelled 1, 2, …, J and that each link j has Cj circuits. Let R be the set of all possible routes in the network (combinations of links a call might use) and each route r, write Ajr for the number of circuits route r uses on link j (A is therefore a J x |R| matrix). Consider the case where all elements of A are either 0 or 1 and for each route r calls requiring use of the route arrive according to a Poisson process of rate vr. When a call arrives if there is sufficient capacity remaining on all the required links the call is accepted and occupies the network for an exponentially distributed length of time with parameter 1. If there is insufficient capacity on any individual link to accept the call it is rejected (lost) from the network.6
Write nr(t) for the number of calls on route r in progress at time t, n(t) for the vector (nr(t) : r in R) and C = (C1, C2, ... , CJ). Then the continuous-time Markov process n(t) has unique stationary distribution7








where








and








From this result loss probabilities for calls arriving on different routes can be calculated by summing over appropriate states.
Computing loss probabilities
There are common algorithms for computing the loss probabilities in loss networks8

Erlang ﬁxed-point approximation
Slice method
3-point slice method

Notes
"
Category:Stochastic processes Category:Application-specific graphs



↩
↩
↩
↩
↩


↩




