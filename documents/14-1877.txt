   Conformal geometric algebra      Conformal geometric algebra   In mathematics , with application in computational geometry , conformal geometric algebra (CGA) is the geometric algebra constructed over the resultant space of a projective map from an n -dimensional Euclidean or pseudo-Euclidean base space ℝ p , q into ℝ p +1, q +1 . This allows operations on the n -dimensional space, including rotations, translations and reflections to be represented using versors of the geometric algebra; and it is found that points, lines, planes, circles and spheres gain particularly natural and computationally amenable representations.  The effect of the mapping is that generalized (i.e. including zero curvature) k -spheres in the base space map onto ( k +2)- blades , and so that the effect of a translation (or any  conformal mapping ) of the base space corresponds to a rotation in the higher-dimensional space. In the algebra of this space, based on the geometric product of vectors, such transformations correspond to the algebra's characteristic sandwich operations , similar to the use of quaternions for spatial rotation in 3D , which combine very efficiently. A consequence of rotors representing transformations is that the representations of spheres, planes, circles and other geometrical objects, and equations connecting them, all transform covariantly. A geometric object (a k -sphere) can be synthesized as the wedge product of k +2 linearly independent vectors representing points on the object; conversely, the object can be decomposed as the repeated wedge product of vectors representing k +2 points in its surface. Some intersection operations also acquire a very tidy algebraic form: for example, for the Euclidean base space ℝ 3 , applying the wedge product to the dual of the tetravectors representing two spheres produces the dual of the trivector representation of their circle of intersection.  As this algebraic structure lends itself directly to effective computation, it facilitates exploration of the classical methods of projective geometry and inversive geometry in a concrete, easy-to-manipulate setting. It has also been used as an efficient structure to represent and facilitate calculations in screw theory . CGA has particularly been applied in connection with the projective mapping of the everyday Euclidean space ℝ 3 into a five-dimensional space ℝ 4,1 , which has been investigated for applications in robotics and computer vision. It can be applied generally to any Euclidean or pseudo-Euclidean space, and the mapping of Minkowski space ℝ 3,1 to the space ℝ 4,2 is being investigated for applications to relativistic physics.  Construction of CGA  Notation and terminology  The Euclidean space containing the objects being modelled is referred to here as the base space , and the algebraic space used to projectively model these objects is referred to here as the representation space . A homogeneous subspace refers to a linear subspace of the algebraic space.  The terms for objects: point , line , circle , sphere etc. are used to mean either the geometric object in the base space, or the homogeneous subspace of the representation space that represents that object, with the latter generally being intended unless indicated otherwise. Algebraically, any element of the homogeneous subspace will be used, with one element being referred to as normalized by some criterion.  Boldface lowercase Latin letters are used to represent position vectors from the origin to a point in the base space. Italic symbols are used for other elements of the representation space.  Base and representation spaces  The base space is extended by adding two basis vectors and orthogonal to the base space and to each other, with and , creating the representation space .  It is convenient to use two null vectors and as basis vectors in place of and , where , and . It can be verified, where   𝐱   𝐱   \mathbf{x}   is in the base space, that:         n  o    2       =   0    n  o   ⋅   n  ∞          =   -  1        n  o   ⋅  𝐱       =  0        n  ∞    2       =   0    n  o   ∧   n  ∞          =    e  -    e  +         n  ∞   ⋅  𝐱       =  0          superscript   subscript  n  o   2     absent   0   normal-⋅   subscript  n  o    subscript  n         absent    1     normal-⋅   subscript  n  o   𝐱     absent  0      superscript   subscript  n    2     absent   0     subscript  n  o    subscript  n         absent     subscript  e     subscript  e       normal-⋅   subscript  n    𝐱     absent  0      \begin{array}[]{lllll}{n_{o}}^{2}&=0\qquad n_{\text{o}}\cdot n_{\infty}&=-1&n_%
 {\text{o}}\cdot\mathbf{x}&=0\\
 {n_{\infty}}^{2}&=0\qquad n_{\text{o}}\wedge n_{\infty}&=e_{-}e_{+}&n_{\infty}%
 \cdot\mathbf{x}&=0\end{array}     These properties lead to formulas which may seem slightly counter-intuitive for the and coefficients of a general vector   r   r   r   in the representation space:   The coefficient of for   r   r   r   is   The coefficient of for   r   r   r   is    Mapping between the base space and the representation space  The mapping from a vector in the base space (being from the origin to a point in the affine space represented) is given by the formula:      F  :   𝐱  ↦    n  o   +  𝐱  +     1  2     𝐱  2    n  ∞         normal-:  F   maps-to  𝐱     subscript  n  o   𝐱      1  2    superscript  𝐱  2    subscript  n         F:\mathbf{x}\mapsto n_{\text{o}}+\mathbf{x}+\tfrac{1}{2}\mathbf{x}^{2}n_{\infty}     Points and other objects that differ only by a nonzero scalar factor all map to the same object in the base space. When normalisation is desired, as for generating a simple reverse map of a point from the representation space to the base space or determining distances, the condition may be used.  (Figure)  Change of normalisation: mapping the null cone from the hyperplane to the hyperplane .   The forward mapping is equivalent to:   first conformally projecting   𝐱   𝐱   \mathbf{x}   from onto a unit 3-sphere in the space (in 5-D this is in the subspace );  then lift this into a projective space, by adjoining , and identifying all points on the same ray from the origin (in 5-D this is in the subspace );  then change the normalisation, so the plane for the homogeneous projection is given by the co-ordinate having a value   1   1   1   , i.e. .   Inverse mapping  An inverse mapping for   X   X   X   on the null cone is given (Perwass eqn 4.37) by      X  ↦    𝒫    n  ∞   ∧   n  o    ⟂    (   X   -   X  ⋅   n  ∞      )       maps-to  X     subscript   superscript  𝒫  perpendicular-to      subscript  n     subscript  n  o       X     normal-⋅  X   subscript  n          X\mapsto\mathcal{P}^{\perp}_{n_{\infty}\wedge n_{o}}\left(\frac{X}{-X\cdot n_{%
 \infty}}\right)     This first gives a stereographic projection from the light-cone onto the plane , and then throws away the and parts, so that the overall result is to map all of the equivalent points to   𝐱   𝐱   \mathbf{x}   .  Origin and point at infinity  The point    𝐱  =  0      𝐱  0    \mathbf{x}=0   in maps to in , so is identified as the (representation) vector of the point at the origin.  A vector in with a nonzero coefficient, but a zero coefficient, must (considering the inverse map) be the image of an infinite vector in . The direction therefore represents the (conformal) point at infinity . This motivates the subscripts and for identifying the null basis vectors.  The choice of the origin is arbitrary: any other point may be chosen, as the representation is of an affine space . The origin merely represents a reference point, and is algebraically equivalent to any other point. Changing the origin corresponds to a rotation in the representation space.  Geometrical objects  As the solution of a pair of equations  Given any nonzero blade   A   A   A   of the representing space, the set of vectors that are solutions to a pair of homogeneous equations of the form 1       X  2   =  0       superscript  X  2   0    X^{2}=0          X  ∧  A   =  0        X  A   0    X\wedge A=0   are homogeneous 1-d subspaces of null vectors, and are thus representations of sets of points in the base space. This leads to the choice of a blade   A   A   A   as being a useful way to represent a class of geometric object. Specific cases for the blade   A   A   A   (independent of the number of dimensions of the space) when the base space is Euclidean space are:   a scalar: the empty set  a vector: a single point  a bivector: a pair of points  a trivector: a generalized circle  a 4-vector: a generalized sphere  etc.   These each may split into three cases according to whether is positive, zero or negative, corresponding (in reversed order in some cases) to the object as listed, a degenerate case of a single point, or no points (where the nonzero solutions of    X  ∧  A      X  normal-∧  A    X∧A   exclude null vectors).  The listed geometric objects are replaced by the corresponding shapes of constant magnitude from a center when the base space is pseudo-Euclidean.  Flat objects may be identified by the point at infinity being included in the solutions. Thus, if , and the blade   A   A   A   is of grade 3 or higher, the object will be a line, plane, etc.  As derived from points of the object  A blade   A   A   A   representing of one of this class of object may be found as the outer product of linearly independent vectors representing points on the object. In the base space, this linear independence manifests as each point lying outside the object defined by the other points. So, for example, a fourth point lying on the generalized circle defined by three distinct points cannot be used as a fourth point to define a sphere.  odds   Points in e 123 map onto the null cone—the null parabola if we set r . n ∞ = -1.    We can consider the locus of points in e 123 s.t. in conformal space g ( x ) . A = 0, for various types of geometrical object A.    We start by observing that     g   (  𝐚  )    .    g   (  𝐛  )    =   -    1  2     ∥   𝐚  -  𝐛   ∥   2         formulae-sequence    g  𝐚       g  𝐛         1  2    superscript   norm    𝐚  𝐛    2        g(\mathbf{a}).g(\mathbf{b})=-\frac{1}{2}\|\mathbf{a}-\mathbf{b}\|^{2}      compare:   x. a = 0 => x perp a; x.(a∧b) = 0 => x perp a and x perp b  x∧a = 0 => x parallel to a; x∧(a∧b) = 0 => x parallel to a or to b (or to some linear combination)   the inner product and outer product representations are related by dualisation   x∧A = 0  x . A* = 0 ( check —works if x is 1-dim, A is n-1 dim)   ==== g(x) . A = 0 ====  :* A point : the locus of x in R 3 is a point if A in R 4,1 is a vector on the null cone.    (N.B. that because it's a homogeneous projective space, vectors of any length on a ray through the origin are equivalent, so g(x).A =0 is equivalent to g(x).g(a) = 0).    warning : apparently wrong codimension—go to the sphere as the general case, then restrict to a sphere of size zero. Is the dual of the equation affected by being on the null cone?        :* A sphere : the locus of x is a sphere if A = S, a vector off the null cone.    If     𝐒  =    g   (  𝐚  )    -    1  2    ρ  2    𝐞  ∞         𝐒      g  𝐚       1  2    superscript  ρ  2    subscript  𝐞        \mathbf{S}=g(\mathbf{a})-\frac{1}{2}\rho^{2}\mathbf{e}_{\infty}      then S . X = 0 =>      -    1  2     (   𝐚  -  𝐱   )   2     +    1  2    ρ  2     =  0              1  2    superscript    𝐚  𝐱   2         1  2    superscript  ρ  2     0    -\frac{1}{2}(\mathbf{a}-\mathbf{x})^{2}+\frac{1}{2}\rho^{2}=0     these are the points corresponding to a sphere   make pic to show hyperbolic orthogonality --> for a vector S off the null-cone, which directions are hyperbolically orthogonal? (cf Lorentz transformation pix)  in 2+1 D, if S is (1,a,b), (using co-ords e-, {e+, e i }), the points hyperbolically orthogonal to S are those euclideanly orthogonal to (-1,a,b)—i.e., a plane; or in n dimensions, a hyperplane through the origin. This would cut another plane not through the origin in a line (a hypersurface in an n -2 surface), and then the cone in two points (resp. some sort of n -3 conic surface). So it's going to probably look like some kind of conic. This is the surface that is the image of a sphere under g .           :*A plane : the locus of x is a plane if A = P , a vector with a zero n o component. In a homogeneous projective space such a vector P represents a vector on the plane n o =1 that would be infinitely far from the origin (ie infinitely far outside the null cone) , so g(x).P =0 corresponds to x on a sphere of infinite radius, a plane.  ::In particular:  ::*    𝐏  =    𝐚  ^   +   α   𝐞  ∞         𝐏     normal-^  𝐚     α   subscript  𝐞        \mathbf{P}=\hat{\mathbf{a}}+\alpha\mathbf{e}_{\infty}   corresponds to x on a plane with normal    𝐚  ^     normal-^  𝐚    \hat{\mathbf{a}}   an orthogonal distance α from the origin.  ::*    𝐏  =    g   (  𝐚  )    -   g   (  𝐛  )         𝐏      g  𝐚     g  𝐛      \mathbf{P}=g(\mathbf{a})-g(\mathbf{b})   corresponds to a plane half way between a and b , with normal a - b  :* circles  :* tangent planes  :* lines  :* lines at infinity  :* point pairs  Transformations  :* reflections    It can be verified that forming P g( x ) P gives a new direction on the null-cone, g('''x' '''), where '''x' ''' corresponds to a reflection in the plane of points p in R 3 that satisfy g( p ) . P = 0.  g( x ) . A = 0 => P g( x ) . A P = 0 => P g( x ) P . P A P (and similarly for the wedge product), so the effect of applying P sandwich-fashion to any the quantities A in the section above is similarly to reflect the corresponding locus of points x , so the corresponding circles, spheres, lines and planes corresponding to particular types of A are reflected in exactly the same way that applying P to g( x ) reflects a point x .     This reflection operation can be used to build up general translations and rotations:  :* translations    Reflection in two parallel planes gives a translation,       g   (   𝐱  ′   )    =    𝐏  β     𝐏  α    g   (  𝐱  )    𝐏  α    𝐏  β          g   superscript  𝐱  normal-′       subscript  𝐏  β    subscript  𝐏  α   g  𝐱   subscript  𝐏  α    subscript  𝐏  β      g(\mathbf{x}^{\prime})=\mathbf{P}_{\beta}\mathbf{P}_{\alpha}\;g(\mathbf{x})\;%
 \mathbf{P}_{\alpha}\mathbf{P}_{\beta}     If     𝐏  α   =    𝐚  ^   +   α   𝐞  ∞          subscript  𝐏  α      normal-^  𝐚     α   subscript  𝐞        \mathbf{P}_{\alpha}=\hat{\mathbf{a}}+\alpha\mathbf{e}_{\infty}   and     𝐏  β   =    𝐚  ^   +   β   𝐞  ∞          subscript  𝐏  β      normal-^  𝐚     β   subscript  𝐞        \mathbf{P}_{\beta}=\hat{\mathbf{a}}+\beta\mathbf{e}_{\infty}   then     𝐱  ′   =   𝐱  +   2   (   β  -  α   )    𝐚  ^          superscript  𝐱  normal-′     𝐱    2    β  α    normal-^  𝐚       \mathbf{x}^{\prime}=\mathbf{x}+2(\beta-\alpha)\hat{\mathbf{a}}        :* rotations         g   (   𝐱  ′   )    =    𝐛  ^     𝐚  ^    g   (  𝐱  )    𝐚  ^    𝐛  ^          g   superscript  𝐱  normal-′       normal-^  𝐛    normal-^  𝐚   g  𝐱   normal-^  𝐚    normal-^  𝐛      g(\mathbf{x}^{\prime})=\hat{\mathbf{b}}\hat{\mathbf{a}}\;g(\mathbf{x})\;\hat{%
 \mathbf{a}}\hat{\mathbf{b}}   corresponds to an '''x' ''' that is rotated about the origin by an angle 2 θ where θ is the angle between a and b -- the same effect that this rotor would have if applied directly to x .     :* general rotations    rotations about a general point can be achieved by first translating the point to the origin, then rotating around the origin, then translating the point back to its original position, i.e. a sandwiching by the operator    𝐓𝐑   𝐓  ~       𝐓𝐑   normal-~  𝐓     \mathbf{TR{\tilde{T}}}   so       g   (   𝒢  x   )    =   𝐓𝐑    𝐓  ~    g   (  𝐱  )   𝐓   𝐑  ~    𝐓  ~          g    𝒢  x      𝐓𝐑   normal-~  𝐓   g  𝐱  𝐓   normal-~  𝐑    normal-~  𝐓      g(\mathcal{G}x)=\mathbf{TR{\tilde{T}}}\;g(\mathbf{x})\;\mathbf{T\tilde{R}%
 \tilde{T}}        :* screws    the effect a screw , or motor , (a rotation about a general point, followed by a translation parallel to the axis of rotation) can be achieved by sandwiching g( x ) by the operator    𝐌  =    𝐓  𝟐    𝐓  𝟏   𝐑    𝐓  𝟏   ~        𝐌     subscript  𝐓  2    subscript  𝐓  1   𝐑   normal-~   subscript  𝐓  1       \mathbf{M}=\mathbf{T_{2}T_{1}R{\tilde{T_{1}}}}   .  M can also be parametrised    𝐌  =    𝐓  ′    𝐑  ′        𝐌     superscript  𝐓  normal-′    superscript  𝐑  normal-′      \mathbf{M}=\mathbf{T^{\prime}R^{\prime}}   ( Chasles' theorem )     :* inversions    an inversion is a reflection in a sphere – various operations which can be achieved using such inversions are discussed at inversive geometry . In particular, the combination of inversion together with the Euclidean transformations translation and rotation is sufficient to express any  conformal mapping – i.e. any mapping which universally preserves angles. ( Liouville's theorem ).     :* dilations    two inversions with the same centre produce a dilation .     Notes  References  Bibliography  Books   Hestenes et al (2000), in G. Sommer (ed.), Geometric Computing with Clifford Algebra . Springer Verlag. ISBN 3-540-41198-4 ( Google books ) (http://geocalc.clas.asu.edu/html/UAFCG.html Hestenes website)  Ch. 1: New algebraic tools for classical geometry  Ch. 2: Generalized Homogeneous Coordinates for Computational Geometry  Ch. 3: Spherical Conformal Geometry with Geometric Algebra  Ch. 4: A Universal Model for Conformal Geometries of Euclidean, Spherical and Double-Hyperbolic Spaces   Hestenes (2001), in E. Bayro-Corrochano & G. Sobczyk (eds.), Advances in Geometric Algebra with Applications in Science and Engineering , Springer Verlag. ISBN 0-8176-4199-8 Google books   Old Wine in New Bottles (pp. 1–14)   Hestenes (2010), in E. Bayro-Corrochano and G. Scheuermann (2010), Geometric Algebra Computing in Engineering and Computer Science . Springer Verlag. ISBN 1-84996-107-7 ( Google books ).  New Tools for Computational Geometry and rejuvenation of Screw Theory   Doran, C. and Lasenby, A. (2003), Geometric algebra for physicists , Cambridge University Press. ISBN 0-521-48022-1 §10.2; p. 351 et seq  Dorst, L. et al (2007), Geometric Algebra for Computer Science , Morgan-Kaufmann. ISBN 0-12-374942-5 Chapter 13; p. 355 et seq  Vince, J. (2008), Geometric Algebra for Computer Graphics , Springer Verlag. ISBN 1-84628-996-3 Chapter 11; p. 199 et seq  Perwass, C. (2009), Geometric Algebra with Applications in Engineering , Springer Verlag. ISBN 3-540-89067-X §4.3: p. 145 et seq  Bayro-Corrochano, E. and Scheuermann G. (2010, eds.), Geometric Algebra Computing in Engineering and Computer Science . Springer Verlag. ISBN 1-84996-107-7 pp. 3–90  Bayro-Corrochano (2010), Geometric Computing for Wavelet Transforms, Robot Vision, Learning, Control and Action . Springer Verlag. ISBN 1-84882-928-0 Chapter 6; pp. 149–183  Dorst, L. and Lasenby, J. (2011, eds.), Guide to Geometric Algebra in Practice . Springer Verlag, pp. 3–252. ISBN 978-0-85729-810-2.    Online resources   Wareham, R. (2006), Computer Graphics using Conformal Geometric Algebra , PhD thesis, University of Cambridge, pp. 14–26, 31—67  Bromborsky, A. (2008), Conformal Geometry via Geometric Algebra (Online slides)  Dell’Acqua, A. et al (2008), 3D Motion from structures of points, lines and planes , Image and Vision Computing , 26 529–549  Dorst, L. (2010), Tutorial: Structure-Preserving Representation of Euclidean Motions through Conformal Geometric Algebra , in E. Bayro-Corrochano, G. Scheuermann (eds.), Geometric Algebra Computing , Springer Verlag.  Colapinto, P. (2011), VERSOR Spatial Computing with Conformal Geometric Algebra , MSc thesis, University of California Santa Barbara  Macdonald, A. (2013), [ http://faculty.luther.edu/~macdonal/GA&GC.pdf; ; A Survey of Geometric Algebra and Geometric Calculus]. (Online notes) §4.2: p. 26 et seq.    on the motor algebra over ℝ n+1 :  Eduardo Bayro Corrochano (2001), Geometric computing for perception action systems: Concepts, algorithms and scientific applications . ( Google books )    "  Category:Geometric algebra  Category:Conformal geometry  Category:Inversive geometry  Category:Computational geometry     Chris Doran (2003), Circle and sphere blending with conformal geometric algebra ↩     