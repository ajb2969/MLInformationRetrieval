   Bézier curve      Bézier curve   A Bézier curve is a parametric curve frequently used in computer graphics and related fields. Generalizations of Bézier curves to higher dimensions are called Bézier surfaces , of which the Bézier triangle is a special case.  In vector graphics , Bézier curves are used to model smooth curves that can be scaled indefinitely. "Paths", as they are commonly referred to in image manipulation programs, 1 are combinations of linked Bézier curves. Paths are not bound by the limits of rasterized images and are intuitive to modify.  Bézier curves are also used in the time domain, particularly in animation and user interface 2 design. For example a Bézier curve can be used to specify the velocity over time of an object such as an icon moving from A to B, rather than simply moving at a fixed number of pixels per step. When animators or interface designers talk about the "physics" or "feel" of an operation, they may be referring to the particular Bézier curve used to control the velocity over time of the move in question.  This also applies to robotics where the motion of a welding arm, for example, should be smooth to avoid unnecessary wear.  The mathematical basis for Bézier curves — the Bernstein polynomial — has been known since 1912, but its applicability to graphics was understood half a century later. Bézier curves were widely publicized in 1962 by the French engineer Pierre Bézier , who used them to design automobile bodies at Renault . The study of these curves was however first developed in 1959 by mathematician Paul de Casteljau using de Casteljau's algorithm , a numerically stable method to evaluate Bézier curves at Citroën , another French automaker. 3  Applications  Computer graphics  Bézier curves are widely used in computer graphics to model smooth curves. As the curve is completely contained in the convex hull of its control points , the points can be graphically displayed and used to manipulate the curve intuitively. Affine transformations such as translation and rotation can be applied on the curve by applying the respective transform on the control points of the curve.  Quadratic and cubic Bézier curves are most common. Higher degree curves are more computationally expensive to evaluate. When more complex shapes are needed, low order Bézier curves are patched together, producing a composite Bézier curve . A composite Bézier curve is commonly referred to as a "path" in vector graphics languages (like PostScript ), vector graphics standards (like SVG ) and vector graphics programs (like Adobe Illustrator , CorelDraw and Inkscape ). To guarantee smoothness, the control point at which two curves meet must be on the line between the two control points on either side.  The simplest method for scan converting ( rasterizing ) a Bézier curve is to evaluate it at many closely spaced points and scan convert the approximating sequence of line segments. However, this does not guarantee that the rasterized output looks sufficiently smooth, because the points may be spaced too far apart. Conversely it may generate too many points in areas where the curve is close to linear. A common adaptive method is recursive subdivision, in which a curve's control points are checked to see if the curve approximates a line segment to within a small tolerance. If not, the curve is subdivided parametrically into two segments, 0 ≤ t ≤ 0.5 and 0.5 ≤ t ≤ 1, and the same procedure is applied recursively to each half. There are also forward differencing methods, but great care must be taken to analyse error propagation. Analytical methods where a Bézier is intersected with each scan line involve finding roots of cubic polynomials (for cubic Béziers) and dealing with multiple roots, so they are not often used in practice.  Animation  In animation applications, such as Adobe Flash and Synfig , Bézier curves are used to outline, for example, movement. Users outline the wanted path in Bézier curves, and the application creates the needed frames for the object to move along the path. For 3D animation Bézier curves are often used to define 3D paths as well as 2D curves for keyframe interpolation.  Fonts  TrueType fonts use composite Bézier curves composed of quadratic Bézier curves. Modern imaging systems like PostScript , Asymptote , Metafont , and SVG use composite Béziers composed of cubic Bézier curves for drawing curved shapes. OpenType fonts can use either kind, depending on the flavor of the font.  The internal rendering of all Bézier curves in font or vector graphics renderers will split them recursively up to the point where the curve is flat enough to be drawn as a series of linear or circular segments. The exact splitting algorithm is implementation dependent, only the flatness criteria must be respected to reach the necessary precision and to avoid non-monotonic local changes of curvature. The "smooth curve" feature of charts in Microsoft Excel also uses this algorithm. 4  Because arcs of circles and ellipses cannot be exactly represented by Bézier curves, they are first approximated by Bézier curves, which are in turn approximated by arcs of circles. This is inefficient as there exists also approximations of all Bézier curves using arcs of circles or ellipses, which can be rendered incrementally with arbitrary precision. Another approach, used by modern hardware graphics adapters with accelerated geometry, can convert exactly all Bézier and conic curves (or surfaces) into NURBS , that can be rendered incrementally without first splitting the curve recursively to reach the necessary flatness condition. This approach also allows preserving the curve definition under all linear or perspective 2D and 3D transforms and projections.  Font engines, like FreeType , draw the font's curves (and lines) on a pixellated surface using a process known as font rasterization . 5  Specific cases  A Bézier curve is defined by a set of control points  P 0 through P n , where n is called its order ( n = 1 for linear, 2 for quadratic, etc.). The first and last control points are always the end points of the curve; however, the intermediate control points (if any) generally do not lie on the curve.  Linear Bézier curves  Given points P 0 and P 1 , a linear Bézier curve is simply a straight line between those two points. The curve is given by       𝐁   (  t  )    =    𝐏  0   +   t   (    𝐏  1   -   𝐏  0    )     =     (   1  -  t   )    𝐏  0    +   t   𝐏  1   ,  0    ≤  t  ≤  1          𝐁  t      subscript  𝐏  0     t     subscript  𝐏  1    subscript  𝐏  0                 1  t    subscript  𝐏  0      t   subscript  𝐏  1   ,  0         t       1     \mathbf{B}(t)=\mathbf{P}_{0}+t(\mathbf{P}_{1}-\mathbf{P}_{0})=(1-t)\mathbf{P}_%
 {0}+t\mathbf{P}_{1}\mbox{ , }0\leq t\leq 1   and is equivalent to linear interpolation .  Quadratic Bézier curves  A quadratic Bézier curve is the path traced by the function B ( t ), given points P 0 , P 1 , and P 2 ,       𝐁   (  t  )    =     (   1  -  t   )    [     (   1  -  t   )    𝐏  0    +   t   𝐏  1     ]    +   t   [     (   1  -  t   )    𝐏  1    +   t   𝐏  2     ]   ,  0    ≤  t  ≤  1          𝐁  t         1  t    delimited-[]        1  t    subscript  𝐏  0      t   subscript  𝐏  1         t   delimited-[]        1  t    subscript  𝐏  1      t   subscript  𝐏  2      ,  0         t       1     \mathbf{B}(t)=(1-t)[(1-t)\mathbf{P}_{0}+t\mathbf{P}_{1}]+t[(1-t)\mathbf{P}_{1}%
 +t\mathbf{P}_{2}]\mbox{ , }0\leq t\leq 1   ,  which can be interpreted as the linear interpolant of corresponding points on the linear Bézier curves from P 0 to P 1 and from P 1 to P 2 respectively. Rearranging the preceding equation yields:       𝐁   (  t  )    =      (   1  -  t   )   2    𝐏  0    +   2   (   1  -  t   )   t   𝐏  1    +    t  2    𝐏  2   ,  0    ≤  t  ≤  1.          𝐁  t        superscript    1  t   2    subscript  𝐏  0      2    1  t   t   subscript  𝐏  1       superscript  t  2    subscript  𝐏  2   ,  0         t       1.     \mathbf{B}(t)=(1-t)^{2}\mathbf{P}_{0}+2(1-t)t\mathbf{P}_{1}+t^{2}\mathbf{P}_{2%
 }\mbox{ , }0\leq t\leq 1.     The derivative of the Bézier curve with respect to t is         𝐁  ′    (  t  )    =    2   (   1  -  t   )    (    𝐏  1   -   𝐏  0    )    +   2  t   (    𝐏  2   -   𝐏  1    )      .         superscript  𝐁  normal-′   t       2    1  t      subscript  𝐏  1    subscript  𝐏  0       2  t     subscript  𝐏  2    subscript  𝐏  1        \mathbf{B}^{\prime}(t)=2(1-t)(\mathbf{P}_{1}-\mathbf{P}_{0})+2t(\mathbf{P}_{2}%
 -\mathbf{P}_{1})\,.     from which it can be concluded that the tangents to the curve at P 0 and P 2 intersect at P 1 . As t increases from 0 to 1, the curve departs from P 0 in the direction of P 1 , then bends to arrive at P 2 from the direction of P 1 .  The second derivative of the Bézier curve with respect to t is         𝐁  ′′    (  t  )    =   2   (     𝐏  2   -   2   𝐏  1     +   𝐏  0    )     .         superscript  𝐁  ′′   t     2       subscript  𝐏  2     2   subscript  𝐏  1      subscript  𝐏  0       \mathbf{B}^{\prime\prime}(t)=2(\mathbf{P}_{2}-2\mathbf{P}_{1}+\mathbf{P}_{0})\,.     Cubic Bézier curves  Four points P 0 , P 1 , P 2 and P 3 in the plane or in higher-dimensional space define a cubic Bézier curve. The curve starts at P 0 going toward P 1 and arrives at P 3 coming from the direction of P 2 . Usually, it will not pass through P 1 or P 2 ; these points are only there to provide directional information. The distance between P 0 and P 1 determines "how far" and "how fast" the curve moves towards P 1 before turning towards P 2 .  Writing B P i , P j , P k ( t ) for the quadratic Bézier curve defined by points P i , P j , and P k , the cubic Bézier curve can be defined as a linear combination of two quadratic Bézier curves:       𝐁   (  t  )    =     (   1  -  t   )    𝐁    𝐏  0   ,   𝐏  1   ,   𝐏  2      (  t  )    +   t   𝐁    𝐏  1   ,   𝐏  2   ,   𝐏  3      (  t  )   ,  0    ≤  t  ≤  1.          𝐁  t         1  t    subscript  𝐁    subscript  𝐏  0    subscript  𝐏  1    subscript  𝐏  2     t     t   subscript  𝐁    subscript  𝐏  1    subscript  𝐏  2    subscript  𝐏  3     t  ,  0         t       1.     \mathbf{B}(t)=(1-t)\mathbf{B}_{\mathbf{P}_{0},\mathbf{P}_{1},\mathbf{P}_{2}}(t%
 )+t\mathbf{B}_{\mathbf{P}_{1},\mathbf{P}_{2},\mathbf{P}_{3}}(t)\mbox{ , }0\leq
 t%
 \leq 1.     The explicit form of the curve is:       𝐁   (  t  )    =      (   1  -  t   )   3    𝐏  0    +   3    (   1  -  t   )   2   t   𝐏  1    +   3   (   1  -  t   )    t  2    𝐏  2    +    t  3    𝐏  3   ,  0    ≤  t  ≤  1.          𝐁  t        superscript    1  t   3    subscript  𝐏  0      3   superscript    1  t   2   t   subscript  𝐏  1      3    1  t    superscript  t  2    subscript  𝐏  2       superscript  t  3    subscript  𝐏  3   ,  0         t       1.     \mathbf{B}(t)=(1-t)^{3}\mathbf{P}_{0}+3(1-t)^{2}t\mathbf{P}_{1}+3(1-t)t^{2}%
 \mathbf{P}_{2}+t^{3}\mathbf{P}_{3}\mbox{ , }0\leq t\leq 1.     For some choices of P 1 and P 2 the curve may intersect itself, or contain a cusp.  Any series of any 4 distinct points can be converted to a cubic Bézier curve that goes through all 4 points in order. Given the starting and ending point of some cubic Bézier curve, and the points along the curve corresponding to t = 1/3 and t = 2/3, the control points for the original Bézier curve can be recovered. 6  The derivative of the cubic Bézier curve with respect to t is         𝐁  ′    (  t  )    =    3    (   1  -  t   )   2    (    𝐏  1   -   𝐏  0    )    +   6   (   1  -  t   )   t   (    𝐏  2   -   𝐏  1    )    +   3   t  2    (    𝐏  3   -   𝐏  2    )      .         superscript  𝐁  normal-′   t       3   superscript    1  t   2      subscript  𝐏  1    subscript  𝐏  0       6    1  t   t     subscript  𝐏  2    subscript  𝐏  1       3   superscript  t  2      subscript  𝐏  3    subscript  𝐏  2        \mathbf{B}^{\prime}(t)=3(1-t)^{2}(\mathbf{P}_{1}-\mathbf{P}_{0})+6(1-t)t(%
 \mathbf{P}_{2}-\mathbf{P}_{1})+3t^{2}(\mathbf{P}_{3}-\mathbf{P}_{2})\,.     The second derivative of the Bézier curve with respect to t is         𝐁  ′′    (  t  )    =    6   (   1  -  t   )    (     𝐏  2   -   2   𝐏  1     +   𝐏  0    )    +   6  t   (     𝐏  3   -   2   𝐏  2     +   𝐏  1    )      .         superscript  𝐁  ′′   t       6    1  t        subscript  𝐏  2     2   subscript  𝐏  1      subscript  𝐏  0       6  t       subscript  𝐏  3     2   subscript  𝐏  2      subscript  𝐏  1        \mathbf{B}^{\prime\prime}(t)=6(1-t)(\mathbf{P}_{2}-2\mathbf{P}_{1}+\mathbf{P}_%
 {0})+6t(\mathbf{P}_{3}-2\mathbf{P}_{2}+\mathbf{P}_{1})\,.     General definition  Bézier curves can be defined for any degree n.  Recursive definition  A recursive definition for the Bézier curve of degree n expresses it as a point-to-point linear combination ( linear interpolation ) of a pair of corresponding points in two Bézier curves of degree n − 1.  Let    𝐁    𝐏  0    𝐏  1   …   𝐏  n       subscript  𝐁     subscript  𝐏  0    subscript  𝐏  1   normal-…   subscript  𝐏  n      \mathbf{B}_{\mathbf{P}_{0}\mathbf{P}_{1}\ldots\mathbf{P}_{n}}   denote the Bézier curve determined by any selection of points P 0 , P 1 , ..., P n . Then to start,        𝐁   𝐏  0     (  t  )    =    𝐏  0   , and          subscript  𝐁   subscript  𝐏  0    t      subscript  𝐏  0   , and     \mathbf{B}_{\mathbf{P}_{0}}(t)=\mathbf{P}_{0}\text{, and}          𝐁   (  t  )    =    𝐁    𝐏  0    𝐏  1   …   𝐏  n      (  t  )    =     (   1  -  t   )    𝐁    𝐏  0    𝐏  1   …   𝐏   n  -  1       (  t  )    +   t   𝐁    𝐏  1    𝐏  2   …   𝐏  n      (  t  )             𝐁  t      subscript  𝐁     subscript  𝐏  0    subscript  𝐏  1   normal-…   subscript  𝐏  n     t              1  t    subscript  𝐁     subscript  𝐏  0    subscript  𝐏  1   normal-…   subscript  𝐏    n  1      t     t   subscript  𝐁     subscript  𝐏  1    subscript  𝐏  2   normal-…   subscript  𝐏  n     t       \mathbf{B}(t)=\mathbf{B}_{\mathbf{P}_{0}\mathbf{P}_{1}\ldots\mathbf{P}_{n}}(t)%
 =(1-t)\mathbf{B}_{\mathbf{P}_{0}\mathbf{P}_{1}\ldots\mathbf{P}_{n-1}}(t)+t%
 \mathbf{B}_{\mathbf{P}_{1}\mathbf{P}_{2}\ldots\mathbf{P}_{n}}(t)     This recursion is elucidated in the animations below.  Explicit definition  The formula can be expressed explicitly as follows:       𝐁   (  t  )    =         𝐁  t   absent    \displaystyle\mathbf{B}(t)=     where    (       n      i       )     binomial  n  i    \scriptstyle{n\choose i}   are the binomial coefficients .  For example, for n = 5:        𝐁    𝐏  0    𝐏  1    𝐏  2    𝐏  3    𝐏  4    𝐏  5      (  t  )    =   𝐁   (  t  )    =            subscript  𝐁     subscript  𝐏  0    subscript  𝐏  1    subscript  𝐏  2    subscript  𝐏  3    subscript  𝐏  4    subscript  𝐏  5     t     𝐁  t        absent     \displaystyle\mathbf{B}_{\mathbf{P}_{0}\mathbf{P}_{1}\mathbf{P}_{2}\mathbf{P}_%
 {3}\mathbf{P}_{4}\mathbf{P}_{5}}(t)=\mathbf{B}(t)=     Terminology  Some terminology is associated with these parametric curves. We have        𝐁   (  t  )    =    ∑   i  =  0   n     b   i  ,  n     (  t  )    𝐏  i      ,   0  ≤  t  ≤  1      formulae-sequence      𝐁  t     superscript   subscript     i  0    n      subscript  b   i  n    t   subscript  𝐏  i          0  t       1      \mathbf{B}(t)=\sum_{i=0}^{n}b_{i,n}(t)\mathbf{P}_{i},\quad 0\leq t\leq 1     where the polynomials         b   i  ,  n     (  t  )    =    (     n      i     )    t  i     (   1  -  t   )    n  -  i      ,   i  =   0  ,  …  ,  n       formulae-sequence       subscript  b   i  n    t      binomial  n  i    superscript  t  i    superscript    1  t     n  i        i   0  normal-…  n      b_{i,n}(t)={n\choose i}t^{i}(1-t)^{n-i},\quad i=0,\ldots,n     are known as Bernstein basis polynomials of degree n .  Note that t 0 = 1, (1 − t ) 0 = 1, and that the binomial coefficient ,    (       n      i       )     binomial  n  i    \scriptstyle{n\choose i}   , also expressed as    𝐂  i     n     superscript   subscript  𝐂  i   n    {}^{n}{\mathbf{C}}_{i}   or    𝐂  i    n     superscript   subscript  𝐂  i   n    {\mathbf{C}_{i}}^{n}   , is:       (     n      i     )   =    n  !     i  !     (   n  -  i   )   !          binomial  n  i       n       i       n  i        {n\choose i}=\frac{n!}{i!(n-i)!}     The points P i are called control points for the Bézier curve. The polygon formed by connecting the Bézier points with lines , starting with P 0 and finishing with P n , is called the Bézier polygon (or control polygon ). The convex hull of the Bézier polygon contains the Bézier curve.  Polynomial form  Sometimes it is desirable to express the Bézier curve as a polynomial instead of a sum of less straightforward Bernstein polynomials . Application of the binomial theorem to the definition of the curve followed by some rearrangement will yield:       𝐁   (  t  )    =    ∑   j  =  0   n     t  j    𝐂  j           𝐁  t     superscript   subscript     j  0    n      superscript  t  j    subscript  𝐂  j       \mathbf{B}(t)=\sum_{j=0}^{n}{t^{j}\mathbf{C}_{j}}     where        𝐂  j   =     n  !     (   n  -  j   )   !      ∑   i  =  0   j       (   -  1   )    i  +  j     𝐏  i      i  !     (   j  -  i   )   !       =    ∏   m  =  0    j  -  1      (   n  -  m   )     ∑   i  =  0   j       (   -  1   )    i  +  j     𝐏  i      i  !     (   j  -  i   )   !         .         subscript  𝐂  j         n       n  j       superscript   subscript     i  0    j        superscript    1     i  j     subscript  𝐏  i        i       j  i               superscript   subscript  product    m  0      j  1        n  m     superscript   subscript     i  0    j        superscript    1     i  j     subscript  𝐏  i        i       j  i            \mathbf{C}_{j}=\frac{n!}{(n-j)!}\sum_{i=0}^{j}\frac{(-1)^{i+j}\mathbf{P}_{i}}{%
 i!(j-i)!}=\prod_{m=0}^{j-1}(n-m)\sum_{i=0}^{j}\frac{(-1)^{i+j}\mathbf{P}_{i}}{%
 i!(j-i)!}.     This could be practical if    𝐂  j     subscript  𝐂  j    \mathbf{C}_{j}   can be computed prior to many evaluations of    𝐁   (  t  )       𝐁  t    \mathbf{B}(t)   ; however one should use caution as high order curves may lack numeric stability ( de Casteljau's algorithm should be used if this occurs). Note that the empty product is 1.  Properties   The curve begins at P 0 and ends at P n ; this is the so-called endpoint interpolation property.  The curve is a straight line if and only if all the control points are collinear .  The start (end) of the curve is tangent to the first (last) section of the Bézier polygon.  A curve can be split at any point into two subcurves, or into arbitrarily many subcurves, each of which is also a Bézier curve.  Some curves that seem simple, such as the circle , cannot be described exactly by a Bézier or piecewise Bézier curve; though a four-piece cubic Bézier curve can approximate a circle (see composite Bézier curve ), with a maximum radial error of less than one part in a thousand, when each inner control point (or offline point) is the distance     4   (    2   -  1   )    3        4      2   1    3    \textstyle\frac{4\left(\sqrt{2}-1\right)}{3}   horizontally or vertically from an outer control point on a unit circle. More generally, an n -piece cubic Bézier curve can approximate a circle, when each inner control point is the distance     4  3    tan   (   t  /  4   )          4  3       t  4      \textstyle\frac{4}{3}\tan(t/4)   from an outer control point on a unit circle, where t is 360/ n degrees, and n > 2.  Every quadratic Bézier curve is also a cubic Bézier curve, and more generally, every degree n Bézier curve is also a degree m curve for any m > n . In detail, a degree n curve with control points P 0 , …, P n is equivalent (including the parametrization) to the degree n + 1 curve with control points P ' 0 , …, P ' n + 1 , where     𝐏  k  ′   =     k   n  +  1     𝐏   k  -  1     +    (   1  -   k   n  +  1     )    𝐏  k          subscript   superscript  𝐏  normal-′   k         k    n  1     subscript  𝐏    k  1         1    k    n  1      subscript  𝐏  k       \mathbf{P}^{\prime}_{k}=\tfrac{k}{n+1}\mathbf{P}_{k-1}+\left(1-\tfrac{k}{n+1}%
 \right)\mathbf{P}_{k}   .  Bézier curves have the variation diminishing property . What this means in intuitive terms is that a Bézier curves does not "undulate" more than the polygon of its control points, and may actually "undulate" less than that. 7  There is no local control in degree n Bézier curves—meaning that any change to a control point requires recalculation of and thus affects the aspect of the entire curve—, "although the further that one is from the control point that was changed, the smaller is the change in the curve." 8   Second order curve is a parabolic segment  (Figure)  Equivalence of a quadratic Bézier curve and a parabolic segment   A quadratic Bézier curve is also a segment of a parabola . As a parabola is a conic section , some sources refer to quadratic Béziers as "conic arcs". 9 With reference to the figure on the right, the important features of the parabola can be derived as follows: 10   Tangents to the parabola at the end-points of the curve (A and B) intersect at its control point (C).  If D is the mid-point of AB, the tangent to the curve which is perpendicular to CD (dashed cyan line) defines its vertex (V). Its axis of symmetry (dash-dot cyan) passes through V and is perpendicular to the tangent.  E is either point on the curve with a tangent at 45° to CD (dashed green). If G is the intersection of this tangent and the axis, the line passing through G and perpendicular to CD is the directrix (solid green).  The focus (F) is at the intersection of the axis and a line passing through E and perpendicular to CD (dotted yellow). The latus rectum is the line segment within the curve (solid yellow).   Derivative  The derivative for a curve of order n is        𝐁  ′    (  t  )    =   n    ∑   i  =  0    n  -  1      b   i  ,   n  -  1      (  t  )    (    𝐏   i  +  1    -   𝐏  i    )             superscript  𝐁  normal-′   t     n    superscript   subscript     i  0      n  1       subscript  b   i    n  1     t     subscript  𝐏    i  1     subscript  𝐏  i         \mathbf{B}^{\prime}(t)=n\sum_{i=0}^{n-1}b_{i,n-1}(t)(\mathbf{P}_{i+1}-\mathbf{%
 P}_{i})     Constructing Bézier curves  Linear curves      ]     Animation of a linear Bézier curve, t in [0,1]     The t in the function for a linear Bézier curve can be thought of as describing how far B ( t ) is from P 0 to P 1 . For example when t=0.25 , B ( t ) is one quarter of the way from point P 0 to P 1 . As t varies from 0 to 1, B ( t ) describes a straight line from P 0 to P 1 .  Quadratic curves  For quadratic Bézier curves one can construct intermediate points Q 0 and Q 1 such that as t varies from 0 to 1:   Point Q 0 ( t ) varies from P 0 to P 1 and describes a linear Bézier curve.  Point Q 1 ( t ) varies from P 1 to P 2 and describes a linear Bézier curve.  Point B ( t ) is interpolated linearly between Q 0 ( t ) to Q 1 ( t ) and describes a quadratic Bézier curve.       (Figure)  Construction of a quadratic Bézier curve     ]     Construction of a quadratic Bézier curve    Animation of a quadratic Bézier curve, t in [0,1]      Higher-order curves  For higher-order curves one needs correspondingly more intermediate points. For cubic curves one can construct intermediate points Q 0 , Q 1 , and Q 2 that describe linear Bézier curves, and points R 0 & R 1 that describe quadratic Bézier curves:      (Figure)  Construction of a cubic Bézier curve     ]     Construction of a cubic Bézier curve    Animation of a cubic Bézier curve, t in [0,1]      For fourth-order curves one can construct intermediate points Q 0 , Q 1 , Q 2 & Q 3 that describe linear Bézier curves, points R 0 , R 1 & R 2 that describe quadratic Bézier curves, and points S 0 & S 1 that describe cubic Bézier curves:      (Figure)  Construction of a quartic Bézier curve     ]     Construction of a quartic Bézier curve    Animation of a quartic Bézier curve, t in [0,1]      For fifth-order curves, one can construct similar intermediate points.      (Figure)  Animation of the construction of a fifth-order Bézier curve      Animation of a fifth order Bézier curve, t in [0,1] in red. The Bézier curves for each of the lower orders is also shown.      These representations rest on the process used in De Casteljau's algorithm to calculate Bézier curves. 11  Offsets (a.k.a. stroking) of Bézier curves  The curve at a fixed offset from a given Bézier curve, called an offset or parallel curve in mathematics (lying "parallel" to the original curve, like the offset between rails in a railroad track ), cannot be exactly formed by a Bézier curve (except in some trivial cases). In general, the two-sided offset curve of a cubic Bézier is a 10th order algebraic curve 12 and more generally for a Bézier of degree n the two-sided offset curve is an algebraic curve of degree 4 n -2. 13 However, there are heuristic methods that usually give an adequate approximation for practical purposes. 14  In the field of vector graphics , painting two symmetrically distanced offset curves is called stroking (the Bézier curve or in general a path of several Bézier segments). 15 The conversion from offset curves to filled Bézier contours is of practical importance in converting fonts defined in METAFONT , which allows stroking of Bézier curves, to the more widely used PostScript type 1 fonts , which only allow (for efficiency purposes) the mathematically simpler operation of filling a contour defined by (non-self-intersecting) Bézier curves. 16  Degree elevation  A Bézier curve of degree n can be converted into a Bézier curve of degree n + 1 with the same shape . This is useful if software supports Bézier curves only of specific degree. For example, systems that can only work with cubic Bézier curves can implicitly work with quadratic curves by using their equivalent cubic representation.  To do degree elevation, we use the equality     𝐁   (  t  )    =     (   1  -  t   )   𝐁   (  t  )    +   t  𝐁   (  t  )           𝐁  t         1  t   𝐁  t     t  𝐁  t      \mathbf{B}(t)=(1-t)\mathbf{B}(t)+t\mathbf{B}(t)   . Each component     𝐛   i  ,  n     (  t  )    𝐏  i        subscript  𝐛   i  n    t   subscript  𝐏  i     \mathbf{b}_{i,n}(t)\mathbf{P}_{i}   is multiplied by (1 − t ) and t , thus increasing a degree by one, without changing the value. Here is the example of increasing degree from 2 to 3.         (   1  -  t   )   2    𝐏  0    +   2   (   1  -  t   )   t   𝐏  1    +    t  2    𝐏  2           superscript    1  t   2    subscript  𝐏  0      2    1  t   t   subscript  𝐏  1       superscript  t  2    subscript  𝐏  2      \displaystyle(1-t)^{2}\mathbf{P}_{0}+2(1-t)t\mathbf{P}_{1}+t^{2}\mathbf{P}_{2}     For arbitrary n we use equalities       (       n  +  1       i      )    (   1  -  t   )    𝐛   i  ,  n         binomial    n  1   i     1  t    subscript  𝐛   i  n      \displaystyle{n+1\choose i}(1-t)\mathbf{b}_{i,n}     introducing arbitrary    𝐏   -  1      subscript  𝐏    1     \mathbf{P}_{-1}   and    𝐏   n  +  1      subscript  𝐏    n  1     \mathbf{P}_{n+1}   .  Therefore new control points are 17        𝐏   ′  i    =     i   n  +  1     𝐏   i  -  1     +      n  +  1   -  i    n  +  1     𝐏  i      ,   i  =   0  ,  …  ,   n  +  1        formulae-sequence     subscript   superscript  𝐏  normal-′   i         i    n  1     subscript  𝐏    i  1             n  1   i     n  1     subscript  𝐏  i        i   0  normal-…    n  1       \mathbf{P^{\prime}}_{i}=\frac{i}{n+1}\mathbf{P}_{i-1}+\frac{n+1-i}{n+1}\mathbf%
 {P}_{i},\quad i=0,\ldots,n+1     Repeated Degree Elevation  The concept of Degree Elevation can be repeated on a control polygon R to get a sequence of control polygons R , R 1 , R 2 , and so on. After r degree elevations, the polygon R r has the vertices P 0,r , P 1,r , P 2,r ,..., P n+r,r given by 18       𝐏   i  ,  r    =    ∑   j  =  0   n     𝐏  j    (       n      j       )     (      r       i  -  j       )    (       n  +  r       i      )           subscript  𝐏   i  r      superscript   subscript     j  0    n      subscript  𝐏  j    binomial  n  j      binomial  r    i  j     binomial    n  r   i        \mathbf{P}_{i,r}=\sum_{j=0}^{n}\mathbf{P}_{j}{\textstyle\left({{n}\atop{j}}%
 \right)}\frac{{\textstyle\left({{r}\atop{i-j}}\right)}}{{\textstyle\left({{n+r%
 }\atop{i}}\right)}}     It can also be shown that for the underlying Bézier curve B ,        lim   𝐫  →  ∞     𝐑  𝐫    =  𝐁        subscript    normal-→  𝐫      subscript  𝐑  𝐫    𝐁    \mathbf{\lim_{r\to\infty}R_{r}}=\mathbf{B}     Rational Bézier curves  The rational Bézier curve adds adjustable weights to provide closer approximations to arbitrary shapes. The numerator is a weighted Bernstein-form Bézier curve and the denominator is a weighted sum of Bernstein polynomials . Rational Bézier curves can, among other uses, be used to represent segments of conic sections exactly, including circular arcs. 19  Given n + 1 control points P i , the rational Bézier curve can be described by:       𝐁   (  t  )    =     ∑   i  =  0   n     b   i  ,  n     (  t  )    𝐏  i    w  i       ∑   i  =  0   n     b   i  ,  n     (  t  )    w  i            𝐁  t       superscript   subscript     i  0    n      subscript  b   i  n    t   subscript  𝐏  i    subscript  w  i       superscript   subscript     i  0    n      subscript  b   i  n    t   subscript  w  i        \mathbf{B}(t)=\frac{\sum_{i=0}^{n}b_{i,n}(t)\mathbf{P}_{i}w_{i}}{\sum_{i=0}^{n%
 }b_{i,n}(t)w_{i}}   or simply        𝐁   (  t  )    =     ∑   i  =  0   n     (      n      i      )    t  i     (   1  -  t   )    n  -  i     𝐏  i    w  i       ∑   i  =  0   n     (      n      i      )    t  i     (   1  -  t   )    n  -  i     w  i       .        𝐁  t       superscript   subscript     i  0    n      binomial  n  i    superscript  t  i    superscript    1  t     n  i     subscript  𝐏  i    subscript  w  i       superscript   subscript     i  0    n      binomial  n  i    superscript  t  i    superscript    1  t     n  i     subscript  w  i        \mathbf{B}(t)=\frac{\sum_{i=0}^{n}{n\choose i}t^{i}(1-t)^{n-i}\mathbf{P}_{i}w_%
 {i}}{\sum_{i=0}^{n}{n\choose i}t^{i}(1-t)^{n-i}w_{i}}.     See also  (Figure)  Quadratic Béziers in string art: The end points ( • ) and control point ( × ) define the quadratic Bézier curve ( ⋯ ).    Bézier surface  B-spline  Hermite curve  NURBS  String art – Bézier curves are also formed by many common forms of string art, where strings are looped across a frame of nails.  Variation diminishing property of Bézier curves   Notes  References     Rida T. Farouki, The Bernstein polynomial basis: A centennial retrospective , Computer Aided Geometric Design, Volume 29, Issue 6, August 2012, Pages 379–419,  Paul Bourke: Bézier Surfaces (in 3D) , http://local.wasp.uwa.edu.au/~pbourke/geometry/bezier/index.html  Donald Knuth : Metafont: the Program , Addison-Wesley 1986, pp. 123–131. Excellent discussion of implementation details; available for free as part of the TeX distribution.  Dr Thomas Sederberg, BYU Bézier curves , http://www.tsplines.com/resources/class_notes/Bezier_curves.pdf  J.D. Foley et al. : Computer Graphics: Principles and Practice in C (2nd ed., Addison Wesley, 1992)  Rajiv Chandel: " Implementing Bezier Curves in games "   Computer code   TinySpline: Open source C-library for NURBS, B-Splines and Bezier Splines with bindings for various languages   Further reading and external links   Cubic Bezier Curves - Under the Hood (video) Video shows how computers render a cubic Bézier curve, by Peter Nowell  From Bézier to Bernstein Feature Column from American Mathematical Society     This book is out of print and freely available from the author.  A Primer on Bézier Curves — A detailed explanation of implementing Bézier curves and associated graphics algorithms, with interactive graphics.    http://web.archive.org/web/20061202151511/http://www.fho-emden.de/~hoffmann/bezier18122002.pdf    "  Category:Graphic design  Category:Interpolation  Category:Curves     Image manipulation programs such as Inkscape , Adobe Photoshop , and GIMP . ↩  In animation applications such as Adobe Flash , Adobe After Effects , Microsoft Expression Blend , Blender , Autodesk Maya and Autodesk 3ds max . ↩  ↩  http://www.xlrotor.com/resources/files.shtml ↩  FreeType Glyph Conventions , David Turner + Freetype Development Team, Freetype.org, retr May 2011 ↩  John Burkardt. "Forcing Bezier Interpolation (from web.archive.org 2013-12-25)" . ↩  ↩  ↩   Duncan Marsh, Applied Geometry for Computer Graphics and CAD , Springer Undergraduate Mathematics Series, 2005 ↩  ↩  http://www.slideshare.net/Mark_Kilgard/22pathrender , p. 28 ↩  [ http://faculty.engineering.ucdavis.edu/farouki/wp-content/uploads/sites/41/2013/02/Introduction-to-PH-curves.pdf , particularly p. 16 "taxonomy of offset curves"] ↩  For example: 1 or 2 . For a survey see 3 . ↩   MetaFog: Converting Metafont shapes to contours ↩  ↩   ↩     