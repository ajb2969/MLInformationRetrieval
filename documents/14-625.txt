   Well-structured transition system      Well-structured transition system   In computer science, specifically in the field of formal verification , well-structured transition systems (WSTSs) are a general class of infinite state systems for which many verification problems are decidable , owing to the existence of a kind of order between the states of the system which is compatible with the transitions of the system. WSTS decidability results can be applied to Petri nets , lossy channel systems, and more.  Formal definition  Recall that a well-quasi-ordering    ≤     \leq   on a set   X   X   X   is a quasi-ordering (i.e., a preorder or reflexive , transitive  binary relation ) such that any infinite sequence of elements     x  0   ,   x  1   ,   x  2   ,  …      subscript  x  0    subscript  x  1    subscript  x  2   normal-…    x_{0},x_{1},x_{2},\ldots   , from   X   X   X   contains an increasing pair     x  i   ≤   x  j        subscript  x  i    subscript  x  j     x_{i}\leq x_{j}   with    i  <  j      i  j    i   . The set   X   X   X   is said to be well-quasi-ordered , or shortly wqo .  For our purposes, a transition system is a structure    𝒮  =   ⟨  S  ,  →  ,  ⋯  ⟩       𝒮   S  normal-→  normal-⋯     \mathcal{S}=\langle S,\rightarrow,\cdots\rangle   , where   S   S   S   is any set (its elements are called states ), and    →  ⊆  S  ×  S     fragments  normal-→   S   S    \rightarrow\subseteq S\times S   (its elements are called transitions ). In general a transition system may have additional structure like initial states, labels on transitions, accepting states, etc (indicated by the dots), but they do not concern us here.  A well-structured transition system consists of a transition system    ⟨  S  ,  →  ,  ≤  ⟩     S  normal-→     \langle S,\to,\leq\rangle   , such that       ≤  ⊆  S  ×  S     fragments    S   S    \leq\subseteq S\times S   is a well-quasi-ordering on the set of states.     ≤     \leq   is upward compatible with   →   normal-→   \to   : that is, for all transitions     s  1   →   s  2      normal-→   subscript  s  1    subscript  s  2     s_{1}\to s_{2}   (by this we mean     (   s  1   ,   s  2   )   ∈  →        subscript  s  1    subscript  s  2    normal-→    (s_{1},s_{2})\in\to   ) and for all    t  1     subscript  t  1    t_{1}   such that     s  1   ≤   t  1        subscript  s  1    subscript  t  1     s_{1}\leq t_{1}   , there exists    t  2     subscript  t  2    t_{2}   such that     t  1    →  *    t  2        normal-→    subscript  t  1    subscript  t  2     t_{1}\xrightarrow{*}t_{2}   (that is,    t  2     subscript  t  2    t_{2}   can be reached from    t  1     subscript  t  1    t_{1}   by a sequence of zero or more transitions) and     s  2   ≤   t  2        subscript  s  2    subscript  t  2     s_{2}\leq t_{2}   .   (Figure)  The upward compatibility requirement   Well-structured systems  A well-structured system 1 is a transition system    (  S  ,  →  )     S  normal-→    (S,\to)   with state set    S  =   Q  ×  D       S    Q  D     S=Q\times D   made up from a finite control state set   Q   Q   Q   , a data values set   D   D   D   , furnished with a decidable pre-order    ≤  ⊆  D  ×  D     fragments    D   D    \leq\subseteq D\times D   which is extended to states by      (  q  ,  d  )   ≤   (   q  ′   ,   d  ′   )    ⇔   q  =    q  ′   ∧  d   ≤   d  ′       normal-⇔     q  d     superscript  q  normal-′    superscript  d  normal-′         q     superscript  q  normal-′   d         superscript  d  normal-′       (q,d)\leq(q^{\prime},d^{\prime})\Leftrightarrow q=q^{\prime}\wedge d\leq d^{\prime}   , which is well-structured as defined above (   →   normal-→   \to   is monotonic, i.e. upward compatible, with respect to   ≤     \leq   ) and in addition has a computable set of minima for the set of predecessors of any upward closed subset of   S   S   S   .  Well-structured systems adapt the theory of well-structured transition systems for modelling certain classes of systems encountered in computer science and provide the basis for decision procedures to analyse such systems, hence the supplementary requirements: the definition of a WSTS itself says nothing about the computability of the relations   ≤     \leq   ,   →   normal-→   \to   .  Uses in Computer Science  Well-structured Systems  Coverability can be decided for any well-structured system, and so can reachability of a given control state, by the backward algorithm of Abdulla et al. 2 or for specific subclasses of well-structured systems (subject to strict monotonicity, 3 e.g. in the case of unbounded Petri nets ) by a forward analysis based on a Karp-Miller coverability graph.  Backward Algorithm  The backward algorithm allows the following question to be answered: given a well-structured system and a state   s   s   s   , is there any transition path that leads from a given start state    s  0     subscript  s  0    s_{0}   to a state     s  ′   ≥  s       superscript  s  normal-′   s    s^{\prime}\geq s   (such a state is said to cover    s   s   s   )?  An intuitive explanation for this question is: if   s   s   s   represents an error state, then any state containing it should also be regarded as an error state. If a well-quasi-order can be found that models this "containment" of states and which also fulfills the requirement of monotonicity with respect to the transition relation, then this question can be answered.  Instead of one minimal error state   s   s   s   , one typically considers an upward closed set    S  e     subscript  S  e    S_{e}   of error states.  The algorithm is based on the facts that in a well-quasi-order    (  A  ,  ≤  )     A     (A,\leq)   , any upward closed set has a finite set of minima, and any sequence     S  1   ⊆   S  2   ⊆  …         subscript  S  1    subscript  S  2        normal-…     S_{1}\subseteq S_{2}\subseteq...   of upward-closed subsets of   A   A   A   converges after finitely many steps (1).  The algorithm needs to store an upward-closed set    S  s     subscript  S  s    S_{s}   of states in memory, which it can do because an upward-closed set is representable as a finite set of minima. It starts from the upward closure of the set of error states    S  e     subscript  S  e    S_{e}   and computes at each iteration the (by monotonicity also upward-closed) set of immediate predecessors and adding it to the set    S  s     subscript  S  s    S_{s}   . This iteration terminates after a finite number of steps, due to the property (1) of well-quasi-orders. If    s  0     subscript  s  0    s_{0}   is in the set finally obtained, then the output is "yes" (an state of    S  e     subscript  S  e    S_{e}   can be reached), otherwise it is "no" (it is not possible to reach such a state).  References  "  Category:Wellfoundedness  Category:Automata (computation)  Category:Automata theory     Parosh Aziz Abdulla, Kārlis Čerāns, Bengt Jonsson, Yih-Kuen Tsay: Algorithmic Analysis of Programs with Well Quasi-ordered Domains (2000), Information and Computation, Vol. 160 issues 1-2, pp. 109--127 ↩   Alain Finkel and Philippe Schnoebelen, Well-Structured Transition Systems Everywhere! , Theoretical Computer Science 256(1–2), pages 63–92, 2001. ↩     