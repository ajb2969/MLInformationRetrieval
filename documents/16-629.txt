   Solution algorithms for pressure-velocity coupling in steady flows      Solution algorithms for pressure-velocity coupling in steady flows   Solution algorithms for pressure-velocity coupling in steady flows are the standard prepossessing methods used to solve steady problems in computational fluid dynamics .  The advection of the scalar Φ used to define flow depends on the magnitude and direction of the local velocity field. In general, however the velocity field is not known. These algorithms are hence employed to obtain the solution.  The standard Euler equations (fluid dynamics) can be given by:  ''' The continuity equation '''         ∂   ρ  u     ∂  x    +    ∂   ρ  v     ∂  y     =  0              ρ  u      x          ρ  v      y     0    \frac{\partial\rho u}{\partial x}+\frac{\partial\rho v}{\partial y}=0     The momentum equations  Obtained by substituting Φ with standard directional vectors of the velocity field u , v , and w .         ∂   ρ  u  u     ∂  x    +    ∂   ρ  v  u     ∂  y     =       ∂    ν   ∂  u     ∂  x      ∂  x    +    ∂    ν   ∂  u     ∂  y      ∂  y     -    ∂  p    ∂  x     +   S  u                ρ  u  u      x          ρ  v  u      y                   ν    u      x       x            ν    u      y       y         p     x      subscript  S  u      \frac{\partial\rho uu}{\partial x}+\frac{\partial\rho vu}{\partial y}=\frac{%
 \partial\frac{\nu\partial u}{\partial x}}{\partial x}+\frac{\partial\frac{\nu%
 \partial u}{\partial y}}{\partial y}-\frac{\partial p}{\partial x}+S_{u}            ∂   ρ  u  v     ∂  x    +    ∂   ρ  v  v     ∂  y     =       ∂    ν   ∂  v     ∂  x      ∂  x    +    ∂    ν   ∂  v     ∂  y      ∂  y     -    ∂  p    ∂  y     +   S  v                ρ  u  v      x          ρ  v  v      y                   ν    v      x       x            ν    v      y       y         p     y      subscript  S  v      \frac{\partial\rho uv}{\partial x}+\frac{\partial\rho vv}{\partial y}=\frac{%
 \partial\frac{\nu\partial v}{\partial x}}{\partial x}+\frac{\partial\frac{\nu%
 \partial v}{\partial y}}{\partial y}-\frac{\partial p}{\partial y}+S_{v}     where   ρ   ρ   \rho   is the density, u , v , are the x - and y -directional components of velocity, p is the pressure field and S u , v are the source terms.  These equations are however hard to solve due to quasilinearity in the momentum equations and interdependence of the pressure term in all three equations. Also, for a general purpose flow equation, the pressure field is also unknown and is to be solved for as well.  If the flow field is compressible, the above equations act as the standard temperature and density equations and pressure can be found as it is a function of them both. If, however the flow is in-compressible, the pressure is independent of density. Hence, coupling is necessary to induce a constraint on the solution. The resulting fields will then satisfy the continuity equations. Both these issues are solved via the application of the SIMPLE Algorithm and its derivatives.  For general purpose and definition of these algorithms, a Staggered CFD Grid shall be used. It ensures the presence of very real non-zero pressure gradient across the nodes in any condition, even in the case of a checkered grid. The staggering also ensures realistic behaviors of the descretized momentum equations for spatially oscillating pressures. Also, the direction of the velocity vectors are exact.  The staggered grid  (Figure)  Standard staggered grid in computational fluid dynamics   The above shows a standard grid used to solve staggered applications. The east, west, north and south notations are used. They direct the vector fields. The u component of velocity is stored in the e and w directions and the v component in the n and s directions. If 3-D fields are to applied, t and b can be used. These are basically vector control volumes different from the scalar pressure control volumes and different from each other.  The pressure gradient equations take a different form:        ∂  p    ∂  x    =     P  p   -   P  w     ∂   x  u             p     x         subscript  P  p    subscript  P  w       subscript  x  u       \frac{\partial p}{\partial x}=\frac{P_{p}-P_{w}}{\partial x_{u}}   in the x -direction        ∂  p    ∂  y    =     P  p   -   P  s     ∂   y  v             p     y         subscript  P  p    subscript  P  s       subscript  y  v       \frac{\partial p}{\partial y}=\frac{P_{p}-P_{s}}{\partial y_{v}}   in the y -direction  Furthermore, the momentum equations now take the form:       a  i    ,  J    u  i    ,  J   =  ∑   a  n   b   u  n   b  -  Δ   V  u      P  I    ,  J   -   P   I  -  1     ,  J     ∂   x  u     +  S  Δ   V  u      fragments   subscript  a  i    subscript  normal-,  J    subscript  u  i    subscript  normal-,  J      subscript  a  n   b   subscript  u  n   b   Δ   subscript  V  u      fragments   subscript  P  I    subscript  normal-,  J     subscript  P    I  1     subscript  normal-,  J       subscript  x  u      S  Δ   subscript  V  u     a_{i},_{J}u_{i},_{J}=\sum a_{n}bu_{n}b-\Delta V_{u}\frac{P_{I},_{J}-P_{I-1},_{%
 J}}{\partial x_{u}}+S\Delta V_{u}     The summation covers all nodes and volumes in the immediate vicinity of the selected node. Their values are shown in the next figure.  (Figure)  Refined segregated Grid   Following this, The algorithms can be applied to get the solutions for the basic staggered grid equations.  SIMPLE algorithm  The acronym stands for Semi- Implicit method for pressure-linked equations. It is essentially a guess and correct procedure for the calculation of the staggered grid pressure field. These have been illustrated using a two dimensional steady flow.  '''Step 1 ''':- A pressure field p* is guessed.  '''Step 2 ''':- The Discretized momentum equations are solved using the value of p* to get velocity components u* and v*.  Step 3 :- Define the correction pressure as p' such that ''' p = p* + p' '''  Step 4 :- Similarly define the correction values for the velocities as u' and v' such that '''u = u* + u' ''' and '''v = v*+ v' '''  Step 5 :- Substitute the correct pressure field p in the momentum equations to obtain the correct velocity field ( u , v ).  '''Step 6 ':- Subtract equations obtained in step 5 from those in step 1. We should get the equations in term of the correction terms ( u′'' and v′ )  '''Here we apply an assumption that    ∑    a   n  b     u   n  b   ′           subscript  a    n  b     subscript   superscript  u  normal-′     n  b       \sum a_{nb}u^{\prime}_{nb}   and    ∑    a   n  b     v   n  b   ′           subscript  a    n  b     subscript   superscript  v  normal-′     n  b       \sum a_{nb}v^{\prime}_{nb}   are 0 '''. This is the major assumption in the SIMPLE Algorithm. This should then allow us to obtain the correction terms u' and v' of the Momentum Equations.  We can similarly find the correction terms for all nodes.  '''Step 7 ''':- Solve the continuity equation for the entire control volume. i.e. n,s,e,w nodes surrounding each node of the staggered grid, using the density terms.  '''Step 8 ''':- Substitute the corrected velocity equations in the continuity equations and separate the term containing the correction pressure p'.  This represents the equation for pressure correction p'.  '''Step 9 ''':- Solve the thus obtained equation to get the correction term and get the correct pressure. Use the new correct pressure to reiterate the entire process till a convergence is obtained.  ' Sometimes, the solution might not converge due to a large difference in the guessed field and correct pressure field. The new p= p* + αp'. α is kept between 0 and 1 to ensure convergence. '  The choice of α decides the cost effectiveness of the solution.  SIMPLER algorithm  The acronym for SIMPLE Revised, this algorithm is an improved version of the SIMPLE algorithm. Here the Discretised continuity equation is used to derive the correct intermediate pressure field instead of the correction pressure. Refer to flow chart.  SIMPLEC algorithm  The SIMPLE Consistent Algorithm is almost same as the SIMPLE Algorithm, except that the manipulations are changed to ensure lesser omissions.  References   Introduction to Computational Fluid Dynamics by Versteeg  Patankar and Spalding, SIMPLE Algorithm , 1972  Patankar, SIMPLER Algorithm , 1980  Vandoormal and Raithby, SIMPLEC Algorithm , 1984   "  Category:Computational fluid dynamics   