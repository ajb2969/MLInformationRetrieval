


MU puzzle




MU puzzle

The MU puzzle is a puzzle stated by Douglas Hofstadter and found in Gödel, Escher, Bach. As stated, it is an example of a Post canonical system and can be reformulated as a string rewriting system.
The puzzle
Suppose there are the symbols M, I, and U which can be combined to produce strings of symbols called "words". The MU puzzle asks one to start with the "axiomatic" word MI and transform it into the word MU using in each step one of the following transformation rules:

Add a U to the end of any string ending in I. For example: MI to MIU.
Double the string after the M (that is, change Mx, to Mxx). For example: MIU to MIUIU.
Replace any III with a U. For example: MUIIIU to MUUU.
Remove any UU. For example: MUUU to MU.

Using these four rules is it possible to change MI into MU in a finite number of steps?
The production rules can be written in a more schematic way. Suppose x and y behave as variables (standing for strings of symbols). Then the production rules can be written as:

xI → xIU
Mx → Mxx
xIIIy → xUy
xUUy → xy

Is it possible to obtain the word MU using these rules? 12
Solution
The puzzle's solution is no. It is impossible to change the string MI into MU by repeatedly applying the given rules.
In order to prove assertions like this, it is often beneficial to look for an invariant, that is some quantity or property that doesn't change while applying the rules.
In this case, one can look at the total number of I in a string. Only the second and third rules change this number. In particular, rule two will double it while rule three will reduce it by 3. Now, the invariant property is that the number of I is not divisible by 3:

In the beginning, the number of Is is 1 which is not divisible by 3.
Doubling a number that is not divisible by 3 does not make it divisible by 3.
Subtracting 3 from a number that is not divisible by 3 does not make it divisible by 3 either.

Thus, the goal of MU with zero I cannot be achieved because 0 is divisible by 3.
In the language of modular arithmetic, the number 
 
 
 
  of I obeys the congruence


 
  where 
 
 
 
  counts how often the second rule is applied.
Relationship to logic
The MIU system illustrates several important concepts in logic by means of analogy.
It can be interpreted as an analogy for a formal system — an encapsulation of mathematical and logical concepts using symbols. The MI string is akin to a single axiom, and the four transformation rules are akin to rules of inference. The MU string and the impossibility of its derivation is then analogous to a statement of mathematical logic which cannot be proven or disproven by the formal system.
It also demonstrates the contrast between interpretation on the "syntactic" level of symbols and on the "semantic" level of meanings. On the syntactic level, there is no knowledge of the MU puzzle's insolubility. The system does not refer to anything: it is simply a game involving meaningless strings. Working within the system, an algorithm could successively generate every valid string of symbols in an attempt to generate MU, and though it would never succeed, it would search forever, never deducing that the quest was futile. For a human player however, after a number of attempts, one soon begins to suspect that the puzzle may be impossible. One then "jumps out of the system" and starts to reason about the system, rather than working within it. Eventually, one realises that the system is in some way about divisibility by three. This is the "semantic" level of the system — a level of meaning that the system naturally attains. On this level, the MU puzzle can be seen to be impossible.
The inability of the MIU system to express or deduce facts about itself, such as the inability to derive MU, is a consequence of its simplicity. However, more complex formal systems, such as systems of mathematical logic, may possess this ability. This is the key idea behind Godel's Incompleteness Theorem.
See also

Invariant (computer science)
Unrestricted grammar

References
"
Category:Logic puzzles



↩
 Here: Chapter I.↩




