   Stabilizer code      Stabilizer code   The theory of quantum error correction plays a prominent role in the practical realization and engineering of quantum computing and quantum communication devices. The first quantum error-correcting codes are strikingly similar to classical block codes in their operation and performance. Quantum error-correcting codes restore a noisy, decohered  quantum state to a pure quantum state. A stabilizer quantum error-correcting code appends ancilla qubits to qubits that we want to protect. A unitary encoding circuit rotates the global state into a subspace of a larger Hilbert space . This highly entangled , encoded state corrects for local noisy errors. A quantum error-correcting code makes quantum computation and quantum communication practical by providing a way for a sender and receiver to simulate a noiseless qubit channel given a noisy qubit channel that has a particular error model.  The stabilizer theory of quantum error correction allows one to import some classical binary or quaternary codes for use as a quantum code. The only "catch" when importing is that the classical code must satisfy the dual-containing or self-orthogonality constraint. Researchers have found many examples of classical codes satisfying this constraint, but most classical codes do not. Nevertheless, it is still useful to import classical codes in this way (though, see how the entanglement-assisted stabilizer formalism overcomes this difficulty).  Mathematical background  The Stabilizer formalism exploits elements of the Pauli group    Π   normal-Π   \Pi   in formulating quantum error-correcting codes. The set    Π  =   {  I  ,  X  ,  Y  ,  Z  }       normal-Π   I  X  Y  Z     \Pi=\left\{I,X,Y,Z\right\}   consists of the Pauli operators :        I  ≡   [     1    0      0    1     ]    ,    X  ≡   [     0    1      1    0     ]    ,    Y  ≡   [     0     -  i       i    0     ]    ,   Z  ≡   [     1    0      0     -  1      ]       .     formulae-sequence    I    1  0    0  1      formulae-sequence    X    0  1    1  0      formulae-sequence    Y    0    i     i  0       Z    1  0    0    1          I\equiv\begin{bmatrix}1&0\\
 0&1\end{bmatrix},\ X\equiv\begin{bmatrix}0&1\\
 1&0\end{bmatrix},\ Y\equiv\begin{bmatrix}0&-i\\
 i&0\end{bmatrix},\ Z\equiv\begin{bmatrix}1&0\\
 0&-1\end{bmatrix}.   The above operators act on a single qubit ---a state represented by a vector in a two-dimensional Hilbert space . Operators in   Π   normal-Π   \Pi   have eigenvalues     ±  1     plus-or-minus  1    \pm 1   and either commute or anti-commute . The set    Π  n     superscript  normal-Π  n    \Pi^{n}   consists of   n   n   n   -fold tensor products of Pauli operators :        Π  n   =   {       e   i  ϕ     A  1   ⊗  ⋯  ⊗   A  n   :  ∀  j  ∈   {  1  ,  …  ,  n  }    A  j   ∈  Π  ,  ϕ  ∈   {  0  ,  π  /  2  ,  π  ,  3  π  /  2  }       }    .       superscript  normal-Π  n       fragments   superscript  e    i  ϕ     subscript  A  1   tensor-product  normal-⋯  tensor-product   subscript  A  n   normal-:  for-all  j    fragments  normal-{  1  normal-,  normal-…  normal-,  n  normal-}    subscript  A  j    Π  normal-,  ϕ    fragments  normal-{  0  normal-,  π   2  normal-,  π  normal-,  3  π   2  normal-}         \Pi^{n}=\left\{\begin{array}[c]{c}e^{i\phi}A_{1}\otimes\cdots\otimes A_{n}:%
 \forall j\in\left\{1,\ldots,n\right\}A_{j}\in\Pi,\ \ \phi\in\left\{0,\pi/2,\pi%
 ,3\pi/2\right\}\end{array}\right\}.   Elements of    Π  n     superscript  normal-Π  n    \Pi^{n}   act on a quantum register of   n   n   n   qubits. We occasionally omit tensor product symbols in what follows so that         A  1   ⋯   A  n    ≡    A  1   ⊗  ⋯  ⊗   A  n     .         subscript  A  1   normal-⋯   subscript  A  n     tensor-product   subscript  A  1   normal-⋯   subscript  A  n      A_{1}\cdots A_{n}\equiv A_{1}\otimes\cdots\otimes A_{n}.   The   n   n   n   -fold Pauli group     Π  n     superscript  normal-Π  n    \Pi^{n}   plays an important role for both the encoding circuit and the error-correction procedure of a quantum stabilizer code over   n   n   n   qubits.  Definition  Let us define an    [  n  ,  k  ]     n  k    \left[n,k\right]   stabilizer quantum error-correcting code to encode   k   k   k   logical qubits into   n   n   n   physical qubits. The rate of such a code is    k  /  n      k  n    k/n   . Its stabilizer   𝒮   𝒮   \mathcal{S}   is an abelian  subgroup of the   n   n   n   -fold Pauli group    Π  n     superscript  normal-Π  n    \Pi^{n}       𝒮  ⊂   Π  n       𝒮   superscript  normal-Π  n     \mathcal{S}\subset\Pi^{n}   .   𝒮   𝒮   \mathcal{S}   does not contain the operator    -   I    ⊗  n         superscript  I   tensor-product  absent  n      -I^{\otimes n}   . The simultaneous    +  1      1    +1   - eigenspace of the operators constitutes the codespace . The codespace has dimension    2  k     superscript  2  k    2^{k}   so that we can encode   k   k   k   qubits into it. The stabilizer   𝒮   𝒮   \mathcal{S}   has a minimal representation in terms of    n  -  k      n  k    n-k   independent generators       {    g  1   ,  …  ,    g   n  -  k      |     ∀  i   ∈   {  1  ,  …  ,   n  -  k   }    ,    g  i   ∈  𝒮    }   .     conditional-set    subscript  g  1   normal-…   subscript  g    n  k      formulae-sequence     for-all  i    1  normal-…    n  k        subscript  g  i   𝒮      \left\{g_{1},\ldots,g_{n-k}\ |\ \forall i\in\left\{1,\ldots,n-k\right\},\ g_{i%
 }\in\mathcal{S}\right\}.     The generators are independent in the sense that none of them is a product of any other two (up to a global phase ). The operators     g  1   ,  …  ,   g   n  -  k        subscript  g  1   normal-…   subscript  g    n  k      g_{1},\ldots,g_{n-k}   function in the same way as a parity check matrix does for a classical linear block code .  Stabilizer error-correction conditions  One of the fundamental notions in quantum error correction theory is that it suffices to correct a discrete error set with support in the Pauli group     Π  n     superscript  normal-Π  n    \Pi^{n}   . Suppose that the errors affecting an encoded quantum state are a subset   ℰ   ℰ   \mathcal{E}   of the Pauli group     Π  n     superscript  normal-Π  n    \Pi^{n}   :       ℰ  ⊂   Π  n    .      ℰ   superscript  normal-Π  n     \mathcal{E}\subset\Pi^{n}.     An error    E  ∈  ℰ      E  ℰ    E\in\mathcal{E}   that affects an encoded quantum state either commutes or anticommutes with any particular element   g   g   g   in   𝒮   𝒮   \mathcal{S}   . The error   E   E   E   is correctable if it anticommutes with an element   g   g   g   in   𝒮   𝒮   \mathcal{S}   . An anticommuting error   E   E   E   is detectable by measuring each element   g   g   g   in   𝒮   𝒮   \mathcal{S}   and computing a syndrome    𝐫   𝐫   \mathbf{r}   identifying   E   E   E   . The syndrome is a binary vector   𝐫   𝐫   \mathbf{r}   with length    n  -  k      n  k    n-k   whose elements identify whether the error   E   E   E   commutes or anticommutes with each    g  ∈  𝒮      g  𝒮    g\in\mathcal{S}   . An error   E   E   E   that commutes with every element   g   g   g   in   𝒮   𝒮   \mathcal{S}   is correctable if and only if it is in   𝒮   𝒮   \mathcal{S}   . It corrupts the encoded state if it commutes with every element of   𝒮   𝒮   \mathcal{S}   but does not lie in   𝒮   𝒮   \mathcal{S}   . So we compactly summarize the stabilizer error-correcting conditions: a stabilizer code can correct any errors     E  1   ,   E  2       subscript  E  1    subscript  E  2     E_{1},E_{2}   in   ℰ   ℰ   \mathcal{E}   if        E  1  †    E  2    ∉   𝒵   (  𝒮  )           superscript   subscript  E  1   normal-†    subscript  E  2      𝒵  𝒮     E_{1}^{\dagger}E_{2}\notin\mathcal{Z}\left(\mathcal{S}\right)     or        E  1  †    E  2    ∈  𝒮         superscript   subscript  E  1   normal-†    subscript  E  2    𝒮    E_{1}^{\dagger}E_{2}\in\mathcal{S}     where    𝒵   (  𝒮  )       𝒵  𝒮    \mathcal{Z}\left(\mathcal{S}\right)   is the centralizer of   𝒮   𝒮   \mathcal{S}   .  Relation between Pauli group and binary vectors  A simple but useful mapping exists between elements of   Π   normal-Π   \Pi   and the binary vector space      (   ℤ  2   )   2     superscript   subscript  ℤ  2   2    \left(\mathbb{Z}_{2}\right)^{2}   . This mapping gives a simplification of quantum error correction theory. It represents quantum codes with binary vectors and binary operations rather than with Pauli operators and matrix operations respectively.  We first give the mapping for the one-qubit case. Suppose    [  A  ]     delimited-[]  A    \left[A\right]   is a set of equivalence classes of an operator    A   A   A   that have the same phase :        [  A  ]   =   {   β   A    |    β  ∈  ℂ   ,    |  β  |   =  1    }    .       delimited-[]  A    conditional-set    β  A    formulae-sequence    β  ℂ       β   1       \left[A\right]=\left\{\beta A\ |\ \beta\in\mathbb{C},\ \left|\beta\right|=1%
 \right\}.     Let    [  Π  ]     delimited-[]  normal-Π    \left[\Pi\right]   be the set of phase-free Pauli operators where     [  Π  ]   =   {   [  A  ]   |   A  ∈  Π   }        delimited-[]  normal-Π    conditional-set   delimited-[]  A     A  normal-Π      \left[\Pi\right]=\left\{\left[A\right]\ |\ A\in\Pi\right\}   . Define the map    N  :     (   ℤ  2   )   2   →  Π      normal-:  N   normal-→   superscript   subscript  ℤ  2   2   normal-Π     N:\left(\mathbb{Z}_{2}\right)^{2}\rightarrow\Pi   as       00  →  I   ,    01  →  X   ,    11  →  Y   ,   10  →  Z        formulae-sequence   normal-→  00  I    formulae-sequence   normal-→  01  X    formulae-sequence   normal-→  11  Y    normal-→  10  Z       00\to I,\,\,01\to X,\,\,11\to Y,\,\,10\to Z     Suppose     u  ,  v   ∈    (   ℤ  2   )   2        u  v    superscript   subscript  ℤ  2   2     u,v\in\left(\mathbb{Z}_{2}\right)^{2}   . Let us employ the shorthand    u  =   (  z  |  x  )      fragments  u    fragments  normal-(  z  normal-|  x  normal-)     u=\left(z|x\right)   and    v  =   (   z  ′   |   x  ′   )      fragments  v    fragments  normal-(   superscript  z  normal-′   normal-|   superscript  x  normal-′   normal-)     v=\left(z^{\prime}|x^{\prime}\right)   where   z   z   z   ,   x   x   x   ,    z  ′     superscript  z  normal-′    z^{\prime}   ,     x  ′   ∈   ℤ  2        superscript  x  normal-′    subscript  ℤ  2     x^{\prime}\in\mathbb{Z}_{2}   . For example, suppose    u  =   (  0  |  1  )      fragments  u    fragments  normal-(  0  normal-|  1  normal-)     u=\left(0|1\right)   . Then     N   (  u  )    =  X        N  u   X    N\left(u\right)=X   . The map   N   N   N   induces an isomorphism      [  N  ]   :     (   ℤ  2   )   2   →   [  Π  ]       normal-:   delimited-[]  N    normal-→   superscript   subscript  ℤ  2   2    delimited-[]  normal-Π      \left[N\right]:\left(\mathbb{Z}_{2}\right)^{2}\rightarrow\left[\Pi\right]   because addition of vectors in     (   ℤ  2   )   2     superscript   subscript  ℤ  2   2    \left(\mathbb{Z}_{2}\right)^{2}   is equivalent to multiplication of Pauli operators up to a global phase:        [   N   (   u  +  v   )    ]   =    [   N   (  u  )    ]    [   N   (  v  )    ]     .       delimited-[]    N    u  v        delimited-[]    N  u     delimited-[]    N  v       \left[N\left(u+v\right)\right]=\left[N\left(u\right)\right]\left[N\left(v%
 \right)\right].     Let   ⊙   direct-product   \odot   denote the symplectic product between two elements     u  ,  v   ∈    (   ℤ  2   )   2        u  v    superscript   subscript  ℤ  2   2     u,v\in\left(\mathbb{Z}_{2}\right)^{2}   :        u  ⊙  v   ≡    z   x  ′    -   x   z  ′      .       direct-product  u  v       z   superscript  x  normal-′      x   superscript  z  normal-′       u\odot v\equiv zx^{\prime}-xz^{\prime}.   The symplectic product   ⊙   direct-product   \odot   gives the commutation relations of elements of   Π   normal-Π   \Pi   :        N   (  u  )   N   (  v  )    =     (   -  1   )    (   u  ⊙  v   )    N   (  v  )   N   (  u  )     .        N  u  N  v      superscript    1    direct-product  u  v    N  v  N  u     N\left(u\right)N\left(v\right)=\left(-1\right)^{\left(u\odot v\right)}N\left(v%
 \right)N\left(u\right).     The symplectic product and the mapping   N   N   N   thus give a useful way to phrase Pauli relations in terms of binary algebra . The extension of the above definitions and mapping   N   N   N   to multiple qubits is straightforward. Let    𝐀  =    A  1   ⊗  ⋯  ⊗   A  n        𝐀   tensor-product   subscript  A  1   normal-⋯   subscript  A  n      \mathbf{A}=A_{1}\otimes\cdots\otimes A_{n}   denote an arbitrary element of    Π  n     superscript  normal-Π  n    \Pi^{n}   . We can similarly define the phase-free   n   n   n   -qubit Pauli group     [   Π  n   ]   =   {   [  𝐀  ]   |   𝐀  ∈   Π  n    }        delimited-[]   superscript  normal-Π  n     conditional-set   delimited-[]  𝐀     𝐀   superscript  normal-Π  n       \left[\Pi^{n}\right]=\left\{\left[\mathbf{A}\right]\ |\ \mathbf{A}\in\Pi^{n}\right\}   where        [  𝐀  ]   =   {   β   𝐀    |    β  ∈  ℂ   ,    |  β  |   =  1    }    .       delimited-[]  𝐀    conditional-set    β  𝐀    formulae-sequence    β  ℂ       β   1       \left[\mathbf{A}\right]=\left\{\beta\mathbf{A}\ |\ \beta\in\mathbb{C},\ \left|%
 \beta\right|=1\right\}.     The group operation    ∗   normal-∗   \ast   for the above equivalence class is as follows:         [  𝐀  ]   ∗   [  𝐁  ]    ≡      [   A  1   ]   ∗   [   B  1   ]    ⊗  ⋯  ⊗   [   A  n   ]    ∗   [   B  n   ]    =    [    A  1    B  1    ]   ⊗  ⋯  ⊗   [    A  n    B  n    ]    =   [  𝐀𝐁  ]    .         normal-∗   delimited-[]  𝐀    delimited-[]  𝐁     normal-∗   tensor-product   normal-∗   delimited-[]   subscript  A  1     delimited-[]   subscript  B  1     normal-⋯   delimited-[]   subscript  A  n      delimited-[]   subscript  B  n           tensor-product   delimited-[]     subscript  A  1    subscript  B  1     normal-⋯   delimited-[]     subscript  A  n    subscript  B  n            delimited-[]  𝐀𝐁      \left[\mathbf{A}\right]\ast\left[\mathbf{B}\right]\equiv\left[A_{1}\right]\ast%
 \left[B_{1}\right]\otimes\cdots\otimes\left[A_{n}\right]\ast\left[B_{n}\right]%
 =\left[A_{1}B_{1}\right]\otimes\cdots\otimes\left[A_{n}B_{n}\right]=\left[%
 \mathbf{AB}\right].   The equivalence class    [   Π  n   ]     delimited-[]   superscript  normal-Π  n     \left[\Pi^{n}\right]   forms a commutative group under operation   ∗   normal-∗   \ast   . Consider the    2  n      2  n    2n   -dimensional vector space         (   ℤ  2   )    2  n    =   {   (  𝐳  ,  𝐱  )   :    𝐳  ,  𝐱   ∈    (   ℤ  2   )   n    }    .       superscript   subscript  ℤ  2     2  n     conditional-set   𝐳  𝐱      𝐳  𝐱    superscript   subscript  ℤ  2   n       \left(\mathbb{Z}_{2}\right)^{2n}=\left\{\left(\mathbf{z,x}\right):\mathbf{z},%
 \mathbf{x}\in\left(\mathbb{Z}_{2}\right)^{n}\right\}.   It forms the commutative group    (    (   ℤ  2   )    2  n    ,  +  )      superscript   subscript  ℤ  2     2  n       (\left(\mathbb{Z}_{2}\right)^{2n},+)   with operation   +     +   defined as binary vector addition. We employ the notation    𝐮  =   (  𝐳  |  𝐱  )   ,  𝐯  =   (   𝐳  ′   |   𝐱  ′   )      fragments  u    fragments  normal-(  z  normal-|  x  normal-)   normal-,  v    fragments  normal-(   superscript  𝐳  normal-′   normal-|   superscript  𝐱  normal-′   normal-)     \mathbf{u}=\left(\mathbf{z}|\mathbf{x}\right),\mathbf{v}=\left(\mathbf{z}^{%
 \prime}|\mathbf{x}^{\prime}\right)   to represent any vectors     𝐮  ,  𝐯   ∈    (   ℤ  2   )    2  n         𝐮  𝐯    superscript   subscript  ℤ  2     2  n      \mathbf{u,v}\in\left(\mathbb{Z}_{2}\right)^{2n}   respectively. Each vector   𝐳   𝐳   \mathbf{z}   and   𝐱   𝐱   \mathbf{x}   has elements    (   z  1   ,  …  ,   z  n   )      subscript  z  1   normal-…   subscript  z  n     \left(z_{1},\ldots,z_{n}\right)   and    (   x  1   ,  …  ,   x  n   )      subscript  x  1   normal-…   subscript  x  n     \left(x_{1},\ldots,x_{n}\right)   respectively with similar representations for    𝐳  ′     superscript  𝐳  normal-′    \mathbf{z}^{\prime}   and    𝐱  ′     superscript  𝐱  normal-′    \mathbf{x}^{\prime}   . The symplectic product    ⊙   direct-product   \odot   of   𝐮   𝐮   \mathbf{u}   and   𝐯   𝐯   \mathbf{v}   is        𝐮  ⊙  𝐯   ≡     ∑   i  =  1   n     z  i    x  i  ′     -    x  i    z  i  ′      ,       direct-product  𝐮  𝐯       superscript   subscript     i  1    n      subscript  z  i    superscript   subscript  x  i   normal-′        subscript  x  i    superscript   subscript  z  i   normal-′       \mathbf{u}\odot\mathbf{v\equiv}\sum_{i=1}^{n}z_{i}x_{i}^{\prime}-x_{i}z_{i}^{%
 \prime},   or        𝐮  ⊙  𝐯   ≡    ∑   i  =  1   n     u  i   ⊙   v  i      ,       direct-product  𝐮  𝐯     superscript   subscript     i  1    n    direct-product   subscript  u  i    subscript  v  i       \mathbf{u}\odot\mathbf{v\equiv}\sum_{i=1}^{n}u_{i}\odot v_{i},   where     u  i   =   (   z  i   |   x  i   )      fragments   subscript  u  i     fragments  normal-(   subscript  z  i   normal-|   subscript  x  i   normal-)     u_{i}=\left(z_{i}|x_{i}\right)   and     v  i   =   (   z  i  ′   |   x  i  ′   )      fragments   subscript  v  i     fragments  normal-(   superscript   subscript  z  i   normal-′   normal-|   superscript   subscript  x  i   normal-′   normal-)     v_{i}=\left(z_{i}^{\prime}|x_{i}^{\prime}\right)   . Let us define a map    𝐍  :     (   ℤ  2   )    2  n    →   Π  n       normal-:  𝐍   normal-→   superscript   subscript  ℤ  2     2  n     superscript  normal-Π  n      \mathbf{N}:\left(\mathbb{Z}_{2}\right)^{2n}\rightarrow\Pi^{n}   as follows:        𝐍   (  𝐮  )    ≡     N   (   u  1   )    ⊗  ⋯  ⊗  N    (   u  n   )     .        𝐍  𝐮      tensor-product    N   subscript  u  1    normal-⋯  N    subscript  u  n      \mathbf{N}\left(\mathbf{u}\right)\equiv N\left(u_{1}\right)\otimes\cdots%
 \otimes N\left(u_{n}\right).   Let         𝐗   (  𝐱  )    ≡    X   x  1    ⊗  ⋯  ⊗   X   x  n      ,    𝐙   (  𝐳  )    ≡    Z   z  1    ⊗  ⋯  ⊗   Z   z  n       ,     formulae-sequence      𝐗  𝐱    tensor-product   superscript  X   subscript  x  1    normal-⋯   superscript  X   subscript  x  n          𝐙  𝐳    tensor-product   superscript  Z   subscript  z  1    normal-⋯   superscript  Z   subscript  z  n        \mathbf{X}\left(\mathbf{x}\right)\equiv X^{x_{1}}\otimes\cdots\otimes X^{x_{n}%
 },\,\,\,\,\,\,\,\mathbf{Z}\left(\mathbf{z}\right)\equiv Z^{z_{1}}\otimes\cdots%
 \otimes Z^{z_{n}},   so that    𝐍   (  𝐮  )       𝐍  𝐮    \mathbf{N}\left(\mathbf{u}\right)   and    𝐙   (  𝐳  )   𝐗   (  𝐱  )       𝐙  𝐳  𝐗  𝐱    \mathbf{Z}\left(\mathbf{z}\right)\mathbf{X}\left(\mathbf{x}\right)   belong to the same equivalence class :        [   𝐍   (  𝐮  )    ]   =   [   𝐙   (  𝐳  )   𝐗   (  𝐱  )    ]    .       delimited-[]    𝐍  𝐮     delimited-[]    𝐙  𝐳  𝐗  𝐱      \left[\mathbf{N}\left(\mathbf{u}\right)\right]=\left[\mathbf{Z}\left(\mathbf{z%
 }\right)\mathbf{X}\left(\mathbf{x}\right)\right].   The map     [  𝐍  ]   :     (   ℤ  2   )    2  n    →   [   Π  n   ]       normal-:   delimited-[]  𝐍    normal-→   superscript   subscript  ℤ  2     2  n     delimited-[]   superscript  normal-Π  n       \left[\mathbf{N}\right]:\left(\mathbb{Z}_{2}\right)^{2n}\rightarrow\left[\Pi^{%
 n}\right]   is an isomorphism for the same reason given as the previous case:        [   𝐍   (   𝐮  +  𝐯   )    ]   =    [   𝐍   (  𝐮  )    ]    [   𝐍   (  𝐯  )    ]     ,       delimited-[]    𝐍    𝐮  𝐯        delimited-[]    𝐍  𝐮     delimited-[]    𝐍  𝐯       \left[\mathbf{N}\left(\mathbf{u+v}\right)\right]=\left[\mathbf{N}\left(\mathbf%
 {u}\right)\right]\left[\mathbf{N}\left(\mathbf{v}\right)\right],   where     𝐮  ,  𝐯   ∈    (   ℤ  2   )    2  n         𝐮  𝐯    superscript   subscript  ℤ  2     2  n      \mathbf{u,v}\in\left(\mathbb{Z}_{2}\right)^{2n}   . The symplectic product captures the commutation relations of any operators    𝐍   (  𝐮  )       𝐍  𝐮    \mathbf{N}\left(\mathbf{u}\right)   and    𝐍   (  𝐯  )       𝐍  𝐯    \mathbf{N}\left(\mathbf{v}\right)   :        𝐍   (  𝐮  )   𝐍   (  𝐯  )    =     (   -  1   )    (   𝐮  ⊙  𝐯   )    𝐍   (  𝐯  )   𝐍   (  𝐮  )     .        𝐍  𝐮  𝐍  𝐯      superscript    1    direct-product  𝐮  𝐯    𝐍  𝐯  𝐍  𝐮     \mathbf{N\left(\mathbf{u}\right)N}\left(\mathbf{v}\right)=\left(-1\right)^{%
 \left(\mathbf{u}\odot\mathbf{v}\right)}\mathbf{N}\left(\mathbf{v}\right)%
 \mathbf{N}\left(\mathbf{u}\right).   The above binary representation and symplectic algebra are useful in making the relation between classical linear error correction and quantum error correction more explicit.  By comparing quantum error correcting codes in this language to symplectic vector spaces , we can see the following. A symplectic subspace corresponds to a direct sum of Pauli algebras (i.e., encoded qubits), while an isotropic subspace corresponds to a set of stabilizers.  Example of a stabilizer code  An example of a stabilizer code is the five qubit    [  5  ,  1  ]     5  1    \left[5,1\right]   stabilizer code. It encodes    k  =  1      k  1    k=1   logical qubit into    n  =  5      n  5    n=5   physical qubits and protects against an arbitrary single-qubit error. Its stabilizer consists of     n  -  k   =  4        n  k   4    n-k=4   Pauli operators:         g  1     =    X    Z    Z    X    I       g  2     =    I    X    Z    Z    X       g  3     =    X    I    X    Z    Z       g  4     =    Z    X    I    X    Z         subscript  g  1    X  Z  Z  X  I     subscript  g  2    I  X  Z  Z  X     subscript  g  3    X  I  X  Z  Z     subscript  g  4    Z  X  I  X  Z     \begin{array}[c]{ccccccc}g_{1}&=&X&Z&Z&X&I\\
 g_{2}&=&I&X&Z&Z&X\\
 g_{3}&=&X&I&X&Z&Z\\
 g_{4}&=&Z&X&I&X&Z\end{array}   The above operators commute. Therefore the codespace is the simultaneous +1-eigenspace of the above operators. Suppose a single-qubit error occurs on the encoded quantum register. A single-qubit error is in the set    {   X  i   ,   Y  i   ,   Z  i   }      subscript  X  i    subscript  Y  i    subscript  Z  i     \left\{X_{i},Y_{i},Z_{i}\right\}   where    A  i     subscript  A  i    A_{i}   denotes a Pauli error on qubit   i   i   i   . It is straightforward to verify that any arbitrary single-qubit error has a unique syndrome. The receiver corrects any single-qubit error by identifying the syndrome and applying a corrective operation.  References   D. Gottesman, "Stabilizer codes and quantum error correction," quant-ph/9705052, Caltech Ph.D. thesis. http://arxiv.org/abs/quant-ph/9705052  P. W. Shor, “Scheme for reducing decoherence in quantum computer memory,” Phys. Rev. A, vol. 52, no. 4, pp. R2493–R2496, Oct 1995.  A. R. Calderbank and P. W. Shor, “Good quantum error-correcting codes exist,” Phys. Rev. A, vol. 54, no. 2, pp. 1098–1105, Aug 1996. Available at http://arxiv.org/abs/quant-ph/9512032  A. M. Steane, “Error correcting codes in quantum theory,” Phys. Rev. Lett., vol. 77, no. 5, pp. 793–797, Jul 1996.  A. Calderbank, E. Rains, P. Shor, and N. Sloane, “Quantum error correction via codes over GF(4),” IEEE Trans. Inf. Theory, vol. 44, pp. 1369–1387, 1998. Available at http://arxiv.org/abs/quant-ph/9608006   "  Category:Linear algebra  Category:Quantum computing   