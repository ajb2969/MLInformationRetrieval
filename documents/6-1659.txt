


Euler method




Euler method

 In mathematics and computational science, the Euler method is a SN-order numerical procedure for solving ordinary differential equations (ODEs) with a given initial value. It is the most basic explicit method for numerical integration of ordinary differential equations and is the simplest Runge–Kutta method. The Euler method is named after Leonhard Euler, who treated it in his book Institutionum calculi integralis (published 1768–70).1
The Euler method is a first-order method, which means that the local error (error per step) is proportional to the square of the step size, and the global error (error at a given time) is proportional to the step size. The Euler method often serves as the basis to construct more complex methods.
Informal geometrical description
Consider the problem of calculating the shape of an unknown curve which starts at a given point and satisfies a given differential equation. Here, a differential equation can be thought of as a formula by which the slope of the tangent line to the curve can be computed at any point on the curve, once the position of that point has been calculated.
The idea is that while the curve is initially unknown, its starting point, which we denote by 
 
 
 
  is known (see the picture on top right). Then, from the differential equation, the slope to the curve at 
 
 
 
  can be computed, and so, the tangent line.
Take a small step along that tangent line up to a point 
 
 
 
  Along this small step, the slope does not change too much, so 
 
 
 
  will be close to the curve. If we pretend that 
 
 
 
  is still on the curve, the same reasoning as for the point 
 
 
 
  above can be used. After several steps, a polygonal curve

 
  is computed. In general, this curve does not diverge too far from the original unknown curve, and the error between the two curves can be made small if the step size is small enough and the interval of computation is finite.2
Formulation of the method
Suppose that we want to approximate the solution of the initial value problem



Choose a value 
 
 
 
  for the size of every step and set 
 
 
 
 . Now, one step of the Euler method from 
 
 
 
  to 
 
 
 
  is3



The value of 
 
 
 
  is an approximation of the solution to the ODE at time 
 
 

 
 . The Euler method is explicit, i.e. the solution 
 
 
 
  is an explicit function of 
 
 
 
  for 
 
 
 
 .
While the Euler method integrates a first-order ODE, any ODE of order N can be represented as a first-order ODE: to treat the equation


 
 ,
we introduce auxiliary variables 
 
 
 
  and obtain the equivalent equation



This is a first-order system in the variable 
 
 
 
  and can be handled by Euler's method or, in fact, by any other scheme for first-order systems.4
Example
Given the initial value problem



we would like to use the Euler method to approximate 
 
 
 
 .5
=== Using step size equal to 1 (h = 1) ===
 The Euler method is



so first we must compute 
 
 
 
 . In this simple differential equation, the function 
 
 
 
  is defined by 
 
 
 
 . We have



By doing the above step, we have found the slope of the line that is tangent to the solution curve at the point 
 
 
 
 . Recall that the slope is defined as the change in 
 
 
 
  divided by the change in 
 
 
 
 , or 
 
 
 
 .
The next step is to multiply the above value by the step size 
 
 
 
 , which we take equal to one here:



Since the step size is the change in 
 
 
 
 , when we multiply the step size and the slope of the tangent, we get a change in 
 
 
 
  value. This value is then added to the initial 
 
 
 
  value to obtain the next value to be used for computations.



The above steps should be repeated to find 
 
 
 
 , 
 
 
 
  and 
 
 
 
 .



Due to the repetitive nature of this algorithm, it can be helpful to organize computations in a chart form, as seen below, to avoid making errors.






































0

1

0

1

1

1

2



1

2

1

2

1

2

4



2

4

2

4

1

4

8



3

8

3

8

1

8

16





The conclusion of this computation is that 
 
 
 
 . The exact solution of the differential equation is 
 
 
 
 , so 
 
 
 
 . Thus, the approximation of the Euler method is not very good in this case. However, as the figure shows, its behaviour is qualitatively right.
Using other step sizes
 As suggested in the introduction, the Euler method is more accurate if the step size 
 
 
 
  is smaller. The table below shows the result with different step sizes. The top row corresponds to the example in the previous section, and the second row is illustrated in the figure.






step size

result of Euler's method

error





1

16

38.598



0.25

35.53

19.07



0.1

45.26

9.34



0.05

49.56

5.04



0.025

51.98

2.62



0.0125

53.26

1.34





The error recorded in the last column of the table is the difference between the exact solution at 
 
 
 
  and the Euler approximation. In the bottom of the table, the step size is half the step size in the previous row, and the error is also approximately half the error in the previous row. This suggests that the error is roughly proportional to the step size, at least for fairly small values of the step size. This is true in general, also for other equations; see the section Global truncation error for more details.
Other methods, such as the midpoint method also illustrated in the figures, behave more favourably: the error of the midpoint method is roughly proportional to the square of the step size. For this reason, the Euler method is said to be a first-order method, while the midpoint method is second order.
We can extrapolate from the above table that the step size needed to get an answer that is correct to three decimal places is approximately 0.00001, meaning that we need 400,000 steps. This large number of steps entails a high computational cost. For this reason, people usually employ alternative, higher-order methods such as Runge–Kutta methods or linear multistep methods, especially if a high accuracy is desired.6
Derivation
The Euler method can be derived in a number of ways. Firstly, there is the geometrical description mentioned above.
Another possibility is to consider the Taylor expansion of the function 
 
 
 
  around 
 
 
 
 :



The differential equation states that 
 
 
 
 . If this is substituted in the Taylor expansion and the quadratic and higher-order terms are ignored, the Euler method arises.7 The Taylor expansion is used below to analyze the error committed by the Euler method, and it can be extended to produce Runge–Kutta methods.
A closely related derivation is to substitute the forward finite difference formula for the derivative,



in the differential equation 
 
 
 
 . Again, this yields the Euler method.8 A similar computation leads to the midpoint rule and the backward Euler method.
Finally, one can integrate the differential equation from 
 
 
 
  to 
 
 
 
  and apply the fundamental theorem of calculus to get:



Now approximate the integral by the left-hand rectangle method (with only one rectangle):



Combining both equations, one finds again the Euler method.9 This line of thought can be continued to arrive at various linear multistep methods.
Local truncation error
The local truncation error of the Euler method is error made in a single step. It is the difference between the numerical solution after one step, 
 
 
 
 , and the exact solution at time 
 
 
 
 . The numerical solution is given by



For the exact solution, we use the Taylor expansion mentioned in the section Derivation above:



The local truncation error (LTE) introduced by the Euler method is given by the difference between these equations:



This result is valid if 
 
 
 
  has a bounded third derivative.10
This shows that for small 
 
 
 
 , the local truncation error is approximately proportional to 
 
 
 
 . This makes the Euler method less accurate (for small 
 
 
 
 ) than other higher-order techniques such as Runge-Kutta methods and linear multistep methods, for which the local truncation error is proportial to a higher power of the step size.
A slightly different formulation for the local truncation error can be obtained by using the Lagrange form for the remainder term in Taylor's theorem. If 
 
 
 
  has a continuous second derivative, then there exists a 
 
 
 
  such that


11
In the above expressions for the error, the second derivative of the unknown exact solution 
 
 
 
  can be replaced by an expression involving the right-hand side of the differential equation. Indeed, it follows from the equation 
 
 
 
  that


12
Global truncation error
The global truncation error is the error at a fixed time 
 
 
 
 , after however many steps the methods needs to take to reach that time from the initial time. The global truncation error is the cumulative effect of the local truncation errors committed in each step.13 The number of steps is easily determined to be 
 
 
 
 , which is proportional to 
 
 
 
 , and the error committed in each step is proportional to 
 
 
 
  (see the previous section). Thus, it is to be expected that the global truncation error will be proportional to 
 
 
 
 .14
This intuitive reasoning can be made precise. If the solution 
 
 
 
  has a bounded second derivative and 
 
 
 
  is Lipschitz continuous in its second argument, then the global truncation error (GTE) is bounded by



where 
 
 
 
  is an upper bound on the second derivative of 
 
 
 
  on the given interval and 
 
 
 
  is the Lipschitz constant of 
 
 
 
 .15
The precise form of this bound of little practical importance, as in most cases the bound vastly overestimates the actual error committed by the Euler method.16 What is important is that it shows that the global truncation error is (approximately) proportional to 
 
 
 
 . For this reason, the Euler method is said to be first order.17
Numerical stability
 The Euler method can also be numerically unstable, especially for stiff equations, meaning that the numerical solution grows very large for equations where the exact solution does not. This can be illustrated using the linear equation


 
  The exact solution is 
 
 
 
 , which decays to zero as 
 
 
 
 . However, if the Euler method is applied to this equation with step size 
 
 
 
 , then the numerical solution is qualitatively wrong: it oscillates and grows (see the figure). This is what it means to be unstable. If a smaller step size is used, for instance 
 
 
 
 , then the numerical solution does decay to zero.
 If the Euler method is applied to the linear equation 
 
 
 
 , then the numerical solution is unstable if the product 
 
 
 
  is outside the region


 
  illustrated on the right. This region is called the (linear) instability region.18 In the example, 
 
 
 
  equals −2.3, so if 
 
 
 
  then 
 
 
 
  which is outside the stability region, and thus the numerical solution is unstable.
This limitation —along with its slow convergence of error with h— means that the Euler method is not often used, except as a simple example of numerical integration.
Rounding errors
The discussion up to now has ignored the consequences of rounding error. In step n of the Euler method, the rounding error is roughly of the magnitude εyn where ε is the machine epsilon. Assuming that the rounding errors are all of approximately the same size, the combined rounding error in N steps is roughly Nεy0 if all errors points in the same direction. Since the number of steps is inversely proportional to the step size h, the total rounding error is proportional to ε / h. In reality, however, it is extremely unlikely that all rounding errors point in the same direction. If instead it is assumed that the rounding errors are independent rounding variables, then the total rounding error is proportional to 
 
 
 
 .19
Thus, for extremely small values of the step size, the truncation error will be small but the effect of rounding error may be big. Most of the effect of rounding error can be easily avoided if compensated summation is used in the formula for the Euler method.20
Modifications and extensions
A simple modification of the Euler method which eliminates the stability problems noted in the previous section is the backward Euler method:


 
  This differs from the (standard, or forward) Euler method in that the function 
 
 
 
  is evaluated at the end point of the step, instead of the starting point. The backward Euler method is an implicit method, meaning that the formula for the backward Euler method has 
 
 
 
  on both sides, so when applying the backward Euler method we have to solve an equation. This makes the implementation more costly.
Other modifications of the Euler method that help with stability yield the exponential Euler method or the semi-implicit Euler method.
More complicated methods can achieve a higher order (and more accuracy). One possibility is to use more function evaluations. This is illustrated by the midpoint method which is already mentioned in this article:


 
  This leads to the family of Runge–Kutta methods.
The other possibility is to use more past values, as illustrated by the two-step Adams–Bashforth method:


 
  This leads to the family of linear multistep methods.
See also

Dynamic errors of numerical methods of ODE discretization
Gradient descent similarly uses finite steps, here to find minima of functions
List of Runge-Kutta methods
Linear multistep method
Numerical integration (for calculating definite integrals)
Numerical methods for ordinary differential equations

Notes
References


.

.

.

.


.

.

External links

Euler's Method for O.D.E.'s, by John H. Matthews, California State University at Fullerton.
On line calculator for Euler's method by www.mathstools.com
Euler method implementations in different languages by Rosetta Code

"
Category:Numerical differential equations Category:Runge–Kutta methods Category:First order methods



; ↩
; ↩
; ↩
; ↩
See also ↩
↩
; ↩
↩
↩
↩
↩
↩
↩
↩
; ↩
↩
↩
; ↩
↩
↩




