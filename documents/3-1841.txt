


Independent component analysis




Independent component analysis

In signal processing, independent component analysis (ICA) is a computational method for separating a multivariate signal into additive subcomponents. This is done by assuming that the subcomponents are non-Gaussian signals and that they are statistically independent from each other. ICA is a special case of blind source separation. A common example application is the "cocktail party problem" of listening in on one person's speech in a noisy room.
Introduction
Independent Component Analysis attempts to decompose a multivariate signal into independent non-gaussian signals. As an example, sound is usually a signal that is composed of the numerical addition, at each time t, of signals from several sources. The question then is whether it is possible to separate these contributing sources from the observed total signal. When the statistical independence assumption is correct, blind ICA separation of a mixed signal gives very good results. It is also used for signals that are not supposed to be generated by a mixing for analysis purposes. A simple application of ICA is the "cocktail party problem", where the underlying speech signals are separated from a sample data consisting of people talking simultaneously in a room. Usually the problem is simplified by assuming no time delays or echoes. An important note to consider is that if N sources are present, at least N observations (e.g. microphones) are needed to recover the original signals. This constitutes the square case (J = D, where D is the input dimension of the data and J is the dimension of the model). Other cases of underdetermined (J > D) and overdetermined (J 1
Defining component independence
ICA finds the independent components (also called factors, latent variables or sources) by maximizing the statistical independence of the estimated components. We may choose one of many ways to define independence, and this choice governs the form of the ICA algorithm. The two broadest definitions of independence for ICA are

Minimization of mutual information
Maximization of non-Gaussianity

The Minimization-of-Mutual information (MMI) family of ICA algorithms uses measures like Kullback-Leibler Divergence and maximum entropy. The non-Gaussianity family of ICA algorithms, motivated by the central limit theorem, uses kurtosis and negentropy.
Typical algorithms for ICA use centering (subtract the mean to create a zero mean signal), whitening (usually with the eigenvalue decomposition), and dimensionality reduction as preprocessing steps in order to simplify and reduce the complexity of the problem for the actual iterative algorithm. Whitening and dimension reduction can be achieved with principal component analysis or singular value decomposition. Whitening ensures that all dimensions are treated equally a priori before the algorithm is run. Well-known algorithms for ICA include infomax, FastICA, and JADE, but there are many others.
In general, ICA cannot identify the actual number of source signals, a uniquely correct ordering of the source signals, nor the proper scaling (including sign) of the source signals.
ICA is important to blind signal separation and has many practical applications. It is closely related to (or even a special case of) the search for a factorial code of the data, i.e., a new vector-valued representation of each data vector such that it gets uniquely encoded by the resulting code vector (loss-free coding), but the code components are statistically independent.
Mathematical definitions
Linear independent component analysis can be divided into noiseless and noisy cases, where noiseless ICA is a special case of noisy ICA. Nonlinear ICA should be considered as a separate case.
General definition
The data are represented by the random vector

 
  and the components as the random vector 
 
 
 
  The task is to transform the observed data 
 
 
 
  using a linear static transformation W as 
 
 
 
  into maximally independent components 
 
 
 
  measured by some function 
 
 
 
  of independence.
Generative model
Linear noiseless ICA
The components 
 
 
 
  of the observed random vector 
 
 
 
  are generated as a sum of the independent components 
 
 
 
 , 
 
 
 
 :



weighted by the mixing weights 
 
 
 
 .
The same generative model can be written in vectorial form as 
 
 
 
 , where the observed random vector 
 
 
 
  is represented by the basis vectors 
 
 
 
 . The basis vectors 
 
 
 
  form the columns of the mixing matrix 
 
 
 
  and the generative formula can be written as 
 
 
 
 , where 
 
 
 
 .
Given the model and realizations (samples) 
 
 
 
  of the random vector 
 
 
 
 , the task is to estimate both the mixing matrix 
 
 
 
  and the sources 
 
 
 
 . This is done by adaptively calculating the 
 
 
 
  vectors and setting up a cost function which either maximizes the nongaussianity of the calculated 
 
 
 
  or minimizes the mutual information. In some cases, a priori knowledge of the probability distributions of the sources can be used in the cost function.
The original sources 
 
 
 
  can be recovered by multiplying the observed signals 
 
 
 
  with the inverse of the mixing matrix 
 
 
 
 , also known as the unmixing matrix. Here it is assumed that the mixing matrix is square (
 
 
 
 ). If the number of basis vectors is greater than the dimensionality of the observed vectors, 
 
 
 
 , the task is overcomplete but is still solvable with the pseudo inverse.
Linear noisy ICA
With the added assumption of zero-mean and uncorrelated Gaussian noise 
 
 
 
 , the ICA model takes the form 
 
 
 
 .
Nonlinear ICA
The mixing of the sources does not need to be linear. Using a nonlinear mixing function 
 
 
 
  with parameters 
 
 
 
  the nonlinear ICA model is 
 
 
 
 .
Identifiability
The independent components are identifiable up to a permutation and scaling of the sources. This identifiability requires that:

At most one of the sources 
 
 
 
  is Gaussian,
The number of observed mixtures, 
 
 
 
 , must be at least as large as the number of estimated components 
 
 

 
 . It is equivalent to say that the mixing matrix 
 
 
 
  must be of full rank for its inverse to exist.

Binary independent component analysis
A special variant of ICA is Binary ICA in which both signal sources and monitors are in binary form and observations from monitors are disjunctive mixtures of binary independent sources. The problem was shown to have applications in many domains including medical diagnosis, multi-cluster assignment, network tomography and internet resource management.
Let 
 
 
 
  be the set of binary variables from 
 
 
 
  monitors and 
 
 
 
  be the set of binary variables from 
 
 
 
  sources. Source-monitor connections are represented by the (unknown) mixing matrix 
 
 
 
 , where 
 
 
 
  indicates that signal from the i-th source can be observed by the j-th monitor. The system works as follows: at any time, if a source 
 
 
 
  is active (
 
 
 
 ) and it is connected to the monitor 
 
 
 
  (
 
 
 
 ) then the monitor 
 
 
 
  will observe some activity (
 
 
 
 ). Formally we have:



where 
 
 
 
  is Boolean AND and 
 
 
 
  is Boolean OR. Note that noise is not explicitly modeled, rather, can be treated as independent sources.
The above problem can be heuristically solved 2 by assuming variables are continuous and running FastICA on binary observation data to get the mixing matrix 
 
 
 
  (real values), then apply round number techniques on 
 
 
 
  to obtain the binary values. This approach has been shown to produce a highly inaccurate result.
Another method is to use dynamic programming: recursively breaking the observation matrix 
 
 
 
  into its sub-matrices and run the inference algorithm on these sub-matrices. The key observation which leads to this algorithm is the sub-matrix 
 
 
 
  of 
 
 
 
  where 
 
 
 
  corresponds to the unbiased observation matrix of hidden components that do not have connection to the 
 
 
 
 -th monitor. Experimental results from 3 show that this approach is accurate under moderate noise levels.
The Generalized Binary ICA framework 4 introduces a broader problem formulation which does not necessitate any knowledge on the generative model. In other words, this method attempts to decompose a source into its independent components (as much as possible, and without losing any information) with no prior assumption on the way it was generated. Although this problem appears quite complex, it can be accurately solved with a branch and bound search tree algorithm or tightly upper bounded with a single multiplication of a matrix with a vector.
Methods for Blind Source Separation 5
Projection Pursuit 6
Signal mixtures tend to have Gaussian probability density functions, and source signals tend to have non-Gaussian probability density functions. Each source signal can be extracted from a set of signal mixtures by taking the inner product of a weight vector and those signal mixtures where this inner product provides an orthogonal projection of the signal mixtures. The remaining challenge is finding such a weight vector. One type of method for doing so is projection pursuit.7
Projection pursuit seek one projection at a time such that the extracted signal is as non-Gaussian as possible. This contrasts with ICA, which typically extracts M signals simultaneously from M signal mixtures, which requires estimating a M × M unmixing matrix. One practical advantage of projection pursuit over ICA is that fewer than M signals can be extracted if required, where each source signal is extracted from M signal mixtures using an M-element weight vector.
We can use kurtosis to recover the multiple source signal by finding the correct weight vectors with the use of projection pursuit.
The kurtosis of the probability density function of a signal, for a finite sample, is computed as



where 
 
 
 
  is the sample mean of 
 
 
 
 , the extracted signals. The constant 3 ensures that Gaussian signals have zero kurtosis, Super-Gaussian signals have positive kurtosis, and Sub-Gaussian signals have negative kurtosis. The denominator is the variance of 
 
 
 
 , and ensures that the measured kurtosis takes account of signal variance. The goal of projection pursuit is to maximize the kurtosis, and make the extracted signal as non-normal as possible.
Using kurtosis as a measure of non-normality, we can now examine how the kurtosis of a signal 
 
 
 
  extracted from a set of M mixtures 
 
 
 
  varies as the weight vector 
 
 
 
  is rotated around the origin. Given our assumption that each source signal 
 
 
 
  is super-gaussian we would expect:

the kurtosis of the extracted signal 
 
 
 
  to be maximal precisely when 
 
 
 
 .
the kurtosis of the extracted signal 
 
 
 
  to be maximal when 
 
 
 
  is orthogonal to the projected axes 
 
 
 
  or 
 
 
 
 , because we know the optimal weight vector should be orthogonal to a transformed axis 
 
 
 
  or 
 
 
 
 .

For multiple source mixture signals, we can use kurtosis and Gram-Schmidt Orthogonalizaton (GSO) to recover the signals. Given M signal mixtures in an M-dimensional space, GSO project these data points onto an (M-1)-dimensional space by using the weight vector. We can guarantee the independence of the extracted signals with the use of GSO.
In order to find the correct value of 
 
 
 
 , we can use gradient descent method. We first of all whiten the data, and transform 
 
 
 
  into a new mixture 
 
 
 
 , which has unit variance, and 
 
 
 
 . This process can be achieved by applying Singular value decomposition to 
 
 
 
 ,



Rescaling each vector 
 
 
 
 , and let 
 
 
 
 . The signal extracted by a weighted vector 
 
 
 
  is 
 
 
 
 . If the weight vector w has unit length, that is 
 
 
 
 , then the kurtosis can be written as:



The updating process for 
 
 
 
  is:


 
  where 
 
 
 
  is a small constant to guarantee that 
 
 
 
  converge to the optimal solution. After each update, we normalized 
 
 
 
 , and set 
 
 
 
 , and repeat the updating process till it converges. We can also use another algorithm to update the weight vector 
 
 
 
 .
Another approach is using Negentropy8 instead of kurtosis. Negentropy is a robust method for kurtosis, as kurtosis is very sensitive to outliers. The negentropy method are based on an important property of gaussian distribution : a gaussian variable has the largest entropy among all random variables of equal variance. This is also the reason why we want to find the most nongaussian variables. A simple proof can be found in wiki page Differential entropy.



y is a Gaussian random variable of the same covariance matrix as x



An approximation for negentropy is


 
  A proof can be found on page 131 in the book Independent Component Analysis written by Aapo Hyvärinen, Juha Karhunen, and Erkki Oja (They contribute great works to ICA)9 This approximation also suffers the same problem as kurtosis (sensitive to outliers). Other approaches were developed.10


 
  A choice of 
 
 
 
  and 
 
 
 
  are


 
  and 
 
 

Independent Component Analysis based on Infomax 11
ICA is essentially a multivariate, parallel version of projection pursuit. Whereas projection pursuit extracts a series of signals one at a time from a set of M signal mixtures, ICA extracts M signals in parallel. This tends to make ICA more robust than projection pursuit.
The projection pursuit method use Gram-Schmidt Orthogonalizaton to ensure the independence of the extracted signal, while ICA use infomax and maximum likelihood estimate to ensure the independence of the extracted signal. The Non-Normality of the extracted signal is achieved by assigning an appropriate model, or prior, for the signal.
The process of ICA based on infomax in short is: given a set of signal mixtures 
 
 
 
  and a set of identical independent model cumulative distribution functions(cdfs) 
 
 
 
 , we seek the unmixing matrix 
 
 
 
  which maximizes the joint entropy of the signals 
 
 
 
 , where 
 
 
 
  are the signals extracted by 
 
 
 
 . Given the optimal 
 
 
 
 , the signals 
 
 
 
  have maximum entropy and are therefore independent, which ensures that the extracted signals 
 
 
 
  are also independent. 
 
 
 
  is an invertible function, and is the signal model. Note that if the source signal model probability density function

 
  matches the probability density function of the extracted signal 
 
 
 
 , then maximizing the joint entropy of 
 
 
 
  also maximizes the amount of mutual information between 
 
 
 
  and 
 
 
 
 . For this reason, using entropy to extract independent signals is known as infomax.
Consider the entropy of the vector variable 
 
 
 
 , where 
 
 
 
  is the set of signals extracted by the unmixing matrix 
 
 
 
 . For a finite set of values sampled from a distribution with pdf 
 
 
 
 , the entropy of 
 
 
 
  can be estimated as:


 
  The joint pdf 
 
 
 
  can be shown to be related to the joint pdf 
 
 
 
  of the extracted signals by the multivariate form:



where 
 
 
 
  is the Jacobian matrix. We have 
 
 
 
 , and 
 
 
 
  is the pdf assumed for source signals 
 
 
 
 , therefore,


 
  therefore,



We know that when 
 
 
 
 , 
 
 
 
  is of uniform distribution, and 
 
 
 
  is maximized. Since


 
  where 
 
 
 
  is the absolute value of the determinant of the unmixing matix 
 
 
 
 . Therefore,


 
  so,


 
  since 
 
 
 
 , and maximizing 
 
 
 
  does not affect 
 
 
 
 , so we can maximize the function


 
  to achieve the independence of extracted signal.
If there are M marginal pdfs of the model joint pdf 
 
 
 
  are independent and use the commonly super-gaussian model pdf for the source signals 
 
 
 
 , then we have



In the sum, given an observed signal mixture 
 
 
 
 , the corresponding set of extracted signals 
 
 
 
  and source signal model 
 
 
 
 , we can find the optimal unmixing matrix 
 
 
 
 , and make the extracted signals independent and non-gaussian. Like the projection pursuit situation, we can use gradient descent method to find the optimal solution of the unmixing matrix.
Independent Component Analysis based on Maximum Likelihood Estimation 12
Maximum likelihood estimation (MLE) is a standard statistical tool for finding parameter values (e.g. the unmixing matrix 
 
 
 
 ) that provide the best fit of some data (e.g., the extracted signals 
 
 
 
 ) to a given a model (e.g., the assumed joint probability density function (pdf) 
 
 
 
  of source signals).
The ML “model” includes a specification of a pdf, which in this case is the pdf 
 
 
 
  of the unknown source signals 
 
 
 
 . Using ML ICA, the objective is to find an unmixing matrix that yields extracted signals 
 
 
 
  with a joint pdf as similar as possible to the joint pdf 
 
 
 
  of the unknown source signals 
 
 
 
 .
MLE is thus based on the assumption that if the model pdf 
 
 
 
  and the model parameters 
 
 
 
  are correct then a high probability should be obtained for the data 
 
 
 
  that were actually observed. Conversely, if 
 
 
 
  is far from the correct parameter values then a low probability of the observed data would be expected.
Using MLE, we call the probability of the observed data for a given set of model parameter values (e.g., a pdf 
 
 
 
  and a matrix 
 
 
 
 ) the likelihood of the model parameter values given the observed data.
We define a likelihood function 
 
 
 
  of 
 
 
 
 :



Thus, if we wish to find a 
 
 
 
  that is most likely to have generated the observed mixtures 
 
 
 
  from the unknown source signals 
 
 
 
  with pdf 
 
 
 
  then we need only find that 
 
 
 
  which maximizes the likelihood

 
 . The unmixing matrix that maximizes equation is known as the MLE of the optimal unmixing matrix.
It is common practice to use the log likelihood, because this is easier to evaluate. As the logarithm is a monotonic function, the 
 
 
 
  that maximizes the function 
 
 
 
  also maximizes its logarithm 
 
 
 
 . This allows us to take the logarithm of equation above, which yields the log likelihood function



If we substitute a commonly used high-Kurtosis model pdf for the source signals 
 
 
 
  then we have



This matrix 
 
 
 
  that maximizes this function is the maximum likelihood estimation.
History and background
The general framework for independent component analysis was introduced by Jeanny Herault and Christian Jutten in 1986 and was most clearly stated by Pierre Comon in 1994. In 1995, Tony Bell and Terry Sejnowski introduced a fast and efficient ICA algorithm based on infomax, a principle introduced by Ralph Linsker in 1987.
There are many algorithms available in the literature which do ICA. A largely used one, including in industrial applications, is the FastICA algorithm, developed by Aapo Hyvärinen and Erkki Oja, which uses the kurtosis as cost function. Other examples are rather related to blind source separation where a more general approach is used. For example, one can drop the independence assumption and separate mutually correlated signals, thus, statistically "dependent" signals. Sepp Hochreiter and Jürgen Schmidhuber showed how to obtain non-linear ICA or source separation as a by-product of regularization (1999). Their method does not require a priori knowledge about the number of independent sources..
Applications
ICA can be extended to analyze non-physical signals. For instance, ICA has been applied to discover discussion topics on a bag of news list archives.
Some ICA applications are listed below:13 

optical Imaging of neurons14
neuronal spike sorting15
face recognition16
modeling receptive fields of primary visual neurons17
predicting stock market prices18
mobile phone communications 19
color based detection of the ripeness of tomatoes20
removing artifacts, such as eye blinks, from EEG data.21

See also

Blind deconvolution
Factor analysis
Hilbert spectrum
Image processing
Multilinear PCA
Multilinear subspace learning
Non-negative matrix factorization (NMF)
Nonlinear dimensionality reduction
Projection pursuit
Varimax rotation

Notes
References

Comon, Pierre (1994): "Independent Component Analysis: a new concept?", Signal Processing, 36(3):287–314 (The original paper describing the concept of ICA)
Hyvärinen, A.; Karhunen, J.; Oja, E. (2001): Independent Component Analysis, New York: Wiley, ISBN 978-0-471-40540-5 ( Introductory chapter )
Hyvärinen, A.; Oja, E. (2000): "Independent Component Analysis: Algorithms and Application", Neural Networks, 13(4-5):411-430. (Technical but pedagogical introduction).
Comon, P.; Jutten C., (2010): Handbook of Blind Source Separation, Independent Component Analysis and Applications. Academic Press, Oxford UK. ISBN 978-0-12-374726-6
Lee, T.-W. (1998): Independent component analysis: Theory and applications, Boston, Mass: Kluwer Academic Publishers, ISBN 0-7923-8261-7
Acharyya, Ranjan (2008): A New Approach for Blind Source Separation of Convolutive Sources - Wavelet Based Separation Using Shrinkage Function ISBN 3-639-07797-0 ISBN 978-3639077971 (this book focuses on unsupervised learning with Blind Source Separation)

External links

What is independent component analysis? by Aapo Hyvärinen
Independent Component Analysis: A Tutorial by Aapo Hyvärinen
A Tutorial on Independent Component Analysis
FastICA as a package for Matlab, in R language, C++
ICALAB Toolboxes for Matlab, developed at RIKEN
High Performance Signal Analysis Toolkit provides C++ implementations of FastICA and Infomax
ICA toolbox Matlab tools for ICA with Bell-Sejnowski, Molgedey-Schuster and mean field ICA. Developed at DTU.
Demonstration of the cocktail party problem
EEGLAB Toolbox ICA of EEG for Matlab, developed at UCSD.
FMRLAB Toolbox ICA of fMRI for Matlab, developed at UCSD
Discussion of ICA used in a biomedical shape-representation context
FastICA, CuBICA, JADE and TDSEP algorithm for Python and more...
Group ICA Toolbox and Fusion ICA Toolbox
Tutorial: Using ICA for cleaning EEG signals

"
Category:Signal processing Category:Data analysis Category:Time series analysis Category:Statistical models Category:Multivariate statistics



↩
Johan Himbergand Aapo Hyvärinen, Independent Component Analysis For Binary Data: An Experimental Study, Proc. Int. Workshop on Independent Component Analysis and Blind Signal Separation (ICA2001), San Diego, California, 2001.↩
Huy Nguyen and Rong Zheng, Binary Independent Component Analysis With or Mixtures, IEEE Transactions on Signal Processing, Vol. 59, Issue 7. (July 2011), pp. 3168–3181.↩
↩
James V. Stone(2004); "Independent Component Analysis: A Tutorial Introduction", The MIT Press Cambridge, Massachusetts, London, England; ISBN 0-262-69315-1↩

Kruskal, JB. 1969; "Toward a practical method which helps uncover the structure of a set of observations by finding the line transformation which optimizes a new "index of condensation", Pages 427–440 of: Milton, RC, & Nelder, JA (eds), Statistical computation; New York, Academic Press↩
↩
↩
↩
James V. Stone(2004); "Independent Component Analysis: A Tutorial Introduction", The MIT Press Cambridge, Massachusetts, London, England; ISBN 0-262-69315-1↩


↩
↩
↩
↩
↩
↩
↩
↩




