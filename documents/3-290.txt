   Moore machine      Moore machine   In the theory of computation , a Moore machine is a finite-state machine whose output values are determined solely by its current state . This is in contrast to a Mealy machine , whose output values are determined both by its current state and by the values of its inputs. The Moore machine is named after Edward F. Moore , who presented the concept in a 1956 paper, “ Gedanken-experiments on Sequential Machines.” 1  Formal definition  A Moore machine can be defined as a 6-tuple     (  S  ,   S  0   ,  Σ  ,  Λ  ,  T  ,  G  )     S   subscript  S  0   normal-Σ  normal-Λ  T  G    (S,S_{0},\Sigma,\Lambda,T,G)   consisting of the following:   a finite set of states    S   S   S     a start state (also called initial state)    S  0     subscript  S  0    S_{0}   which is an element of   S   S   S     a finite set called the input alphabet    Σ   normal-Σ   \Sigma     a finite set called the output alphabet    Λ   normal-Λ   \Lambda     a transition function     T  :    S  ×  Σ   →  S      normal-:  T   normal-→    S  normal-Σ   S     T:S\times\Sigma\rightarrow S   mapping a state and the input alphabet to the next state  an output function    G  :   S  →  Λ      normal-:  G   normal-→  S  normal-Λ     G:S\rightarrow\Lambda   mapping each state to the output alphabet   A Moore machine can be regarded as a restricted type of finite state transducer .  Visual representation      States   a   b   output       q0   q0   q2   1     q1   q1   q1   0     q2   q1   q0   1     Table  State transition table is a table showing relation between an input and a state.  Diagram  The state diagram for a Moore machine or Moore diagram is a diagram that associates an output value with each state. Moore machine is output producer  Relationship with Mealy machines  The difference between Moore machines and Mealy machines is that in the latter, the output of a transition is determined by the combination of current state and current input (    S  ×  Σ      S  normal-Σ    S\times\Sigma   as the input to   G   G   G   ), as opposed to just the current state (   S   S   S   as the input to   G   G   G   ). When represented as a state diagram ,   for a Moore machine, each node (state) is labeled with an output value;  for a Mealy machine, each arc (transition) is labeled with an output value.   Every Moore machine   M   M   M   is equivalent to the Mealy machine with the same states and transitions and the output function     G   (  s  ,  σ  )    →    G  M    (  s  )       normal-→    G   s  σ       subscript  G  M   s     G(s,\sigma)\rightarrow G_{M}(s)   , which takes each state-input pair    (  s  ,  σ  )     s  σ    (s,\sigma)   and yields     G  M    (  s  )        subscript  G  M   s    G_{M}(s)   , where    G  M     subscript  G  M    G_{M}   is   M   M   M   's output function.  However, not every Mealy machine can be converted to an equivalent Moore machine. Some can be converted only to an almost equivalent Moore machine, with outputs shifted in time. This is due to the way that state labels are paired with transition labels to form the input/output pairs. Consider a transition     s  i   →   s  j      normal-→   subscript  s  i    subscript  s  j     s_{i}\rightarrow s_{j}   from state    s  i     subscript  s  i    s_{i}   to state    s  j     subscript  s  j    s_{j}   . The input causing the transition     s  i   →   s  j      normal-→   subscript  s  i    subscript  s  j     s_{i}\rightarrow s_{j}   labels the edge    (   s  i   ,   s  j   )      subscript  s  i    subscript  s  j     (s_{i},s_{j})   . The output corresponding to that input, is the label of state    s  i     subscript  s  i    s_{i}   . 2 Notice that this is the source state of the transition. So for each input, the output is already fixed before the input is received, and depends solely on the present state. This is the original definition by E. Moore. It is a common mistake to use the label of state    s  j     subscript  s  j    s_{j}   as output for the transition     s  i   →   s  j      normal-→   subscript  s  i    subscript  s  j     s_{i}\rightarrow s_{j}   .  Examples  Types according to number of inputs/outputs.  Simple  Simple Moore machines have one input and one output:   edge detector using XOR  binary adding machine  clocked sequential systems (a restricted form of Moore machine where the state changes only when the global clock signal changes)   Most digital electronic systems are designed as clocked sequential systems . Clocked sequential systems are a restricted form of Moore machine where the state changes only when the global clock signal changes. Typically the current state is stored in flip-flops , and a global clock signal is connected to the "clock" input of the flip-flops. Clocked sequential systems are one way to solve metastability problems. A typical electronic Moore machine includes a combinational logic chain to decode the current state into the outputs (lambda). The instant the current state changes, those changes ripple through that chain, and almost instantaneously the output gets updated. There are design techniques to ensure that no glitches occur on the outputs during that brief period while those changes are rippling through the chain, but most systems are designed so that glitches during that brief transition time are ignored or are irrelevant. The outputs then stay the same indefinitely ( LEDs stay bright, power stays connected to the motors, solenoids stay energized, etc.), until the Moore machine changes state again.  (Figure)  Moore machine in combinational logic   Complex  More complex Moore machines can have multiple inputs as well as multiple outputs.  Gedanken-experiments  In Moore's paper " Gedanken-experiments on Sequential Machines", 3 the    (  n  ;  m  ;  p  )     n  m  p    (n;m;p)   automata (or machines)   S   S   S   are defined as having   n   n   n   states,   m   m   m   input symbols and   p   p   p   output symbols. Nine theorems are proved about the structure of   S   S   S   , and experiments with   S   S   S   . Later, "   S   S   S   machines" became known as "Moore machines".  At the end of the paper, in Section "Further problems", the following task is stated:   Another directly following problem is the improvement of the bounds given at the theorems 8 and 9.   Moore's Theorem 8 is formulated as:   Given an arbitrary    (  n  ;  m  ;  p  )     n  m  p    (n;m;p)   machine   S   S   S   , such that every two of its states are distinguishable from one another, then there exists an experiment of length     n   (   n  -  1   )    2        n    n  1    2    \tfrac{n(n-1)}{2}   which determines the state of   S   S   S   at the end of the experiment.   In 1957, A. A. Karatsuba proved the following two theorems, which completely solved Moore's problem on the improvement of the bounds of the experiment length of his "Theorem 8".   Theorem A. If   S   S   S   is an    (  n  ;  m  ;  p  )     n  m  p    (n;m;p)   machine, such that every two of its states are distinguishable from one another, then there exists a branched experiment of length at most       (   n  -  1   )    (   n  -  2   )    2   +  1            n  1     n  2    2   1    \tfrac{(n-1)(n-2)}{2}+1   through which one may determine the state of   S   S   S   at the end of the experiment.    Theorem B. There exists an    (  n  ;  m  ;  p  )     n  m  p    (n;m;p)   machine, every two states of which are distinguishable from one another, such that the length of the shortest experiments establishing the state of the machine at the end of the experiment is equal to       (   n  -  1   )    (   n  -  2   )    2   +  1            n  1     n  2    2   1    \tfrac{(n-1)(n-2)}{2}+1   .   Theorems A and B were used for the basis of the course work of a student of the fourth year, A. A. Karatsuba, "On a problem from the automata theory", which was distinguished by testimonial reference at the competition of student works of the faculty of mechanics and mathematics of Moscow Lomonosow State University in 1958. The paper by Karatsuba was given to the journal Uspekhi Mat. Nauk on 17 December 1958 and was published there in June 1960. 4  Until the present day (2011), Karatsuba's result on the length of experiments is the only exact nonlinear result, both in automata theory, and in similar problems of computational complexity theory.  See also   Synchronous circuit  Mealy machine  Algorithmic state machine   References  Further reading    Moore E. F. Gedanken-experiments on Sequential Machines. Automata Studies, Annals of Mathematical Studies, 34, 129–153. Princeton University Press, Princeton, N.J.(1956).  Karatsuba A. A. Solution of one problem from the theory of finite automata. Usp. Mat. Nauk, 15:3, 157–159 (1960).  Karacuba A. A. Experimente mit Automaten (German) Elektron. Informationsverarb. Kybernetik, 11, 611–612 (1975).  Karatsuba A. A. List of research works   its length is n+1/2."  Category:Models of computation  Category:Automata theory  Category:Digital electronics     ↩  ↩   ↩     