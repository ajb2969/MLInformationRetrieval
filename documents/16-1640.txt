


Evidence-based subjective logic




Evidence-based subjective logic

Evidence-based subjective logic (EBSL) is a variant 1 of subjective logic in which the transitivity of opinions (discounting) is handled by applying weights to the evidence underlying the opinions. Subjective Logic is based on Dempster–Shafer belief theory. The discounting rule in EBSL makes it possible to handle arbitrary trust networks.
Relation between evidence and opinions
Consider a proposition P. Let p be the amount of evidence supporting P, and n the amount of evidence supporting ¬P. We write the evidence as a vector (p, n). Let c be a positive constant representing a "unit" of evidence. An opinion (b, d, u) is formed on the basis of the evidence (p, n). There is a one-to-one mapping between the opinion and the evidence,



In the original literature on subjective logic the constant was set to c = 2. The mapping (1) is the unique solution of the following set of constraints,2

b/d = p/n.
b + d + u = 1.
p + n = 0 implies u = 1.


 
  implies 
 
 
 
 .

Alternatively, (1) can be derived from an analysis of a posteriori probability distributions3 (beta distributions).
 There are three "corner points" in opinion space: the full Belief B = (1,0,0), the full Disbelief D = (0,1,0), and full Uncertainty U = (0,0,1). Opinions on the line between B and D (including B and D) are called "dogmatic opinions". They have zero uncertainty, which is achievable only with an infinite amount of evidence. Dogmatic opinions are often excluded from the algebra.
Consensus / fusion
The consensus operation combines two opinions about the same predicate into one opinion by piling up the evidence. Let x = (xb,xd,xu) and y = (yb,yd,yu) be the opinions that are to be fused, and z = x ⊕ y the result. We denote their evidence vectors as (px, nx), (py, ny) and (pz, nz) respectively. In evidence space the consensus is straightforwardly defined as



In opinion space this yields



which using (1) can be rewritten as



The consensus rule can only be applied if the evidence underlying x and y is independent, otherwise double counting of evidence occurs.
Discounting
Old discounting rule (⊗)
The traditional discounting operation in Subjective Logic is denoted as ⊗ and defined as



 This operation suffers from a number of serious problems, e.g.

There is no natural interpretation of the evidence underlying x ⊗ y when (1) is applied.


Consider the following. Alice has trust x in Bob. Bob gathers two independent evidence vectors, (p1, n1) and (p2, n2), about some proposition P.
  Scenario I: Bob forms two indendent opinions, y1 and y2, based on the evidence. He sends y1 and y2 to Alice. Alice forms opinion 
 
 
 
  about P.
  Scenario II: Bob combines his evidence and forms opinion 
 
 
 
 . He then sends 
 
 
 
  to Alice. Alice forms opinion 
 
 
 
  about P.
  It is obvious that these scenarios should yield the same result for Alice. Yet the traditional discounting rule gives:

x\otimes(y_1\oplus y_2)\neq (x\otimes y_1)\oplus(x\otimes y_2).  These problems make it very difficult to handle trust networks in subjective logic.
The product of a scalar and an opinion
Let x = (xb, xd, xu) be an opinion based on evidence (p, n). Let λ ≥ 0 be a scalar. The product λ ⋅ x is defined4 as (λ p, λ n) in evidence space, which corresponds to



in opinion space.
The discounting rule (☒) in EBSL
Let x and y be opinions. Let g be a mapping from opinion space to [0,1] satisfying g(B) = 1 and g(D) = 0.
In EBSL the discounting of y through x is denoted as x ☒ y and defined as5



with the "dot" product as specified in (3).
The function g can be chosen at will, depending on the context. The ☒ rule has a very simple interpretation in evidence space: Due to the disbelief and uncertainty present in x, only a fraction g(x) of the evidence in y survives.
The ☒ operation avoids all the inconsistencies of the ⊗ operation. The following properties hold,








 
 .

There is no associativity, i.e. 
 
 
 
 , in contrast to the ⊗ operation. This is not a problem, since the flow if information in a trust network has a well defined direction.
Also, we have



Computation of opinions in arbitrary trust networks
EBSL makes it possible to compute trust values even when the graph connecting the users in the trust network is complicated. This makes EBSL interesting e.g. for Reputation systems
Let Aij be the opinion that user i has about the trustworthiness of user j, based on direct evidence, e.g. direct interactions between i and j. We set Aii = U. Let every user publish these direct opinions in a reliable way; the matrix A is public and its integrity is guaranteed.
 Based on all the available trust information, direct as well as indirect, what should a user conclude about the trustworthiness of all the other users? In general this is a nontrivial problem because of the complicated connection graphs, in which loops may occur. The problem is to find a "reputation" matrix R that consistently combines the direct and indirect evidence. In EBSL the following "self-consistent" (self-containing) equation must be satisfied6 by R,






Here the "Σ" stands for ⊕ operations. The diagonal is set to full belief since everybody trusts himself implicitly, independent of other users' opinions.
 User i forms an opinion about j by combining his direct opinion Aij with other users' opinions Akj. The indirect evidence is weighted with a scalar that depends on the reputation of the intermediary: g(Rik).
Equation (5) can be written compactly in matrix form,



 Here 
 
 
 
  is the identity matrix, and summation should be executed as ⊕. Eq.(6) is a fixed point equation similar to the case of Markov chains. It can be solved recursively. Let X be a square matrix with the same dimensions as A. Define a function f as


 
 .
Pick a starting matrix 
 
 
 
  and repeatedly apply f until the result does not change any more, i.e. a fixed point 
 
 
 
  is reached. Independent of the choice of 
 
 
 
 , after one iteration the diagonal is B1 and stays B1 in all further iterations.
 If Eq.(6) were an ordinary matrix equation 
 
 
 
  for real-valued (or complex) Aij, it would have solution 
 
 
 
 . However, the opinion algebra does not allow for such a simple expression. Instead we have
         f2(X0) = B1 ⊕ ((B1 ⊕ (X0 ☒ A)) ☒ A)
         f3(X0) = B1 ⊕ ((B1 ⊕ ( B1 ⊕ (X0 ☒ A) ☒ A)) ☒ A)
         ...
which in general cannot be simplified.
References
"
Category:Probability theory Category:Non-classical logic



B. Skoric, S.J.A. de Hoogh, N. Zannone. Flow-based reputation with uncertainty: Evidence-Based Subjective Logic. 2014. http://arxiv.org/abs/1402.3319↩

A. Jøsang. A Logic for Uncertain Probabilities. International Journal of Uncertainty, Fuzziness and Knowledge-Based Systems. 9(3), pp. 279–311, June 2001. PDF↩







