


PageRank




PageRank

 table.sourceCode, tr.sourceCode, td.lineNumbers, td.sourceCode {
   margin: 0; padding: 0; vertical-align: baseline; border: none; }
 <style>
 table.sourceCode { width: 100%; line-height: 100%; }
 td.lineNumbers { text-align: right; padding-right: 4px; padding-left: 4px; color: #aaaaaa; border-right: 1px solid #aaaaaa; }
 td.sourceCode { padding-left: 5px; }
 code > span.kw { color: #007020; font-weight: bold; } /* Keyword */
 code > span.dt { color: #902000; } /* DataType */
 code > span.dv { color: #40a070; } /* DecVal */
 code > span.bn { color: #40a070; } /* BaseN */
 code > span.fl { color: #40a070; } /* Float */
 code > span.ch { color: #4070a0; } /* Char */
 code > span.st { color: #4070a0; } /* String */
 code > span.co { color: #60a0b0; font-style: italic; } /* Comment */
 code > span.ot { color: #007020; } /* Other */
 code > span.al { color: #ff0000; font-weight: bold; } /* Alert */
 code > span.fu { color: #06287e; } /* Function */
 code > span.er { color: #ff0000; font-weight: bold; } /* Error */
 code > span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */
 code > span.cn { color: #880000; } /* Constant */
 code > span.sc { color: #4070a0; } /* SpecialChar */
 code > span.vs { color: #4070a0; } /* VerbatimString */
 code > span.ss { color: #bb6688; } /* SpecialString */
 code > span.im { } /* Import */
 code > span.va { color: #19177c; } /* Variable */
 code > span.cf { color: #007020; font-weight: bold; } /* ControlFlow */
 code > span.op { color: #666666; } /* Operator */
 code > span.bu { } /* BuiltIn */
 code > span.ex { } /* Extension */
 code > span.pp { color: #bc7a00; } /* Preprocessor */
 code > span.at { color: #7d9029; } /* Attribute */
 code > span.do { color: #ba2121; font-style: italic; } /* Documentation */
 code > span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */
 code > span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */
 code > span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */
   



(Figure)
Mathematical PageRanks for a simple network, expressed as percentages. (Google uses a logarithmic scale.) Page C has a higher PageRank than Page E, even though there are fewer links to C; the one link to C comes from an important page and hence is of high value. If web surfers who start on a random page have an 85% likelihood of choosing a random link from the page they are currently visiting, and a 15% likelihood of jumping to a page chosen at random from the entire web, they will reach Page E 8.1% of the time. (The 15% likelihood of jumping to an arbitrary page corresponds to a damping factor of 85%.) Without damping, all web surfers would eventually end up on Pages A, B, or C, and all other pages would have PageRank zero. In the presence of damping, Page A effectively links to all pages in the web, even though it has no outgoing links of its own.

PageRank is an algorithm used by Google Search to rank websites in their search engine results. PageRank was named after Larry Page,1 one of the founders of Google. PageRank is a way of measuring the importance of website pages. According to Google:  It is not the only algorithm used by Google to order search engine results, but it is the first algorithm that was used by the company, and it is the best-known.23
Description
(Figure)
Cartoon illustrating the basic principle of PageRank. The size of each face is proportional to the total size of the other faces which are pointing to it.

PageRank is a link analysis algorithm and it assigns a numerical weighting to each element of a hyperlinked set of documents, such as the World Wide Web, with the purpose of "measuring" its relative importance within the set. The algorithm may be applied to any collection of entities with reciprocal quotations and references. The numerical weight that it assigns to any given element E is referred to as the PageRank of E and denoted by 
 
 
 
  Other factors like Author Rank can contribute to the importance of an entity.
A PageRank results from a mathematical algorithm based on the webgraph, created by all World Wide Web pages as nodes and hyperlinks as edges, taking into consideration authority hubs such as cnn.com or usa.gov. The rank value indicates an importance of a particular page. A hyperlink to a page counts as a vote of support. The PageRank of a page is defined recursively and depends on the number and PageRank metric of all pages that link to it ("incoming links"). A page that is linked to by many pages with high PageRank receives a high rank itself.
Numerous academic papers concerning PageRank have been published since Page and Brin's original paper.4 In practice, the PageRank concept may be vulnerable to manipulation. Research has been conducted into identifying falsely influenced PageRank rankings. The goal is to find an effective means of ignoring links from documents with falsely influenced PageRank.5
Other link-based ranking algorithms for Web pages include the HITS algorithm invented by Jon Kleinberg (used by Teoma and now Ask.com), the IBM CLEVER project, the TrustRank algorithm and the hummingbird algorithm.
History
The idea of formulating a link analysis problem as an eigenvalue problem was probably first suggested in 1976 by Gabriel Pinski and Francis Narin, who worked on scientometrics ranking scientific journals.6 PageRank was developed at Stanford University by Larry Page and Sergey Brin in 19967 as part of a research project about a new kind of search engine.8 Sergey Brin had the idea that information on the web could be ordered in a hierarchy by "link popularity": a page is ranked higher as there are more links to it.9 It was co-authored by Rajeev Motwani and Terry Winograd. The first paper about the project, describing PageRank and the initial prototype of the Google search engine, was published in 1998:10 shortly after, Page and Brin founded Google Inc., the company behind the Google search engine. While just one of many factors that determine the ranking of Google search results, PageRank continues to provide the basis for all of Google's web search tools.11
The name "PageRank" plays off of the name of developer Larry Page, as well as the concept of a web page.12 The word is a trademark of Google, and the PageRank process has been patented (). However, the patent is assigned to Stanford University and not to Google. Google has exclusive license rights on the patent from Stanford University. The university received 1.8 million shares of Google in exchange for use of the patent; the shares were sold in 2005 for $336 million.1314
PageRank was influenced by citation analysis, early developed by Eugene Garfield in the 1950s at the University of Pennsylvania, and by Hyper Search, developed by Massimo Marchiori at the University of Padua. In the same year PageRank was introduced (1998), Jon Kleinberg published his important work on HITS. Google's founders cite Garfield, Marchiori, and Kleinberg in their original papers.1516
A small search engine called "RankDex" from IDD Information Services designed by Robin Li was, since 1996, already exploring a similar strategy for site-scoring and page ranking.17 The technology in RankDex would be patented by 199918 and used later when Li founded Baidu in China.1920 Li's work would be referenced by some of Larry Page's U.S. patents for his Google search methods.21
Algorithm
The PageRank algorithm outputs a probability distribution used to represent the likelihood that a person randomly clicking on links will arrive at any particular page. PageRank can be calculated for collections of documents of any size. It is assumed in several research papers that the distribution is evenly divided among all documents in the collection at the beginning of the computational process. The PageRank computations require several passes, called "iterations", through the collection to adjust approximate PageRank values to more closely reflect the theoretical true value.
A probability is expressed as a numeric value between 0 and 1. A 0.5 probability is commonly expressed as a "50% chance" of something happening. Hence, a PageRank of 0.5 means there is a 50% chance that a person clicking on a random link will be directed to the document with the 0.5 PageRank.
Simplified algorithm
Assume a small universe of four web pages: A, B, C and D. Links from a page to itself, or multiple outbound links from one single page to another single page, are ignored. PageRank is initialized to the same value for all pages. In the original form of PageRank, the sum of PageRank over all pages was the total number of pages on the web at that time, so each page in this example would have an initial value of 1. However, later versions of PageRank, and the remainder of this section, assume a probability distribution between 0 and 1. Hence the initial value for each page is 0.25.
The PageRank transferred from a given page to the targets of its outbound links upon the next iteration is divided equally among all outbound links.
If the only links in the system were from pages B, C, and D to A, each link would transfer 0.25 PageRank to A upon the next iteration, for a total of 0.75.



Suppose instead that page B had a link to pages C and A, page C had a link to page A, and page D had links to all three pages. Thus, upon the first iteration, page B would transfer half of its existing value, or 0.125, to page A and the other half, or 0.125, to page C. Page C would transfer all of its existing value, 0.25, to the only page it links to, A. Since D had three outbound links, it would transfer one third of its existing value, or approximately 0.083, to A. At the completion of this iteration, page A will have a PageRank of 0.458.



In other words, the PageRank conferred by an outbound link is equal to the document's own PageRank score divided by the number of outbound links L( ).



In the general case, the PageRank value for any page u can be expressed as:


 
 ,
i.e. the PageRank value for a page u is dependent on the PageRank values for each page v contained in the set Bu (the set containing all pages linking to page u), divided by the number L(v) of links from page v.
Damping factor
The PageRank theory holds that an imaginary surfer who is randomly clicking on links will eventually stop clicking. The probability, at any step, that the person will continue is a damping factor d. Various studies have tested different damping factors, but it is generally assumed that the damping factor will be set around 0.85.22
The damping factor is subtracted from 1 (and in some variations of the algorithm, the result is divided by the number of documents (N) in the collection) and this term is then added to the product of the damping factor and the sum of the incoming PageRank scores. That is,



So any page's PageRank is derived in large part from the PageRanks of other pages. The damping factor adjusts the derived value downward. The original paper, however, gave the following formula, which has led to some confusion:



The difference between them is that the PageRank values in the first formula sum to one, while in the second formula each PageRank is multiplied by N and the sum becomes N. A statement in Page and Brin's paper that "the sum of all PageRanks is one"23 and claims by other Google employees24 support the first variant of the formula above.
Page and Brin confused the two formulas in their most popular paper "The Anatomy of a Large-Scale Hypertextual Web Search Engine", where they mistakenly claimed that the latter formula formed a probability distribution over web pages.25
Google recalculates PageRank scores each time it crawls the Web and rebuilds its index. As Google increases the number of documents in its collection, the initial approximation of PageRank decreases for all documents.
The formula uses a model of a random surfer who gets bored after several clicks and switches to a random page. The PageRank value of a page reflects the chance that the random surfer will land on that page by clicking on a link. It can be understood as a Markov chain in which the states are pages, and the transitions, which are all equally probable, are the links between pages.
If a page has no links to other pages, it becomes a sink and therefore terminates the random surfing process. If the random surfer arrives at a sink page, it picks another URL at random and continues surfing again.
When calculating PageRank, pages with no outbound links are assumed to link out to all other pages in the collection. Their PageRank scores are therefore divided evenly among all other pages. In other words, to be fair with pages that are not sinks, these random transitions are added to all nodes in the Web, with a residual probability usually set to ''d ''= 0.85, estimated from the frequency that an average surfer uses his or her browser's bookmark feature.
So, the equation is as follows:



where 
 
 
 
  are the pages under consideration, 
 
 
 
  is the set of pages that link to 
 
 
 
 , 
 
 
 
  is the number of outbound links on page 
 
 
 
 , and N is the total number of pages.
The PageRank values are the entries of the dominant left eigenvector of the modified adjacency matrix. This makes PageRank a particularly elegant metric: the eigenvector is


 
  where R is the solution of the equation



where the adjacency function 
 
 
 
  is 0 if page 
 
 
 
  does not link to 
 
 
 
 , and normalized such that, for each j


 
 ,
i.e. the elements of each column sum up to 1, so the matrix is a stochastic matrix (for more details see the computation section below). Thus this is a variant of the eigenvector centrality measure used commonly in network analysis.
Because of the large eigengap of the modified adjacency matrix above,26 the values of the PageRank eigenvector can be approximated to within a high degree of accuracy within only a few iterations.
As a result of Markov theory, it can be shown that the PageRank of a page is the probability of arriving at that page after a large number of clicks. This happens to equal 
 
 
 
  where 
 
 
 
  is the expectation of the number of clicks (or random jumps) required to get from the page back to itself.
One main disadvantage of PageRank is that it favors older pages. A new page, even a very good one, will not have many links unless it is part of an existing site (a site being a densely connected set of pages, such as Wikipedia).
Several strategies have been proposed to accelerate the computation of PageRank.27
Various strategies to manipulate PageRank have been employed in concerted efforts to improve search results rankings and monetize advertising links. These strategies have severely impacted the reliability of the PageRank concept, which purports to determine which documents are actually highly valued by the Web community.
Since December 2007, when it started actively penalizing sites selling paid text links, Google has combatted link farms and other schemes designed to artificially inflate PageRank. How Google identifies link farms and other PageRank manipulation tools is among Google's trade secrets.
Computation
PageRank can be computed either iteratively or algebraically. The iterative method can be viewed as the power iteration method2829 or the power method. The basic mathematical operations performed are identical.
Iterative
At 
 
 
 
 , an initial probability distribution is assumed, usually


 
 .
At each time step, the computation, as detailed above, yields


 
 , or in matrix notation


 
 ,       (*) where 
 
 
 
  and 
 
 
 
  is the column vector of length 
 
 
 
  containing only ones.
The matrix 
 
 
 
  is defined as


 
  i.e.,


 
 , where 
 
 
 
  denotes the adjacency matrix of the graph and 
 
 
 
  is the diagonal matrix with the outdegrees in the diagonal.
The computation ends when for some small 
 
 



 
 , i.e., when convergence is assumed.
Algebraic
For 
 
 
 
  (i.e., in the steady state), the above equation (*) reads


 
 .       (**) The solution is given by


 
 , with the identity matrix

 
 .
The solution exists and is unique for 
 
 
 
 . This can be seen by noting that 
 
 
 
  is by construction a stochastic matrix and hence has an eigenvalue equal to one as a consequence of the Perron–Frobenius theorem.
Power Method
If the matrix 
 
 
 
  is a transition probability, i.e., column-stochastic with no columns consisting of just zeros and 
 
 
 
  is a probability distribution (i.e., 
 
 
 
 , 
 
 
 
  where 
 
 
 
  is matrix of all ones), Eq. (**) is equivalent to


 
 .       (***) Hence PageRank 
 
 
 
  is the principal eigenvector of 
 
 
 
 . A fast and easy way to compute this is using the power method: starting with an arbitrary vector 
 
 
 
 , the operator 
 
 
 
  is applied in succession, i.e.,


 
 , until


 
 .
Note that in Eq. (***) the matrix on the right-hand side in the parenthesis can be interpreted as


 
 , where 
 
 
 
  is an initial probability distribution. In the current case


 
 .
Finally, if 
 
 
 
  has columns with only zero values, they should be replaced with the initial probability vector 
 
 
 
 . In other words


 
 , where the matrix 
 
 
 
  is defined as


 
 , with


 
  In this case, the above two computations using 
 
 
 
  only give the same PageRank if their results are normalized:


 
 .
PageRank MATLAB/Octave implementation
% Parameter M adjacency matrix where M_i,j represents the link from 'j' to 'i', such that for all 'j' 
 %     sum(i, M_i,j) = 1
 % Parameter d damping factor
 % Parameter v_quadratic_error quadratic error for v
 % Return v, a vector of ranks such that v_i is the i-th rank from [0, 1]
 
 function [v] = rank2(M, d, v_quadratic_error)
 
 N = size(M, 2); % N is equal to half the size of M
 v = rand(N, 1);
 v = v ./ norm(v, 1);   % This is now L1, not L2
 last_v = ones(N, 1) * inf;
 M_hat = (d .* M) + (((1 - d) / N) .* ones(N, N));
 
 while(norm(v - last_v, 2) > v_quadratic_error)
     last_v = v;
     v = M_hat * v;
         % removed the L2 norm of the iterated PR
 end
 
 endfunction
Example of code calling the rank function defined above:
M = [0 0 0 0 1 ; 0.5 0 0 0 0 ; 0.5 0 0 0 0 ; 0 1 0.5 0 0 ; 0 0 0.5 1 0];
 rank(M, 0.80, 0.001)
This example takes 13 iterations to converge.
Efficiency
Depending on the framework used to perform the computation, the exact implementation of the methods, and the required accuracy of the result, the computation time of these methods can vary greatly.
Variations
PageRank of an undirected graph
The PageRank of an undirected graph G is statistically close to the degree distribution of the graph G,30 but they are generally not identical: If R is the PageRank vector defined above, and D is the degree distribution vector


 
  where 
 
 
 
  denotes the degree of vertex 
 
 
 
 , and E is the edge-set of the graph, then, with 
 
 
 
 , by:31


that is, the PageRank of an undirected graph equals to the degree distribution vector if and only if the graph is regular, i.e., every vertex has the same degree.
Distributed Algorithm for PageRank Computation
There are simple and fast random walk-based distributed algorithms for computing PageRank of nodes in a network.32 They present a simple algorithm that takes 
 
 
 
  rounds with high probability on any graph (directed or undirected), where n is the network size and 
 
 
 
  is the reset probability (
 
 
 
  is also called as damping factor) used in the PageRank computation. They also present a faster algorithm that takes 
 
 
 
  rounds in undirected graphs. Both of the above algorithms are scalable, as each node processes and sends only small (polylogarithmic in n, the network size) number of bits per round. For directed graphs, they present an algorithm that has a running time of 
 
 
 
 , but it requires a polynomial number of bits to processed and sent per node in a round.
Google Toolbar
The Google Toolbar's PageRank feature displays a visited page's PageRank as a whole number between 0 and 10. The most popular websites have a PageRank of 10. The least have a PageRank of 0. Google has not disclosed the specific method for determining a Toolbar PageRank value, which is to be considered only a rough indication of the value of a website.
PageRank measures the number of sites that link to a particular page.33 The PageRank of a particular page is roughly based upon the quantity of inbound links as well as the PageRank of the pages providing the links. The algorithm also includes other factors, such as the size of a page, the number of changes, the time since the page was updated, the text in headlines and the text in hyperlinked anchor texts.34
The Google Toolbar's PageRank is updated infrequently, so the values it shows are often out of date.
SERP Rank
The search engine results page (SERP) is the actual result returned by a search engine in response to a keyword query. The SERP consists of a list of links to web pages with associated text snippets. The SERP rank of a web page refers to the placement of the corresponding link on the SERP, where higher placement means higher SERP rank. The SERP rank of a web page is a function not only of its PageRank, but of a relatively large and continuously adjusted set of factors (over 200),.35 Search engine optimization (SEO) is aimed at influencing the SERP rank for a website or a set of web pages.
Positioning of a webpage on Google SERPs for a keyword depends on relevance and reputation, also known as authority and popularity. PageRank is Google’s indication of its assessment of the reputation of a webpage: It is non-keyword specific. Google uses a combination of webpage and website authority to determine the overall authority of a webpage competing for a keyword.36 The PageRank of the HomePage of a website is the best indication Google offers for website authority.37
After the introduction of Google Places into the mainstream organic SERP, numerous other factors in addition to PageRank affect ranking a business in Local Business Results.38
Google directory PageRank
The Google Directory PageRank was an 8-unit measurement. Unlike the Google Toolbar, which shows a numeric PageRank value upon mouseover of the green bar, the Google Directory only displayed the bar, never the numeric values. Google Directory was closed on July 20, 2011.39
False or spoofed PageRank
In the past, the PageRank shown in the Toolbar was easily manipulated. Redirection from one page to another, either via a HTTP 302 response or a "Refresh" meta tag, caused the source page to acquire the PageRank of the destination page. Hence, a new page with PR 0 and no incoming links could have acquired PR 10 by redirecting to the Google home page. This spoofing technique was a known vulnerability. Spoofing can generally be detected by performing a Google search for a source URL; if the URL of an entirely different site is displayed in the results, the latter URL may represent the destination of a redirection.
Manipulating PageRank
For search engine optimization purposes, some companies offer to sell high PageRank links to webmasters.40 As links from higher-PR pages are believed to be more valuable, they tend to be more expensive. It can be an effective and viable marketing strategy to buy link advertisements on content pages of quality and relevant sites to drive traffic and increase a webmaster's link popularity. However, Google has publicly warned webmasters that if they are or were discovered to be selling links for the purpose of conferring PageRank and reputation, their links will be devalued (ignored in the calculation of other pages' PageRanks). The practice of buying and selling links is intensely debated across the Webmaster community. Google advises webmasters to use the nofollow HTML attribute value on sponsored links. According to Matt Cutts, Google is concerned about webmasters who try to game the system, and thereby reduce the quality and relevance of Google search results.41
The intentional surfer model
The original PageRank algorithm reflects the so-called random surfer model, meaning that the PageRank of a particular page is derived from the theoretical probability of visiting that page when clicking on links at random. A page ranking model that reflects the importance of a particular page as a function of how many actual visits it receives by real users is called the intentional surfer model.42
Other uses
The mathematics of PageRank are entirely general and apply to any graph or network in any domain. Thus, PageRank is now regularly used in bibliometrics, social and information network analysis, and for link prediction and recommendation. It's even used for systems analysis of road networks, as well as biology, chemistry, neuroscience, and physics.43
Personalized PageRank is used by Twitter to present users with other accounts they may wish to follow.44
Swiftype's site search product builds a "PageRank that’s specific to individual websites" by looking at each website's signals of importance and prioritizing content based on factors such as number of links from the home page.45
A version of PageRank has recently been proposed as a replacement for the traditional Institute for Scientific Information (ISI) impact factor,46 and implemented at Eigenfactor as well as at SCImago. Instead of merely counting total citation to a journal, the "importance" of each citation is determined in a PageRank fashion.
A similar new use of PageRank is to rank academic doctoral programs based on their records of placing their graduates in faculty positions. In PageRank terms, academic departments link to each other by hiring their faculty from each other (and from themselves).47
PageRank has been used to rank spaces or streets to predict how many people (pedestrians or vehicles) come to the individual spaces or streets.4849 In lexical semantics it has been used to perform Word Sense Disambiguation,50 Semantic similarity,51 and also to automatically rank WordNet synsets according to how strongly they possess a given semantic property, such as positivity or negativity.52
A Web crawler may use PageRank as one of a number of importance metrics it uses to determine which URL to visit during a crawl of the web. One of the early working papers 53 that were used in the creation of Google is Efficient crawling through URL ordering,54 which discusses the use of a number of different importance metrics to determine how deeply, and how much of a site Google will crawl. PageRank is presented as one of a number of these importance metrics, though there are others listed such as the number of inbound and outbound links for a URL, and the distance from the root directory on a site to the URL.
The PageRank may also be used as a methodology to measure the apparent impact of a community like the Blogosphere on the overall Web itself. This approach uses therefore the PageRank to measure the distribution of attention in reflection of the Scale-free network paradigm.
In any ecosystem, a modified version of PageRank may be used to determine species that are essential to the continuing health of the environment.55
For the analysis of protein networks in biology PageRank is also a useful tool.56 57
In 2005, in a pilot study in Pakistan, Structural Deep Democracy, SD25859 was used for leadership selection in a sustainable agriculture group called Contact Youth. SD2 uses PageRank for the processing of the transitive proxy votes, with the additional constraints of mandating at least two initial proxies per voter, and all voters are proxy candidates. More complex variants can be built on top of SD2, such as adding specialist proxies and direct votes for specific issues, but SD2 as the underlying umbrella system, mandates that generalist proxies should always be used.
nofollow
In early 2005, Google implemented a new value, "nofollow",60 for the rel attribute of HTML link and anchor elements, so that website developers and bloggers can make links that Google will not consider for the purposes of PageRank—they are links that no longer constitute a "vote" in the PageRank system. The nofollow relationship was added in an attempt to help combat spamdexing.
As an example, people could previously create many message-board posts with links to their website to artificially inflate their PageRank. With the nofollow value, message-board administrators can modify their code to automatically insert "rel='nofollow'" to all hyperlinks in posts, thus preventing PageRank from being affected by those particular posts. This method of avoidance, however, also has various drawbacks, such as reducing the link value of legitimate comments. (See: Spam in blogs#nofollow)
In an effort to manually control the flow of PageRank among pages within a website, many webmasters practice what is known as PageRank Sculpting61—which is the act of strategically placing the nofollow attribute on certain internal links of a website in order to funnel PageRank towards those pages the webmaster deemed most important. This tactic has been used since the inception of the nofollow attribute, but may no longer be effective since Google announced that blocking PageRank transfer with nofollow does not redirect that PageRank to other links.62
Deprecation
PageRank was once available for the verified site maintainers through the Google Webmaster Tools interface. However on October 15, 2009, a Google employee confirmed that the company had removed PageRank from its Webmaster Tools section, saying that "We've been telling people for a long time that they shouldn't focus on PageRank so much. Many site owners seem to think it's the most important metric for them to track, which is simply not true."63 In addition, The PageRank indicator is not available in Google's own Chrome browser.
The visible page rank is updated very infrequently. It was last updated in November of 2013. In October of 2014 Matt Cutts announced that another visible pagerank update would not be coming.64
PageRank is now one of 200 ranking factors that Google uses to determine a page’s popularity. Google Panda is one of the other strategies Google now relies on to rank popularity of pages. Even though PageRank is no longer directly important for SEO purposes, the existence of back-links from more popular websites continues to push a webpage higher up in search rankings.65
See also

EigenTrust — a decentralized PageRank algorithm
Google bomb
Google Search
Google matrix
Google Panda
VisualRank - Google's application of PageRank to image-search
Hilltop algorithm
Link love
Methods of website linking
Power method — the iterative eigenvector algorithm used to calculate PageRank
Search engine optimization
SimRank — a measure of object-to-object similarity based on random-surfer model
Topic-Sensitive PageRank
TrustRank
Webgraph
CheiRank
Google Penguin
Google Hummingbird

Notes
References









Relevant patents

Original PageRank U.S. Patent—Method for node ranking in a linked database—Patent number 6,285,999—September 4, 2001
[http://patft1.uspto.gov/netacgi/nph-Parser?Sect1=PTO1&Sect2;;=HITOFF&d;=PALL&p;=1&u;=%2Fnetahtml%2FPTO%2Fsrchnum.htm&r;=1&f;=G&l;=50&s1;=6,799,176.PN.&OS;=PN/6,799,176&RS;=PN/6,799,176 PageRank U.S. Patent—Method for scoring documents in a linked database]—Patent number 6,799,176—September 28, 2004
[http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2;;=HITOFF&u;=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r;=1&p;=1&f;=G&l;=50&d;=PTXT&S1;=7,058,628.PN.&OS;=pn/7,058,628&RS;=PN/7,058,628 PageRank U.S. Patent—Method for node ranking in a linked database]—Patent number 7,058,628—June 6, 2006
[http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2;;=HITOFF&u;=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r;=1&p;=1&f;=G&l;=50&d;=PTXT&S1;=7,269,587.PN.&OS;=pn/7,269,587&RS;=PN/7,269,587 PageRank U.S. Patent—Scoring documents in a linked database]—Patent number 7,269,587—September 11, 2007

External links

Our Search: Google Technology by Google
How Google Finds Your Needle in the Web's Haystack by the American Mathematical Society

"
Category:Google Search Category:Search engine optimization Category:Reputation management Category:Internet search algorithms Category:American inventions Category:Crowdsourcing Category:Markov models Category:Link analysis Category:Articles with example MATLAB/Octave code







.


Page, Larry, , Stanford Digital Library Project, talk. August 18, 1997 (archived 2002)
187-page study from Graz University, Austria, includes the note that also human brains are used when determining the page rank in Google






, published as a technical report on January 29, 1998 PDF

USPTO, [http://www.google.com/patents?hl=en&lr;;=&vid;=USPAT5920859&id;=x04ZAAAAEBAJ&oi;=fnd&dq;=yanhong+li&printsec;=abstract#v=onepage&q;=yanhong%20li&f;=false "Hypertext Document Retrieval System and Method"], U.S. Patent number: 5920859, Inventor: Yanhong Li, Filing date: Feb 5, 1997, Issue date: Jul 6, 1999
Greenberg, Andy, "The Man Who's Beating Google", Forbes magazine, October 05, 2009
"About: RankDex", rankdex.com
Cf. especially Lawrence Page, U.S. patents 6,799,176 (2004) "Method for scoring documents in a linked database", 7,058,628 (2006) "Method for node ranking in a linked database", and 7,269,587 (2007) "Scoring documents in a linked database"2011


Matt Cutts's blog: Straight from Google: What You Need to Know, see page 15 of his slides.








[http://www.google.com/support/forum/p/Webmasters/thread?tid=4aeb4d5fce33350b&hl;;=en Google Webmaster central] discussion on PR


Dover, D. Search Engine Optimization Secrets Indianapolis. Wiley. 2011.
Viniker, D. The Importance of Keyword Difficulty Screening for SEO. Ed. Schwartz, M. Digital Guidebook Volume 5. News Press. p 160–164.

Google Directory#Google Directory




Pankaj Gupta, Ashish Goel, Jimmy Lin, Aneesh Sharma, Dong Wang, and Reza Bosagh Zadeh WTF: The who-to-follow system at Twitter, Proceedings of the 22nd international conference on World Wide Web





Roberto Navigli, Mirella Lapata. "An Experimental Study of Graph Connectivity for Unsupervised Word Sense Disambiguation". IEEE Transactions on Pattern Analysis and Machine Intelligence (TPAMI), 32(4), IEEE Press, 2010, pp. 678–692.
M. T. Pilehvar, D. Jurgens and R. Navigli. Align, Disambiguate and Walk: A Unified Approach for Measuring Semantic Similarity.. Proc. of the 51st Annual Meeting of the Association for Computational Linguistics (ACL 2013), Sofia, Bulgaria, August 4–9, 2013, pp. 1341-1351.

















