


Quantum digital signature




Quantum digital signature

A Quantum Digital Signature (QDS) refers to the quantum mechanical equivalent of either a classical digital signature or, more generally, a handwritten signature on a paper document. Like a handwritten signature, a digital signature is used to protect a document, such as a digital contract, against forgery by another party or by one of the participating parties.
As e-commerce has become more important in society, the need to certify the origin of exchanged information has arisen. Modern digital signatures enhance security based on the difficulty of solving a mathematical problem, such as finding the factors of large numbers (as used in the RSA algorithm). Unfortunately, the task of solving these problems becomes feasible when a quantum computer is available (see Shor's algorithm). To face this new problem, new quantum digital signature schemes are in development to provide protection against tampering, even from parties in possession of quantum computers and using powerful quantum cheating strategies.
Classical public-key method
The public-key method of cryptography allows a sender to sign a message (often only the cryptographic hash of the message) with a sign key in such a way that any recipient can, using the corresponding public key, check the authenticity of the message. To allow this, the public key is made broadly available to all potential recipients. To make sure only the legal author of the message can validly sign the message, the public key is created from a random, private sign key, using a one-way function. This is a function that is designed such that computing the result given the input is very easy, but computing the input given the result is very difficult. A classic example is the multiplication of two very large primes: The multiplication is easy, but factoring the product without knowing the primes is normally considered infeasible.


easy


very difficult
Quantum Digital Signature
Like classical digital signatures, quantum digital signatures make use of asymmetric keys. Thus, a person who wants to sign a message creates one or more pairs of sign and corresponding public keys. In general we can divide quantum digital signature schemes into two groups:

A scheme that creates a public quantum-bit key out of a private classical bit string
 
 

A scheme that creates a public quantum-bit key out of a private quantum bit string
 
 


In both cases f is a one-way quantum function that has the same properties as a classical one-way function. That is, the result is easy to compute, but, in contrast to the classical scheme, the function is impossible to invert, even if one uses powerful quantum cheating strategies.
The most famous scheme for the first method above is provided by Gottesman and Chuang 1
Requirements for a good and usable signature scheme
Most of the requirements for a classical digital signature scheme also apply to the quantum digital signature scheme.
In detail

The scheme has to provide security against tampering by
 
The sender after the message was signed (see bit commitment)
The receiver
A third party

Creating a signed message has to be easy
Every recipient has to get the same answer, when testing the message for validity (Valid, Non-Valid)

23
Differences between classical and quantum one-way functions
Nature of the one-way function
A classical one-way function as said above is based on a classical infeasible mathematical task, whereas a quantum one-way function exploits the uncertainty principle which makes it impossible even for a quantum computer to compute the inverse. This is done by providing a quantum output state, with whom one cannot learn enough about the input string to reproduce it. In case of the first group of schemes this is shown by Holevo's theorem, which says, that from a given n-qubit quantum state one cannot extract more than n classical bits of information.4 One possibility to ensure that the scheme uses less qubits for a bit string of a certain length is by using nearly orthogonal states


 
  That gives us the possibility to induce a basis with more than two states.5 So to describe an information of 
 
 
 
  bits, we can use less than n qubits. An example with a 3 qubit basis
:* 
 
 

:* 
 
 

:* 
 
 
 
  Only m qubits are needed to describe n classical bits when 
 
 
 
  holds.
Because of Holevo's theorem and the fact, that m can be much smaller than n, we can only get m bits out of the n bits message. More general, if one gets T copies of the public key he can extract at most Tm bits of the private key. If 
 
 
 
  is big 
 
 
 
  becomes very large, which makes it impossible for a dishonest person to guess the sign key.
''Note: You cannot distinguish between non-orthogonal states, if you only have a small amount of identical states. That's how the quantum one-way functions works. 
Nevertheless 
 
 
 
  leaks information about the private key, in contrast to the classical public key, which forces one to get nothing or all about the private key. ''
Copying the public key
In the classical case we create a classical public key out of a classical sign key, thus it is easy to provide every potential recipient with a copy of the public key. The public key can be freely distributed. This becomes more difficult in the quantum case, because copying a quantum state is forbidden by the no cloning theorem, as long as the state itself is unknown.6 So public keys can only be created and distributed by a person who knows the exact quantum state he wants to create, thus who knows the sign key (This can be the sender or in more general a trustful institution). Nevertheless in contrast to the classical public key there is an upper bound for the number of public quantum keys T which can be created, without enabling one to guess the sign key and thus endangering the security of the scheme (
 
 
 
  has to be big)
Public Key should be the same for every recipient (Swap Test)
To make sure that every recipient gets identical results when testing the authenticity of a message, public keys distributed have to be the same. This is straightforward in the classical case, because one can easily compare two classical bit strings and see if those match. Nevertheless in the quantum state it is more complicated. To test, if two public quantum states are the same one has to compare the following



 This is done with the following quantum circuit which uses one Fredkin gate F, one Hadamard gate H and an ancilla qubit a. First of all the ancilla qubit is set to a symmetric state 
 
 
 
 .
Right after the ancilla qubit is used as a control on the targets 
 
 
 
  and 
 
 
 
  in a Fredkin Gate.
Furthermore a Hadamard gate is applied on the ancilla qubit and finally the first qubit gets measured. If both states are the same, the result 
 
 
 
  is measured. If both states are nearly orthogonal, the result can be either 
 
 
 
  or 
 
 
 
 .7
The calculation of the swap test in more detail:
The overall state









After the Fredkin gate is applied



After the Hadamard gate is applied on the first qubit



After sorting for 
 
 


Now it is easy to see, if the states 
 
 
 
  then 
 
 
 
 , which gives us a 0 whenever it is measured.
An example of a signing-validation process using a simplified Gottesman-Chuang scheme
Signing Process
 Let Person A (Alice) want to send a message to Person B (Bob). Hash algorithms won't be considered, so Alice has to sign every single bit of her message. Message-Bit b

 
 .
Alice chooses M pairs of private keys 
 
 


All the 
 
 
 
  keys will be used to sign the message-bit if b = 0.
All the 
 
 
 
  keys will be used to sign the message-bit if b = 1.

The function which maps 
 
 
 
  is known to all parties. Alice now computes the corresponding public keys 
 
 
 
  and gives all of them to the recipients. She can make as many copies as she needs, but has to take care, not to endanger the security 
 
 
 
 .
Her level of security limits the number of identical public keys she can create
If

message-bit b = 0, she sends all her private keys 

 along with the message-bit b to Bob
message-bit b = 1, she sends all her private keys 

 along with the message-bit b to Bob

''Remember: In this example Alice picks only one bit b and signs it. She has to do that for every single bit in her message ''
Validation Process
 Bob now possesses

The message-bit b
The corresponding private keys 
 
 

All public keys 
 
 


Now Bob calculates 
 
 
 
  for all received private keys (either 
 
 
 
 ).
After he has done so he makes use of the swap test to compare the calculated states with the received public keys. Since the swap test has some probability to give the wrong answer he has to do it for all the M keys and counts how many incorrect keys he gets r. It is obvious, that M is some kind of a security parameter. It is more unlikely to validate a bit wrong for bigger M.

If he only gets a few incorrect keys, then the bit is most probably valid, because his calculated keys and the public keys seem to be the same.
If he gets many incorrect keys, then somebody faked the message with high probability.

Avoid a message to be validated differently
One problem which arises especially for small M is, that the number of incorrect keys different recipients measure differ with probability. So to define only one threshold is not enough, because it would cause a message to be validated differently, when the number of incorrect keys r is very close to the defined threshold.
This can be prevented by defining more than one threshold. Because the number of errors increase proportional with M, the thresholds are defined like

Acceptance




Rejection




If the number of incorrect keys r is below 
 
 
 
 , then the bit is valid with high probability
If the number of incorrect keys r is above 
 
 
 
 , then the bit is faked with high probability
If the number of incorrect keys r is in-between both thresholds, then the recipient cannot be sure, if another recipient gets the same outcome, when validating the bit. Furthermore he can't be even sure, if he validated the message right.

8
If we assume perfect channels without noise, so the bit can't be changed due to the transfer, then the threshold 
 
 
 
  can be set to zero, because the swap test passes always, when the compared states are the same
See also

Lamport signature - A practical digital signature method invented in the 1970s and believed to be secure even against quantum computing attacks.
Quantum cryptography
Quantum fingerprinting

References
"
Category:Digital signature schemes Category:Key management Category:Quantum information science Category:Theoretical computer science



Daniel Gottesman, Isaac L. Chuang. Quantum Digital Signatures, arXiv:quant-ph/0105032 v2, (November 15, 2001)

Xin Lü, Deng-Guo Feng. Quantum Digital Signature Based on Quantum One-way Functions, arxiv:quant-ph/04030462 v2, (June 24, 2004)
Michael A. Nielsen, Isaac L. Chuang. Quantum Computation and Quantum Information 1st Ed., Cambridge University Press, p.531-536

Michael A. Nielsen, Isaac L. Chuang. Quantum Computation and Quantum Information 1st Ed., Cambridge University Press, p.532






