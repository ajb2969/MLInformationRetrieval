   Impulse invariance      Impulse invariance   Impulse invariance is a technique for designing discrete-time infinite-impulse-response (IIR) filters from continuous-time filters in which the impulse response of the continuous-time system is sampled to produce the impulse response of the discrete-time system. The frequency response of the discrete-time system will be a sum of shifted copies of the frequency response of the continuous-time system; if the continuous-time system is approximately band-limited to a frequency less than the Nyquist frequency of the sampling, then the frequency response of the discrete-time system will be approximately equal to it for frequencies below the Nyquist frequency.  Discussion  The continuous-time system's impulse response,     h  c    (  t  )        subscript  h  c   t    h_{c}(t)   , is sampled with sampling period   T   T   T   to produce the discrete-time system's impulse response,    h   [  n  ]       h   delimited-[]  n     h[n]   .       h   [  n  ]    =   T   h  c    (   n  T   )          h   delimited-[]  n      T   subscript  h  c     n  T      h[n]=Th_{c}(nT)\,     Thus, the frequency responses of the two systems are related by       H   (   e   j  ω    )    =    ∑   k  =   -  ∞    ∞     H  c    (    j   ω  T    +   j    2  π   T   k    )           H   superscript  e    j  ω       superscript   subscript     k             subscript  H  c       j    ω  T      j      2  π   T   k        H(e^{j\omega})=\sum_{k=-\infty}^{\infty}{H_{c}\left(j\frac{\omega}{T}+j\frac{2%
 {\pi}}{T}k\right)}\,     If the continuous time filter is approximately band-limited (i.e.      H  c    (   j  Ω   )    <  δ         subscript  H  c     j  normal-Ω    δ    H_{c}(j\Omega)<\delta   when     |  Ω  |   ≥   π  /  T         normal-Ω     π  T     |\Omega|\geq\pi/T   ), then the frequency response of the discrete-time system will be approximately the continuous-time system's frequency response for frequencies below π radians per sample (below the Nyquist frequency 1/(2 T ) Hz):       H   (   e   j  ω    )    =    H  c    (    j  ω   /  T   )          H   superscript  e    j  ω        subscript  H  c       j  ω   T      H(e^{j\omega})=H_{c}(j\omega/T)\,   for     |  ω  |   ≤   π         ω   π    |\omega|\leq\pi\,     Comparison to the bilinear transform  Note that aliasing will occur, including aliasing below the Nyquist frequency to the extent that the continuous-time filter's response is nonzero above that frequency. The bilinear transform is an alternative to impulse invariance that uses a different mapping that maps the continuous-time system's frequency response, out to infinite frequency, into the range of frequencies up to the Nyquist frequency in the discrete-time case, as opposed to mapping frequencies linearly with circular overlap as impulse invariance does.  Effect on poles in system function  If the continuous poles at    s  =   s  k       s   subscript  s  k     s=s_{k}   , the system function can be written in partial fraction expansion as        H  c    (  s  )    =    ∑   k  =  1   N      A  k    s  -   s  k              subscript  H  c   s     superscript   subscript     k  1    N      subscript  A  k     s   subscript  s  k        H_{c}(s)=\sum_{k=1}^{N}{\frac{A_{k}}{s-s_{k}}}\,     Thus, using the inverse Laplace transform, the impulse response is        h  c    (  t  )    =   {         ∑   k  =  1   N      A  k    e    s  k   t      ,      t  ≥  0        0  ,     otherwise             subscript  h  c   t    cases    superscript   subscript     k  1    N      subscript  A  k    superscript  e     subscript  s  k   t        t  0   0  otherwise     h_{c}(t)=\begin{cases}\sum_{k=1}^{N}{A_{k}e^{s_{k}t}},&t\geq 0\\
 0,&\mbox{otherwise}\end{cases}     The corresponding discrete-time system's impulse response is then defined as the following       h   [  n  ]    =   T   h  c    (   n  T   )          h   delimited-[]  n      T   subscript  h  c     n  T      h[n]=Th_{c}(nT)\,          h   [  n  ]    =   T    ∑   k  =  1   N     A  k    e    s  k   n  T    u   [  n  ]            h   delimited-[]  n      T    superscript   subscript     k  1    N      subscript  A  k    superscript  e     subscript  s  k   n  T    u   delimited-[]  n        h[n]=T\sum_{k=1}^{N}{A_{k}e^{s_{k}nT}u[n]}\,     Performing a z-transform on the discrete-time impulse response produces the following discrete-time system function       H   (  z  )    =   T    ∑   k  =  1   N      A  k    1  -    e    s  k   T     z   -  1                H  z     T    superscript   subscript     k  1    N      subscript  A  k     1     superscript  e     subscript  s  k   T     superscript  z    1           H(z)=T\sum_{k=1}^{N}{\frac{A_{k}}{1-e^{s_{k}T}z^{-1}}}\,     Thus the poles from the continuous-time system function are translated to poles at z = e s k T . The zeros, if any, are not so simply mapped.  Poles and zeros  If the system function has zeros as well as poles, they can be mapped the same way, but the result is no longer an impulse invariance result: the discrete-time impulse response is not equal simply to samples of the continuous-time impulse response. This method is known as the matched Z-transform method , or pole–zero mapping. In the case of all-pole filters, the methods are equivalent.  Stability and causality  Since poles in the continuous-time system at s = s k transform to poles in the discrete-time system at z = exp( s k T ), poles in the left half of the s -plane map to inside the unit circle in the z -plane; so if the continuous-time filter is causal and stable, then the discrete-time filter will be causal and stable as well.  Corrected formula  When a causal continuous-time impulse response has a discontinuity at    t  =  0      t  0    t=0   , the expressions above are not consistent. 1 This is because     h  c    (  0  )        subscript  h  c   0    h_{c}(0)   should really only contribute half its value to    h   [  0  ]       h   delimited-[]  0     h[0]   .  Making this correction gives       h   [  n  ]    =   T   (     h  c    (   n  T   )    -    1  2    h  c    (  0  )   δ   [  n  ]     )          h   delimited-[]  n      T       subscript  h  c     n  T        1  2    subscript  h  c   0  δ   delimited-[]  n        h[n]=T\left(h_{c}(nT)-\frac{1}{2}h_{c}(0)\delta[n]\right)\,          h   [  n  ]    =   T    ∑   k  =  1   N     A  k    e    s  k   n  T     (    u   [  n  ]    -    1  2   δ   [  n  ]     )            h   delimited-[]  n      T    superscript   subscript     k  1    N      subscript  A  k    superscript  e     subscript  s  k   n  T        u   delimited-[]  n        1  2   δ   delimited-[]  n          h[n]=T\sum_{k=1}^{N}{A_{k}e^{s_{k}nT}}\left(u[n]-\frac{1}{2}\delta[n]\right)\,     Performing a z-transform on the discrete-time impulse response produces the following discrete-time system function        H   (  z  )    =    T    ∑   k  =  1   N     A  k    1  -    e    s  k   T     z   -  1         -    T  2     ∑   k  =  1   N    A  k       .        H  z       T    superscript   subscript     k  1    N      subscript  A  k     1     superscript  e     subscript  s  k   T     superscript  z    1             T  2     superscript   subscript     k  1    N    subscript  A  k        H(z)=T\sum_{k=1}^{N}{\frac{A_{k}}{1-e^{s_{k}T}z^{-1}}-\frac{T}{2}\sum_{k=1}^{N%
 }A_{k}}.     See also   Infinite impulse response  Bilinear transform  Matched Z-transform method  Continuous-time filters:  Chebyshev filter   Butterworth filter   Elliptic filter     References  Other sources   Oppenheim, Alan V. and Schafer, Ronald W. with Buck, John R. Discrete-Time Signal Processing. Second Edition. Upper Saddle River, New Jersey: Prentice-Hall, 1999.  Sahai, Anant. Course Lecture. Electrical Engineering 123: Digital Signal Processing. University of California, Berkeley. 5 April 2007.   External links   Impulse Invariant Transform at CircuitDesign.info Brief explanation, an example, and application to Continuous Time  Sigma Delta ADC's.   "  Category:Digital signal processing  Category:Filter theory     [ http://ieeexplore.ieee.org/xpl/freeabs_all.jsp?tp =&arnumber;=870677&isnumber;=18861] L. Jackson, "A correction to impulse invariance", IEEE Signal Processing Letters, Vol. 7, Oct. 2000. ↩     