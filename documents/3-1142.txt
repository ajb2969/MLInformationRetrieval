


Deutsch–Jozsa algorithm




Deutsch–Jozsa algorithm

The Deutsch–Jozsa algorithm is a quantum algorithm, proposed by David Deutsch and Richard Jozsa in 19921 with improvements by Richard Cleve, Artur Ekert, Chiara Macchiavello, and Michele Mosca in 1998.2 Although of little practical use, it is one of the first examples of a quantum algorithm that is exponentially faster than any possible deterministic classical algorithm. It is also a deterministic algorithm, meaning that it always produces an answer, and that answer is always correct.
Problem statement
In the Deutsch-Jozsa problem, we are given a black box quantum computer known as an oracle that implements the function 
 
 
 
 . In layman's terms, it takes n-digit binary values as input and produces either a 0 or a 1 as output for each such value. We are promised that the function is either constant (0 on all inputs or 1 on all inputs) or balanced3 (returns 1 for half of the input domain and 0 for the other half); the task then is to determine if 
 
 
 
  is constant or balanced by using the oracle.
Motivation
The Deutsch–Jozsa problem is specifically designed to be easy for a quantum algorithm and hard for any deterministic classical algorithm. The motivation is to show a black box problem that can be solved efficiently by a quantum computer with no error, whereas a deterministic classical computer would need exponentially many queries to the black box to solve the problem. More formally, it yields an oracle relative to which EQP, the class of problems that can be solved exactly in polynomial time on a quantum computer, and P are different.
Since the problem is easy to solve on a probabilistic classical computer, it does not yield an oracle separation with BPP, the class of problems that can be solved with bounded error in polynomial time on a probabilistic classical computer. Simon's problem is an example of a problem that yields a separation between BQP and BPP.
Classical solution
For a conventional deterministic algorithm where n is number of bits/qubits, 
 
 
 
  evaluations of 
 
 
 
  will be required in the worst case. To prove that 
 
 
 
  is constant, just over half the set of inputs must be evaluated and their outputs found to be identical (remembering that the function is guaranteed to be either balanced or constant, not somewhere in between). The best case occurs where the function is balanced and the first two output values that happen to be selected are different. For a conventional randomized algorithm, a constant 
 
 
 
  evaluations of the function suffices to produce the correct answer with a high probability (failing with probability 
 
 
 
 ). However, 
 
 
 
  evaluations are still required if we want an answer that is always correct. The Deutsch-Jozsa quantum algorithm produces an answer that is always correct with a single evaluation of 
 
 
 
 .
History
The Deutsch–Jozsa Algorithm generalizes earlier (1985) work by David Deutsch, which provided a solution for the simple case.
 Specifically we were given a boolean function whose input is 1 bit, 
 
 
 
  and asked if it is constant.4
The algorithm as Deutsch had originally proposed it was not, in fact, deterministic. The algorithm was successful with a probability of one half. In 1992, Deutsch and Jozsa produced a deterministic algorithm which was generalized to a function which takes 
 
 
 
  bits for its input. Unlike Deutsch's Algorithm, this algorithm required two function evaluations instead of only one.
Further improvements to the Deutsch–Jozsa algorithm were made by Cleve et al.,5 resulting in an algorithm that is both deterministic and requires only a single query of 
 
 
 
 . This algorithm is still referred to as Deutsch–Jozsa algorithm in honour of the groundbreaking techniques they employed.6
The Deutsch–Jozsa algorithm provided inspiration for Shor's algorithm and Grover's algorithm, two of the most revolutionary quantum algorithms.78
Decoherence
For the Deutsch–Jozsa algorithm to work, the oracle computing f(x) from x has to be a quantum oracle which doesn't decohere x. It also mustn't leave any copy of x lying around at the end of the oracle call.
(Figure)
The Deutsch-Jozsa algorithm's quantum circuit

The algorithm begins with the n+1 bit state 
 
 
 
 . That is, the first n bits are each in the state 
 
 
 
  and the final bit is 
 
 
 
 . A Hadamard transformation is applied to each bit to obtain the state


 
 .
We have the function 
 
 
 
  implemented as quantum oracle. The oracle maps the state 
 
 
 
  to 
 
 
 
 , where 
 
 
 
  is addition modulo 2 (see below for details of implementation). Applying the quantum oracle gives


 
 .
For each 
 
 
 
 , 
 
 
 
  is either 
 
 
 
  or 
 
 
 
 . A quick check of these two possibilities yields


 
 .
At this point the last qubit may be ignored. We apply a Hadamard transformation to each qubit to obtain



where 
 
 
 
  is the sum of the bitwise product.
Finally we examine the probability of measuring 
 
 
 
 ,



which evaluates to 1 if 
 
 
 
  is constant (constructive interference) and 0 if 
 
 
 
 
  is balanced (destructive interference).
Deutsch's Algorithm
Deutsch's algorithm is a special case of the general Deutsch–Jozsa algorithm. We need to check the condition 
 
 
 
 . It is equivalent to check 
 
 
 
  (where 
 
 
 
  is addition modulo 2, which can also be viewed as a quantum XOR gate implemented as a Controlled NOT gate), if zero, then 
 
 
 
  is constant, otherwise 
 
 
 
 
  is not constant.
We begin with the two-qubit state 
 
 
 
  and apply a Hadamard transform to each qubit. This yields



We are given a quantum implementation of the function 
 
 
 
  that maps 
 
 
 
  to 
 
 
 
 
 . Applying this function to our current state we obtain









We ignore the last bit and the global phase and therefore have the state



Applying a Hadamard transform to this state we have






Obviously 
 
 
 
  if and only if we measure a zero and 
 
 
 
  if and only if we measure a one. So with certainty we know whether 
 
 
 
  is constant or balanced.
References
External links

Deutsch's lecture about Deutsch algorithm
Implementation of the Deutsch-Jozsa algorithm in the Scala programming language

"
Category:Quantum algorithms



↩
↩
Certainty from Uncertainty↩
↩


↩
↩




