   Betweenness centrality      Betweenness centrality  '''Betweenness centrality''' is an indicator of a node's [[centrality]] in a [[Graph (mathematics)|network]]. It is equal to the number of shortest paths from all vertices to all others that pass through that node. A node with high betweenness centrality has a large influence on the transfer of items through the network, under the assumption that item transfer follows the shortest paths. The concept finds wide application, including computer and social networks, {{cite journal |last1 = Brandes|first1 = Ulrik | year=2008| ti tle = On variants of shortest-path betweenness centrality and their generic computation | journal = Social Networks| volume=30| pages=136–145 | doi=10.1016/j.socnet.2007.11.001}} 1 biology, 2 3 transport 4  5 and scientific cooperation. 6 Development of betweenness centrality is generally attributed to sociologist Linton Freeman. 7 The idea was earlier proposed by mathematician J. Anthonisse, but his work was never published. 8  Definition  The betweenness centrality of a node   v   v   v   is given by the expression:       g   (  v  )    =    ∑   s  ≠  v  ≠  t       σ   s  t     (  v  )     σ   s  t            g  v     subscript       s  v       t          subscript  σ    s  t    v    subscript  σ    s  t        g(v)=\sum_{s\neq v\neq t}\frac{\sigma_{st}(v)}{\sigma_{st}}     where    σ   s  t      subscript  σ    s  t     \sigma_{st}   is the total number of shortest paths from node   s   s   s   to node   t   t   t   and     σ   s  t     (  v  )        subscript  σ    s  t    v    \sigma_{st}(v)   is the number of those paths that pass through   v   v   v   .  Note that the betweenness centrality of a node scales with the number of pairs of nodes as implied by the summation indices. Therefore the calculation may be rescaled by dividing through by the number of pairs of nodes not including   v   v   v   , so that    g  ∈   [  0  ,  1  ]       g   0  1     g\in[0,1]   . The division is done by     (   N  -  1   )    (   N  -  2   )         N  1     N  2     (N-1)(N-2)   for directed graphs and      (   N  -  1   )    (   N  -  2   )    /  2          N  1     N  2    2    (N-1)(N-2)/2   for undirected graphs, where   N   N   N   is the number of nodes in the giant component. Note that this scales for the highest possible value, where one node is crossed by every single shortest path. This is often not the case, and a normalization can be performed without a loss of precision       normal   (   g   (  v  )    )    =     g   (  v  )    -   min   (  g  )       max   (  g  )    -   min   (  g  )            normal    g  v          g  v     g        g     g       \mbox{normal}(g(v))=\frac{g(v)-\min(g)}{\max(g)-\min(g)}   which results in:       max   (   n  o  r  m  a  l   )    =  1          n  o  r  m  a  l    1    \max(normal)=1          min   (   n  o  r  m  a  l   )    =  0          n  o  r  m  a  l    0    \min(normal)=0   Note that this will always be a scaling from a smaller range into a larger range, so no precision is lost.  The load distribution in real and model networks  Model networks  It has been shown that the load distribution of a scale-free network follows a power law given by a load exponent   δ   δ   \delta   , 9       P   (  g  )    ≈   g   -  δ          P  g    superscript  g    δ      P(g)\approx g^{-\delta}   (1) this implies the scaling relation to the degree of the node,       g   (  k  )    ≈   k  η         g  k    superscript  k  η     g(k)\approx k^{\eta}   . Where    g   (  k  )       g  k    g(k)   is the average load of vertices with degree   k   k   k   . The exponents   δ   δ   \delta   and   η   η   \eta   are not independent since equation (1) implies 10       P   (  g  )    =   ∫   d  k  P   (  k  )   δ   (   g  -   k  η    )           P  g       d  k  P  k  δ    g   superscript  k  η        P(g)=\int dkP(k)\delta(g-k^{\eta})   For large g, and therefore large k, the expression becomes      P   (  g  ≫  1  )   =  ∫  d  k   k   -  γ    δ   (  g  -   k  η   )      fragments  P   fragments  normal-(  g  much-greater-than  1  normal-)     d  k   superscript  k    γ    δ   fragments  normal-(  g    superscript  k  η   normal-)     P(g\gg 1)=\int dkk^{-\gamma}\delta(g-k^{\eta})          ∼   g    -  1   -    γ  -  1   η        similar-to  absent   superscript  g      1       γ  1   η       \sim g^{-1-\frac{\gamma-1}{\eta}}   which proves the following equality:      η  =    γ  -  1    δ  -  1        η      γ  1     δ  1      \eta=\frac{\gamma-1}{\delta-1}     The important exponent appears to be   η   η   \eta   which describes how the betweenness centrality depends on the connectivity. The situation which maximizes the betweenness centrality for a vertex is when all shortest paths are going through it, which corresponds to a tree structure (a network with no clustering). In the case of a tree network the maximum value of    η  =  2      η  2    \eta=2   is reached. 11      η  =  2  →  δ  =    γ  +  1   2         η  2    normal-→    δ           γ  1   2      \eta=2\rightarrow\delta=\frac{\gamma+1}{2}   This maximal value of   η   η   \eta   (and hence minimum of   δ   δ   \delta   ) puts bounds on the load exponents for networks with non-vanishing clustering.      η  ≤  2  →  δ  ≥    γ  +  1   2         η  2    normal-→    δ           γ  1   2      \eta\leq 2\rightarrow\delta\geq\frac{\gamma+1}{2}   In this case, the exponents    δ  ,  η     δ  η    \delta,\eta   are not universal and depend on the different details (average connectivity, correlations, etc.)  Real networks  Real world scale free networks, such as the internet, also follow a power law load distribution. 12 This is an intuitive result. Scale free networks arrange themselves to create short path lengths across the network by creating a few hub nodes with much higher connectivity than the majority of the network. These hubs will naturally experience much higher loads because of this added connectivity.  Weighted networks  In a weighted network the links connecting the nodes are no longer treated as binary interactions, but are weighted in proportion to their capacity, influence, frequency, etc., which adds another dimension of heterogeneity within the network beyond the topological effects. A node's strength in a weighted network is given by the sum of the weights of its adjacent edges.       s  i   =    ∑   j  =  1   N     a   i  j     w   i  j           subscript  s  i     superscript   subscript     j  1    N      subscript  a    i  j     subscript  w    i  j        s_{i}=\sum_{j=1}^{N}a_{ij}w_{ij}     With    a   i  j      subscript  a    i  j     a_{ij}   and    w   i  j      subscript  w    i  j     w_{ij}   being adjacency and weight matrices between nodes   i   i   i   and   j   j   j   , respectively. Analogous to the power law distribution of degree found in scale free networks, the strength of a given node follows a power law distribution as well.       s   (  k  )    ≈    k  β          s  k    superscript  k  β     s(k)\approx k^{\beta}\,     A study of the average value    s   (  b  )       s  b    s(b)   of the strength for vertices with betweenness   b   b   b   shows that the functional behavior can be approximated by a scaling form 13       s   (  b  )    ≈   b  α         s  b    superscript  b  α     s(b)\approx b^{\alpha}     Algorithms  Calculating the betweenness and closeness centralities of all the vertices in a graph involves calculating the shortest paths between all pairs of vertices on a graph, which takes     Θ   (    |  V  |   3   )       normal-Θ   superscript    V   3     \Theta(|V|^{3})    time with the Floyd–Warshall algorithm , modified to not only find one but count all shortest paths between two nodes. On a sparse graph, Johnson's algorithm may be more efficient, taking     O   (      |  V  |   2    log   |  V  |     +    |  V  |    |  E  |     )       O       superscript    V   2       V         V     E       O(|V|^{2}\log|V|+|V||E|)    time. On unweighted graphs, calculating betweenness centrality takes     O   (    |  V  |    |  E  |    )       O      V     E      O(|V||E|)    time using Brandes' algorithm. 14  In calculating betweenness and closeness centralities of all vertices in a graph, it is assumed that graphs are undirected and connected with the allowance of loops and multiple edges. When specifically dealing with network graphs, often graphs are without loops or multiple edges to maintain simple relationships (where edges represent connections between two people or vertices). In this case, using Brandes' algorithm will divide final centrality scores by 2 to account for each shortest path being counted twice. 15  Another algorithm generalizes the Freeman's betweenness computed on geodesics and Newman's betweenness computed on all paths, by introducing a hyper-parameter controlling the trade-off between exploration and exploitation. The time complexity is the number of edges times the number of nodes in the graph. 16  The concept of centrality was extended to a group level as well. 17 Group betweenness centrality shows the proportion of geodesics connecting pairs of non-group members that pass through a group of nodes. Brandes' algorithm for computing the betweenness centrality of all vertices was modified to compute the group betweenness centrality of one group of nodes with the same asymptotic running time. 18  Related concepts  Betweenness centrality is related to a network's connectivity , though in what way it is not fully understood 19  See also   Centrality   References    "  Category:Articles created via the Article Wizard  Category:Network theory  Category:Graph theory     ↩  ↩  ↩  ↩  ↩  ↩  ↩  ↩  ↩  M. Barthélemy Eur. Phys. J. B 38, 163–168 (2004) ↩   Kwang-Il Goh, Eulsik Oh, Hawoong Jeong, Byungnam Kahng, and Doochul Kim. PNAS (2002) vol. 99 no. 2 ↩  A. Barrat, M. Barthelemy, R. Pastor-Satorras, and A. Vespignani. PNAS (2004) vol. 101 no. 11 ↩  ↩   ↩  Puzis, R., Yagil, D., Elovici, Y., Braha, D. (2009) Collaborative attack on Internet users’ anonymity , Internet Research  19 (1) ↩   ↩     