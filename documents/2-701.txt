


Yorick (programming language)




Yorick (programming language)

 table.sourceCode, tr.sourceCode, td.lineNumbers, td.sourceCode {
   margin: 0; padding: 0; vertical-align: baseline; border: none; }
 <style>
 table.sourceCode { width: 100%; line-height: 100%; }
 td.lineNumbers { text-align: right; padding-right: 4px; padding-left: 4px; color: #aaaaaa; border-right: 1px solid #aaaaaa; }
 td.sourceCode { padding-left: 5px; }
 code > span.kw { color: #007020; font-weight: bold; } /* Keyword */
 code > span.dt { color: #902000; } /* DataType */
 code > span.dv { color: #40a070; } /* DecVal */
 code > span.bn { color: #40a070; } /* BaseN */
 code > span.fl { color: #40a070; } /* Float */
 code > span.ch { color: #4070a0; } /* Char */
 code > span.st { color: #4070a0; } /* String */
 code > span.co { color: #60a0b0; font-style: italic; } /* Comment */
 code > span.ot { color: #007020; } /* Other */
 code > span.al { color: #ff0000; font-weight: bold; } /* Alert */
 code > span.fu { color: #06287e; } /* Function */
 code > span.er { color: #ff0000; font-weight: bold; } /* Error */
 code > span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */
 code > span.cn { color: #880000; } /* Constant */
 code > span.sc { color: #4070a0; } /* SpecialChar */
 code > span.vs { color: #4070a0; } /* VerbatimString */
 code > span.ss { color: #bb6688; } /* SpecialString */
 code > span.im { } /* Import */
 code > span.va { color: #19177c; } /* Variable */
 code > span.cf { color: #007020; font-weight: bold; } /* ControlFlow */
 code > span.op { color: #666666; } /* Operator */
 code > span.bu { } /* BuiltIn */
 code > span.ex { } /* Extension */
 code > span.pp { color: #bc7a00; } /* Preprocessor */
 code > span.at { color: #7d9029; } /* Attribute */
 code > span.do { color: #ba2121; font-style: italic; } /* Documentation */
 code > span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */
 code > span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */
 code > span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */
   



Yorick is an interpreted programming language designed for numerics, graph plotting, and steering large scientific simulation codes. It is quite fast due to array syntax, and extensible via C or Fortran routines. It was created in 1996 by David H. Munro of Lawrence Livermore National Laboratory.
Features
Indexing
Yorick is good at manipulating elements in N-dimensional arrays conveniently with its powerful syntax.
Several elements can be accessed all at once:
> x=[1,2,3,4,5,6];
 > x
 [1,2,3,4,5,6]
 > x(3:6)
 [3,4,5,6]
 > x(3:6:2)
 [3,5]
 > x(6:3:-2)
 [6,4]

Arbitrary elements

> x=[[1,2,3],[4,5,6]]
 > x
 [[1,2,3],[4,5,6]]
 > x([2,1],[1,2])
 [[2,1],[5,4]]
 > list=where(1<x)> list
 [2,3,4,5,6]
 > y=x(list)
 > y
 [2,3,4,5,6]
 </spanx)>

Pseudo-index

Like "theading" in PDL (Perl Data Language) and "broadcasting" in Numpy (Numeric extension for Python), Yorick has a mechanism to do this:
> x=[1,2,3]
 > x
 [1,2,3]
 > y=[[1,2,3],[4,5,6]]
 > y
 [[1,2,3],[4,5,6]]
 > y(-,)
 [[[1],[2],[3]],[[4],[5],[6]]]
 > x(-,)
 [[1],[2],[3]]
 > x(,-)
 [[1,2,3]]
 > x(,-)/y
 [[1,1,1],[0,0,0]]
 > y=[[1.,2,3],[4,5,6]]
 > x(,-)/y
 [[1,1,1],[0.25,0.4,0.5]]

Rubber index

".." is a rubber-index to represent zero or more dimensions of the array.
> x=[[1,2,3],[4,5,6]]
 > x
 [[1,2,3],[4,5,6]]
 > x(..,1)
 [1,2,3]
 > x(1,..)
 [1,4]
 > x(2,..,2)
 5
"*" is a kind of rubber-index to reshape a slice(sub-array) of array to a vector.
> x(*)
 [1,2,3,4,5,6]

Tensor multiplication

Tensor multiplication is done as follows in Yorick:
P(,+,,)*Q(,,+)
means 
 
 

> x=[[1,2,3],[4,5,6]]
 > x
 [[1,2,3],[4,5,6]]
 > y=[[7,8],[9,10],[11,12]]
 > x(,+)*y(+,)
 [[39,54,69],[49,68,87],[59,82,105]]
 > x(+,)*y(,+)
 [[58,139],[64,154]]
External links

Yorick Homepage
Linux Journal Review
Yorick Language Quick Reference Guide
Yorick manual

"
Category:Lawrence Livermore National Laboratory Category:Programming languages created in 1996 Category:Array programming languages Category:Free compilers and interpreters

