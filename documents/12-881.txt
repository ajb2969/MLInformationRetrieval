   Justesen code      Justesen code   In coding theory , Justesen codes form a class of error-correcting codes that have a constant rate, constant relative distance, and a constant alphabet size. Before the Justesen code was discovered, no code was known that had all of these three parameters as a constant. Subsequently, other codes with this property have been discovered, for example expander codes . These codes have important applications in computer science such as in the construction of small-bias sample spaces .  Justesen codes are derived as the code concatenation of a Reed‚ÄìSolomon code and the Wozencraft ensemble . The Reed‚ÄìSolomon codes used achieve constant rate and constant relative distance at the expense of an alphabet size that is linear in the message length. The Wozencraft ensemble is a family of codes that achieve constant rate and constant alphabet size, but the relative distance is only constant for most of the codes in the family. The concatenation of the two codes first encodes the message using the Reed‚ÄìSolomon code, and then encodes each symbol of the codeword further using a code from the Wozencraft ensemble ‚Äì using a different code of the ensemble at each position of the codeword. This is different from usual code concatenation where the inner codes are the same for each position. The Justesen code can be can constructed very efficiently using only logarithmic space .  Definition  Justesen code is concatenation code with different linear inner codes, which is composed of an     (  N  ,  K  ,  D  )    q  k      subscript   N  K  D    superscript  q  k     (N,K,D)_{q^{k}}   outer code    C   o  u  t      subscript  C    o  u  t     C_{out}   and different     (  n  ,  k  ,  d  )   q     subscript   n  k  d   q    (n,k,d)_{q}   inner codes    C   i  n   i     superscript   subscript  C    i  n    i    C_{in}^{i}   ,    1  ‚â§  i  ‚â§  N        1  i       N     1\leq i\leq N   . More precisely, the concatenation of these codes, denoted by     C   o  u  t    ‚àò   (   C   i  n   1   ,  ‚Ä¶  ,   C   i  n   N   )        subscript  C    o  u  t      superscript   subscript  C    i  n    1   normal-‚Ä¶   superscript   subscript  C    i  n    N      C_{out}\circ(C_{in}^{1},...,C_{in}^{N})   , is defined as follows. Given a message    m  ‚àà    [   q  k   ]   K       m   superscript   delimited-[]   superscript  q  k    K     m\in[q^{k}]^{K}   , we compute the codeword produced by an outer code    C   o  u  t      subscript  C    o  u  t     C_{out}        C   o  u  t     (  m  )   =   (   c  1   ,   c  2   ,  .  .  ,   c  N   )      fragments   subscript  C    o  u  t     fragments  normal-(  m  normal-)     fragments  normal-(   subscript  c  1   normal-,   subscript  c  2   normal-,  normal-.  normal-.  normal-,   subscript  c  N   normal-)     C_{out}(m)=(c_{1},c_{2},..,c_{N})   . Then we apply each code of N linear inner codes to each coordinate of that codeword to produce the final codeword; that is,     C   o  u  t    ‚àò   (   C   i  n   1   ,  .  .  ,   C   i  n   N   )    (  m  )   =   (   C   i  n   1    (   c  1   )   ,   C   i  n   2    (   c  2   )   ,  .  .  ,   C   i  n   N    (   c  N   )   )      fragments   subscript  C    o  u  t      fragments  normal-(   superscript   subscript  C    i  n    1   normal-,  normal-.  normal-.  normal-,   superscript   subscript  C    i  n    N   normal-)    fragments  normal-(  m  normal-)     fragments  normal-(   superscript   subscript  C    i  n    1    fragments  normal-(   subscript  c  1   normal-)   normal-,   superscript   subscript  C    i  n    2    fragments  normal-(   subscript  c  2   normal-)   normal-,  normal-.  normal-.  normal-,   superscript   subscript  C    i  n    N    fragments  normal-(   subscript  c  N   normal-)   normal-)     C_{out}\circ(C_{in}^{1},..,C_{in}^{N})(m)=(C_{in}^{1}(c_{1}),C_{in}^{2}(c_{2})%
 ,..,C_{in}^{N}(c_{N}))   . Look back to the definition of the outer code and linear inner codes, this definition of the Justesen code makes sense because the codeword of the outer code is a vector with   N   N   N   elements, and we have   N   N   N   linear inner codes to apply for those   N   N   N   elements.  Here for the Justesen code, the outer code    C   o  u  t      subscript  C    o  u  t     C_{out}   is chosen to be Reed Solomon code over a field     ùîΩ   q  k      subscript  ùîΩ   superscript  q  k     \mathbb{F}_{q^{k}}   evaluated over     ùîΩ   q  k    -   {  0  }        subscript  ùîΩ   superscript  q  k     0     \mathbb{F}_{q^{k}}-\{0\}   of rate    R   R   R   ,   0   0    R 1. The outer code    C   o  u  t      subscript  C    o  u  t     C_{out}   have the relative distance     Œ¥   o  u  t    =   1  -  R        subscript  Œ¥    o  u  t      1  R     \delta_{out}=1-R   and block length of    N  =    q  k   -  1       N     superscript  q  k   1     N=q^{k}-1   . The set of inner codes is the Wozencraft ensemble      {   C   i  n   Œ±   }    Œ±  ‚àà   ùîΩ   q  k   *       subscript    superscript   subscript  C    i  n    Œ±      Œ±   superscript   subscript  ùîΩ   superscript  q  k         \{C_{in}^{\alpha}\}_{\alpha\in\mathbb{F}_{q^{k}}^{*}}   .  Property of Justesen code  As the linear codes in the Wonzencraft ensemble have the rate    1  2      1  2    \frac{1}{2}   , Justesen code is the concatenated code     C  *   =   C   o  u  t    ‚àò   (   C   i  n   1   ,   C   i  n   2   ,  .  .  ,   C   i  n   N   )      fragments   superscript  C      subscript  C    o  u  t      fragments  normal-(   superscript   subscript  C    i  n    1   normal-,   superscript   subscript  C    i  n    2   normal-,  normal-.  normal-.  normal-,   superscript   subscript  C    i  n    N   normal-)     C^{*}=C_{out}\circ(C_{in}^{1},C_{in}^{2},..,C_{in}^{N})   with the rate    R  2      R  2    \frac{R}{2}   . We have the following theorem that estimates the distance of the concatenated code    C  *     superscript  C     C^{*}   .  Theorem  Let   Œµ   Œµ   \varepsilon   > 0.    C  *     superscript  C     C^{*}   has relative distance at least     (   1  -  R  -  Œµ   )    H  q   -  1     (    1  2   -  Œµ   )         1  R  Œµ    superscript   subscript  H  q     1        1  2   Œµ     (1-R-\varepsilon)H_{q}^{-1}(\frac{1}{2}-\varepsilon)   .  Proof:  The idea of proving that the code    C  *     superscript  C     C^{*}   has the distance at least        (   1  -  R  -  Œµ   )    H  q   -  1     (    1  2   -  Œµ   )    ‚ãÖ  2   k   ‚ãÖ  N     normal-‚ãÖ     normal-‚ãÖ      1  R  Œµ    superscript   subscript  H  q     1        1  2   Œµ    2   k   N    (1-R-\varepsilon)H_{q}^{-1}(\frac{1}{2}-\varepsilon)\cdot 2k\cdot N   is to prove that the Hamming distance of two different codewords is at least        (   1  -  R  -  Œµ   )    H  q   -  1     (    1  2   -  Œµ   )    ‚ãÖ  2   k   ‚ãÖ  N     normal-‚ãÖ     normal-‚ãÖ      1  R  Œµ    superscript   subscript  H  q     1        1  2   Œµ    2   k   N    (1-R-\varepsilon)H_{q}^{-1}(\frac{1}{2}-\varepsilon)\cdot 2k\cdot N   .  Denote    Œî   (   c  1   ,   c  2   )       normal-Œî    superscript  c  1    superscript  c  2      \Delta(c^{1},c^{2})   be the Hamming distance of two codewords    c  1     superscript  c  1    c^{1}   and    c  2     superscript  c  2    c^{2}   .  So for any given    m  1     subscript  m  1    m_{1}   and    m  2     subscript  m  2    m_{2}   in     (   ùîΩ   q  k    )   K     superscript   subscript  ùîΩ   superscript  q  k    K    (\mathbb{F}_{q^{k}})^{K}   (     m  1   ‚â†   m  2        subscript  m  1    subscript  m  2     m_{1}\neq m_{2}   ), we want to lower bound    Œî   (    C  *    (   m  1   )    ,    C  *    (   m  2   )    )       normal-Œî      superscript  C     subscript  m  1       superscript  C     subscript  m  2       \Delta(C^{*}(m_{1}),C^{*}(m_{2}))   .  Notice that if     C   o  u  t     (  m  )   =   (   c  1   ,   c  2   ,  .  .  ,   c  N   )      fragments   subscript  C    o  u  t     fragments  normal-(  m  normal-)     fragments  normal-(   subscript  c  1   normal-,   subscript  c  2   normal-,  normal-.  normal-.  normal-,   subscript  c  N   normal-)     C_{out}(m)=(c_{1},c_{2},..,c_{N})   , then     C  *    (  m  )   =   (   C   i  n   1    (   c  1   )   ,   C   i  n   2    (   c  2   )   ,  .  .  ,   C   i  n   N    (   c  N   )   )      fragments   superscript  C     fragments  normal-(  m  normal-)     fragments  normal-(   superscript   subscript  C    i  n    1    fragments  normal-(   subscript  c  1   normal-)   normal-,   superscript   subscript  C    i  n    2    fragments  normal-(   subscript  c  2   normal-)   normal-,  normal-.  normal-.  normal-,   superscript   subscript  C    i  n    N    fragments  normal-(   subscript  c  N   normal-)   normal-)     C^{*}(m)=(C_{in}^{1}(c_{1}),C_{in}^{2}(c_{2}),..,C_{in}^{N}(c_{N}))   . So to the lower bound    Œî   (    C  *    (   m  1   )    ,    C  *    (   m  2   )    )       normal-Œî      superscript  C     subscript  m  1       superscript  C     subscript  m  2       \Delta(C^{*}(m_{1}),C^{*}(m_{2}))   , we need to take into account the distance of    C   i  n   i     superscript   subscript  C    i  n    i    C_{in}^{i}   for i = 1,2,‚Ä¶,N.  Suppose     C   o  u  t     (   m  1   )   =   (   c  1  1   ,   c  2  1   ,  .  .  ,   c  N  1   )      fragments   subscript  C    o  u  t     fragments  normal-(   subscript  m  1   normal-)     fragments  normal-(   superscript   subscript  c  1   1   normal-,   superscript   subscript  c  2   1   normal-,  normal-.  normal-.  normal-,   superscript   subscript  c  N   1   normal-)     C_{out}(m_{1})=(c_{1}^{1},c_{2}^{1},..,c_{N}^{1})   and     C   o  u  t     (   m  2   )   =   (   c  1  2   ,   c  2  2   ,  .  .  ,   c  N  2   )      fragments   subscript  C    o  u  t     fragments  normal-(   subscript  m  2   normal-)     fragments  normal-(   superscript   subscript  c  1   2   normal-,   superscript   subscript  c  2   2   normal-,  normal-.  normal-.  normal-,   superscript   subscript  c  N   2   normal-)     C_{out}(m_{2})=(c_{1}^{2},c_{2}^{2},..,c_{N}^{2})   .  Recall that     {   C   i  n   i   }    1  ‚â§  i  ‚â§  N      subscript    superscript   subscript  C    i  n    i        1  i       N      \{C_{in}^{i}\}_{1\leq i\leq N}   is a Wozencraft ensemble . Due to "Wonzencraft ensemble theorem", there are at least     (   1  -  Œµ   )   N        1  Œµ   N    (1-\varepsilon)N   linear codes    C   i  n   i     superscript   subscript  C    i  n    i    C_{in}^{i}   that have distance       H  q   -  1     (    1  2   -  Œµ   )    ‚ãÖ  2   k       normal-‚ãÖ     superscript   subscript  H  q     1        1  2   Œµ    2   k    H_{q}^{-1}(\frac{1}{2}-\varepsilon)\cdot 2k   .  So if for some    1  ‚â§  i  ‚â§  N        1  i       N     1\leq i\leq N   ,     c  i  1   ‚â†   c  i  2        superscript   subscript  c  i   1    superscript   subscript  c  i   2     c_{i}^{1}\neq c_{i}^{2}   and    C   i  n   i     superscript   subscript  C    i  n    i    C_{in}^{i}   code has distance     ‚â•      H  q   -  1     (    1  2   -  Œµ   )    ‚ãÖ  2   k       absent     normal-‚ãÖ     superscript   subscript  H  q     1        1  2   Œµ    2   k     \geq H_{q}^{-1}(\frac{1}{2}-\varepsilon)\cdot 2k   , then     Œî   (    C   i  n   i    (   c  i  1   )    ,    C   i  n   i    (   c  i  2   )    )    ‚â•      H  q   -  1     (    1  2   -  Œµ   )    ‚ãÖ  2   k         normal-Œî      superscript   subscript  C    i  n    i    superscript   subscript  c  i   1       superscript   subscript  C    i  n    i    superscript   subscript  c  i   2         normal-‚ãÖ     superscript   subscript  H  q     1        1  2   Œµ    2   k     \Delta(C_{in}^{i}(c_{i}^{1}),C_{in}^{i}(c_{i}^{2}))\geq H_{q}^{-1}(\frac{1}{2}%
 -\varepsilon)\cdot 2k   .  Further, if we have   T   T   T   numbers    1  ‚â§  i  ‚â§  N        1  i       N     1\leq i\leq N   such that     c  i  1   ‚â†   c  i  2        superscript   subscript  c  i   1    superscript   subscript  c  i   2     c_{i}^{1}\neq c_{i}^{2}   and    C   i  n   i     superscript   subscript  C    i  n    i    C_{in}^{i}   code has distance     ‚â•      H  q   -  1     (    1  2   -  Œµ   )    ‚ãÖ  2   k       absent     normal-‚ãÖ     superscript   subscript  H  q     1        1  2   Œµ    2   k     \geq H_{q}^{-1}(\frac{1}{2}-\varepsilon)\cdot 2k   , then     Œî   (    C  *    (   m  1   )    ,    C  *    (   m  2   )    )    ‚â•       H  q   -  1     (    1  2   -  Œµ   )    ‚ãÖ  2   k   ‚ãÖ  T         normal-Œî      superscript  C     subscript  m  1       superscript  C     subscript  m  2       normal-‚ãÖ     normal-‚ãÖ     superscript   subscript  H  q     1        1  2   Œµ    2   k   T     \Delta(C^{*}(m_{1}),C^{*}(m_{2}))\geq H_{q}^{-1}(\frac{1}{2}-\varepsilon)\cdot
 2%
 k\cdot T   .  So now the final task is to lower bound   T   T   T   .  Denote S be the set of all   i   i   i   (    1  ‚â§  i  ‚â§  N        1  i       N     1\leq i\leq N   ) such that     c  i  1   ‚â†   c  i  2        superscript   subscript  c  i   1    superscript   subscript  c  i   2     c_{i}^{1}\neq c_{i}^{2}   . Then   T   T   T   is the number of linear codes    C   i  n   i     superscript   subscript  C    i  n    i    C_{in}^{i}   (    i  ‚àà  S      i  S    i\in S   ) having the distance       H  q   -  1     (    1  2   -  Œµ   )    ‚ãÖ  2   k       normal-‚ãÖ     superscript   subscript  H  q     1        1  2   Œµ    2   k    H_{q}^{-1}(\frac{1}{2}-\varepsilon)\cdot 2k   .  Now we want to estimate    |  S  |      S    \left|S\right|   . Obviously     |  S  |   =   Œî   (    C   o  u  t     (   m  1   )    ,    C   o  u  t     (   m  2   )    )    ‚â•    (   1  -  R   )   N           S     normal-Œî      subscript  C    o  u  t     subscript  m  1       subscript  C    o  u  t     subscript  m  2               1  R   N      \left|S\right|=\Delta(C_{out}(m_{1}),C_{out}(m_{2}))\geq(1-R)N   .  Due to the Wozencraft Ensemble Theorem , there are at most    Œµ  N      Œµ  N    \varepsilon N   linear codes having distance less than       H  q   -  1     (    1  2   -  Œµ   )    ‚ãÖ  2   k       normal-‚ãÖ     superscript   subscript  H  q     1        1  2   Œµ    2   k    H_{q}^{-1}(\frac{1}{2}-\varepsilon)\cdot 2k   , so    T  ‚â•    |  S  |   -   Œµ  N    ‚â•     (   1  -  R   )   N   -   Œµ  N    =    (   1  -  R  -  Œµ   )   N         T      S     Œµ  N               1  R   N     Œµ  N             1  R  Œµ   N      T\geq\left|S\right|-\varepsilon N\geq(1-R)N-\varepsilon N=(1-R-\varepsilon)N   .  Finally,we have       Œî   (    C  *    (   m  1   )    ,    C  *    (   m  2   )    )    ‚â•       H  q   -  1     (    1  2   -  Œµ   )    ‚ãÖ  2   k   ‚ãÖ  T   ‚â•       H  q   -  1     (    1  2   -  Œµ   )    ‚ãÖ  2   k   ‚ãÖ   (   1  -  R  -  Œµ   )   ‚ãÖ  N           normal-Œî      superscript  C     subscript  m  1       superscript  C     subscript  m  2       normal-‚ãÖ     normal-‚ãÖ     superscript   subscript  H  q     1        1  2   Œµ    2   k   T         normal-‚ãÖ     normal-‚ãÖ     superscript   subscript  H  q     1        1  2   Œµ    2   k     1  R  Œµ   N      \Delta(C^{*}(m_{1}),C^{*}(m_{2}))\geq H_{q}^{-1}(\frac{1}{2}-\varepsilon)\cdot
 2%
 k\cdot T\geq H_{q}^{-1}(\frac{1}{2}-\varepsilon)\cdot 2k\cdot(1-R-\varepsilon)\cdot
 N    .  This is true for any arbitrary     m  1   ‚â†   m  2        subscript  m  1    subscript  m  2     m_{1}\neq m_{2}   . So    C  *     superscript  C     C^{*}   has the relative distance at least     (   1  -  R  -  Œµ   )    H  q   -  1     (    1  2   -  Œµ   )         1  R  Œµ    superscript   subscript  H  q     1        1  2   Œµ     (1-R-\varepsilon)H_{q}^{-1}(\frac{1}{2}-\varepsilon)   , which completes the proof.  Comments  We want to consider the "strongly explicit code". So the question is what the "strongly explicit code" is. Loosely speaking, for linear code, the "explicit" property is related to the complexity of constructing its generator matrix G. That means, we can compute the matrix in logarithmic space without using the brute force algorithm to verify that a code has a given satisfied distance.  For the other codes that are not linear, we can consider the complexity of the encoding algorithm.  So by far, we can see that the Wonzencraft ensemble and Reed-Solomon codes are strongly explicit. Therefore we have the following result:  Corollary: The concatenated code    C  *     superscript  C     C^{*}   is an asymptotically good code(that is, rate   R   R   R   > 0 and relative distance   Œ¥   Œ¥   \delta   > 0 for small q) and has a strongly explicit construction.  An example of a Justesen code  The following slightly different code is referred to as the Justesen code in MacWilliams/MacWilliams. It is the particular case of the above-considered Justesen code for a very particular Wonzencraft ensemble:  Let R be a Reed-Solomon code of length N = 2 m ‚àí¬†1, rank  K and minimum weight N ‚àí K +¬†1. The symbols of R are elements of F = GF(2 m ) and the codewords are obtained by taking every polynomial ∆í over F of degree less than K and listing the values of ∆í on the non-zero elements of F in some predetermined order. Let Œ± be a primitive element of F . For a codeword a = ( a 1 ,¬†..., a N ) from R , let b be the vector of length 2 N over F given by      ùêõ  =   (   a  1   ,   a  1   ,   a  2   ,    Œ±  1    a  2    ,  ‚Ä¶  ,   a  N   ,    Œ±   N  -  1     a  N    )       ùêõ    subscript  a  1    subscript  a  1    subscript  a  2      superscript  Œ±  1    subscript  a  2    normal-‚Ä¶   subscript  a  N      superscript  Œ±    N  1     subscript  a  N       \mathbf{b}=\left(a_{1},a_{1},a_{2},\alpha^{1}a_{2},\ldots,a_{N},\alpha^{N-1}a_%
 {N}\right)     and let c be the vector of length 2 N  m obtained from b by expressing each element of F as a binary vector of length m . The Justesen code is the linear code containing all such c .  The parameters of this code are length 2 m  N , dimension m  K and minimum distance at least        ‚àë   i  =  1   ‚Ñì    i   (      2  m       i     )     ,      superscript   subscript     i  1    normal-‚Ñì     i   binomial    2  m   i      \sum_{i=1}^{\ell}i{\left({{2m}\atop{i}}\right)},     where   ‚Ñì   normal-‚Ñì   \ell   is the greatest integer satisfying      ‚àë   i  =  1   ‚Ñì    (       2  m       i      )    ‚â§    N  -  K   +  1         superscript   subscript     i  1    normal-‚Ñì    binomial    2  m   i        N  K   1     \sum_{i=1}^{\ell}{\left({{2m}\atop{i}}\right)}\leq N-K+1   . (See MacWilliams/MacWilliams for a proof.)  See also   Wozencraft ensemble  Concatenated error correction code  Reed-Solomon error correction  Linear Code   References   Lecture 28: Justesen Code. Coding theory's course. Prof. Atri Rudra .  Lecture 6: Concatenated codes. Forney codes. Justesen codes. Essential Coding Theory .     "  Category:Error detection and correction  Category:Finite fields  Category:Coding theory   