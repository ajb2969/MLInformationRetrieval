   Threefish      Threefish   Threefish is a symmetric-key  tweakable block cipher designed as part of the Skein hash function , an entry in the NIST hash function competition . Threefish uses no S-boxes or other table lookups in order to avoid cache timing attacks ; 1 its nonlinearity comes from alternating additions with exclusive ORs. In that respect, it is similar to Salsa20 , TEA , and the SHA-3 candidates CubeHash and BLAKE .  Threefish and the Skein hash function were designed by Bruce Schneier , Niels Ferguson , Stefan Lucks , Doug Whiting , Mihir Bellare , Tadayoshi Kohno , Jon Callas , and Jesse Walker .  Description of the cipher 2  At first the block, the tweak and the key (of length 256, 512 or 1024 bits) is converted into    N  w     subscript  N  w    N_{w}   words of 64 bit length each. These words are treated as 64bit unsigned Little endian integers throughout the cipher. All additions and subtractions are defined modulo    2  64     superscript  2  64    2^{64}     Key schedule  Threefish uses      N  r   4   +  1         subscript  N  r   4   1    \frac{N_{r}}{4}+1   different round keys (    N  r     subscript  N  r    N_{r}   : Number of rounds). To calculate these keys the original key words     k  0   ,   k  1   ,  …  ,   k    N  w   -  1        subscript  k  0    subscript  k  1   normal-…   subscript  k     subscript  N  w   1      k_{0},k_{1},\dots,k_{N_{w}-1}   are appended by an additional key word    k   N  w      subscript  k   subscript  N  w     k_{N_{w}}   . The tweak words     t  0   ,   t  1       subscript  t  0    subscript  t  1     t_{0},t_{1}   are appended with an additional tweak word too.       t  2   =    t  0   ⊕   t  1         subscript  t  2    direct-sum   subscript  t  0    subscript  t  1      t_{2}=t_{0}\oplus t_{1}        k   N  w    =    C  240   ⊕   k  0   ⊕   k  1   ⊕  …  ⊕   k    N  w   -  1          subscript  k   subscript  N  w     direct-sum   subscript  C  240    subscript  k  0    subscript  k  1   normal-…   subscript  k     subscript  N  w   1       k_{N_{w}}=C_{240}\oplus k_{0}\oplus k_{1}\oplus\dots\oplus k_{N_{w}-1}        C  240   =  0x1BD11BDAA9FC1A22       subscript  C  240   0x1BD11BDAA9FC1A22    C_{240}=\text{0x1BD11BDAA9FC1A22}     The round key words    k   s  ,  i      subscript  k   s  i     k_{s,i}   are now defined like this:       k   s  ,  i    =   {      k    (   s  +  i   )   mod   (    N  w   +  1   )        i  =   0  ,  …  ,    N  w   -  4           k    (   s  +  i   )   mod   (    N  w   +  1   )     +   t   s  mod  3        i  =    N  w   -  3          k    (   s  +  i   )   mod   (    N  w   +  1   )     +   t    (   s  +  1   )   mod  3        i  =    N  w   -  2          k    (   s  +  i   )   mod   (    N  w   +  1   )     +  s      i  =    N  w   -  1             subscript  k   s  i     cases   subscript  k   modulo    s  i      subscript  N  w   1       i   0  normal-…     subscript  N  w   4        subscript  k   modulo    s  i      subscript  N  w   1      subscript  t   modulo  s  3       i     subscript  N  w   3       subscript  k   modulo    s  i      subscript  N  w   1      subscript  t   modulo    s  1   3       i     subscript  N  w   2       subscript  k   modulo    s  i      subscript  N  w   1     s     i     subscript  N  w   1       k_{s,i}=\begin{cases}k_{(s+i)\bmod(N_{w}+1)}&i=0,\dots,N_{w}-4\\
 k_{(s+i)\bmod(N_{w}+1)}+t_{s\bmod 3}&i=N_{w}-3\\
 k_{(s+i)\bmod(N_{w}+1)}+t_{(s+1)\bmod 3}&i=N_{w}-2\\
 k_{(s+i)\bmod(N_{w}+1)}+s&i=N_{w}-1\end{cases}     Mix function  The mix function takes a tuple of words    (   x  0   ,   x  1   )      subscript  x  0    subscript  x  1     (x_{0},x_{1})   and returns another tuple of words    (   y  0   ,   y  1   )      subscript  y  0    subscript  y  1     (y_{0},y_{1})   . The function is defined like this:       y  0   =     x  0   +   x  1    mod   2  64         subscript  y  0    modulo     subscript  x  0    subscript  x  1     superscript  2  64      y_{0}=x_{0}+x_{1}\mod 2^{64}        y  1   =   (   y  1   ⋘   R    (   d  mod  8   )   ,  j    )   ⊕   y  0      fragments   subscript  y  1     fragments  normal-(   subscript  y  1   very-much-less-than   subscript  R    modulo  d  8   j    normal-)   direct-sum   subscript  y  0     y_{1}=(y_{1}\lll R_{(d\bmod 8),j})\oplus y_{0}       R   d  ,  j      subscript  R   d  j     R_{d,j}   is a fixed set of rotation constants chosen to achieve maximum diffusion.  A full Threefish round  If     d   mod  4  =  =  0     fragments  d  modulo  4    0    d\;\bmod\;4==0   the round key    k   d  4      subscript  k    d  4     k_{\frac{d}{4}}   is added to the words. Afterwards the mix function is applied to consecutive words and the resulting words are permutated using a fixed permutation.  Threefish256 and Threefish512 apply this round 72 times. Threefish1024 applies it 80 times.  Final operations  After all rounds are applied the last round key is added to the words and the words are converted back to a string of bytes.  Security  In October 2010, an attack that combines rotational cryptanalysis with the rebound attack was published. The attack mounts a known-key distinguisher against 53 of 72 rounds in Threefish-256, and 57 of 72 rounds in Threefish-512. It also affects the Skein hash function. 3 This is a follow-up to the earlier attack published in February, which breaks 39 and 42 rounds respectively. 4 In response to this attack, the Skein team tweaked the rotation constants used in Threefish and thereby the key schedule constants for round 3 of the NIST hash function competition. 5  In 2009, a related key boomerang attack against a reduced round Threefish version was published. For the 32-round version, the time complexity is    2  226     superscript  2  226    2^{226}   and the memory complexity is    2  12     superscript  2  12    2^{12}   ; for the 33-round version, the time complexity is    2  352.17     superscript  2  352.17    2^{352.17}   with a negligible memory usage. The attacks also work against the tweaked version of Threefish: for the 32-round version, the time complexity is    2  222     superscript  2  222    2^{222}   and the memory complexity is    2  12     superscript  2  12    2^{12}   ; for the 33-round version, the time complexity is    2  355.5     superscript  2  355.5    2^{355.5}   with a negligible memory usage. 6  See also   Twofish  Blowfish (cipher)   References  External links   "The Skein Hash Function Family" Homepage of the Skein Hash Function Family.   "  Category:Block ciphers  Category:Free ciphers     The paper in which Threefish was introduced. ↩   ↩  ↩   ↩     