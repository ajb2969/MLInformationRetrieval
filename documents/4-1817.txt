   Buddhabrot      Buddhabrot   The Buddhabrot is a fractal rendering technique related to the Mandelbrot set . Its name reflects its pareidolic resemblance to classical depictions of Gautama Buddha , seated in a meditation pose with a forehead mark ( tikka ) and traditional topknot ( ushnisha ). The map is created by counting the number of times in the iterative creation algorithm a point is visited. 1  Discovery  The Buddhabrot rendering technique was discovered and later described in a 1993 Usenet post to sci.fractals 2 by Melinda Green. 3  Previous researchers had come very close to finding the precise Buddhabrot technique. In 1988 Linas Vepstas relayed similar images to Cliff Pickover for inclusion in Pickover's forthcoming book Computers, Pattern, Chaos, and Beauty . This led directly to the discovery of pickover stalks . These researchers did not filter out non-escaping trajectories required to produce the ghostly forms typically reminiscent of Hindu art. The inverse, "Anti-Buddhabrot" filter produces images similar to no filtering. Green first named it Ganesh, since an Indian co-worker "instantly recognized it as the god ' Ganesha ' which is the one with the head of an elephant." 4 The name Buddhabrot was coined later by Lori Gardi. 5  Rendering method  Mathematically, the Mandelbrot set consists of the set of points   c   c   c   in the complex plane for which the iteratively defined sequence       z   n  +  1    =    z  n    2   +  c        subscript  z    n  1       superscript   subscript  z  n   2   c     z_{n+1}={z_{n}}^{2}+c     does not tend to infinity as   n   n   n   goes to infinity for     z  0   =  0       subscript  z  0   0    z_{0}=0   .  The Buddhabrot image can be constructed by first creating a 2- dimensional  array of boxes, each corresponding to a final pixel in the image. Each box    (  i  ,  j  )     i  j    (i,j)   for    i  =   1  ,  …  ,  m       i   1  normal-…  m     i=1,\ldots,m   and    j  =   1  ,  …  ,  n       j   1  normal-…  n     j=1,\ldots,n   has size in complex coordinates of    Δ  x      normal-Δ  x    \Delta x   and    Δ  y      normal-Δ  y    \Delta y   , where     Δ  x   =   w  /  m         normal-Δ  x     w  m     \Delta x=w/m   and     Δ  y   =   h  /  n         normal-Δ  y     h  n     \Delta y=h/n   for an image of width   w   w   w   and height   h   h   h   . For each box, a corresponding counter is initialized to zero. Next, a random sampling of   c   c   c   points are iterated through the Mandelbrot function. For points which do escape within a chosen maximum number of iterations, and therefore are not in the Mandelbrot set, the counter for each box entered during the escape to infinity is incremented by 1. In other words, for each sequence corresponding to   c   c   c   that escapes, for each point    z  n     subscript  z  n    z_{n}   during the escape, the box that    (   Re   (   z  n   )    ,   Im   (   z  n   )    )       Re   subscript  z  n      Im   subscript  z  n      (\text{Re}(z_{n}),\text{Im}(z_{n}))   lies within is incremented by 1. Points which do not escape within the maximum number of iterations (and considered to be in the Mandelbrot set) are discarded. After a large number of   c   c   c   values have been iterated, grayscale shades are then chosen based on the distribution of values recorded in the array. The result is a density plot highlighting regions where    z  n     subscript  z  n    z_{n}   values spend the most time on their way to infinity.  Nuances  Rendering Buddhabrot images is typically more computationally intensive than standard Mandelbrot rendering techniques. This is partly due to requiring more random points to be iterated than pixels in the image in order to build up a sharp image. Rendering highly zoomed areas requires even more computation than for standard Mandelbrot images in which a given pixel can be computed directly regardless of zoom level. Conversely, a pixel in a zoomed region of a Buddhabrot image can be affected by initial points from regions far outside the one being rendered. Without resorting to more complex probabilistic techniques , rendering zoomed portions of Buddhabrot consists of merely cropping a large full sized rendering.  The maximum number of iterations chosen affects the image — higher values give sparser more detailed appearance, as a few of the points pass through a large number of pixels before they escape, resulting in their paths being more prominent. If a lower maximum was used, these points would not escape in time and would be regarded as not escaping at all.  Green later realized that this provided a natural way to create color Buddhabrot images by taking three such grayscale images, differing only by the maximum number of iterations used, and combining them into a single color image using the same method used by astronomers to create false color images of nebula and other celestial objects. For example one could assign a 2,000 max iteration image to the red channel, a 200 max iteration image to the green channel, and a 20 max iteration image to the blue channel of an image in an RGB color space . Some have labelled Buddhabrot images using this technique Nebulabrots .  Relation to the logistic map    The relationship between the Mandelbrot set as defined by the iteration     z  2   +  c       superscript  z  2   c    z^{2}+c   , and the logistic map     λ  x   (   1  -  x   )       λ  x    1  x     \lambda x(1-x)   is well known. The two are related by the quadratic transformation:         c  r       =     λ   (   2  -  λ   )    4          c  i       =  0        z  r       =   -     λ   (    2  x   -  1   )    2           z  i       =  0          subscript  c  r     absent      λ    2  λ    4       subscript  c  i     absent  0      subscript  z  r     absent        λ      2  x   1    2        subscript  z  i     absent  0      \begin{aligned}\displaystyle c_{r}&\displaystyle=\frac{\lambda(2-\lambda)}{4}%
 \\
 \displaystyle c_{i}&\displaystyle=0\\
 \displaystyle z_{r}&\displaystyle=-\frac{\lambda(2x-1)}{2}\\
 \displaystyle z_{i}&\displaystyle=0\end{aligned}     The traditional way of illustrating this relationship is aligning the logistic map and the Mandelbrot set through the relation between    c  r     subscript  c  r    c_{r}   and   λ   λ   \lambda   , using a common x-axis and a different y-axis, showing a one-dimensional relationship.  Melinda Green discovered 'by accident' that the Anti-Buddhabrot paradigm fully integrates the logistic map. Both are based on tracing paths from non-escaping points, iterated from a (random) starting point, and the iteration functions are related by the transformation given above. It is then easy to see that the Anti-Buddhabrot for     z  2   +  c       superscript  z  2   c    z^{2}+c   , plotting paths with    c  =   (  random  ,  0  )       c   random  0     c=(\text{random},0)   and     z  0   =   (  0  ,  0  )        subscript  z  0    0  0     z_{0}=(0,0)   , simply generates the logistic map in the plane    {   c  r   ,   z  r   }      subscript  c  r    subscript  z  r     \{c_{r},z_{r}\}   , when using the given transformation. For rendering purposes we use     z  0   =   (  random  ,  0  )        subscript  z  0    random  0     z_{0}=(\text{random},0)   . Remember that in the logistic map all    z   r  0      subscript  z    r  0     z_{r0}   ultimately generate the same path.  Because both the Mandelbrot set and the logistic map are an integral part of the Anti-Buddhabrot we can now show a 3D relationship between both, using the 3D axes    {   c  r   ,   c  i   ,   z  r   }      subscript  c  r    subscript  c  i    subscript  z  r     \{c_{r},c_{i},z_{r}\}   . The animation shows the classic Anti-Buddhabrot with    c  =   (  random  ,  random  )       c   random  random     c=(\text{random},\text{random})   and     z  0   =   (  0  ,  0  )        subscript  z  0    0  0     z_{0}=(0,0)   , this is the 2D Mandelbrot set in the plane    {   c  r   ,   c  i   }      subscript  c  r    subscript  c  i     \{c_{r},c_{i}\}   , and also the Anti-Buddhabrot with    c  =   (  random  ,  0  )       c   random  0     c=(\text{random},0)   and     z  0   =   (  0  ,  0  )        subscript  z  0    0  0     z_{0}=(0,0)   , this is the 2D logistic map in the plane    {   c  r   ,   z  r   }      subscript  c  r    subscript  z  r     \{c_{r},z_{r}\}   . We rotate the plane    {   c  i   ,   z  r   }      subscript  c  i    subscript  z  r     \{c_{i},z_{r}\}   around the    c  r     subscript  c  r    c_{r}   -axis, first showing    {   c  r   ,   c  i   }      subscript  c  r    subscript  c  i     \{c_{r},c_{i}\}   , then rotating 90° to show    {   c  r   ,   z  r   }      subscript  c  r    subscript  z  r     \{c_{r},z_{r}\}   , then rotating an extra 90° to show    {   c  r   ,   -   c  i    }      subscript  c  r      subscript  c  i      \{c_{r},-c_{i}\}   . We could rotate an extra 180° but this gives the same images, mirrored around the    c  r     subscript  c  r    c_{r}   -axis.  The logistic map Anti-Buddhabrot is in fact a subset of the classic Anti-Buddhabrot, situated in the plane    {   c  r   ,   z  r   }      subscript  c  r    subscript  z  r     \{c_{r},z_{r}\}   (or     c  i   =  0       subscript  c  i   0    c_{i}=0   ) of 3D    {   c  r   ,   c  i   ,   z  r   }      subscript  c  r    subscript  c  i    subscript  z  r     \{c_{r},c_{i},z_{r}\}   , perpendicular to the plane    {   c  r   ,   c  i   }      subscript  c  r    subscript  c  i     \{c_{r},c_{i}\}   . We emphasize this by showing briefly, at 90° rotation, only the projected plane     c  i   =  0       subscript  c  i   0    c_{i}=0   , not 'disturbed' by the projections of the planes with non-zero    c  i     subscript  c  i    c_{i}   .{{-}}  References  External links   Buddhabrot discoverer Melinda Green's page  Buddhabrot discoverer Linas Vepstas page  Buddhabrot page from the Gallery of Computation  Buddhabrot page in the Mu-Ency Mandelbrot Set Encyclopedia  Buddhabrot page from Moleculardensity   "  Category:Fractals     ↩   Melinda Green The Buddhabrot Technique ↩  Daniel Green [ http://groups.google.com/groups?hl=en&lr; ;=&selm;=18778%40autodesk.COM The deity hiding in the m-set] ↩  The University of Western Ontario’s newspaper Chaos (theory) rules for software developer(PDF12MB) , p. 10 ↩     