   Next-bit test      Next-bit test   In cryptography and the theory of computation , the next-bit test 1 is a test against pseudo-random number generators . We say that a sequence of bits passes the next bit test for at any position   i   i   i   in the sequence, if any attacker who knows the   i   i   i   first bits (but not the seed) cannot predict the    (   i  +  1   )      i  1    (i+1)   st with reasonable computational power.  Precise statement(s)  Let   P   P   P   be a polynomial, and    S  =   {   S  k   }       S    subscript  S  k      S=\{S_{k}\}   be a collection of sets such that    S  k     subscript  S  k    S_{k}   contains    P   (  k  )       P  k    P(k)   -bit long sequences. Moreover, let    Œº  k     subscript  Œº  k    \mu_{k}   be the probability distribution of the strings in    S  k     subscript  S  k    S_{k}   .  We now define the next-bit test in two different ways.  Boolean circuit formulation  A predicting collection 2     C  =   {   C  k  i   }       C    superscript   subscript  C  k   i      C=\{C_{k}^{i}\}   is a collection of boolean circuits , such that each circuit    C  k  i     superscript   subscript  C  k   i    C_{k}^{i}   has less than     P  C    (  k  )        subscript  P  C   k    P_{C}(k)   gates and exactly   i   i   i   inputs. Let    p   k  ,  i   C     superscript   subscript  p   k  i    C    p_{k,i}^{C}   be the probability that, on input the   i   i   i   first bits of   s   s   s   , a string randomly selected in    S  k     subscript  S  k    S_{k}   with probability     Œº  k    (  s  )        subscript  Œº  k   s    \mu_{k}(s)   , the circuit correctly predicts    s   i  +  1      subscript  s    i  1     s_{i+1}   , i.e. :        p   k  ,  i   C   =  ùí´   [   C  k    (   s  1   ‚Ä¶   s  i   )   =   s   i  +  1    |  s  ‚àà   S  k   with probability   Œº  k    (  s  )   ]      fragments   superscript   subscript  p   k  i    C    P   fragments  normal-[   subscript  C  k    fragments  normal-(   subscript  s  1   normal-‚Ä¶   subscript  s  i   normal-)     subscript  s    i  1    normal-|  s    subscript  S  k   with probability   subscript  Œº  k    fragments  normal-(  s  normal-)   normal-]     p_{k,i}^{C}={\mathcal{P}}\left[C_{k}(s_{1}\ldots s_{i})=s_{i+1}\right|s\in S_{%
 k}\text{ with probability }\mu_{k}(s)]      Now, we say that     {   S  k   }   k     subscript    subscript  S  k    k    \{S_{k}\}_{k}   passes the next-bit test if for any predicting collection   C   C   C   , any polynomial   Q   Q   Q   :        p   k  ,  i   C   <    1  2   +   1   Q   (  k  )           superscript   subscript  p   k  i    C       1  2     1    Q  k       p_{k,i}^{C}<\frac{1}{2}+\frac{1}{Q(k)}      Probabilistic Turing machines  We can also define the next-bit test in terms of probabilistic Turing machines , although this definition is somewhat stronger (see Adleman's theorem ). Let   ‚Ñ≥   ‚Ñ≥   \mathcal{M}   be a probabilistic Turing machine, working in polynomial time. Let    p   k  ,  i   ‚Ñ≥     superscript   subscript  p   k  i    ‚Ñ≥    p_{k,i}^{\mathcal{M}}   be the probability that   ‚Ñ≥   ‚Ñ≥   \mathcal{M}   predicts the    (   i  +  1   )      i  1    (i+1)   st bit correctly, i.e.        p   k  ,  i   ‚Ñ≥   =  ùí´   [  M   (   s  1   ‚Ä¶   s  i   )   =   s   i  +  1    |  s  ‚àà   S  k   with probability   Œº  k    (  s  )   ]      fragments   superscript   subscript  p   k  i    ‚Ñ≥    P   fragments  normal-[  M   fragments  normal-(   subscript  s  1   normal-‚Ä¶   subscript  s  i   normal-)     subscript  s    i  1    normal-|  s    subscript  S  k   with probability   subscript  Œº  k    fragments  normal-(  s  normal-)   normal-]     p_{k,i}^{\mathcal{M}}={\mathcal{P}}[M(s_{1}\ldots s_{i})=s_{i+1}|s\in S_{k}%
 \text{ with probability }\mu_{k}(s)]      We say that collection    S  =   {   S  k   }       S    subscript  S  k      S=\{S_{k}\}   passes the next-bit test if for all polynomial   Q   Q   Q   , for all but finitely many   k   k   k   , for all   ‚Ñ≥   ‚Ñ≥   \mathcal{M}     Completeness for Yao's test  The next-bit test is a particular case of Yao's test for random sequences, and passing it is therefore a necessary condition for passing Yao's test . However, it has also been shown a sufficient condition by Yao . 3  We prove it now in the case of probabilistic Turing machine, since Adleman has already done the work of replacing randomization with non-uniformity in his theorem . The case of boolean circuits cannot be derived from this case (since it involves deciding potentially undecidable problems), but the proof of Adleman's theorem can be easily adapted to the case of non-uniform boolean circuits families.  Let   Q   Q   Q   a distringuer for the probabilistic version of Yao's test, i.e. a probabilistic Turing machine, running in polynomial time, such that there is a polynomial   k   k   k   such that for infinitely many     |    p   k  ,  S   ‚Ñ≥   -   p   k  ,  U   ‚Ñ≥    |   ‚â•   1   Q   (  k  )              superscript   subscript  p   k  S    ‚Ñ≥    superscript   subscript  p   k  U    ‚Ñ≥       1    Q  k      |p_{k,S}^{\mathcal{M}}-p_{k,U}^{\mathcal{M}}|\geq\frac{1}{Q(k)}           R   k  ,  i    =   {    s  1   ‚Ä¶   s  i    u   i  +  1    ‚Ä¶   u   P   (  k  )      |    s  ‚àà   S  k    ,   u  ‚àà    {  0  ,  1  }    P   (  k  )       }        subscript  R   k  i     conditional-set     subscript  s  1   normal-‚Ä¶   subscript  s  i    subscript  u    i  1    normal-‚Ä¶   subscript  u    P  k      formulae-sequence    s   subscript  S  k      u   superscript   0  1     P  k         R_{k,i}=\{s_{1}\ldots s_{i}u_{i+1}\ldots u_{P(k)}|s\in S_{k},u\in\{0,1\}^{P(k)}\}      Let     R   k  ,  0    =    {  0  ,  1  }    P   (  k  )          subscript  R   k  0     superscript   0  1     P  k      R_{k,0}=\{0,1\}^{P(k)}   . We have     R   k  ,   P   (  k  )      =   S  k        subscript  R   k    P  k      subscript  S  k     R_{k,P(k)}=S_{k}   and      ‚àë   i  =  0    P   (  k  )      |    p   k  ,   R   k  ,   i  +  1      ‚Ñ≥   -   p   k  ,   R   k  ,  i     ‚Ñ≥    |    ‚â•   |    p   k  ,   R   k  ,   P   (  k  )       ‚Ñ≥   -   p   k  ,   R   k  ,  0     ‚Ñ≥    |   =   |    p   k  ,  S   ‚Ñ≥   -   p   k  ,  U   ‚Ñ≥    |   ‚â•   1   Q   (  k  )             superscript   subscript     i  0      P  k         superscript   subscript  p   k   subscript  R   k    i  1       ‚Ñ≥    superscript   subscript  p   k   subscript  R   k  i      ‚Ñ≥           subscript   superscript  p  ‚Ñ≥    k   subscript  R   k    P  k        subscript   superscript  p  ‚Ñ≥    k   subscript  R   k  0                  superscript   subscript  p   k  S    ‚Ñ≥    superscript   subscript  p   k  U    ‚Ñ≥            1    Q  k       \sum_{i=0}^{P(k)}|p_{k,R_{k,i+1}}^{\mathcal{M}}-p_{k,R_{k,i}}^{\mathcal{M}}|%
 \geq|p^{\mathcal{M}}_{k,R_{k,P(k)}}-p^{\mathcal{M}}_{k,R_{k,0}}|=|p_{k,S}^{%
 \mathcal{M}}-p_{k,U}^{\mathcal{M}}|\geq\frac{1}{Q(k)}   . Then, we notice that    |    p   k  ,   R   k  ,   i  +  1      ‚Ñ≥   -   p   k  ,   R   k  ,  i     ‚Ñ≥    |         superscript   subscript  p   k   subscript  R   k    i  1       ‚Ñ≥    superscript   subscript  p   k   subscript  R   k  i      ‚Ñ≥      |p_{k,R_{k,i+1}}^{\mathcal{M}}-p_{k,R_{k,i}}^{\mathcal{M}}|   . Therefore, at least one of the    1   Q   (  k  )   P   (  k  )        1    Q  k  P  k     \frac{1}{Q(k)P(k)}   should be no smaller than    Œº   k  ,  i      subscript  Œº   k  i     \mu_{k,i}   .  Next, we consider probability distributions     Œº   k  ,  i    ¬Ø     normal-¬Ø   subscript  Œº   k  i      \overline{\mu_{k,i}}   and    R   k  ,  i      subscript  R   k  i     R_{k,i}   on    Œº   k  ,  i      subscript  Œº   k  i     \mu_{k,i}   . Distribution   i   i   i   is the probability distribution of choosing the    S  k     subscript  S  k    S_{k}   first bits in    Œº  k     subscript  Œº  k    \mu_{k}   with probability given by     P   (  k  )    -  i        P  k   i    P(k)-i   , and the      Œº   k  ,  i     (    w  1   ‚Ä¶   w   P   (  k  )      )    =    (    ‚àë    s  ‚àà   S  k    ,     s  1   ‚Ä¶   s  i    =    w  1   ‚Ä¶   w  i         Œº  k    (  s  )     )     (   1  2   )     P   (  k  )    -  i            subscript  Œº   k  i       subscript  w  1   normal-‚Ä¶   subscript  w    P  k          subscript    formulae-sequence    s   subscript  S  k         subscript  s  1   normal-‚Ä¶   subscript  s  i       subscript  w  1   normal-‚Ä¶   subscript  w  i          subscript  Œº  k   s     superscript    1  2       P  k   i       \mu_{k,i}(w_{1}\ldots w_{P(k)})=\left(\sum_{s\in S_{k},s_{1}\ldots s_{i}=w_{1}%
 \ldots w_{i}}\mu_{k}(s)\right)\left(\frac{1}{2}\right)^{P(k)-i}   remaining bits uniformly at random. We have thus :          Œº   k  ,  i    ¬Ø    (    w  1   ‚Ä¶   w   P   (  k  )      )    =    (    ‚àë    s  ‚àà   S  k    ,     s  1   ‚Ä¶   s   i  -  1     (   1  -   s  i    )    =    w  1   ‚Ä¶   w  i         Œº  k    (  s  )     )     (   1  2   )     P   (  k  )    -  i            normal-¬Ø   subscript  Œº   k  i        subscript  w  1   normal-‚Ä¶   subscript  w    P  k          subscript    formulae-sequence    s   subscript  S  k         subscript  s  1   normal-‚Ä¶   subscript  s    i  1      1   subscript  s  i        subscript  w  1   normal-‚Ä¶   subscript  w  i          subscript  Œº  k   s     superscript    1  2       P  k   i       \overline{\mu_{k,i}}(w_{1}\ldots w_{P(k)})=\left(\sum_{s\in S_{k},s_{1}\ldots s%
 _{i-1}(1-s_{i})=w_{1}\ldots w_{i}}\mu_{k}(s)\right)\left(\frac{1}{2}\right)^{P%
 (k)-i}            Œº   k  ,  i    =    1  2    (    Œº   k  ,   i  +  1     +    Œº   k  ,   i  +  1     ¬Ø    )         subscript  Œº   k  i        1  2      subscript  Œº   k    i  1      normal-¬Ø   subscript  Œº   k    i  1          \mu_{k,i}=\frac{1}{2}(\mu_{k,i+1}+\overline{\mu_{k,i+1}})      We thus have    Œº   k  ,   i  +  1       subscript  Œº   k    i  1      \mu_{k,i+1}   (a simple calculus trick shows this), thus distributions     Œº   k  ,   i  +  1     ¬Ø     normal-¬Ø   subscript  Œº   k    i  1       \overline{\mu_{k,i+1}}   and   ‚Ñ≥   ‚Ñ≥   \mathcal{M}   can be distinguished by      p   Œº   k  ,   i  +  1     ‚Ñ≥   -   p    Œº   k  ,   i  +  1     ¬Ø   ‚Ñ≥    ‚â•    1  2   +   1   R   (  k  )             subscript   superscript  p  ‚Ñ≥    subscript  Œº   k    i  1       subscript   superscript  p  ‚Ñ≥    normal-¬Ø   subscript  Œº   k    i  1            1  2     1    R  k       p^{\mathcal{M}}_{\mu_{k,i+1}}-p^{\mathcal{M}}_{\overline{\mu_{k,i+1}}}\geq%
 \frac{1}{2}+\frac{1}{R(k)}   . Without loss of generality, we can assume that   R   R   R   , with   i   i   i   a polynomial.  This gives us a possible construction of a Turing machine solving the next-bit test : upon receiving the   ùí©   ùí©   \mathcal{N}   first bits of a sequence,   l   l   l   pads this input with a guess of bit     P   (  k  )    -  i  -  1        P  k   i  1    P(k)-i-1   and then   ‚Ñ≥   ‚Ñ≥   \mathcal{M}   random bits, chosen with uniform probability. Then it runs   l   l   l   , and outputs   1   1   1   if the result is    1  -  l      1  l    1-l   , and $1-l$ else.  References    "  Category:Pseudorandom number generators     Andrew Chi-Chih Yao . Theory and applications of trapdoor functions . In Proceedings of the 23rd IEEE Symposium on Foundations of Computer Science, 1982. ‚Ü©  Manuel Blum and Silvio Micali , How to generate cryptographically strong sequences of pseudo-random bits, in SIAM J. COMPUT., Vol. 13, No. 4, November 1984 ‚Ü©      