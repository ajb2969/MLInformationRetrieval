


Loss of significance




Loss of significance

(Figure)
Example of LOS in case of computing 2 forms of the same function

Loss of significance is an undesirable effect in calculations using floating-point arithmetic. It occurs when an operation on two numbers increases relative error substantially more than it increases absolute error, for example in subtracting two nearly equal numbers (known as catastrophic cancellation). The effect is that the number of accurate (significant) digits in the result is reduced unacceptably. Ways to avoid this effect are studied in numerical analysis.
Demonstration of the problem
The effect can be demonstrated with decimal numbers. The following example demonstrates loss of significance for a decimal floating-point data type with 10 significant digits:
Consider the decimal number
   0.1234567891234567890
A floating-point representation of this number on a machine that keeps 10 floating-point digits would be
   0.1234567891
which is fairly close – the difference is very small in comparison with either of the two numbers.
Now perform the calculation
   0.1234567891234567890 − 0.1234567890
The answer, accurate to 10 significant digits, is
   0.0000000001234567890
However, on the 10-digit floating-point machine, the calculation yields
   0.1234567891 − 0.1234567890 = 0.0000000001
Whereas the original numbers are accurate in all of the first (most significant) 10 digits, their floating-point difference is only accurate in its first nonzero digit. This amounts to loss of significance.
Workarounds
It is possible to do computations using an exact fractional representation of rational numbers and keep all significant digits, but this is often prohibitively slower than floating-point arithmetic. Furthermore, it usually only postpones the problem: What if the data are accurate to only ten digits? The same effect will occur.
One of the most important parts of numerical analysis is to avoid or minimize loss of significance in calculations. If the underlying problem is well-posed, there should be a stable algorithm for solving it.
Loss of significant bits
Let x and y be positive normalized floating point numbers.
In the subtraction x − y, r significant bits are lost where






for some positive integers p and q.
Instability of the quadratic equation
For example, consider the quadratic equation:


 
 ,
with the two exact solutions:



This formula may not always produce an accurate result. For example, when 
 
 
 
  is very small, loss of significance can occur in either of the root calculations, depending on the sign of 
 
 
 
 .
The case 
 
 
 
 , 
 
 
 
 , 
 
 
 
 
  will serve to illustrate the problem:



We have



In real arithmetic, the roots are






In 10-digit floating-point arithmetic,






Notice that the solution of greater magnitude is accurate to ten digits, but the first nonzero digit of the solution of lesser magnitude is wrong.
Because of the subtraction that occurs in the quadratic equation, it does not constitute a stable algorithm to calculate the two roots.
A better algorithm
A careful floating point computer implementation combines several strategies to produce a robust result. Assuming the discriminant, , is positive and b is nonzero, the computation would be as follows:1



Here sgn denotes the sign function, where 
 
 
 
  is 1 if 
 
 
 
  is positive and −1 if 
 
 
 
  is negative. This avoids cancellation problems between 
 
 
 
  and the square root of the discriminant by ensuring that only numbers of the same sign are added.
To illustrate the instability of the standard quadratic formula versus this variant formula, consider a quadratic equation with roots 
 
 
 
  and 
 
 
 
 . To sixteen significant figures, roughly corresponding to double-precision accuracy on a computer, the monic quadratic equation with these roots may be written as:








Using the standard quadratic formula and maintaining sixteen significant figures at each step, the standard quadratic formula yields














Note how cancellation has resulted in 
 
 
 
  being computed to only eight significant digits of accuracy. The variant formula presented here, however, yields the following:











Note the retention of all significant digits for 
 
 
 
 .
Note that while the above formulation avoids catastrophic cancellation between 
 
 
 
  and 
 
 
 
 , there remains a form of cancellation between the terms 
 
 
 
  and 
 
 
 
  of the discriminant, which can still lead to loss of up to half of correct significant figures.23 The discriminant 
 
 
 
  needs to be computed in arithmetic of twice the precision of the result to avoid this (e.g. quad precision if the final result is to be accurate to full double precision).4 This can be in the form of a fused multiply-add operation.5
To illustrate this, consider the following quadratic equation, adapted from Kahan (2004):6


 
  This equation has 
 
 
 
  and has roots





 
 . However, when computed using IEEE 754 double-precision arithmetic corresponding to 15 to 17 significant digits of accuracy, 
 
 
 
  is rounded to 0.0, and the computed roots are





 
  which are both false after the eighth significant digit. This is despite the fact that superficially, the problem seems to require only eleven significant digits of accuracy for its solution.
See also

Round-off error
example in wikibooks : Cancellation of significant digits in numerical computations
Kahan summation algorithm

References
"
Category:Numerical analysis



, Section 5.6: "Quadratic and Cubic Equations.









