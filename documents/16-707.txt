   Multidimensional transform      Multidimensional transform   In mathematical analysis and applications, multidimensional transforms are used to analyze the frequency content of signals in a domain of two or more dimensions.  Multidimensional Fourier transform  One of the more popular multidimensional transforms is the Fourier transform , which converts a signal from a time/space domain representation to a frequency domain representation. 1 The discrete-domain multidimensional Fourier transform (FT) can be computed as follows:       F   (   w  1   ,   w  2   ,  …  ,   w  m   )    =    ∑    n  1   =   -  ∞    ∞     ∑    n  2   =   -  ∞    ∞    ⋯    ∑    n  m   =   -  ∞    ∞    f   (   n  1   ,   n  2   ,  …  ,   n  m   )    e    -   j   w  1    n  1     -   j   w  2    n  2   ⋯   -   j   w  m    n  m                 F    subscript  w  1    subscript  w  2   normal-…   subscript  w  m       superscript   subscript      subscript  n  1             superscript   subscript      subscript  n  2             normal-⋯    superscript   subscript      subscript  n  m             f    subscript  n  1    subscript  n  2   normal-…   subscript  n  m     superscript  e        j   subscript  w  1    subscript  n  1       j   subscript  w  2    subscript  n  2   normal-⋯     j   subscript  w  m    subscript  n  m             F(w_{1},w_{2},\dots,w_{m})=\sum_{n_{1}=-\infty}^{\infty}\sum_{n_{2}=-\infty}^{%
 \infty}\cdots\sum_{n_{m}=-\infty}^{\infty}f(n_{1},n_{2},\dots,n_{m})e^{-jw_{1}%
 n_{1}-jw_{2}n_{2}\cdots-jw_{m}n_{m}}     where F stands for the multidimensional Fourier transform, m stands for multidimensional dimension. Define f as a multidimensional discrete-domain signal. The inverse multidimensional Fourier transform is given by       f   (   n  1   ,   n  2   ,  …  ,   n  m   )    =     (   1   2  π    )   m     ∫   -  π   π    ⋯    ∫   -  π   π    F   (   w  1   ,   w  2   ,  …  ,   w  m   )     e    j   w  1    n  1    +   j   w  2    n  2    +  ⋯  +   j   w  m    n  m       d   w  1    ⋯   d   w  m              f    subscript  n  1    subscript  n  2   normal-…   subscript  n  m        superscript    1    2  π    m     superscript   subscript     π    π     normal-⋯    superscript   subscript     π    π     F    subscript  w  1    subscript  w  2   normal-…   subscript  w  m     superscript  e      j   subscript  w  1    subscript  n  1      j   subscript  w  2    subscript  n  2    normal-⋯    j   subscript  w  m    subscript  n  m      d   subscript  w  1   normal-⋯  d   subscript  w  m          f(n_{1},n_{2},\dots,n_{m})=\left(\frac{1}{2\pi}\right)^{m}\int_{-\pi}^{\pi}%
 \cdots\int_{-\pi}^{\pi}F(w_{1},w_{2},\ldots,w_{m})e^{jw_{1}n_{1}+jw_{2}n_{2}+%
 \cdots+jw_{m}n_{m}}\,dw_{1}\cdots\,dw_{m}     The multidimensional Fourier transform for continuous-domain signals is defined as follows: 2       F   (   Ω  1   ,   Ω  2   ,  …  ,   Ω  m   )    =    ∫   -  ∞   ∞    ⋯    ∫   -  ∞   ∞    f   (   t  1   ,   t  2   ,  …  ,   t  m   )     e    -   j   Ω  1    t  1     -   j   Ω  2    t  2   ⋯   -   j   Ω  m    t  m       d   t  1    ⋯   d   t  m             F    subscript  normal-Ω  1    subscript  normal-Ω  2   normal-…   subscript  normal-Ω  m       superscript   subscript            normal-⋯    superscript   subscript            f    subscript  t  1    subscript  t  2   normal-…   subscript  t  m     superscript  e        j   subscript  normal-Ω  1    subscript  t  1       j   subscript  normal-Ω  2    subscript  t  2   normal-⋯     j   subscript  normal-Ω  m    subscript  t  m      d   subscript  t  1   normal-⋯  d   subscript  t  m         F(\Omega_{1},\Omega_{2},\ldots,\Omega_{m})=\int_{-\infty}^{\infty}\cdots\int_{%
 -\infty}^{\infty}f(t_{1},t_{2},\ldots,t_{m})e^{-j\Omega_{1}t_{1}-j\Omega_{2}t_%
 {2}\cdots-j\Omega_{m}t_{m}}\,dt_{1}\cdots\,dt_{m}     A fast Fourier transform (FFT) is an algorithm to compute the discrete Fourier transform (DFT) and its inverse. An FFT computes the DFT and produces exactly the same result as evaluating the DFT definition directly; the only difference is that an FFT is much faster. (In the presence of round-off error, many FFT algorithms are also much more accurate than evaluating the DFT definition directly).There are many different FFT algorithms involving a wide range of mathematics, from simple complex-number arithmetic to group theory and number theory. See more in FFT .  The multidimensional discrete Fourier transform (DFT) is a sampled version of the discrete-domain FT by evaluating it at sample frequencies that are uniformly spaced. 3 The DFT is given by:       F  x   (   K  1   ,   K  2   ,  …  ,   K  n   )    =    ∑    n  1   =  0     N  1   -  1     ⋯    ∑   n  m     N  m   -  1     f  x   (   n  1   ,   n  2   ,  …  ,   n  N   )    e    -   j    2  π    N  1     n  1    K  1     -   j    2  π    N  2     n  2    K  2   ⋯   -   j    2  π    N  m     n  m    K  m                F  x    subscript  K  1    subscript  K  2   normal-…   subscript  K  n       superscript   subscript      subscript  n  1   0       subscript  N  1   1      normal-⋯    superscript   subscript    subscript  n  m       subscript  N  m   1      f  x    subscript  n  1    subscript  n  2   normal-…   subscript  n  N     superscript  e        j      2  π    subscript  N  1     subscript  n  1    subscript  K  1       j      2  π    subscript  N  2     subscript  n  2    subscript  K  2   normal-⋯     j      2  π    subscript  N  m     subscript  n  m    subscript  K  m            Fx(K_{1},K_{2},\ldots,K_{n})=\sum_{n_{1}=0}^{N_{1}-1}\cdots\sum_{n_{m}}^{N_{m}%
 -1}fx(n_{1},n_{2},\ldots,n_{N})e^{-j\frac{2\pi}{N_{1}}n_{1}K_{1}-j\frac{2\pi}{%
 N_{2}}n_{2}K_{2}\cdots-j\frac{2\pi}{N_{m}}n_{m}K_{m}}     for , .  The inverse multidimensional DFT equation is       f  x   (   n  1   ,   n  2   ,  …  ,   n  m   )    =    1    N  1   ⋯   N  m       ∑    K  1   =  0     N  1   -  1     ⋯    ∑   K  m     N  m   -  1     F  x   (   K  1   ,   K  2   ,  …  ,   K  m   )    e    j    2  π    N  1     n  1    K  1    +   j    2  π    N  2     n  2    K  2   ⋯   +   j    2  π    N  m     n  m    K  m                 f  x    subscript  n  1    subscript  n  2   normal-…   subscript  n  m         1     subscript  N  1   normal-⋯   subscript  N  m       superscript   subscript      subscript  K  1   0       subscript  N  1   1      normal-⋯    superscript   subscript    subscript  K  m       subscript  N  m   1      F  x    subscript  K  1    subscript  K  2   normal-…   subscript  K  m     superscript  e      j      2  π    subscript  N  1     subscript  n  1    subscript  K  1      j      2  π    subscript  N  2     subscript  n  2    subscript  K  2   normal-⋯     j      2  π    subscript  N  m     subscript  n  m    subscript  K  m             fx(n_{1},n_{2},\ldots,n_{m})=\frac{1}{N_{1}\cdots N_{m}}\sum_{K_{1}=0}^{N_{1}-%
 1}\cdots\sum_{K_{m}}^{N_{m}-1}Fx(K_{1},K_{2},\ldots,K_{m})e^{j\frac{2\pi}{N_{1%
 }}n_{1}K_{1}+j\frac{2\pi}{N_{2}}n_{2}K_{2}\cdots+j\frac{2\pi}{N_{m}}n_{m}K_{m}}     for .  Multidimensional discrete cosine transform  The discrete cosine transform (DCT) is used in a wide range of applications such as data compression , feature extraction , Image reconstruction , multi-frame detection and so on. The multidimensional DCT is given by:       F  x   (   K  1   ,   K  2   ,  …  ,   K  r   )    =    ∑    n  1   =  0     N  1   -  1      ∑    n  2   =  0     N  2   -  1     ⋯    ∑    n  r   =  0     N  r   -  1     f  x   (   n  1   ,   n  2   ,  …  ,   n  r   )    cos     π   (    2   n  1    +  1   )    K  1     2   N  1     ⋯     cos    π   (    2   n  r    +  1   )    K  r     2   N  r                 F  x    subscript  K  1    subscript  K  2   normal-…   subscript  K  r       superscript   subscript      subscript  n  1   0       subscript  N  1   1      superscript   subscript      subscript  n  2   0       subscript  N  2   1      normal-⋯    superscript   subscript      subscript  n  r   0       subscript  N  r   1      f  x    subscript  n  1    subscript  n  2   normal-…   subscript  n  r            π      2   subscript  n  1    1    subscript  K  1      2   subscript  N  1     normal-⋯          π      2   subscript  n  r    1    subscript  K  r      2   subscript  N  r             Fx(K_{1},K_{2},\ldots,K_{r})=\sum_{n_{1}=0}^{N_{1}-1}\sum_{n_{2}=0}^{N_{2}-1}%
 \cdots\sum_{n_{r}=0}^{N_{r}-1}fx(n_{1},n_{2},\ldots,n_{r})\cos{\frac{\pi(2n_{1%
 }+1)K_{1}}{2N_{1}}}\cdots\cos{\frac{\pi(2n_{r}+1)K_{r}}{2N_{r}}}     for 0, 1, ..., N i − 1}} , i = 1, 2, ..., r .  Applications  The DCT and DFT are often used in signal processing 4 and image processing, and they are also used to efficiently solve partial differential equations by spectral methods. The DFT can also be used to perform other operations such as convolutions or multiplying large integers. The DFT and DCT have seen wide usage across a large number of fields, we only sketch a few examples below.  Image processing  (Figure)  Two-dimensional DCT frequencies from the JPEG DCT   The DCT is used in JPEG image compression, MJPEG , MPEG , DV , Daala , and Theora  video compression . There, the two-dimensional DCT-II of N x N blocks are computed and the results are quantized and entropy coded . In this case, N is typically 8 and the DCT-II formula is applied to each row and column of the block. The result is an 8x8 transform coefficient array in which the: (0,0) element (top-left) is the DC (zero-frequency) component and entries with increasing vertical and horizontal index values represent higher vertical and horizontal spatial frequencies, as shown in the picture on the right.  In image processing, one can also analyze and describe unconventional cryptographic methods based on 2D DCTs, for inserting non-visible binary watermarks into the 2D image plane, 5 and According to different orientations, the 2-D directional DCT-DWT hybrid transform can be applied in denoising ultrasound images. 6 3-D DCT can also be used to transform video data or 3-D image data in watermark embedding schemes in transform domain. 7 8  Spectral analysis  When the DFT is used for spectral analysis , the { x n } sequence usually represents a finite set of uniformly spaced time-samples of some signal x ( t ) where t represents time. The conversion from continuous time to samples (discrete-time) changes the underlying Fourier transform of x ( t ) into a discrete-time Fourier transform (DTFT), which generally entails a type of distortion called aliasing . Choice of an appropriate sample-rate (see Nyquist rate ) is the key to minimizing that distortion. Similarly, the conversion from a very long (or infinite) sequence to a manageable size entails a type of distortion called leakage , which is manifested as a loss of detail (aka resolution) in the DTFT. Choice of an appropriate sub-sequence length is the primary key to minimizing that effect. When the available data (and time to process it) is more than the amount needed to attain the desired frequency resolution, a standard technique is to perform multiple DFTs, for example to create a spectrogram . If the desired result is a power spectrum and noise or randomness is present in the data, averaging the magnitude components of the multiple DFTs is a useful procedure to reduce the variance of the spectrum (also called a periodogram in this context); two examples of such techniques are the Welch method and the Bartlett method ; the general subject of estimating the power spectrum of a noisy signal is called spectral estimation .  A final source of distortion (or perhaps illusion ) is the DFT itself, because it is just a discrete sampling of the DTFT, which is a function of a continuous frequency domain. That can be mitigated by increasing the resolution of the DFT. That procedure is illustrated at Sampling the DTFT .   The procedure is sometimes referred to as zero-padding , which is a particular implementation used in conjunction with the fast Fourier transform (FFT) algorithm. The inefficiency of performing multiplications and additions with zero-valued "samples" is more than offset by the inherent efficiency of the FFT.  As already noted, leakage imposes a limit on the inherent resolution of the DTFT. So there is a practical limit to the benefit that can be obtained from a fine-grained DFT.   Partial differential equations  Discrete Fourier transforms are often used to solve partial differential equations , where again the DFT is used as an approximation for the Fourier series (which is recovered in the limit of infinite N ). The advantage of this approach is that it expands the signal in complex exponentials e inx , which are eigenfunctions of differentiation: d / dx  e inx = in  e inx . Thus, in the Fourier representation, differentiation is simple—we just multiply by i n . (Note, however, that the choice of n is not unique due to aliasing; for the method to be convergent, a choice similar to that in the trigonometric interpolation section above should be used.) A linear differential equation with constant coefficients is transformed into an easily solvable algebraic equation. One then uses the inverse DFT to transform the result back into the ordinary spatial representation. Such an approach is called a spectral method .  DCTs are also widely employed in solving partial differential equations by spectral methods, where the different variants of the DCT correspond to slightly different even/odd boundary conditions at the two ends of the array.  Image processing for arts surface analysis by FFT  One very important factor is that we must apply a non-destructive method to obtain those rare valuables information (from the HVS viewing point, is focused in whole colorimetric and spatial information) about works of art and zero-damage on them. We can understand the arts by looking at a color change or by measuring the surface uniformity change. Since the whole image will be very huge, so we use a double raised cosine window to truncate the image: 9       w   (  x  ,  y  )    =    1  4    (   1  +   cos    x  π   N     )    (   1  +   cos    y  π   N     )          w   x  y        1  4     1        x  π   N       1        y  π   N        w(x,y)=\frac{1}{4}\left(1+\cos{\frac{x\pi}{N}}\right)\left(1+\cos{\frac{y\pi}{%
 N}}\right)     where N is the image dimension and x , y are the coordinates from the center of image spans from 0 to N /2. The author wanted to compute an equal value for spatial frequency such as: 10       A  m     (  f  )   2   =   [   ∑   i  =   -  f    f   FFT    (  -  f  ,  i  )   2   +   ∑   i  =   -  f    f   FFT    (  f  ,  i  )   2   +   ∑   i  =    -  f   +  1     f  -  1    FFT    (  i  ,  -  f  )   2   +   ∑   i  =    -  f   +  1     f  -  1    FFT    (  i  ,  f  )   2   ]      fragments   subscript  A  m    superscript   fragments  normal-(  f  normal-)   2     fragments  normal-[   superscript   subscript     i    f     f   FFT   superscript   fragments  normal-(   f  normal-,  i  normal-)   2     superscript   subscript     i    f     f   FFT   superscript   fragments  normal-(  f  normal-,  i  normal-)   2     superscript   subscript     i      f   1       f  1    FFT   superscript   fragments  normal-(  i  normal-,   f  normal-)   2     superscript   subscript     i      f   1       f  1    FFT   superscript   fragments  normal-(  i  normal-,  f  normal-)   2   normal-]     A_{m}{(f)}^{2}=\left[\sum_{i=-f}^{f}\operatorname{FFT}(-f,i)^{2}+\sum_{i=-f}^{%
 f}\operatorname{FFT}(f,i)^{2}+\sum_{i=-f+1}^{f-1}\operatorname{FFT}(i,-f)^{2}+%
 \sum_{i=-f+1}^{f-1}\operatorname{FFT}(i,f)^{2}\right]     where "FFT" denotes the fast Fourier transform, and f is the spatial frequency spans from 0 to . The proposed FFT-based imaging approach is diagnostic technology to ensure a long life and stable to culture arts. This is a simple, cheap which can be used in museums without affecting their daily use. But this method doesn’t allow a quantitative measure of the corrosion rate.  See also   Discrete cosine transform  List of Fourier-related transforms  List of Fourier analysis topics   References  "  Category:Fourier analysis  Category:Integral transforms  Category:Multidimensional signal processing     Smith,W. Handbook of Real-Time Fast Fourier Transforms:Algorithms to Product Testing, Wiley_IEEE Press, edition 1, pages 73–80, 1995 ↩   Dudgeon and Mersereau, Multidimensional Digital Signal Processing,2nd edition,1995 ↩  Tan Xiao, Shao-hai Hu, Yang Xiao. 2-D DFT-DWT Application to Multidimensional Signal Processing. ICSP2006 Proceedings, 2006 IEEE ↩  Peter KULLAI, Pavol SABAKAI, JozefHUSKAI. Simple Possibilities of 2D DCT Application in Digital Monochrome Image Cryptography. Radioelektronika, 17th International Conference, IEEE, 2007, pp. 1–6 ↩  Xin-ling Wen, Yang Xiao. The 2-D Directional DCT-DWT Hybrid Transform and Its Application in Denoising Ultrasound Image. Signal Processing. ICSP 2008. 9th International Conference, Page(s): 946–949 ↩  Jinwei Wang, Shiguo Lian, Zhongxuan Liu, Zhen Ren, Yuewei Dai, Haila Wang. Image Watermarking Scheme Based on 3-D DCT.Industrial Electronics and Applications, 2006 1ST IEEE Conference, pp. 1–6 ↩  Jin Li, Moncef Gabbouj, Jarmo Takala, Hexin Chen. Direct 3-D DCT-to-DCT Resizing Algorithm for Video Coding. Image and Signal Processing and Analysis, 2009. ISPA 2009. Proceedings of 6th International Symposium pp. 105–110 ↩  Angelini, E., Grassin, S. ; Piantanida, M. ; Corbellini, S. ; Ferraris, F. ; Neri, A. ; Parvis, M. FFT-based imaging processing for cultural heritage monitoring Instrumentation and Measurement Technology Conference (I2MTC), 2010 IEEE ↩      