   Baker's technique      Baker's technique   Baker's technique , created in 1983 (conference presentation) and published in a journal in 1994 by Brenda Baker, is a method for designing polynomial-time approximation schemes , PTASs, for problems on planar graphs . This technique has given PTASs for the following problems: subgraph isomorphism , maximum independent set , minimum vertex cover , minimum dominating set , minimum edge dominating set , maximum triangle matching, and many others. Its generalizations have also led to many PTASs on graphs excluding a fixed minor, such as bounded genus graphs, as well as to other classes of graphs not closed under taking minors such as the 1-planar graphs . The idea for Baker's technique is to break the graph into layers, such that the problem can be solved optimally on each layer, then combine the solutions from each layer in a reasonable way that will result in a feasible solution.  Example of technique  The example that we will use to demonstrate Baker's technique is the maximum weight independent set problem.  Algorithm  INDEPENDENT-SET(    G   G   G    ,    w   w   w    ,    ϵ   ϵ   \epsilon    )  Choose an arbitrary vertex    r   r   r         k  =   1  /  ϵ       k    1  ϵ     k=1/\epsilon     find the breadth-first search levels for    G   G   G    rooted at    r   r   r         (   mod  k   )     pmod  k    \;\;(\mathop{{\rm mod}}k)       {   V  0   ,   V  1   ,  …  ,   V   k  -  1    }      subscript  V  0    subscript  V  1   normal-…   subscript  V    k  1      \{V_{0},V_{1},\ldots,V_{k-1}\}     for     ℓ  =   0  ,  …  ,   k  -  1        normal-ℓ   0  normal-…    k  1      \ell=0,\ldots,k-1     find the components       G  1  ℓ   ,   G  2  ℓ   ,  …   ,      subscript   superscript  G  normal-ℓ   1    subscript   superscript  G  normal-ℓ   2   normal-…    G^{\ell}_{1},G^{\ell}_{2},\ldots,    of    G   G   G    after deleting     V  ℓ     subscript  V  normal-ℓ    V_{\ell}     for     i  =   1  ,  2  ,  …       i   1  2  normal-…     i=1,2,\ldots     compute     S  i  ℓ     superscript   subscript  S  i   normal-ℓ    S_{i}^{\ell}    , the maximum-weight independent set of     G  i  ℓ     superscript   subscript  G  i   normal-ℓ    G_{i}^{\ell}          S  ℓ   =    ∪  i    S  i  ℓ         superscript  S  normal-ℓ     subscript   i    superscript   subscript  S  i   normal-ℓ      S^{\ell}=\cup_{i}S_{i}^{\ell}     let     S   ℓ  *      superscript  S   superscript  normal-ℓ      S^{\ell^{*}}    be the solution of maximum weight among     {   S  0   ,   S  1   ,  …  ,   S   k  -  1    }      superscript  S  0    superscript  S  1   normal-…   superscript  S    k  1      \{S^{0},S^{1},\ldots,S^{k-1}\}     return     S   ℓ  *      superscript  S   superscript  normal-ℓ      S^{\ell^{*}}     Notice that the above algorithm is feasible because each    S  ℓ     superscript  S  normal-ℓ    S^{\ell}   is the union of disjoint independent sets.  Dynamic programming  Dynamic programming is used when we compute the maximum-weight independent set for each    G  i  ℓ     superscript   subscript  G  i   normal-ℓ    G_{i}^{\ell}   . This dynamic program works because each    G  i  ℓ     superscript   subscript  G  i   normal-ℓ    G_{i}^{\ell}   is a   k   k   k   - outerplanar graph . Many NP-complete problems can be solved with dynamic programming on   k   k   k   -outerplanar graphs.  References    .   .   .   .   .   .   .   .   "  Category:Articles created via the Article Wizard  Category:Graph theory  Category:Planar graphs  Category:Approximation algorithms   