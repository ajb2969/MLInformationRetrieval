   Fürer's algorithm      Fürer's algorithm   Fürer's algorithm is an integer multiplication algorithm for very large numbers possessing a very low asymptotic complexity . It was created in 2007 by Swiss mathematician Martin Fürer of Pennsylvania State University 1 as an asymptotically faster (when analysed on a multitape Turing machine ) algorithm than its predecessor, the Schönhage–Strassen algorithm published in 1971. 2  The predecessor to the Fürer algorithm, the Schönhage–Strassen algorithm, used fast Fourier transforms to compute integer products in time    O   (   n   log   n   log   log  n       )       O    n      n      n         O(n\log n\log\log n)   (in big O notation ) and its authors, Arnold Schönhage and Volker Strassen , also conjectured a lower bound for the problem of Here,   n   n   n   denotes the total number of bits in the two input numbers. Fürer's algorithm reduces the gap between these two bounds: it can be used to multiply binary integers of length   n   n   n   in time    n   log   n   2   O   (    log  *   n   )           n      n   superscript  2    O    superscript     n         n\log n\,2^{O(\log^{*}n)}   (or by a circuit with that many logic gates), where  represents the iterated logarithm operation. However, the difference between the    log   log  n         n     \log\log n   and    2    log  *   n      superscript  2    superscript     n     2^{\log^{*}n}   factors in the time bounds of the Schönhage–Strassen algorithm and the Fürer algorithm for realistic values of   n   n   n   is very small. 3  In 2008, Anindya De, Chandan Saha, Piyush Kurur and Ramprasad Saptharishi 4 gave a similar algorithm that relies on modular arithmetic instead of complex arithmetic to achieve the same running time.  In 2014, David Harvey, Joris van der Hoeven, and Grégoire Lecerf 5 showed that an optimized version of Fürer's algorithm achieves a running time of    O   (   n   log   n   2   4    log  *   n        )       O    n      n   superscript  2    4    superscript     n          O(n\log n2^{4\log^{*}n})   , making the implied constant in the    O   (    log  *   n   )       O    superscript     n     O(\log^{*}n)   exponent explicit. They also gave a modification to Fürer's algorithm that achieves    O   (   n   log   n   2   3    log  *   n        )       O    n      n   superscript  2    3    superscript     n          O(n\log n2^{3\log^{*}n})     In 2015 Svyatoslav Covanov and Emmanuel Thomé provided another modifications that achieves same running time. 6 Yet, as all the other implementation, it's still not practical.  See also   Number-theoretic transform   References  "  Category:Computer arithmetic algorithms     Fürer, M. (2007). " Faster Integer Multiplication " in Proceedings of the thirty-ninth annual ACM symposium on Theory of computing, June 11–13, 2007, San Diego, California, USA ↩  A. Schönhage and V. Strassen, "Schnelle Multiplikation großer Zahlen", Computing 7 (1971), pp. 281–292. ↩   Anindya De, Piyush P Kurur, Chandan Saha, Ramprasad Saptharishi. Fast Integer Multiplication Using Modular Arithmetic. Symposium on Theory of Computation (STOC) 2008. ↩  David Harvey, Joris van der Hoeven, and Grégoire Lecerf, "Even faster integer multiplication", 2014, ↩  Svyatoslav Covanov and Emmanuel Thomé, "Fast arithmetic for faster integer multiplication", 2015 ↩     