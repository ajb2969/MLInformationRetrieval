


Bisection (software engineering)




Bisection (software engineering)

Bisection is a method used in software development to identify change sets that result in a specific behavior change. It is mostly employed for finding the patch that introduced a bug. Another application area is finding the patch that indirectly fixed a bug.
Overview
Code bisection has the goal of minimizing the effort to find a specific change set.
It employs a divide and conquer algorithm that depends on having access to the code history which is usually preserved by revision control in a code repository.
Bisection method
Code bisection algorithm
Code history has the structure of a directed acyclic graph which can be topologically sorted. This makes it possible to use a divide and conquer search algorithm which:

splits up the search space of candidate revisions
tests for the behavior in question
reduces the search space depending on the test result
re-iterates the steps above until a range with at most one bisectable patch candidate remains

Algorithmic complexity
Bisection is in LSPACE having an algorithmic complexity of 
 
 
 
  with 
 
 
 
  denoting the number of revisions in the search space, and is similar to a binary search.
Desirable repository properties
For code bisection it is desirable that each revision in the search space can be built and tested independently.
Support by revision control systems
Revision control systems like Git or Mercurial directly support12 code bisection.
Other revision control systems like Bazaar or Subversion support it indirectly employing plugins3 or external scripts.4
Support by other systems

Phoronix Test Suite can do bisection automatically to find performance regressions

References
"
Category:Revision control Category:Revision control systems Category:Software development process Category:Algorithms



http://www.kernel.org/pub/software/scm/git/docs/v1.7.10/git-bisect.html
http://www.selenic.com/mercurial/hg.1.html#bisect
http://doc.bazaar.canonical.com/plugins/en/bisect-plugin.html
https://metacpan.org/module/INFINOID/App-SVN-Bisect-1.1/bin/svn-bisect




