   Disjunct matrix      Disjunct matrix   Disjunct and separable matrices play a pivotal role in the mathematical area of non-adaptive group testing . This area investigates efficient designs and procedures to identify 'needles in haystacks' by conducting the tests on groups of items instead of each item alone. The main concept is that if there are very few special items (needles) and the groups are constructed according to certain combinatorial guidelines, then one can test the groups and find all the needles. This can reduce the cost and the labor associated with of large scale experiments.  The grouping pattern can be represented by a    t  ×  n      t  n    t\times n   binary matrix, where each column represents an item and each row represents a pool. The symbol '1' denotes participation in the pool and '0' absence from a pool. The d -disjunctness and the d -separability of the matrix describe sufficient condition to identify d special items.  In a matrix that is d -separable, the Boolean sum of every d columns is unique. In a matrix that is d -disjunct the Boolean sum of every d columns does not contain any other column in the matrix. Theoretically, for the same number of columns (items), one can construct d -separable matrices with fewer rows (tests) than d -disjunct. However, designs that are based on d -separable are less applicable since the decoding time to identify the special items is exponential. In contrast, the decoding time for d -disjunct matrices is polynomial.  d -separable  Definition: A    t  ×  n      t  n    t\times n   matrix   M   M   M   is   d   d   d   -separable if and only if     ∀   S  1    ≠   S  2   ⊆   [  n  ]          for-all   subscript  S  1     subscript  S  2         delimited-[]  n      \forall S_{1}\neq S_{2}\subseteq[n]   where      |   S  1   |   ,   |   S  2   |    ≤  d          subscript  S  1       subscript  S  2     d    |S_{1}|,|S_{2}|\leq d   such that      ⋃   j  ∈   S  1      M  j    ≠    ⋃   i  ∈   S  2      M  i          subscript     j   subscript  S  1      subscript  M  j      subscript     i   subscript  S  2      subscript  M  i      \bigcup_{j\in S_{1}}M_{j}\neq\bigcup_{i\in S_{2}}M_{i}     Decoding algorithm  First we will describe another way to look at the problem of group testing and how to decode it from a different notation. We can give a new interpretation of how group testing works as follows:  Group testing: Given input   M   M   M   and   𝐫   𝐫   \mathbf{r}   such that    𝐫  =   M  𝐱       𝐫    M  𝐱     \mathbf{r}=M\mathbf{x}   output   𝐱   𝐱   \mathbf{x}      Take    M  j     subscript  M  j    M_{j}   to be the    j   t  h      superscript  j    t  h     j^{th}   column of   M   M   M     Define     S   M  j    ⊆   [  t  ]        subscript  S   subscript  M  j     delimited-[]  t     S_{M_{j}}\subseteq[t]   so that      M  j    (  i  )    =  1         subscript  M  j   i   1    M_{j}(i)=1   if and only if    i  ∈   S   M  j        i   subscript  S   subscript  M  j      i\in S_{M_{j}}     This gives that     S  𝐫   =    ⋃    j  ∈   [  n  ]    ,    𝐱  j   =  1      S   M  j          subscript  S  𝐫     subscript    formulae-sequence    j   delimited-[]  n       subscript  𝐱  j   1      subscript  S   subscript  M  j       S_{\mathbf{r}}=\bigcup_{j\in[n],\mathbf{x}_{j}=1}S_{M_{j}}      This formalizes the relation between   𝐱   𝐱   \mathbf{x}   and the columns of   M   M   M   and   𝐫   𝐫   \mathbf{r}   in a way more suitable to the thinking of   d   d   d   -separable and   d   d   d   -disjunct matrices. The algorithm to decode a   d   d   d   -separable matrix is as follows:  Given a    t  ×  n      t  n    t\times n   matrix   M   M   M   such that   M   M   M   is   d   d   d   -separable:   For each    T  ⊆   [  n  ]       T   delimited-[]  n     T\subseteq[n]   such that     |  T  |   ≤  d        T   d    |T|\leq d   check if     S  𝐫   =    ⋃   j  ∈  T     S   M  j          subscript  S  𝐫     subscript     j  T     subscript  S   subscript  M  j       S_{\mathbf{r}}=\bigcup_{j\in T}S_{M_{j}}      This algorithm runs in time    n   𝒪   (  d  )       superscript  n    𝒪  d     n^{\mathcal{O}(d)}   .  d -disjunct  In literature disjunct matrices are also called super-imposed codes and d -cover-free families.  Definition: A   t   t   t   x   n   n   n   matrix   M   M   M   is d-disjunct if     ∀  S   ⊆   [  n  ]        for-all  S    delimited-[]  n     \forall S\subseteq[n]   such that     |  S  |   ≤  d        S   d    |S|\leq d   ,     ∀  j   ∉  S       for-all  j   S    \forall j\notin S       ∃  i      i    \exists i   such that     M   i  ,  j    =  1       subscript  M   i  j    1    M_{i,j}=1   but      ∀  k   ∈  S   ,    M   i  ,  k    =  0      formulae-sequence     for-all  k   S      subscript  M   i  k    0     \forall k\in S,M_{i,k}=0   . Denoting    M  a     subscript  M  a    M_{a}   is the    a   t  h      superscript  a    t  h     a^{th}   column of   M   M   M   and     S   M  a    ⊆   [  t  ]        subscript  S   subscript  M  a     delimited-[]  t     S_{M_{a}}\subseteq[t]   where      M  a    (  b  )    =  1         subscript  M  a   b   1    M_{a}(b)=1   if and only if    b  ∈   S   M  a        b   subscript  S   subscript  M  a      b\in S_{M_{a}}   gives that   M   M   M   is   d   d   d   -disjunct if and only if     S   M  j    ⊄    ∪   k  ∈  S     S   M  k        not-subset-of   subscript  S   subscript  M  j      subscript     k  S     subscript  S   subscript  M  k       S_{M_{j}}\not\subset\cup_{k\in S}S_{M_{k}}     Claim:    M   M   M   is   d   d   d   -disjunct implies   M   M   M   is   d   d   d   -separable  Proof: (by contradiction) Let   M   M   M   be a   t   t   t   x   n   n   n      d   d   d   -disjunct matrix. Assume for contradiction that   M   M   M   is not   d   d   d   -separable. Then there exists      T  1   ,   T  2    ∈   [  n  ]         subscript  T  1    subscript  T  2     delimited-[]  n     T_{1},T_{2}\in[n]   and     T  1   ≠   T  2        subscript  T  1    subscript  T  2     T_{1}\neq T_{2}   with      |   T  1   |   ,   |   T  2   |    ≤  d          subscript  T  1       subscript  T  2     d    |T_{1}|,|T_{2}|\leq d   such that      ⋃   i  ∈   T  1      M  i    =    ∪   i  ∈   T  2      S   M  i           subscript     i   subscript  T  1      subscript  M  i      subscript     i   subscript  T  2      subscript  S   subscript  M  i       \bigcup_{i\in T_{1}}M_{i}=\cup_{i\in T_{2}}S_{M_{i}}   . This implies that     ∃  j   ∈    T  2   ∖   T  1          j      subscript  T  2    subscript  T  1      \exists j\in T_{2}\setminus T_{1}   such that     S   M  j    ⊆    ⋃   k  ∈   T  1      T   M  k          subscript  S   subscript  M  j      subscript     k   subscript  T  1      subscript  T   subscript  M  k       S_{M_{j}}\subseteq\bigcup_{k\in T_{1}}T_{M_{k}}   . This contradicts the fact that   M   M   M   is   d   d   d   -disjunct. Therefore   M   M   M   is   d   d   d   -separable.   □   normal-□   \Box     Decoding algorithm  The algorithm for   d   d   d   -separable matrices was still a polynomial in   n   n   n   . The following will give a nicer algorithm for   d   d   d   -disjunct matrices which will be a   d   d   d   multiple instead of raised to the power of   d   d   d   given our bounds for   t   t   t   . The algorithm is as follows in the proof of the following lemma:  Lemma 1: There exists an    𝒪   (   n  t   )       𝒪    n  t     \mathcal{O}(nt)   time decoding for any   d   d   d   -disjunct   t   t   t   x   n   n   n   matrix.   Observation 1: For any matrix   M   M   M   and given     M  𝐱   =  𝐫        M  𝐱   𝐫    M\mathbf{x}=\mathbf{r}   if     𝐫  i   =  1       subscript  𝐫  i   1    \mathbf{r}_{i}=1   it implies    ∃  j      j    \exists j   such that     M   i  ,  j    =  1       subscript  M   i  j    1    M_{i,j}=1   and     𝐱  j   =  1       subscript  𝐱  j   1    \mathbf{x}_{j}=1   where    1  ≤  i  ≤  t        1  i       t     1\leq i\leq t   and    1  ≤  j  ≤  n        1  j       n     1\leq j\leq n   . The opposite is also true. If     𝐫  i   =  0       subscript  𝐫  i   0    \mathbf{r}_{i}=0   it implies    ∀  j     for-all  j    \forall j   if     M   i  ,  j    =  1       subscript  M   i  j    1    M_{i,j}=1   then     𝐱  j   =  0       subscript  𝐱  j   0    \mathbf{x}_{j}=0   . This is the case because   𝐫   𝐫   \mathbf{r}   is generated by taking all of the logical or of the    𝐱  j     subscript  𝐱  j    \mathbf{x}_{j}   's where     M   i  ,  j    =  1       subscript  M   i  j    1    M_{i,j}=1   .  Observation 2: For any   d   d   d   -disjunct matrix and every set    T  =   {  j  |    𝐱  j   =  1   }       T   conditional-set  j     subscript  𝐱  j   1      T=\{j|\mathbf{x}_{j}=1\}   where     |  T  |   ≤  d        T   d    |T|\leq d   and for each    j  ∉  T      j  T    j\notin T   where    1  ≤  j  ≤  n        1  j       n     1\leq j\leq n   there exists some   i   i   i   where    1  ≤  i  ≤  t        1  i       t     1\leq i\leq t   such that     M   i  ,  j    =  1       subscript  M   i  j    1    M_{i,j}=1   but     M   i  ,  l    =   0    ∀  l    ∈  T         subscript  M   i  l      0    for-all  l         T     M_{i,l}=0\text{ }\forall l\in T   . Thus, if     𝐫  i   =  0       subscript  𝐫  i   0    \mathbf{r}_{i}=0   then     𝐱  j   =  0       subscript  𝐱  j   0    \mathbf{x}_{j}=0   .   Proof of Lemma 1: Given as input    𝐫  ∈     {  0  ,  1  }   t   ,  M       𝐫    superscript   0  1   t   M     \mathbf{r}\in\{0,1\}^{t},M   use the following algorithm:   For each    j  ∈   [  n  ]       j   delimited-[]  n     j\in[n]   set     𝐱  j   =  1       subscript  𝐱  j   1    \mathbf{x}_{j}=1     For    i  =   1  …  t       i    1  normal-…  t     i=1\ldots t   , if     𝐫  i   =  0       subscript  𝐫  i   0    \mathbf{r}_{i}=0   then for all    j  ∈   [  n  ]       j   delimited-[]  n     j\in[n]   , if     M   i  ,  j    =  1       subscript  M   i  j    1    M_{i,j}=1   set     𝐱  j   =  0       subscript  𝐱  j   0    \mathbf{x}_{j}=0      By Observation 1 we get that any position where     𝐫  i   =  0       subscript  𝐫  i   0    \mathbf{r}_{i}=0   the appropriate    𝐱  j     subscript  𝐱  j    \mathbf{x}_{j}   's will be set to 0 by step 2 of the algorithm. By Observation 2 we have that there is at least one   i   i   i   such that if    𝐱  j     subscript  𝐱  j    \mathbf{x}_{j}   is supposed to be 1 then     M   i  ,  j    =  1       subscript  M   i  j    1    M_{i,j}=1   and, if    𝐱  j     subscript  𝐱  j    \mathbf{x}_{j}   is supposed to be 1, it can only be the case that     𝐫  i   =  1       subscript  𝐫  i   1    \mathbf{r}_{i}=1   as well. Therefore step 2 will never assign    𝐱  j     subscript  𝐱  j    \mathbf{x}_{j}   the value 0 leaving it as a 1 and solving for   𝐱   𝐱   \mathbf{x}   . This takes time    𝒪   (   n  t   )       𝒪    n  t     \mathcal{O}(nt)   overall.   □   normal-□   \Box     d^e-disjunct  Definition: A matrix   M   M   M   is    d  e     superscript  d  e    d^{e}   -disjunct if for any    d  +  1      d  1    d+1   columns    M  0  ′     superscript   subscript  M  0   normal-′    M_{0}^{\prime}   ,    M  1  ′     superscript   subscript  M  1   normal-′    M_{1}^{\prime}   ,   ⋯   normal-⋯   \cdots   ,    M  d  ′     superscript   subscript  M  d   normal-′    M_{d}^{\prime}   of   M   M   M   there are at least    e  +  1      e  1    e+1   elements   1   1   1   in     M  0  ′   -   ∪   i  =  1   d    M  i  ′      fragments   superscript   subscript  M  0   normal-′     superscript   subscript     i  1    d    superscript   subscript  M  i   normal-′     M_{0}^{\prime}-\cup_{i=1}^{d}M_{i}^{\prime}   .  Definition: Let   M   M   M   be a    t  ×  n      t  n    t\times n       d  e     superscript  d  e    d^{e}   -disjunct matrix. The output    o   (  S  )       o  S    o(S)   of   S   S   S   in   M   M   M   is the union of those columns indexed by   S   S   S   , where   S   S   S   is a subset of    {  1  ,  2  ,  ⋯  ,  n  }     1  2  normal-⋯  n    \{1,2,\cdots,n\}   with at most size   d   d   d   .  Proposition: Let   M   M   M   be a    d  e     superscript  d  e    d^{e}   -disjunct matrix. Let     S  ,  T   ⊆   {  1  ,  2  ,  ⋯  ,  n  }        S  T    1  2  normal-⋯  n     S,T\subseteq\{1,2,\cdots,n\}   be two distinct subsets with each at most   d   d   d   elements. Then the Hamming distance of the outputs    o   (  S  )       o  S    o(S)   and    o   (  T  )       o  T    o(T)   is at least    e  +  1      e  1    e+1   .  Proof: Without loss of generality, we may assume    ∃  j      j    \exists j   s.t.    j  ∈  S      j  S    j\in S   and    j  ∉  T      j  T    j\notin T   . We consider the   j   j   j   -th column of   M   M   M   and those columns of   M   M   M   indexed by   T   T   T   , then we can find    e  +  1      e  1    e+1   different   ℓ   normal-ℓ   \ell   such that     M   ℓ  j    =  1       subscript  M    normal-ℓ  j    1    M_{\ell j}=1   and     M   ℓ  k    =  0       subscript  M    normal-ℓ  k    0    M_{\ell k}=0   for all    k  ∈  T      k  T    k\in T   , because the definition of    d  e     superscript  d  e    d^{e}   -disjunct. Hence we complete the proof.  Then we have the following corollary.  Corollary We can detect   e   e   e   errors and correct    ⌊    e  2    ⌋        e  2     \lfloor\dfrac{e}{2}\rfloor   errors on the outcome of    d  e     superscript  d  e    d^{e}   -disjunct matrix.  Upper bounds for non-adaptive group testing  The results for these upper bounds rely mostly on the properties of   d   d   d   -disjunct matrices. Not only are the upper bounds nice, but from Lemma 1 we know that there is also a nice decoding algorithm for these bounds. First the following lemma will be proved since it is relied upon for both constructions:  Lemma 2: Given    1  ≤  d  ≤  n        1  d       n     1\leq d\leq n   let   M   M   M   be a    t  ×  n      t  n    t\times n   matrix and:        ∀  j   ∈    [  n  ]   ,   |   S   M  j    |    ≥   w  min          for-all  j      delimited-[]  n   ,     subscript  S   subscript  M  j            subscript  w       \forall j\in[n]\text{, }|S_{M_{j}}|\geq w_{\min}           ∀  i   ≠  j  ∈   [  n  ]    ,    |    S   M  i    ∩   S   M  j     |   ≤   a  max       formulae-sequence       for-all  i   j        delimited-[]  n            subscript  S   subscript  M  i     subscript  S   subscript  M  j       subscript  a       \forall i\neq j\in[n],|S_{M_{i}}\cap S_{M_{j}}|\leq a_{\max}      for some integers     a  max   ≤   w  min   ≤  t         subscript  a     subscript  w         t     a_{\max}\leq w_{\min}\leq t   then   M   M   M   is     ≥    d  ′    ⌊     w  min   -  1    a  max    ⌋        absent     superscript  d  normal-′          subscript  w    1    subscript  a         \geq d^{\prime}\left\lfloor\frac{w_{\min}-1}{a_{\max}}\right\rfloor   -disjunct.  Note: these conditions are stronger than simply having a subset of size   d   d   d   but rather applies to any pair of columns in a matrix. Therefore no matter what column   i   i   i   that is chosen in the matrix, that column will contain at least    w  min     subscript  w     w_{\min}   1's and the total number of shared 1's by any two columns is    a  max     subscript  a     a_{\max}   .  Proof of Lemma 2: Fix an arbitrary     S  ⊆   [  n  ]    ,     |  S  |   ≤  d   ,   j  ∉  S       formulae-sequence    S   delimited-[]  n     formulae-sequence      S   d     j  S      S\subseteq[n],|S|\leq d,j\notin S   and a matrix   M   M   M   . There exists a match between    i  ∈   S  and  j   ∉  S        i    S  and  j        S     i\in S\text{ and }j\notin S   if column   i   i   i   has a 1 in the same row position as in column   j   j   j   . Then the total number of matches is     ≤    a  max   ⋅  d   ≤    a  max   ⋅   (     w  min   -  1    a  max    )    =    w  min   -  1   <     w  min          absent   normal-⋅   subscript  a    d         normal-⋅   subscript  a         subscript  w    1    subscript  a              subscript  w    1            subscript  w        \leq a_{\max}\cdot d\leq a_{\max}\cdot(\frac{w_{\min}-1}{a_{\max}})=w_{\min}-1%
 <\text{ }w_{\min}   , i.e. a column   j   j   j   has a fewer number of matches than the number of ones in it. Therefore there must be a row with all 0s in   S   S   S   but a 1 in   j   j   j   .   □   normal-□   \Box     We will now generate constructions for the bounds.  Constructions can be either randomized (brute-force), explicit or strongly explicit. This concerns the time in which the incidence matrix can be generated. An explicit construction for a    n  ×  m      n  m    n\times m   matrix has a complexity    𝒪   (   poly   (   n  +  m   )    )       𝒪    poly    n  m      \mathcal{O}(\text{poly}(n+m))   , whereas a randomized construction takes more than that. For a strongly explicit construction, one can find a single entry of the matrix in    poly   (  m  )       poly  m    \text{poly}(m)   time.  Randomized construction  This first construction will use a probabilistic argument to show the property wanted, in particular the Chernoff bound . Using this randomized construction gives that     t   (  d  ,  n  )    ≤   𝒪   (    d  2    log  n    )          t   d  n      𝒪     superscript  d  2     n       t(d,n)\leq\mathcal{O}(d^{2}\log n)   . The following lemma will give the result needed.  Theorem 1: There exists a random   d   d   d   -disjunct matrix with    𝒪   (    d  2    log  n    )       𝒪     superscript  d  2     n      \mathcal{O}(d^{2}\log n)   rows.  Proof of Theorem 1: Begin by building a random    t  ×  n      t  n    t\times n   matrix   M   M   M   with    t  =   c   d  2    log  n        t    c   superscript  d  2     n      t=cd^{2}\log n   (where   c   c   c   will be picked later). It will be shown that   M   M   M   is    Ω   (  d  )       normal-Ω  d    \Omega(d)   -disjunct. First note that     M   i  ,  j    ∈   {  0  ,  1  }        subscript  M   i  j     0  1     M_{i,j}\in\{0,1\}   and let     M   i  ,  j    =  1       subscript  M   i  j    1    M_{i,j}=1   independently with probability    1  d      1  d    \frac{1}{d}   for    i  ∈   [  t  ]       i   delimited-[]  t     i\in[t]   and    j  ∈   [  n  ]       j   delimited-[]  n     j\in[n]   . Now fix    j  ∈   [  n  ]       j   delimited-[]  n     j\in[n]   . Denote the    j   t  h      superscript  j    t  h     j^{th}   column of   M   M   M   as     T  j   ⊆   [  t  ]        subscript  T  j    delimited-[]  t     T_{j}\subseteq[t]   . Then the expectancy is     𝔼   [   |   T  j   |   ]    =   t  d         𝔼   delimited-[]     subscript  T  j        t  d     \mathbb{E}[|T_{j}|]=\frac{t}{d}   . Using the Chernoff bound, with    μ  =   1  2       μ    1  2     \mu=\frac{1}{2}   , gives    Pr   [  |   T  j   |  <   t   2  d    ]   ≤   e    -  t    12  d     =   e    -   c  d   log  n     12    ≤   n   -   2  d     [     fragments  Pr   fragments  normal-[  normal-|   subscript  T  j   normal-|     t    2  d    normal-]     superscript  e      t     12  d       superscript  e        c  d    n     12      superscript  n      2  d     normal-[    \mathrm{Pr}[|T_{j}|<\frac{t}{2d}]\leq e^{\frac{-t}{12d}}=e^{\frac{-cd\log n}{1%
 2}}\leq n^{-2d}[   if    c  ≥  24  ]     fragments  c   24  normal-]    c\geq 24]   . Taking the union bound over all columns gives    Pr   [  ∃  j      fragments  Pr   fragments  normal-[   j     \mathrm{Pr}[\exists j   ,    |   T  j   |  <   t   2  d    ]  ≤  n  ⋅  n     -   2  d     ≤  n     -  d       fragments  normal-|   subscript  T  j   normal-|     t    2  d    normal-]   n  normal-⋅  n       2  d      n     d      |T_{j}|<\frac{t}{2d}]\leq n\cdot n^{-2d}\leq n^{-d}   . This gives    Pr   [  ∀  j      fragments  Pr   fragments  normal-[  for-all  j     \mathrm{Pr}[\forall j   ,    |   T  j   |  ≥   t   2  d    ]  ≥  1  -  n     -  d       fragments  normal-|   subscript  T  j   normal-|     t    2  d    normal-]   1   n     d      |T_{j}|\geq\frac{t}{2d}]\geq 1-n^{-d}   . Therefore     w  min   ≥   t   2  d         subscript  w      t    2  d      w_{\min}\geq\frac{t}{2d}   with probability     ≥   1  -   n   -  d         absent    1   superscript  n    d       \geq 1-n^{-d}   .  Now suppose    j  ≠  k  ∈   [  n  ]         j  k        delimited-[]  n      j\neq k\in[n]   and    i  ∈   [  t  ]       i   delimited-[]  t     i\in[t]   then    Pr   [   M   i  ,  j    =   M   i  ,  k    =  1  ]   =   1   d  2       fragments  Pr   fragments  normal-[   subscript  M   i  j      subscript  M   i  k     1  normal-]      1   superscript  d  2      \mathrm{Pr}[M_{i,j}=M_{i,k}=1]=\frac{1}{d^{2}}   . So     𝔼   [   |    T  j   ∩   T  k    |   ]    =   t   d  2          𝔼   delimited-[]       subscript  T  j    subscript  T  k         t   superscript  d  2      \mathbb{E}[|T_{j}\cap T_{k}|]=\frac{t}{d^{2}}   . Using the Chernoff bound on this gives    Pr   [  |   T  j   ∩   T  k   |  >    2  t    d  2    ]   ≤   e    -  t    3   d  2      =   e   -   2   log  n      ≤   n   -  4    [     fragments  Pr   fragments  normal-[  normal-|   subscript  T  j     subscript  T  k   normal-|       2  t    superscript  d  2    normal-]     superscript  e      t     3   superscript  d  2        superscript  e      2    n        superscript  n    4    normal-[    \mathrm{Pr}[|T_{j}\cap T_{k}|>\frac{2t}{d^{2}}]\leq e^{\frac{-t}{3d^{2}}}=e^{-%
 2\log n}\leq n^{-4}[   if    c  ≥  12  ]     fragments  c   12  normal-]    c\geq 12]   . By the union bound over    (  j  ,  k  )     j  k    (j,k)   pairs    Pr   [  ∃   (  j  ,  k  )       fragments  Pr   fragments  normal-[    fragments  normal-(  j  normal-,  k  normal-)      \mathrm{Pr}[\exists(j,k)   such that    |   T  j   ∩   T  k   |  >    2  t    d  2    ]  ≤  n    2   ⋅  n     -  4    =  n     -  2       fragments  normal-|   subscript  T  j     subscript  T  k   normal-|       2  t    superscript  d  2    normal-]   n   2   normal-⋅  n     4     n     2      |T_{j}\cap T_{k}|>\frac{2t}{d^{2}}]\leq n^{2}\cdot n^{-4}=n^{-2}   . This gives that     a  max   ≤    2  t    d  2         subscript  a        2  t    superscript  d  2      a_{\max}\leq\frac{2t}{d^{2}}   and     w  min   ≥   t   2  d         subscript  w      t    2  d      w_{\min}\geq\frac{t}{2d}   with probability     ≥   1  -   n   -  d    -   n   -  2     ≥   1  -   1  n          absent    1   superscript  n    d     superscript  n    2            1    1  n       \geq 1-n^{-d}-n^{-2}\geq 1-\frac{1}{n}   . Note that by changing   c   c   c   the probability    1  -   1  n       1    1  n     1-\frac{1}{n}   can be made to be    1  -   1   p  o  l  y   (  n  )         1    1    p  o  l  y  n      1-\frac{1}{poly(n)}   . Thus     d  ′   =   ⌊     t   2  d    -  1     2  t    d  2     ⌋   ≈   d  4          superscript  d  normal-′           t    2  d    1       2  t    superscript  d  2             d  4      d^{\prime}=\lfloor\frac{\frac{t}{2d}-1}{\frac{2t}{d^{2}}}\rfloor\approx\frac{d%
 }{4}   . By setting   d   d   d   to be    4  d      4  d    4d   , the above argument shows that   M   M   M   is   d   d   d   -disjunct.  Note that in this proof    t  =    d  2    log  n        t     superscript  d  2     n      t=d^{2}\log n   thus giving the upper bound of     t   (  d  ,  n  )    ≤   𝒪   (    d  2    log  n    )          t   d  n      𝒪     superscript  d  2     n       t(d,n)\leq\mathcal{O}(d^{2}\log n)   .   □   normal-□   \Box     Strongly explicit construction  It is possible to prove a bound of     t   (  d  ,  n  )    ≤   𝒪   (    d  2     log  2   n    )          t   d  n      𝒪     superscript  d  2     superscript   2   n       t(d,n)\leq\mathcal{O}(d^{2}\log^{2}{n})   using a strongly explicit code. Although this bound is worse by a    log  n      n    \log n   factor, it is preferable because this produces a strongly explicit construction instead of a randomized one.  Theorem 2: There exists a strongly explicit   d   d   d   -disjunct matrix with    𝒪   (    d  2     log  2   n    )       𝒪     superscript  d  2     superscript   2   n      \mathcal{O}(d^{2}\log^{2}{n})   rows.  This proof will use the properties of concatenated codes along with the properties of disjunct matrices to construct a code that will satisfy the bound we are after.  Proof of Theorem 2: Let     C  ⊆    {  0  ,  1  }   t    ,    |  C  |   =  n      formulae-sequence    C   superscript   0  1   t        C   n     C\subseteq\{0,1\}^{t},|C|=n   such that    C  =   {   𝐜  1   ,  …  ,   𝐜  n   }       C    subscript  𝐜  1   normal-…   subscript  𝐜  n      C=\{\mathbf{c}_{1},\ldots,\mathbf{c}_{n}\}   . Denote    M  C     subscript  M  C    M_{C}   as the matrix with its    i   t  h      superscript  i    t  h     i^{th}   column being    𝐜  i     subscript  𝐜  i    \mathbf{c}_{i}   . If    C  *     superscript  C     C^{*}   can be found such that        ∀  i   ∈    C  *   ,   |   𝐜  i   |    ≥   w  min          for-all  i      superscript  C    ,     subscript  𝐜  i           subscript  w       \forall i\in C^{*}\text{, }|\mathbf{c}_{i}|\geq w_{\min}          ∀   𝐜  1    ≠   𝐜  2   ∈    C  *   ,   |   {  i  |    𝐜  i  1   =   𝐜  i  2   =  1   }   |    ≤   a  max          for-all   superscript  𝐜  1     superscript  𝐜  2           superscript  C    ,     conditional-set  i       subscript   superscript  𝐜  1   i    subscript   superscript  𝐜  2   i        1             subscript  a       \forall\mathbf{c}^{1}\neq\mathbf{c}^{2}\in C^{*}\text{, }|\{i|\mathbf{c}^{1}_{%
 i}=\mathbf{c}^{2}_{i}=1\}|\leq a_{\max}   ,   then    M   C  *      subscript  M   superscript  C      M_{C^{*}}   is    ⌊     w  min   -  1    a  max    ⌋           subscript  w    1    subscript  a       \lfloor\frac{w_{\min}-1}{a_{\max}}\rfloor   -disjunct. To complete the proof another concept must be introduced. This concept uses code concatenation to obtain the result we want.  Kautz-Singleton '64  Let     C  *   =    C   o  u  t    ∘   C   i  n          superscript  C       subscript  C    o  u  t     subscript  C    i  n       C^{*}=C_{out}\circ C_{in}   . Let    C   o  u  t      subscript  C    o  u  t     C_{out}   be a     [  q  ,  k  ]   q     subscript   q  k   q    [q,k]_{q}   - Reed–Solomon code . Let     C   i  n    =   [  q  ]   →    {  0  ,  1  }   q          subscript  C    i  n     delimited-[]  q     normal-→     superscript   0  1   q      C_{in}=[q]\rightarrow\{0,1\}^{q}   such that for    i  ∈   [  q  ]       i   delimited-[]  q     i\in[q]   ,      c   i  n     (  i  )    =   (  0  ,  …  ,  0  ,  1  ,  0  ,  …  ,  0  )          subscript  c    i  n    i    0  normal-…  0  1  0  normal-…  0     c_{in}(i)=(0,\ldots,0,1,0,\ldots,0)   where the 1 is in the    i   t  h      superscript  i    t  h     i^{th}   position. Then    n  =   q  k       n   superscript  q  k     n=q^{k}   ,    t  =   q  2       t   superscript  q  2     t=q^{2}   , and     w  min   =  q       subscript  w    q    w_{\min}=q   .  ---  Example: Let     k  =  1   ,    q  =  3   ,    C   o  u  t    =   {   (  0  ,  0  ,  0  )   ,   (  1  ,  1  ,  1  )   ,   (  2  ,  2  ,  2  )   }        formulae-sequence    k  1    formulae-sequence    q  3      subscript  C    o  u  t      0  0  0    1  1  1    2  2  2        k=1,q=3,C_{out}=\{(0,0,0),(1,1,1),(2,2,2)\}   . Below,    M  C     subscript  M  C    M_{C}   denotes the matrix of codewords for    C   o  u  t      subscript  C    o  u  t     C_{out}   and    M   C  *      subscript  M   superscript  C      M_{C^{*}}   denotes the matrix of codewords for     C  *   =    C   o  u  t    ∘   C   i  n          superscript  C       subscript  C    o  u  t     subscript  C    i  n       C^{*}=C_{out}\circ C_{in}   , where each column is a codeword. The overall image shows the transition from the outer code to the concatenated code.        M  C   =    [     0    1    2      0    1    2      0    1    2     ]   ⇒      M   C  *    =   [     0    0    1      0    1    0      1    0    0      0    0    1      0    1    0      1    0    0      0    0    1      0    1    0      1    0    0     ]       formulae-sequence     subscript  M  C      0  1  2    0  1  2    0  1  2    normal-⇒       subscript  M   superscript  C       0  0  1    0  1  0    1  0  0    0  0  1    0  1  0    1  0  0    0  0  1    0  1  0    1  0  0       M_{C}=\begin{bmatrix}0&1&2\\
 0&1&2\\
 0&1&2\end{bmatrix}\quad\Rightarrow\quad M_{C^{*}}=\begin{bmatrix}0&0&1\\
 0&1&0\\
 1&0&0\\
 0&0&1\\
 0&1&0\\
 1&0&0\\
 0&0&1\\
 0&1&0\\
 1&0&0\end{bmatrix}     ---  Divide the rows of    M   C  *      subscript  M   superscript  C      M_{C^{*}}   into sets of size   q   q   q   and number them as     (  i  ,  j  )   ∈    [  q  ]   ×   [  q  ]         i  j      delimited-[]  q    delimited-[]  q      (i,j)\in[q]\times[q]   where   i   i   i   indexes the set of rows and   j   j   j   indexes the row in the set. If     M    (  i  ,  j  )   ,   k  1     =   M    (  i  ,  j  )   ,   k  2     =  1         subscript  M    i  j    subscript  k  1      subscript  M    i  j    subscript  k  2          1     M_{(i,j),k_{1}}=M_{(i,j),k_{2}}=1   then note that      𝐜   k  1     (  i  )    =    𝐜   k  2     (  i  )    =  j           subscript  𝐜   subscript  k  1    i      subscript  𝐜   subscript  k  2    i        j     \mathbf{c}_{k_{1}}(i)=\mathbf{c}_{k_{2}}(i)=j   where      𝐜   k  1    ,   𝐜   k  2     ∈   C   o  u  t          subscript  𝐜   subscript  k  1     subscript  𝐜   subscript  k  2      subscript  C    o  u  t      \mathbf{c}_{k_{1}},\mathbf{c}_{k_{2}}\in C_{out}   . So that means     |    M   k  1    ∩   M   k  2     |   =   q  -   Δ   (   𝐜   k  1    ,   𝐜   k  2    )              subscript  M   subscript  k  1     subscript  M   subscript  k  2        q    normal-Δ    subscript  𝐜   subscript  k  1     subscript  𝐜   subscript  k  2         |M_{k_{1}}\cap M_{k_{2}}|=q-\Delta(\mathbf{c}_{k_{1}},\mathbf{c}_{k_{2}})   . Since     Δ   (   𝐜   k  1    ,   𝐜   k  2    )    ≥    q  -  k   +  1         normal-Δ    subscript  𝐜   subscript  k  1     subscript  𝐜   subscript  k  2          q  k   1     \Delta(\mathbf{c}_{k_{1}},\mathbf{c}_{k_{2}})\geq q-k+1   it gives that     |    M   k  1    ∩   M   k  2     |   ≤   k  -  1            subscript  M   subscript  k  1     subscript  M   subscript  k  2        k  1     |M_{k_{1}}\cap M_{k_{2}}|\leq k-1   so let     a  max   =   k  -  1        subscript  a      k  1     a_{\max}=k-1   . Since    t  =   q  2       t   superscript  q  2     t=q^{2}   , the entries in each column of    M   C  *      subscript  M   superscript  C      M_{C^{*}}   can be looked at as   q   q   q   sets of   q   q   q   entries where only one of the entries is nonzero (by definition of    C   i  n      subscript  C    i  n     C_{in}   ) which gives a total of   q   q   q   nonzero entries in each column. Therefore     w  min   =  q       subscript  w    q    w_{\min}=q   and    d   =   d  e  f     ⌊     w  min   -  1    a  max    ⌋       subscript     d  e  f    d         subscript  w    1    subscript  a        d=_{def}\lfloor\frac{w_{\min}-1}{a_{\max}}\rfloor   (so    M   C  *      subscript  M   superscript  C      M_{C^{*}}   is   d   d   d   -disjunct).  Now pick   q   q   q   and   k   k   k   such that     ⌊    q  -  1    k  -  1    ⌋   =  d            q  1     k  1     d    \lfloor\frac{q-1}{k-1}\rfloor=d   (so     ⌊   q  k   ⌋   ≈  d          q  k    d    \lfloor\frac{q}{k}\rfloor\approx d   ). Since     q  k   =  n       superscript  q  k   n    q^{k}=n   we have    k  =    log  n    log  q    ≤   log  n         k      n     q           n      k=\frac{\log n}{\log q}\leq\log n   . Since    q  ≈   k  d       q    k  d     q\approx kd   and    t  =   q  2       t   superscript  q  2     t=q^{2}   it gives that    t  =   q  2   ≈    (   k  d   )   2   ≤    (   d   log  n    )   2         t   superscript  q  2         superscript    k  d   2         superscript    d    n    2      t=q^{2}\approx(kd)^{2}\leq(d\log n)^{2}   .   □   normal-□   \Box     Thus we have a strongly explicit construction for a code that can be used to form a group testing matrix and so     t   (  d  ,  n  )    ≤    (   d   log  n    )   2         t   d  n     superscript    d    n    2     t(d,n)\leq(d\log n)^{2}   .  For non-adaptive testing we have shown that     Ω   (   d   log  n    )    ≤   t   (  d  ,  n  )          normal-Ω    d    n       t   d  n      \Omega(d\log n)\leq t(d,n)   and we have that ( i )     t   (  d  ,  n  )    ≤   𝒪   (    d  2     log  2   n    )          t   d  n      𝒪     superscript  d  2     superscript   2   n       t(d,n)\leq\mathcal{O}(d^{2}\log^{2}{n})   (strongly explicit) and ( ii )     t   (  d  ,  n  )    ≤   𝒪   (    d  2    log  n    )          t   d  n      𝒪     superscript  d  2     n       t(d,n)\leq\mathcal{O}(d^{2}\log n)   (randomized). As of recent work by Porat and Rothscheld, they presented an explicit method construction (i.e. deterministic time but not strongly explicit) for     t   (  d  ,  n  )    ≤   𝒪   (    d  2    log  n    )          t   d  n      𝒪     superscript  d  2     n       t(d,n)\leq\mathcal{O}(d^{2}\log n)   , 1 however it is not shown here. There is also a lower bound for disjunct matrices of     t   (  d  ,  n  )    ≥   Ω   (     d  2    log  d     log  n    )          t   d  n      normal-Ω       superscript  d  2     d      n       t(d,n)\geq\Omega(\frac{d^{2}}{\log d}\log n)    2 3 4 which is not shown here either.  Examples  Here is the 2-disjunct matrix    M   9  ×  12      subscript  M    9  12     M_{9\times 12}   :       M   9  ×  12    =   [     0    0    0    0    0    0    1    1    1    1    0    0      0    0    0    1    1    1    0    0    0    1    0    0      1    1    1    0    0    0    0    0    0    1    0    0      0    0    1    0    0    1    0    0    1    0    1    0      0    1    0    0    1    0    0    1    0    0    1    0      1    0    0    1    0    0    1    0    0    0    1    0      0    1    0    1    0    0    0    0    1    0    0    1      0    0    1    0    1    0    1    0    0    0    0    1      1    0    0    0    0    1    0    1    0    0    0    1     ]        subscript  M    9  12     delimited-[]    0  0  0  0  0  0  1  1  1  1  0  0    0  0  0  1  1  1  0  0  0  1  0  0    1  1  1  0  0  0  0  0  0  1  0  0    0  0  1  0  0  1  0  0  1  0  1  0    0  1  0  0  1  0  0  1  0  0  1  0    1  0  0  1  0  0  1  0  0  0  1  0    0  1  0  1  0  0  0  0  1  0  0  1    0  0  1  0  1  0  1  0  0  0  0  1    1  0  0  0  0  1  0  1  0  0  0  1       M_{9\times 12}=\left[\begin{array}[]{cccccccccccc}0&0&0&0&0&0&1&1&1&1&0&0\\
 0&0&0&1&1&1&0&0&0&1&0&0\\
 1&1&1&0&0&0&0&0&0&1&0&0\\
 0&0&1&0&0&1&0&0&1&0&1&0\\
 0&1&0&0&1&0&0&1&0&0&1&0\\
 1&0&0&1&0&0&1&0&0&0&1&0\\
 0&1&0&1&0&0&0&0&1&0&0&1\\
 0&0&1&0&1&0&1&0&0&0&0&1\\
 1&0&0&0&0&1&0&1&0&0&0&1\end{array}\right]     See also   Group testing  Concatenated code  Compressed sensing   References  Notes   Atri Rudra's book on Error Correcting Codes: Combinatorics, Algorithms, and Applications (Spring 201), Chapter 17   "  Category:Combinatorics     Porat, E., & Rothschild, A. (2008). Explicit Non-adaptive Combinatorial Group Testing Schemes. In Proceedings of the 35th International Colloquium on Automata, Languages and Programming (ICALP) (pp. 748–759). ↩  Dýachkov, A. G., & Rykov, V. V. (1982). Bounds on the length of disjunctive codes. Problemy Peredachi Informatsii [Problems of Information Transmission], 18(3), 7–13. ↩  Dýachkov, A. G., Rashad, A. M., & Rykov, V. V. (1989). Superimposed distance codes. Problemy Upravlenija i Teorii Informacii [Problems of Control and Information Theory], 18(4), 237–250. ↩  Zoltan Furedi, On r-Cover-free Families, Journal of Combinatorial Theory, Series A , Volume 73, Issue 1, January 1996, Pages 172–173, ISSN 0097-3165, . (http://www.sciencedirect.com/science/article/B6WHS-45NJMVF-39/2/172ef8c5c4aee2d85d1ddd56b107eef3) ↩     