


Multidimensional Filter Design




Multidimensional Filter Design

Many concepts in 1-D signal processing are similar to concepts in multidimensional signal processing. However, many familiar one-dimensional procedures do not readily generalize to the multidimensional case and some important issues associated with multidimensional signals and systems do not appear in the one-dimensional special case.
Motivation and applications
A multidimensional (M-D) signal can be modeled as a function of 
 
 
independent variables, where 
 
 
 
  is greater than or equal to 2. These signals may be categorized as continuous, discrete, or mixed. A continuous signal can be modeled as a function of independent variables which range over a continuum of values, example – an audio wave travelling in space. A discrete signal, on the other hand, can be modeled as a function defined only on a set of points, such as the set of integers. A mixed signal is a multidimensional signal that is modeled as a function of some continuous variables and some discrete ones, example – an ensemble of time waveforms recorded from an array of electrical transducers is a mixed signal. The ensemble can be modeled with one continuous variable, time, and one or more discrete variables to index the transducers.
Filtering of M-D signals is required in several day to day applications, like image processing, video signal filtering, computational tomography (CT) and many more. M-D filter mathematics can also be used in grid methods for solving partial differential equations, distributed control, and iterative learning control. The design and implementation of M-D filters are generally more complicated than the design and implementation of 1-D filters.
Problem Statement & Basic Concepts
Usual time domain or one-dimensional filtering is causal, i.e. there is a preferred direction in the one-dimension. However, for many multi-dimensional signals, there is no preferred direction for the coordinates, which often represent spatial coordinates, and not time. Thus non-causal filters are often employed in multi-dimensional signal processing.
(Figure)
design

A Finite Impulse Response (FIR), or non-recursive filter has an impulse response with a finite number of non-zero samples. This makes their impulse response always absolutely summable and thus FIR filters are always stable. 
 
 
 
  is the multidimensional input signal and 
 
 
 
  is the multidimensional output signal. For a 
 
 
 
  dimensional spatial domain, the output 
 
 
 
  can be represented as



(Figure)
filter design

An Infinite Impulse Response (IIR), or recursive filter (due to feedback) has infinite impulse response. Its input and output satisfy a multidimensional difference equation of finite order. IIR filters may or may not be stable and in many cases are less complex to realize when compared to FIR filters. For a 
 
 
 
  dimensional domain, the output 
 
 
 
  can be represented as



Implementable FIR filters can be designed to have purely real frequency responses (such filters are said to be zero-phase). It is possible for FIR filters to always have linear phase, which is difficult to control for IIR filters. IIR filters can have limit cycles, whereas FIR filters do not. IIR filters can be designed to simulate classical analog filter responses such as Butterworth filter, Chebyshev I, II filter, while FIR filters cannot achieve it.
Existing Approaches for FIR Filter Design
Direct Convolution1
Linear Shift Invariant (LSI) filter’s output can be determined from its input by means of the convolution sum. There are a finite number of non-zero samples and the limits of summation are finite for a FIR filter. The convolution sum serves as an algorithm that enables us to compute the successive output samples of the filter. As an example, let is assume that the filter has support over the region {(
 
 
 
 ,
 
 
 
 ,...,
 
 
 
 )
 
 
 
  ≤ 
 
 
 
  N_1 , 
 
 
 
  ≤ 
 
 
 
  N_2,...,
 
 
 
  ≤ 
 
 
 
  N_m }, the output samples can be computed using



If all input samples are available, the output samples can be computed in any order or can also be computed simultaneously. However, if only selected samples of the output are desired, only those samples need to be computed. The number of multiplications and additions for one desired output sample is (
 
 
 
 .
 
 
 
 ...
 
 
 
 ) and (
 
 
 
 .
 
 
 
 ...
 
 
 
 )–
 
 
 
  respectively.
For the 2D case, the computation of 
 
 
 
  depends on input samples from (
 
 
 
  – 
 
 
 
 ) previous columns of the input and the (
 
 
 
  – 
 
 
 
 ) previous rows. If the input samples arrive row by row, we need sufficient storage to store 
 
 
 
  rows of the input sequence. If the input is available column by column instead, we need to store 
 
 
 
  columns of the input. A zero phase filter with a real impulse response satisfies 
 
 
 
  = 
 
 
 
 , which means that each sample can be paired with another of identical value. In this case we can use the arithmetic distributive law to interchange some of the multiplications and additions, to reduce the number of multiplications necessary to implement the filter, but the number of multiplications is still proportional to the filter order. Specifically, if the region of support for the filter is assumed to be rectangular and centered at the origin, we have




Using the above equation to implement an FIR filter requires roughly one-half the number of multiplications of an implementation, although both implementations require the same number of additions and the same amount of storage. If the impulse response of an FIR filter possess other symmetries, they can be exploited in a similar fashion to reduce further the number of required multiplications.
Discrete Fourier Transform Implementations of FIR Filters2
The Discrete Fourier Transform is a preferred method to obtain high-order filters because the various fast Fourier transform algorithms permit the efficient evaluation of the DFT. The general form of DFT for multidimensional signals can be seen below, where 
 
 
 
  is periodicity matrix, 
 
 
 
  is the multidimensional signal in the space domain, 
 
 
 
  is the DFT of 
 
 
 
  in frequency domain, 
 
 
 
  is a region containing |
 
 
 
 | samples in 
 
 
 
  domain, and 
 
 
 
  is a region containing |
 
 
 
 | (
 
 
 
 ) frequency samples.



Let 
 
 
 
  be the linear convolution of a finite-extent sequence 
 
 
 
  with the impulse response 
 
 
 
  of an FIR filter.



On computing Fourier Transform of both sides of this expression, we get




There are many possible definitions of the M-D discrete Fourier transform, and that all of these correspond to sets of samples of the M-D Fourier transform; these DFT’s can be used to perform convolutions as long their assumed region of support contains the support for 
 
 
 
 . Let us assume that 
 
 
 
  is sampled on a 
 
 
 
 x
 
 
 
 x...x
 
 
 
  rectangular lattice of samples, and let



Therefore, 
 
 

 
 . To compute (
 
 
 
 x
 
 
 
 x...x
 
 
 
 )-point DFT’s of 
 
 
 
  and 
 
 
 
  require If 
 
 
 
  results from the inverse DFT of the product 
 
 
 
 .
 
 
 
  , then 
 
 
 
  will be the circular convolution of 
 
 
 
  and 
 
 
 
 . If 
 
 
 
 , 
 
 
 
 ,..., 
 
 
 
  are chosen to be at least equal to the size of 
 
 
 
 , then 
 
 
 
 . To compute (
 
 
 
 x
 
 
 
 x...x
 
 
 
 )-point DFT’s of 
 
 
 
  and 
 
 
 
  requires that both sequences have their region of support extended with samples of value zero. This technique is efficient with respect to computation, however it is prodigal with respect to storage as this method requires sufficient storage to contain all 
 
 
 
 x
 
 
 
 x...x
 
 
 
  points of the signal 
 
 
 
 . In addition, we must store the filter response coefficients 
 
 
 
 . By direct convolution the number of rows of the input that needs to be stored depends on the order of the filter. However, with the DFT the whole input must be stored regardless of the filter order.
For the 2D case, and assuming that 
 
 
 
  is pre-computed, the number of real multiplications needed to compute 
 
 
 
  is


 
 x
 
 
 
 x
 
 
 
 x
 
 

 
 x
 
 


 
 x
 
 
 
 x
 
 
 
 ; 
 
 
 
  and 
 
 
 
  are powers of 2
Trigonometric Sum-of-Squares Optimization 3
Here we discuss a method for multidimensional FIR filter designn via sum-of-squares formulations of sepctral mask constraints. The sum-of-squares optimization problem is expressed as a semidefinite program with low-rank structure, by sampling the constraints using discrete sine and cosine transforms. The resulting semidefinite program is then solved by a customized primal-dual interior-point method that exploits low-rank structure. This leads to substantial reduction in the computational complexity, compared to general-purpose semidefinite programming methods that exploit sparsity.
A variety of one-dimensional FIR filter design problems can be expressed as convex optimization problems over real trigonometric polynomials, subject to spectral mask constraints. These optimization problems can be formulated as semidefinite programs (SDPs) using classical sum-of-squares (SOS) characterizations of nonnegative polynomials, and solved efficiently via interior-point methods for semidefinite programming.
(Figure)
FIR filter in frequency domain with d=2; n1=n2=5 and has 61 sampling points

For the figure above, FIR filter in frequency domain with d=2; n1=n2=5 and has 61 sampling points. The extension of these techniques to multidimensional filter design poses several difficulties. First, SOS characterization of multivariate positive trigonometric polynomials may require factors of arbitrarily high degree. Second, difficulty stems from the large size of the semidefinite programming problems obtained from multivariate SOS programs. Most recent research on exploiting structure in semidefinite programming has focused on exploiting sparsity of the coefficient matrices. This technique is very useful for SDPs derived from SOS programs and are included in several general purpose semidefinite programming packages.
Let 
 
 
 
  and 
 
 
 
  denote the sets of d-vectors of integers and natural numbers, respectively. For a vector 
 
 
 
 , we define 
 
 
 
  as the diagonal matrix with 
 
 
 
  as its ith diagonal entry. For a square matrix 
 
 
 
 , 
 
 
 
  is a vector with the 
 
 
 
  entry 
 
 
 
 . The matrix inequality 
 
 
 
  denotes that 
 
 
 
  is positive definite (semidefinite). 
 
 
 
  denotes the trace of a symmetric matrix 
 
 
 
 .


 
  is a 
 
 
 
 -variate trigonometric polynomial of degree 
 
 
 
 , with real symmetric coefficients 
 
 
 
  = 
 
 


The above summation is over all integer vectors 
 
 
 
  that satisfy 
 
 
 
 , where the inequalities between the vectors are interpreted element-wise. 
 
 
 
  is positive on 
 
 
 
 , then it can be expressed as sum of squares of trigonometric polynomials




2-D FIR Filter Design as SOS Program: 
 
 
 
  is taken to be the frequency response of a 2-D linear phase FIR filter with filter order 
 
 
 
 , with filter coefficients 
 
 
 
  = 
 
 
 
 .



We want to determine the filter coefficients 
 
 
 
  that maximize the attenuation 
 
 
 
  in the stopband 
 
 
 
  for a given maximum allowable ripple (
 
 
 
 ) in the passband 
 
 
 
 . The optimization problem is to minimize 
 
 
 
  by subjecting to the following conditions




where the scalar 
 
 
 
  and the filter coefficients 
 
 
 
  are the problem variables. These constraints are as shown below






If the passband and stopband are defined, then we can replace each positive polynomial 
 
 
 
  by a weighted sum of squares expression. Limiting the degrees of the sum-of-squares polynomials to 
 
 
 
  then gives sufficient conditions for feasibility. We call the resulting optimization problem a sum-of-squares program and can be solved via semidefinite programming.
Existing Approaches for IIR Filter Design
Similar to its 1-D special case, M-D IIR filters can have dramatically lower order than FIR filters with similar performance. This motivates the development of design techniques for M-D IIR filtering algorithms. This section presents brief overview of three approaches for designing M-D IIR filters.
Iterative design4
In some applications, where access to all values of signal is available (i.e. where entire signal is stored in memory and is available for processing), the concept of “feedback” can be realized. The iterative approach uses the previous output as feedback to generate successively better approximations to the desired output signal.
In general, the IIR frequency response can be expressed as



where 
 
 
 
  and 
 
 
 
  are M-D finite extent coefficient arrays. The ratio is normalized so that 
 
 

Now, let 
 
 
 
  represent the spectrum of a M-D input signal 
 
 
 
  and 
 
 
 
  represent the spectrum of a M-D output signal 
 
 
 
 .



where 
 
 
 
  is a trigonometric polynomial defined as 
 
 

In the signal domain, the equation becomes 
 
 

After making an initial guess, and then substituting the guess in the above equation iteratively, a better approximation of 
 
 
 
  can be obtained – 
 
 

where 
 
 
 
  denotes the iteration index
In the frequency domain, the above equation becomes 
 
 

An IIR filter is BIBO stable if 
 
 

If we assume that 
 
 
 
  then



(Figure)
design

Thus, it can be said that, the frequency response 
 
 
 
  of a M-D IIR filter can be obtained by infinite number of M-D FIR filtering operations. The store operator stores the result of the previous iteration.
To be practical, an iterative IIR filter should require fewer computations, counting all iterations to achieve an acceptable error, compared to an FIR filter with similar performance.
Shank’s method5
This technique is based on minimizing the error functionals in the space domain. The coefficient arrays 
 
 
 
  and 
 
 
 
  are determined such that the output response 
 
 
 
  of a filter matches the desired response 
 
 
 
 .
Let’s denote the error signal as



And let 
 
 
 
  denote it’s the Fourier transform



By multiplying both sides by 
 
 
 
 , we get the modified error spectrum, converted in discrete domain as



The total mean-squared error is obtained as –



Let the input signal be 
 
 
 
 . Now, the numerator coefficient 
 
 
 
  is zero outside region 
 
 
 
  because of the ROS of input signal.Then equation becomes


 
  for 
 
 
 
  or 
 
 
 
  or ... 
 
 

Substituting the result 
 
 
 
  into 
 
 
 
  and differentiating 
 
 
 
  with respect to denominator coefficients 
 
 
 
 , the linear set of equations is obtained as


 
  for 
 
 

(Figure)
Design

Now, taking the double summation for the region “R” i.e for 
 
 
 
  and 
 
 
 
  and ... 
 
 
 
  shown in figure (shown for 2-D case), the coefficients 
 
 
 
  are obtained.
The coefficients 
 
 
 
  can be obtained from



The major advantage of Shank’s method is that IIR filter coefficients can be obtained by solving linear equations. The disadvantage is that the mean squared error between 
 
 
 
  and 
 
 
 
  is not minimized. Also, the stability is not certain.
Magnitude and Magnitude squared Design algorithm6
In this section, we examine the technique for designing 2-D IIR filters based on minimizing error functionals in the frequency domain. The mean-squared error is given as



The below function 
 
 
 
  is the measure of difference between two complex functions - the desired response 
 
 
 
  and the actual response 
 
 
 
 . Generally, we can define a complex function 
 
 
 
  of 
 
 
 
  to approximate the desired response 
 
 
 
 . Hence, the optimization task boils down to the task of minimizing "
 
 
 
 ".



where 
 
 
 
  is the weighting function and 
 
 
 
  are frequency domain samples selected for minimization. Now, consider a case, where we ignore the phase response of the filter i.e. we concentrate on only matching the magnitude (or square of magnitude) of the desired and actual filter response. Linearization can be used to find out the coefficients 
 
 
 
  that results in minimum value of 
 
 
 
 . This will ensure that the filter form can be represented by a finite order difference equation. The stability of the filter depends on 
 
 
 
  - the function of 
 
 
 
 .
References
"
Category:Digital signal processing Category:Multidimensional signal processing



Dan E. Dudgeon, Russell M. Mersereau, “Multidimensional Digital Signal Processing”, Prentice-Hall Signal Processing Series, ISBN 0136049591, 1983.

Roh T., Bogdan D.,Vandenberghe L., “Multidimensional FIR Filter Design Via Trigonometric Sum-of-Squares Optimization,” 'IEEE ''JOURNAL OF SELECTED TOPICS IN SIGNAL PROCESSING (12/2007)', Vol. 1, No. 4, Page 1-10







