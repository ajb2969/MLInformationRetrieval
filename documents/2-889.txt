


Device independent file format




Device independent file format

The device independent file format (DVI) is the output file format of the TeX typesetting program, designed by David R. Fuchs and implemented by Donald E. Knuth in 1982.1 Unlike the TeX markup files used to generate them, DVI files are not intended to be human-readable; they consist of binary data describing the visual layout of a document in a manner not reliant on any specific image format, display hardware or printer. DVI files are typically used as input to a second program (called a DVI driver) which translates DVI files to graphical data. For example, most TeX software packages include a program for previewing DVI files on a user's computer display; this program is a driver. Drivers are also used to convert from DVI to popular page description languages (e.g. PostScript, PDF) and for printing.
DVI is not a document encryption format, and TeX markup may be at least partially reverse-engineered from DVI files, although this process is unlikely to produce high-level constructs identical to those present in the original markup, especially if the original markup used high-level TeX extensions (e.g. LaTeX).
DVI differs from PostScript and PDF in that it does not support any form of font embedding. (Both PostScript and PDF formats can either embed their fonts inside the documents, or reference external ones.) For a DVI file to be printed or even properly previewed, the fonts it references must be already installed. Also, unlike PostScript (but like PDF), DVI is not a full, Turing-complete programming language, though it does use a limited sort of machine language.
Specification
The DVI format was designed to be compact and easily machine-readable. Toward this end, a DVI file is a sequence of commands which form "a machine-like language", in Knuth's words.2 Each command begins with an eight-bit opcode, followed by zero or more bytes of parameters. For example, an opcode from the group 0x00 through 0x7F (decimal 127), set_char_''i'', typesets a single character and moves the implicit cursor right by that character's width. In contrast, opcode 0xF7 (decimal 247), pre (the preamble, which must be the first opcode in the DVI file), takes at least fourteen bytes of parameters, plus an optional comment of up to 255 bytes.
In a broader sense, a DVI file consists of a preamble, one or more pages, and a postamble. Six state variables are maintained as a tuple of signed, 32-bit integers
 
 
 
 . h and v are the current horizontal and vertical offsets from the upper-left corner (increasing v moves down the page), w and x hold horizontal space values, y and z, vertical.
These variables can be pushed to or popped from the stack. In addition, the current font f is held as an integer value, but is not pushed and popped with the rest of the state variables when the opcodes push or pop are encountered. Font spacing information is loaded from TFM files. The fonts themselves are not embedded in the DVI file, only referenced by an integer value defined in the relevant fnt_def''i'' op. (This is done exactly twice for each loaded font: once before it is referenced, and once in the postamble.) f contains an integer value of up to four bytes in length, though in practice, TeX only ever outputs font numbers in the range 0 through 255.
Similarly, the DVI format supports character codes up to four bytes in length, even though only the 0–255 range is commonly seen, as the TFM format is limited to that range. Character codes in DVI files refer to the character encoding of the current font rather than that of the system processing it. This means, for instance, that an EBCDIC-based system can process a DVI file that was generated by an ASCII-based system, so long as it has the same fonts installed.
Graphics as specials
The DVI format does not have support for graphics except for the most basic black-and-white boxes. Instead DVI has a general escape/extension mechanism, known as specials (expressed by the \special command in TeX), which defers graphics (and color) to post-processing filters. There are numerous DVI specials, the most notable of which are PostScript specials, but other programs like tpic have their own.3
DVI versions
DVI related software
DVI files are often converted into PDF, PostScript, or PCL format for reading and printing. They can be also viewed directly by using DVI viewers.

DVI viewers: YAP (included in MiKTeX), xdvi, windvi, Evince, KDVI, Okular, dviout, dviwin, DView (included in the commercial BaKoMa TeX distribution), javaDVI, MDVI, and DVIWindo (of the now defunct commercial Y&Y; TeX, which has been open-sourced).4
DVI to human-readable format: dvitype (disassembler of sorts)
DVI-to-PDF converters: dvipdf, dvipdfm, dvipdfmx
DVI-to-PS converters: dvips is the de facto standard. CTAN includes some older ones like dvitops (and DVIPSONE5) with a note they've lost their market share a long time ago.6
DVI-to-bitmap converters: dvipng (generates GIF or PNG), or use dvips and Ghostscript
DVI-to-SVG converters: dvisvg,7 dvisvgm,8 dvi2svg;910  the only one included in CTAN and actively maintained is dvisvgm.11

The first DVI previewers capable of on-screen previewing and modification of LaTeX documents ran on Amigas.1213
DVI-to-PDF converters
dvipdf is a tool to translate DVI files (generated by TeX) to PDF files. In current Linux distributions like Ubuntu, it is a thin wrapper around dvips and ghostscript, and copyrighted to Artifex Software (the makers of ghostscript).14 A possibly different program with the same name—described as a modified version of dvips—was announced in the late 1990s by Sergey Lesenko,151617 however it was apparently never released.1819
dvipdfm is a DVI-to-PDF translator developed by Mark A. Wicks. The early documentation of dvipdfm specifically mentions the limited availability of Lesenko's dvipdf as a reason for creating dvipdfm.20 dvipdfm supports most of the newer special functions of the PDF format, including bookmarks, annotations, thumbnails, and dvips specials—a feature making possible the inclusion of Encapsulated PostScript (.eps) files like METAPOST output—as well inclusion of JPEG and PNG images; other features of dvipdfm include partial font embedding (reducing file size) and balancing the internal PDF document trees to speed up rendering of large documents.21 Many of these features (except for the direct support for .eps files22) are also present in pdfTeX, which typesets TeX directly to PDF. The 2004, 4th edition of the Guide to LaTeX compares them in the following way:23 
dvipdfmx is an extended version of the dvipdfm DVI-to-PDF translator, included current TeX distributions like TeX Live 201424 and MiKTeX 2.9.25 The primary goal of the dvipdfmx project is to support multi-byte character encodings and CJK character sets for East Asian languages.26 dvipdfmx is also included (in a somewhat modified form) in XeTeX.27
The 2nd, 2008 edition of the LaTeX Graphics Companion makes the following workflow suggestion:28 
References and notes



External links

(Unofficial) description of the DVI file format
TeX DVI file Information utility
http://www.ctan.org/tex-archive/dviware/
http://tex.stackexchange.com/questions/38145/why-does-pdflatex-produce-bigger-output-files-than-latexdvipdfm

"
Category:Page description languages Category:Computer file formats Category:Open formats Category:TeX






https://www.tug.org/yandy/dviwindo.htm
https://www.tug.org/yandy/dvipsone.htm
http://www.ctan.org/tex-archive/dviware/dvitops



https://www.tug.org/TUGboat/tb27-2/tb87frischauf.pdf
http://www.ctan.org/tex-archive/dviware/
In 1986 Tomas Rokicki printed his first page with dvisw, an early DVI printer driver for the Amiga, on a QMS SmartWriter using AmigaTeX by Radical Eye Software. A link to a relic info about milestones of LaTeX history is available at this external site.

http://manpages.ubuntu.com/manpages/intrepid/man1/dvipdf.1.html
https://www.tug.org/TUGboat/tb17-3/tb52lese.pdf
https://www.tug.org/TUGboat/tb18-3/tb56lese.pdf
http://tex.loria.fr/general/eurotex98/eurotex98-lesenko.ps.gz

http://compgroups.net/comp.text.tex/where-art-dvipdf/1912300
Mark A. Wicks, Dvipdfm User’s Manual, Version 0.12.4 September 19, 1999, page 2

http://www.tex.ac.uk/cgi-bin/texfaq2html?label=dvipdfmgraphics

https://packages.debian.org/sid/texlive-base
http://miktex.org/pkg/az
The Dvipdfmx Project






