   Anshel–Anshel–Goldfeld key exchange      Anshel–Anshel–Goldfeld key exchange   Anshel–Anshel–Goldfeld protocol , also known as a commutator key exchange , is a key-exchange protocol using nonabelian groups . It was invented by Drs. Michael Anshel, Iris Anshel, and Dorian Goldfeld . Unlike other group-based protocols, it does not employ any commuting or commutative subgroups of a given platform group and can use any nonabelian group with efficiently computable normal forms.  Description  Let G be a fixed nonabelian group called a platform group .  Alice's public/private information:   Alice's public key is a tuple of elements     a  ¯   =   (   a  1   ,  …  ,   a  n   )        normal-¯  a     subscript  a  1   normal-…   subscript  a  n      {\overline{a}}=(a_{1},\ldots,a_{n})   in G .  Alice's private key is a sequence of elements from    a  ¯     normal-¯  a    {\overline{a}}   and their inverses     a   i  1    ε  1    ,  …  ,   a   i  L    ε  L        superscript   subscript  a   subscript  i  1     subscript  ε  1    normal-…   superscript   subscript  a   subscript  i  L     subscript  ε  L      a_{i_{1}}^{\varepsilon_{1}},\ldots,a_{i_{L}}^{\varepsilon_{L}}   , where     a   i  k    ∈   a  ¯        subscript  a   subscript  i  k     normal-¯  a     a_{i_{k}}\in{\overline{a}}   and     ε  k   =   ±  1        subscript  ε  k    plus-or-minus  1     \varepsilon_{k}=\pm 1   . Based on that sequence she computes the product    A  =    a   i  1    ε  1    …   a   i  L    ε  L         A     superscript   subscript  a   subscript  i  1     subscript  ε  1    normal-…   superscript   subscript  a   subscript  i  L     subscript  ε  L       A=a_{i_{1}}^{\varepsilon_{1}}\ldots a_{i_{L}}^{\varepsilon_{L}}   .   Bob's public/private information:   Bob's public key is a tuple of elements     b  ¯   =   (   b  1   ,  …  ,   b  n   )        normal-¯  b     subscript  b  1   normal-…   subscript  b  n      {\overline{b}}=(b_{1},\ldots,b_{n})   in   G   G   G   .  Bob's private key is a sequence of elements from    b  ¯     normal-¯  b    {\overline{b}}   and their inverses     b   j  1    δ  1    ,  …  ,   b   j  L    δ  L        superscript   subscript  b   subscript  j  1     subscript  δ  1    normal-…   superscript   subscript  b   subscript  j  L     subscript  δ  L      b_{j_{1}}^{\delta_{1}},\ldots,b_{j_{L}}^{\delta_{L}}   , where     b   j  k    ∈   b  ¯        subscript  b   subscript  j  k     normal-¯  b     b_{j_{k}}\in{\overline{b}}   and     δ  k   =   ±  1        subscript  δ  k    plus-or-minus  1     \delta_{k}=\pm 1   . Based on that sequence he computes the product    B  =    b   j  1    δ  1    …   b   j  L    δ  L         B     superscript   subscript  b   subscript  j  1     subscript  δ  1    normal-…   superscript   subscript  b   subscript  j  L     subscript  δ  L       B=b_{j_{1}}^{\delta_{1}}\ldots b_{j_{L}}^{\delta_{L}}   .   Transitions:   Alice sends a tuple     a  ¯   =   (    A   -  1     b  1   A   ,  …  ,    A   -  1     b  n   A   )        normal-¯  a       superscript  A    1     subscript  b  1   A   normal-…     superscript  A    1     subscript  b  n   A      {\overline{a}}=(A^{-1}b_{1}A,\ldots,A^{-1}b_{n}A)   to Bob.  Bob sends a tuple     b  ¯   =   (    B   -  1     a  1   B   ,  …  ,    B   -  1     a  n   B   )        normal-¯  b       superscript  B    1     subscript  a  1   B   normal-…     superscript  B    1     subscript  a  n   B      {\overline{b}}=(B^{-1}a_{1}B,\ldots,B^{-1}a_{n}B)   to Alice.   Shared key:  The key shared by Alice and Bob is the group element    K  =    A   -  1     B   -  1    A  B   ∈  G        K     superscript  A    1     superscript  B    1    A  B        G     K=A^{-1}B^{-1}AB\in G   called the commutator of   A   A   A   and   B   B   B   .   Alice computes   K   K   K   as a product      A   -  1    ⋅   B   -  1      a   i  1    ε  1    B  ⋯   B   -  1     a   i  L    ε  L    B       normal-⋅   superscript  A    1     superscript  B    1      superscript   subscript  a   subscript  i  1     subscript  ε  1    B  normal-⋯   superscript  B    1     superscript   subscript  a   subscript  i  L     subscript  ε  L    B    A^{-1}\cdot B^{-1}a_{i_{1}}^{\varepsilon_{1}}B\cdots B^{-1}a_{i_{L}}^{%
 \varepsilon_{L}}B   .  Bob computes   K   K   K   as a product       (    A   -  1     b   i  1    ε  1    A  ⋯   A   -  1     b   i  L    ε  L    A   )    -  1    ⋅  B   =    A   -  1     B   -  1    A  B        normal-⋅   superscript     superscript  A    1     superscript   subscript  b   subscript  i  1     subscript  ε  1    A  normal-⋯   superscript  A    1     superscript   subscript  b   subscript  i  L     subscript  ε  L    A     1    B      superscript  A    1     superscript  B    1    A  B     (A^{-1}b_{i_{1}}^{\varepsilon_{1}}A\cdots A^{-1}b_{i_{L}}^{\varepsilon_{L}}A)^%
 {-1}\cdot B=A^{-1}B^{-1}AB   .   See also   Group-based cryptography   References   I. Anshel, M. Anshel, and D. Goldfeld, An algebraic method for public-key cryptography , Math. Res. Lett. 6 (1999), pp. 287–291.   "  Category:Cryptographic protocols   