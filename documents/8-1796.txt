   Essential matrix      Essential matrix   In computer vision , the essential matrix is a    3  ×  3      3  3    3\times 3    matrix ,   𝐄   𝐄   \mathbf{E}   , with some additional properties described below, which relates corresponding points in stereo images assuming that the cameras satisfy the pinhole camera model .  Function  More specifically, if   𝐲   𝐲   \mathbf{y}   and    𝐲  ′     superscript  𝐲  normal-′    \mathbf{y}^{\prime}   are homogeneous normalized image coordinates in image 1 and 2, respectively, then          (   𝐲  ′   )   ⊤     𝐄   𝐲   =  0         superscript   superscript  𝐲  normal-′   top   𝐄  𝐲   0    (\mathbf{y}^{\prime})^{\top}\,\mathbf{E}\,\mathbf{y}=0     if   𝐲   𝐲   \mathbf{y}   and    𝐲  ′     superscript  𝐲  normal-′    \mathbf{y}^{\prime}   correspond to the same 3D point in the scene.  The above relation which defines the essential matrix was published in 1981 by Longuet-Higgins, introducing the concept to the computer vision community. Hartley & Zisserman's book reports that an analogous matrix appeared in photogrammetry long before that. Longuet-Higgins' paper includes an algorithm for estimating   𝐄   𝐄   \mathbf{E}   from a set of corresponding normalized image coordinates as well as an algorithm for determining the relative position and orientation of the two cameras given that   𝐄   𝐄   \mathbf{E}   is known. Finally, it shows how the 3D coordinates of the image points can be determined with the aid of the essential matrix.  Use  The essential matrix can be seen as a precursor to the fundamental matrix . Both matrices can be used for establishing constraints between matching image points, but the essential matrix can only be used in relation to calibrated cameras since the inner camera parameters must be known in order to achieve the normalization. If, however, the cameras are calibrated the essential matrix can be useful for determining both the relative position and orientation between the cameras and the 3D position of corresponding image points.  Derivation and definition  This derivation follows the paper by Longuet-Higgins.  Two normalized cameras project the 3D world onto their respective image planes. Let the 3D coordinates of a point P be    (   x  1   ,   x  2   ,   x  3   )      subscript  x  1    subscript  x  2    subscript  x  3     (x_{1},x_{2},x_{3})   and    (   x  1  ′   ,   x  2  ′   ,   x  3  ′   )      subscript   superscript  x  normal-′   1    subscript   superscript  x  normal-′   2    subscript   superscript  x  normal-′   3     (x^{\prime}_{1},x^{\prime}_{2},x^{\prime}_{3})   relative to each camera's coordinate system. Since the cameras are normalized, the corresponding image coordinates are       (      y  1        y  2      )   =    1   x  3     (      x  1        x  2      )           subscript  y  1      subscript  y  2         1   subscript  x  3       subscript  x  1      subscript  x  2        \begin{pmatrix}y_{1}\\
 y_{2}\end{pmatrix}=\frac{1}{x_{3}}\begin{pmatrix}x_{1}\\
 x_{2}\end{pmatrix}   and     (      y  1  ′        y  2  ′      )   =    1   x  3  ′     (      x  1  ′        x  2  ′      )           subscript   superscript  y  normal-′   1      subscript   superscript  y  normal-′   2         1   subscript   superscript  x  normal-′   3       subscript   superscript  x  normal-′   1      subscript   superscript  x  normal-′   2        \begin{pmatrix}y^{\prime}_{1}\\
 y^{\prime}_{2}\end{pmatrix}=\frac{1}{x^{\prime}_{3}}\begin{pmatrix}x^{\prime}_%
 {1}\\
 x^{\prime}_{2}\end{pmatrix}     A homogeneous representation of the two image coordinates is then given by       (      y  1        y  2       1     )   =    1   x  3     (      x  1        x  2        x  3      )           subscript  y  1      subscript  y  2     1        1   subscript  x  3       subscript  x  1      subscript  x  2      subscript  x  3        \begin{pmatrix}y_{1}\\
 y_{2}\\
 1\end{pmatrix}=\frac{1}{x_{3}}\begin{pmatrix}x_{1}\\
 x_{2}\\
 x_{3}\end{pmatrix}   and     (      y  1  ′        y  2  ′       1     )   =    1   x  3  ′     (      x  1  ′        x  2  ′        x  3  ′      )           subscript   superscript  y  normal-′   1      subscript   superscript  y  normal-′   2     1        1   subscript   superscript  x  normal-′   3       subscript   superscript  x  normal-′   1      subscript   superscript  x  normal-′   2      subscript   superscript  x  normal-′   3        \begin{pmatrix}y^{\prime}_{1}\\
 y^{\prime}_{2}\\
 1\end{pmatrix}=\frac{1}{x^{\prime}_{3}}\begin{pmatrix}x^{\prime}_{1}\\
 x^{\prime}_{2}\\
 x^{\prime}_{3}\end{pmatrix}     which also can be written more compactly as      𝐲  =     1   x  3      𝐱  ~        𝐲      1   subscript  x  3     normal-~  𝐱      \mathbf{y}=\frac{1}{x_{3}}\,\tilde{\mathbf{x}}   and     𝐲  ′   =     1   x  3  ′       𝐱  ~   ′         superscript  𝐲  normal-′       1   subscript   superscript  x  normal-′   3     superscript   normal-~  𝐱   normal-′      \mathbf{y}^{\prime}=\frac{1}{x^{\prime}_{3}}\,\tilde{\mathbf{x}}^{\prime}     where   𝐲   𝐲   \mathbf{y}   and    𝐲  ′     superscript  𝐲  normal-′    \mathbf{y}^{\prime}   are homogeneous representations of the 2D image coordinates and    𝐱  ~     normal-~  𝐱    \tilde{\mathbf{x}}   and     𝐱  ~   ′     superscript   normal-~  𝐱   normal-′    \tilde{\mathbf{x}}^{\prime}   are proper 3D coordinates but in two different coordinate systems.  Another consequence of the normalized cameras is that their respective coordinate systems are related by means of a translation and rotation. This implies that the two sets of 3D coordinates are related as        𝐱  ~   ′   =    𝐑    (    𝐱  ~   -  𝐭   )         superscript   normal-~  𝐱   normal-′     𝐑     normal-~  𝐱   𝐭      \tilde{\mathbf{x}}^{\prime}=\mathbf{R}\,(\tilde{\mathbf{x}}-\mathbf{t})     where   𝐑   𝐑   \mathbf{R}   is a    3  ×  3      3  3    3\times 3   rotation matrix and   𝐭   𝐭   \mathbf{t}   is a 3-dimensional translation vector.  Define the essential matrix as            𝐄  =    𝐑     [  𝐭  ]   ×        𝐄    𝐑   subscript   delimited-[]  𝐭        \mathbf{E}=\mathbf{R}\,[\mathbf{t}]_{\times}          where     [  𝐭  ]   ×     subscript   delimited-[]  𝐭      [\mathbf{t}]_{\times}   is the matrix representation of the cross product with   𝐭   𝐭   \mathbf{t}   .  To see that this definition of the essential matrix describes a constraint on corresponding image coordinates multiply   𝐄   𝐄   \mathbf{E}   from left and right with the 3D coordinates of point P in the two different coordinate systems:          (    𝐱  ~   ′   )   T     𝐄     𝐱  ~       =   (  1  )         (    𝐱  ~   -  𝐭   )   T      𝐑  T     𝐑      [  𝐭  ]   ×      𝐱  ~       =   (  2  )         (    𝐱  ~   -  𝐭   )   T       [  𝐭  ]   ×      𝐱  ~      =   (  3  )    0        superscript   1      superscript   superscript   normal-~  𝐱   normal-′   T   𝐄   normal-~  𝐱       superscript     normal-~  𝐱   𝐭   T    superscript  𝐑  T   𝐑   subscript   delimited-[]  𝐭      normal-~  𝐱       superscript   2        superscript     normal-~  𝐱   𝐭   T    subscript   delimited-[]  𝐭      normal-~  𝐱       superscript   3     0     (\tilde{\mathbf{x}}^{\prime})^{T}\,\mathbf{E}\,\tilde{\mathbf{x}}\,\stackrel{(%
 1)}{=}\,(\tilde{\mathbf{x}}-\mathbf{t})^{T}\,\mathbf{R}^{T}\,\mathbf{R}\,[%
 \mathbf{t}]_{\times}\,\tilde{\mathbf{x}}\,\stackrel{(2)}{=}\,(\tilde{\mathbf{x%
 }}-\mathbf{t})^{T}\,[\mathbf{t}]_{\times}\,\tilde{\mathbf{x}}\,\stackrel{(3)}{%
 =}\,0      Insert the above relations between     𝐱  ~   ′     superscript   normal-~  𝐱   normal-′    \tilde{\mathbf{x}}^{\prime}   and    𝐱  ~     normal-~  𝐱    \tilde{\mathbf{x}}   and the definition of   𝐄   𝐄   \mathbf{E}   in terms of   𝐑   𝐑   \mathbf{R}   and   𝐭   𝐭   \mathbf{t}   .         𝐑  T    𝐑   =  𝐈         superscript  𝐑  T   𝐑   𝐈    \mathbf{R}^{T}\,\mathbf{R}=\mathbf{I}   since   𝐑   𝐑   \mathbf{R}   is a rotation matrix.  Properties of the matrix representation of the cross product .   Finally, it can be assumed that both    x  3     subscript  x  3    x_{3}   and    x  3  ′     subscript   superscript  x  normal-′   3    x^{\prime}_{3}   are > 0, otherwise they are not visible in both cameras. This gives      0  =      (    𝐱  ~   ′   )   T     𝐄    𝐱  ~    =    1   x  3  ′       (    𝐱  ~   ′   )   T     𝐄    1   x  3     𝐱  ~    =      (   𝐲  ′   )   T     𝐄   𝐲         0     superscript   superscript   normal-~  𝐱   normal-′   T   𝐄   normal-~  𝐱             1   subscript   superscript  x  normal-′   3     superscript   superscript   normal-~  𝐱   normal-′   T   𝐄    1   subscript  x  3     normal-~  𝐱            superscript   superscript  𝐲  normal-′   T   𝐄  𝐲      0=(\tilde{\mathbf{x}}^{\prime})^{T}\,\mathbf{E}\,\tilde{\mathbf{x}}=\frac{1}{x%
 ^{\prime}_{3}}(\tilde{\mathbf{x}}^{\prime})^{T}\,\mathbf{E}\,\frac{1}{x_{3}}%
 \tilde{\mathbf{x}}=(\mathbf{y}^{\prime})^{T}\,\mathbf{E}\,\mathbf{y}     which is the constraint that the essential matrix defines between corresponding image points.  Properties of the essential matrix  Not every arbitrary    3  ×  3      3  3    3\times 3   matrix can be an essential matrix for some stereo cameras. To see this notice that it is defined as the matrix product of one rotation matrix and one skew-symmetric matrix , both    3  ×  3      3  3    3\times 3   . The skew-symmetric matrix must have two singular values which are equal and another which is zero. The multiplication of the rotation matrix does not change the singular values which means that also the essential matrix has two singular values which are equal and one which is zero. The properties described here are sometimes referred to as internal constraints of the essential matrix.  If the essential matrix   𝐄   𝐄   \mathbf{E}   is multiplied by a non-zero scalar, the result is again an essential matrix which defines exactly the same constraint as   𝐄   𝐄   \mathbf{E}   does. This means that   𝐄   𝐄   \mathbf{E}   can be seen as an element of a projective space , that is, two such matrices are considered equivalent if one is a non-zero scalar multiplication of the other. This is a relevant position, for example, if   𝐄   𝐄   \mathbf{E}   is estimated from image data. However, it is also possible to take the position that   𝐄   𝐄   \mathbf{E}   is defined as      𝐄  =    𝐑     [  𝐭  ]   ×        𝐄    𝐑   subscript   delimited-[]  𝐭        \mathbf{E}=\mathbf{R}\,[\mathbf{t}]_{\times}     and then   𝐄   𝐄   \mathbf{E}   has a well-defined "scaling". It depends on the application which position is the more relevant.  The constraints can also be expressed as       det  𝐄   =  0        𝐄   0    \det\mathbf{E}=0   and        2   𝐄𝐄  T   𝐄   -    tr   (   𝐄𝐄  T   )    𝐄    =  0.          2   superscript  𝐄𝐄  T   𝐄     tr   superscript  𝐄𝐄  T    𝐄    0.    2\mathbf{E}\mathbf{E}^{T}\mathbf{E}-\operatorname{tr}(\mathbf{E}\mathbf{E}^{T}%
 )\mathbf{E}=0.   Here the last equation is matrix constraint, which can be seen as 9 constraints, one for each matrix element. These constraints are often used for determining the essential matrix from five corresponding point pairs.  The essential matrix has five or six degrees of freedom, depending on whether or not it is seen as a projective element. The rotation matrix   𝐑   𝐑   \mathbf{R}   and the translation vector   𝐭   𝐭   \mathbf{t}   have three degrees of freedom each, in total six. If the essential matrix is considered as a projective element, however, one degree of freedom related to scalar multiplication must be subtracted leaving five degrees of freedom in total.  Estimation of the essential matrix  Given a set of corresponding image points it is possible to estimate an essential matrix which satisfies the defining epipolar constraint for all the points in the set. However, if the image points are subject to noise, which is the common case in any practical situation, it is not possible to find an essential matrix which satisfies all constraints exactly.  Depending on how the error related to each constraint is measured, it is possible to determine or estimate an essential matrix which optimally satisfies the constraints for a given set of corresponding image points. The most straightforward approach is to set up a total least squares problem, commonly known as the eight-point algorithm .  Determining R and t from E  Given that the essential matrix has been determined for a stereo camera pair, for example, using the estimation method above this information can be used for determining also the rotation and translation (up to a scaling) between the two camera's coordinate systems. In these derivations   𝐄   𝐄   \mathbf{E}   is seen as a projective element rather than having a well-determined scaling.  The following method for determining   𝐑   𝐑   \mathbf{R}   and   𝐭   𝐭   \mathbf{t}   is based on performing a SVD of   𝐄   𝐄   \mathbf{E}   , see Hartley & Zisserman's book. It is also possible to determine   𝐑   𝐑   \mathbf{R}   and   𝐭   𝐭   \mathbf{t}   without an SVD, for example, following Longuet-Higgins' paper.  Finding one solution  An SVD of   𝐄   𝐄   \mathbf{E}   gives      𝐄  =    𝐔    𝚺    𝐕  T        𝐄    𝐔  𝚺   superscript  𝐕  T      \mathbf{E}=\mathbf{U}\,\mathbf{\Sigma}\,\mathbf{V}^{T}     where   𝐔   𝐔   \mathbf{U}   and   𝐕   𝐕   \mathbf{V}   are orthogonal    3  ×  3      3  3    3\times 3   matrices and   𝚺   𝚺   \mathbf{\Sigma}   is a    3  ×  3      3  3    3\times 3   diagonal matrix with      𝚺  =   (     s    0    0      0    s    0      0    0    0     )       𝚺    s  0  0    0  s  0    0  0  0      \mathbf{\Sigma}=\begin{pmatrix}s&0&0\\
 0&s&0\\
 0&0&0\end{pmatrix}     The diagonal entries of   𝚺   𝚺   \mathbf{\Sigma}   are the singular values of   𝐄   𝐄   \mathbf{E}   which, according to the internal constraints of the essential matrix, must consist of two identical and one zero value. Define      𝐖  =   (     0     -  1     0      1    0    0      0    0    1     )       𝐖    0    1   0    1  0  0    0  0  1      \mathbf{W}=\begin{pmatrix}0&-1&0\\
 1&0&0\\
 0&0&1\end{pmatrix}   with     𝐖   -  1    =   𝐖  T   =   (     0    1    0       -  1     0    0      0    0    1     )          superscript  𝐖    1     superscript  𝐖  T          0  1  0      1   0  0    0  0  1       \mathbf{W}^{-1}=\mathbf{W}^{T}=\begin{pmatrix}0&1&0\\
 -1&0&0\\
 0&0&1\end{pmatrix}     and make the following ansatz        [  𝐭  ]   ×   =    𝐔    𝐖    𝚺    𝐔  T         subscript   delimited-[]  𝐭       𝐔  𝐖  𝚺   superscript  𝐔  T      [\mathbf{t}]_{\times}=\mathbf{U}\,\mathbf{W}\,\mathbf{\Sigma}\,\mathbf{U}^{T}         𝐑  =    𝐔     𝐖   -  1      𝐕  T        𝐑    𝐔   superscript  𝐖    1     superscript  𝐕  T      \mathbf{R}=\mathbf{U}\,\mathbf{W}^{-1}\,\mathbf{V}^{T}     Since   𝚺   𝚺   \mathbf{\Sigma}   may not completely fulfill the constraints when dealing with real world data (f.e. camera images), the alternative        [  𝐭  ]   ×   =    𝐔    𝐙    𝐔  T         subscript   delimited-[]  𝐭       𝐔  𝐙   superscript  𝐔  T      [\mathbf{t}]_{\times}=\mathbf{U}\,\mathbf{Z}\,\mathbf{U}^{T}   with    𝐙  =   (     0    1    0       -  1     0    0      0    0    0     )       𝐙    0  1  0      1   0  0    0  0  0      \mathbf{Z}=\begin{pmatrix}0&1&0\\
 -1&0&0\\
 0&0&0\end{pmatrix}     may help.  Showing that it is valid  First, these expressions for   𝐑   𝐑   \mathbf{R}   and     [  𝐭  ]   ×     subscript   delimited-[]  𝐭      [\mathbf{t}]_{\times}   do satisfy the defining equation for the essential matrix        𝐑     [  𝐭  ]   ×    =    𝐔     𝐖   -  1       𝐕  T     𝐕    𝐖    𝚺    𝐕  T    =    𝐔    𝚺    𝐕  T    =  𝐄          𝐑   subscript   delimited-[]  𝐭        𝐔   superscript  𝐖    1     superscript  𝐕  T   𝐕  𝐖  𝚺   superscript  𝐕  T           𝐔  𝚺   superscript  𝐕  T         𝐄     \mathbf{R}\,[\mathbf{t}]_{\times}=\mathbf{U}\,\mathbf{W}^{-1}\,\mathbf{V}^{T}%
 \,\mathbf{V}\,\mathbf{W}\,\mathbf{\Sigma}\,\mathbf{V}^{T}=\mathbf{U}\,\mathbf{%
 \Sigma}\,\mathbf{V}^{T}=\mathbf{E}     Second, it must be shown that this     [  𝐭  ]   ×     subscript   delimited-[]  𝐭      [\mathbf{t}]_{\times}   is a matrix representation of the cross product for some   𝐭   𝐭   \mathbf{t}   . Since        𝐖   𝚺   =   (     0     -  s     0      s    0    0      0    0    0     )         𝐖  𝚺     0    s   0    s  0  0    0  0  0      \mathbf{W}\,\mathbf{\Sigma}=\begin{pmatrix}0&-s&0\\
 s&0&0\\
 0&0&0\end{pmatrix}     it is the case that     𝐖   𝚺      𝐖  𝚺    \mathbf{W}\,\mathbf{\Sigma}   is skew-symmetric, i.e.,      (    𝐖   𝚺   )   T   =   -    𝐖   𝚺         superscript    𝐖  𝚺   T       𝐖  𝚺      (\mathbf{W}\,\mathbf{\Sigma})^{T}=-\mathbf{W}\,\mathbf{\Sigma}   . This is also the case for our     [  𝐭  ]   ×     subscript   delimited-[]  𝐭      [\mathbf{t}]_{\times}   , since        (    [  𝐭  ]   ×   )   T   =    𝐔      (    𝐖   𝚺   )   T     𝐔  T    =   -    𝐔    𝐖    𝚺    𝐔  T     =   -    [  𝐭  ]   ×           superscript   subscript   delimited-[]  𝐭     T     𝐔   superscript    𝐖  𝚺   T    superscript  𝐔  T             𝐔  𝐖  𝚺   superscript  𝐔  T             subscript   delimited-[]  𝐭         ([\mathbf{t}]_{\times})^{T}=\mathbf{U}\,(\mathbf{W}\,\mathbf{\Sigma})^{T}\,%
 \mathbf{U}^{T}=-\mathbf{U}\,\mathbf{W}\,\mathbf{\Sigma}\,\mathbf{U}^{T}=-[%
 \mathbf{t}]_{\times}     According to the general properties of the matrix representation of the cross product it then follows that     [  𝐭  ]   ×     subscript   delimited-[]  𝐭      [\mathbf{t}]_{\times}   must be the cross product operator of exactly one vector   𝐭   𝐭   \mathbf{t}   .  Third, it must also need to be shown that the above expression for   𝐑   𝐑   \mathbf{R}   is a rotation matrix. It is the product of three matrices which all are orthogonal which means that   𝐑   𝐑   \mathbf{R}   , too, is orthogonal or     det   (  𝐑  )    =   ±  1         𝐑    plus-or-minus  1     \det(\mathbf{R})=\pm 1   . To be a proper rotation matrix it must also satisfy     det   (  𝐑  )    =  1        𝐑   1    \det(\mathbf{R})=1   . Since, in this case,   𝐄   𝐄   \mathbf{E}   is seen as a projective element this can be accomplished by reversing the sign of   𝐄   𝐄   \mathbf{E}   if necessary.  Finding all solutions  So far one possible solution for   𝐑   𝐑   \mathbf{R}   and   𝐭   𝐭   \mathbf{t}   has been established given   𝐄   𝐄   \mathbf{E}   . It is, however, not the only possible solution and it may not even be a valid solution from a practical point of view. To begin with, since the scaling of   𝐄   𝐄   \mathbf{E}   is undefined, the scaling of   𝐭   𝐭   \mathbf{t}   is also undefined. It must lie in the null space of   𝐄   𝐄   \mathbf{E}   since        𝐄   𝐭   =    𝐑      [  𝐭  ]   ×    𝐭   =  𝟎          𝐄  𝐭     𝐑   subscript   delimited-[]  𝐭     𝐭        0     \mathbf{E}\,\mathbf{t}=\mathbf{R}\,[\mathbf{t}]_{\times}\,\mathbf{t}=\mathbf{0}     For the subsequent analysis of the solutions, however, the exact scaling of   𝐭   𝐭   \mathbf{t}   is not so important as its "sign", i.e., in which direction it points. Let    𝐭  ^     normal-^  𝐭    \hat{\mathbf{t}}   be normalized vector in the null space of   𝐄   𝐄   \mathbf{E}   . It is then the case that both    𝐭  ^     normal-^  𝐭    \hat{\mathbf{t}}   and    -   𝐭  ^        normal-^  𝐭     -\hat{\mathbf{t}}   are valid translation vectors relative   𝐄   𝐄   \mathbf{E}   . It is also possible to change   𝐖   𝐖   \mathbf{W}   into    𝐖   -  1      superscript  𝐖    1     \mathbf{W}^{-1}   in the derivations of   𝐑   𝐑   \mathbf{R}   and   𝐭   𝐭   \mathbf{t}   above. For the translation vector this only causes a change of sign, which has already been described as a possibility. For the rotation, on the other hand, this will produce a different transformation, at least in the general case.  To summarize, given   𝐄   𝐄   \mathbf{E}   there are two opposite directions which are possible for   𝐭   𝐭   \mathbf{t}   and two different rotations which are compatible with this essential matrix. In total this gives four classes of solutions for the rotation and translation between the two camera coordinate systems. On top of that, there is also an unknown scaling    s  >  0      s  0    s>0   for the chosen translation direction.  It turns out, however, that only one of the four classes of solutions can be realized in practice. Given a pair of corresponding image coordinates, three of the solutions will always produce a 3D point which lies behind at least one of the two cameras and therefore cannot be seen. Only one of the four classes will consistently produce 3D points which are in front of both cameras. This must then be the correct solution. Still, however, it has an undetermined positive scaling related to the translation component.  It should be noted that the above determination of   𝐑   𝐑   \mathbf{R}   and   𝐭   𝐭   \mathbf{t}   assumes that   𝐄   𝐄   \mathbf{E}   satisfy the internal constraints of the essential matrix . If this is not the case which, for example, typically is the case if   𝐄   𝐄   \mathbf{E}   has been estimated from real (and noisy) image data, it has to be assumed that it approximately satisfy the internal constraints. The vector    𝐭  ^     normal-^  𝐭    \hat{\mathbf{t}}   is then chosen as right singular vector of   𝐄   𝐄   \mathbf{E}   corresponding to the smallest singular value.  3D points from corresponding image points  The problem to be solved there is how to compute    (   x  1   ,   x  2   ,   x  3   )      subscript  x  1    subscript  x  2    subscript  x  3     (x_{1},x_{2},x_{3})   given corresponding normalized image coordinates    (   y  1   ,   y  2   )      subscript  y  1    subscript  y  2     (y_{1},y_{2})   and    (   y  1  ′   ,   y  2  ′   )      subscript   superscript  y  normal-′   1    subscript   superscript  y  normal-′   2     (y^{\prime}_{1},y^{\prime}_{2})   . If the essential matrix is known and the corresponding rotation and translation transformations have been determined, this algorithm (described in Longuet-Higgins' paper) provides a solution.  Let    𝐫  k     subscript  𝐫  k    \mathbf{r}_{k}   denote row k of the rotation matrix   𝐑   𝐑   \mathbf{R}   :      𝐑  =   (       -   𝐫  1    -         -   𝐫  2    -         -   𝐫  3    -      )       𝐑     limit-from     subscript  𝐫  1         limit-from     subscript  𝐫  2         limit-from     subscript  𝐫  3          \mathbf{R}=\begin{pmatrix}-\mathbf{r}_{1}-\\
 -\mathbf{r}_{2}-\\
 -\mathbf{r}_{3}-\end{pmatrix}     Combining the above relations between 3D coordinates in the two coordinate systems and the mapping between 3D and 2D points described earlier gives       y  1  ′   =    x  1  ′    x  3  ′    =     𝐫  1   ⋅   (    𝐱  ~   -  𝐭   )      𝐫  3   ⋅   (    𝐱  ~   -  𝐭   )     =     𝐫  1   ⋅   (   𝐲  -   𝐭  /   x  3     )      𝐫  3   ⋅   (   𝐲  -   𝐭  /   x  3     )            subscript   superscript  y  normal-′   1      subscript   superscript  x  normal-′   1    subscript   superscript  x  normal-′   3            normal-⋅   subscript  𝐫  1      normal-~  𝐱   𝐭     normal-⋅   subscript  𝐫  3      normal-~  𝐱   𝐭             normal-⋅   subscript  𝐫  1     𝐲    𝐭   subscript  x  3       normal-⋅   subscript  𝐫  3     𝐲    𝐭   subscript  x  3          y^{\prime}_{1}=\frac{x^{\prime}_{1}}{x^{\prime}_{3}}=\frac{\mathbf{r}_{1}\cdot%
 (\tilde{\mathbf{x}}-\mathbf{t})}{\mathbf{r}_{3}\cdot(\tilde{\mathbf{x}}-%
 \mathbf{t})}=\frac{\mathbf{r}_{1}\cdot(\mathbf{y}-\mathbf{t}/x_{3})}{\mathbf{r%
 }_{3}\cdot(\mathbf{y}-\mathbf{t}/x_{3})}     or       x  3   =     (    𝐫  1   -     y  1  ′     𝐫  3     )   ⋅  𝐭     (    𝐫  1   -     y  1  ′     𝐫  3     )   ⋅  𝐲         subscript  x  3      normal-⋅     subscript  𝐫  1      subscript   superscript  y  normal-′   1    subscript  𝐫  3     𝐭    normal-⋅     subscript  𝐫  1      subscript   superscript  y  normal-′   1    subscript  𝐫  3     𝐲      x_{3}=\frac{(\mathbf{r}_{1}-y^{\prime}_{1}\,\mathbf{r}_{3})\cdot\mathbf{t}}{(%
 \mathbf{r}_{1}-y^{\prime}_{1}\,\mathbf{r}_{3})\cdot\mathbf{y}}     Once    x  3     subscript  x  3    x_{3}   is determined, the other two coordinates can be computed as       (      x  1        x  2      )   =    x  3    (      y  1        y  2      )           subscript  x  1      subscript  x  2        subscript  x  3      subscript  y  1      subscript  y  2        \begin{pmatrix}x_{1}\\
 x_{2}\end{pmatrix}=x_{3}\begin{pmatrix}y_{1}\\
 y_{2}\end{pmatrix}     The above derivation is not unique. It is also possible to start with an expression for    y  2  ′     subscript   superscript  y  normal-′   2    y^{\prime}_{2}   and derive an expression for    x  3     subscript  x  3    x_{3}   according to       x  3   =     (    𝐫  2   -     y  2  ′     𝐫  3     )   ⋅  𝐭     (    𝐫  2   -     y  2  ′     𝐫  3     )   ⋅  𝐲         subscript  x  3      normal-⋅     subscript  𝐫  2      subscript   superscript  y  normal-′   2    subscript  𝐫  3     𝐭    normal-⋅     subscript  𝐫  2      subscript   superscript  y  normal-′   2    subscript  𝐫  3     𝐲      x_{3}=\frac{(\mathbf{r}_{2}-y^{\prime}_{2}\,\mathbf{r}_{3})\cdot\mathbf{t}}{(%
 \mathbf{r}_{2}-y^{\prime}_{2}\,\mathbf{r}_{3})\cdot\mathbf{y}}     In the ideal case, when the camera maps the 3D points according to a perfect pinhole camera and the resulting 2D points can be detected without any noise, the two expressions for    x  3     subscript  x  3    x_{3}   are equal. In practice, however, they are not and it may be advantageous to combine the two estimates of    x  3     subscript  x  3    x_{3}   , for example, in terms of some sort of average.  There are also other types of extensions of the above computations which are possible. They started with an expression of the primed image coordinates and derived 3D coordinates in the unprimed system. It is also possible to start with unprimed image coordinates and obtain primed 3D coordinates, which finally can be transformed into unprimed 3D coordinates. Again, in the ideal case the result should be equal to the above expressions, but in practice they may deviate.  A final remark relates to the fact that if the essential matrix is determined from corresponding image coordinate, which often is the case when 3D points are determined in this way, the translation vector   𝐭   𝐭   \mathbf{t}   is known only up to an unknown positive scaling. As a consequence, the reconstructed 3D points, too, are undetermined with respect to a positive scaling.  References         "  Category:Geometry in computer vision   