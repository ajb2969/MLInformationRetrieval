   Recursively enumerable language      Recursively enumerable language   In mathematics , logic and computer science , a formal language is called recursively enumerable (also recognizable , partially decidable , semidecidable , Turing-acceptable or Turing-recognizable ) if it is a recursively enumerable subset in the set of all possible words over the alphabet of the language, i.e., if there exists a Turing machine which will enumerate all valid strings of the language.  Recursively enumerable languages are known as type-0 languages in the Chomsky hierarchy of formal languages. All regular , context-free , context-sensitive and recursive languages are recursively enumerable.  The class of all recursively enumerable languages is called RE .  Definitions  There exist three equivalent major definitions for the concept of a recursively enumerable language.   A recursively enumerable language is a recursively enumerable  subset in the set of all possible words over the alphabet of the language .  A recursively enumerable language is a formal language for which there exists a Turing machine (or other computable function ) which will enumerate all valid strings of the language. Note that if the language is infinite , the enumerating algorithm provided can be chosen so that it avoids repetitions, since we can test whether the string produced for number n is "already" produced for a number which is less than n . If it already is produced, use the output for input n+1 instead (recursively), but again, test whether it is "new".  A recursively enumerable language is a formal language for which there exists a Turing machine (or other computable function) that will halt and accept when presented with any string in the language as input but may either halt and reject or loop forever when presented with a string not in the language. Contrast this to recursive languages , which require that the Turing machine halts in all cases.   All regular , context-free , context-sensitive and recursive languages are recursively enumerable.  Post's theorem shows that RE , together with its complement  co-RE , correspond to the first level of the arithmetical hierarchy .  Example  The Halting problem is recursively enumerable but not recursive. Indeed one can run the Turing Machine and accept if the machine halts, hence it is r.e. On the other hand the problem is undecidable.  Some other r.e. languages that are not recursive:   Post correspondence problem  Mortality (computability theory)  Entscheidungsproblem   Closure properties  Recursively enumerable languages are closed under the following operations. That is, if L and P are two recursively enumerable languages, then the following languages are recursively enumerable as well:   the Kleene star     L  *     superscript  L     L^{*}   of L  the concatenation     L  ∘  P      L  P    L\circ P   of L and P  the union     L  ∪  P      L  P    L\cup P     the intersection     L  ∩  P      L  P    L\cap P   .   Note that recursively enumerable languages are not closed under set difference or complementation. The set difference L - P may or may not be recursively enumerable. If L is recursively enumerable, then the complement of L is recursively enumerable if and only if L is also recursive.  References   Sipser, M. (1996), Introduction to the Theory of Computation , PWS Publishing Co.  Kozen, D.C. (1997), Automata and Computability , Springer.   External links    Lecture slides   "  Category:Formal languages  Category:Theory of computation  Category:Mathematics of computing   