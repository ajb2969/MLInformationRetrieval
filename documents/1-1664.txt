   Elias gamma coding      Elias gamma coding   Elias gamma code is a universal code encoding positive integers developed by Peter Elias . 1 It is used most commonly when coding integers whose upper-bound cannot be determined beforehand.  Encoding  To code a number  x ≥1:   Let N =⌊log 2  x ⌋ be the highest power of 2 it contains, so 2 N ≤ x  N +1.  Write out N zero bits, then  Append the binary form of x , an N +1-bit binary number.   An equivalent way to express the same process:   Encode N in unary ; that is, as N zeroes followed by a one.  Append the remaining N binary digits of x to this representation of N .   To represent a number   x   x   x   , Elias gamma uses     2   ⌊    log  2    (  x  )    ⌋    +  1        2      subscript   2   x     1    2\lfloor\log_{2}(x)\rfloor+1   bits. 2  The code begins (the implied probability distribution for the code is added for clarity):      Number   Binary   γ Encoding   Implied probability       1 = 2 0 + 0   1   1   1/2        2 = 2 1 + 0   1 0   0 1 0   1/8     3 = 2 1 + 1   1 1   0 1 1   1/8        4 = 2 2 + 0   1 00   00 1 00   1/32     5 = 2 2 + 1   1 01   00 1 01   1/32     6 = 2 2 + 2   1 10   00 1 10   1/32     7 = 2 2 + 3   1 11   00 1 11   1/32        8 = 2 3 + 0   1 000   000 1 000   1/128     9 = 2 3 + 1   1 001   000 1 001   1/128     10 = 2 3 + 2   1 010   000 1 010   1/128     11 = 2 3 + 3   1 011   000 1 011   1/128     12 = 2 3 + 4   1 100   000 1 100   1/128     13 = 2 3 + 5   1 101   000 1 101   1/128     14 = 2 3 + 6   1 110   000 1 110   1/128     15 = 2 3 + 7   1 111   000 1 111   1/128        16 = 2 4 + 0   1 0000   0000 1 0000   1/512     17 = 2 4 + 1   1 0001   0000 1 0001   1/512     Decoding  To decode an Elias gamma-coded integer:   Read and count 0s from the stream until you reach the first 1. Call this count of zeroes N .  Considering the one that was reached to be the first digit of the integer, with a value of 2 N , read the remaining N digits of the integer.   Uses  Gamma coding is used in applications where the largest encoded value is not known ahead of time, or to compress data in which small values are much more frequent than large values.  Gamma coding is a building block in the Elias delta code .  Generalizations  Gamma coding does not code zero or negative integers. One way of handling zero is to add 1 before coding and then subtract 1 after decoding. Another way is to prefix each nonzero code with a 1 and then code zero as a single 0.  One way to code all integers is to set up a bijection , mapping integers (0, −1, 1, −2, 2, −3, 3, ...) to (1, 2, 3, 4, 5, 6, 7, ...) before coding. In software, this is most easily done by mapping non-negative inputs to odd outputs, and negative inputs to even outputs, so the least-significant bit becomes an inverted sign bit :     {      x  ↦    2  x   +  1         when   x   ≥  0        x  ↦   -   2  x          when   x   <  0         cases   maps-to  x      2  x   1        when  x   0    maps-to  x      2  x         when  x   0     \begin{cases}x\mapsto 2x+1&\mathrm{when~{}}x\geq 0\\
 x\mapsto-2x&\mathrm{when~{}}x<0\\
 \end{cases}     Exponential-Golomb coding generalizes the gamma code to integers with a "flatter" power-law distribution, just as Golomb coding generalizes the unary code. It involves dividing the number by a positive divisor, commonly a power of 2, writing the gamma code for one more than the quotient, and writing out the remainder in an ordinary binary code.  References     See also   Elias delta coding  Elias omega coding   "  Category:Numeral systems  Category:Lossless compression algorithms  Category:Articles with example C code     ↩      