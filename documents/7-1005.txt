   MIMIC      MIMIC   MIMIC , known in capitalized form only, is a former simulation  computer language developed 1964 by H. E. Petersen , F. J. Sansom and L. M. Warshawsky of Systems Engineering Group within the Air Force Materiel Command at the Wright-Patterson AFB in Dayton, Ohio , USA . 1 It is an expression-oriented continuous block simulation language, but capable of incorporating blocks of FORTRAN -like algebra.  MIMIC is a further development from MIDAS ( M odified I ntegration D igital A nalog S imulator), which represented analog computer design. Written completely in FORTRAN but one routine in COMPASS , and ran on Control Data  supercomputers , MIMIC is capable of solving much larger simulation models.  With MIMIC, ordinary differential equations describing mathematical models in several scientific disciplines as in engineering, physics, chemistry, biology, economics and as well as in social sciences can easily be solved by numerical integration and the results of the analysis are listed or drawn in diagrams. It also enables the analysis of nonlinear dynamic conditions .  The MIMIC software package, written as FORTRAN overlay programs, executes input statements of the mathematical model in six consecutive passes. Simulation programs written in MIMIC are compiled rather than interpreted. The core of the simulation package is a variable step numerical integrator of fourth-order Runge-Kutta method . Many useful functions related to electrical circuit elements exist besides some mathematical functions found in most scientific programming languages. There is no need to sort the statements in order of dependencies of the variables, since MIMIC does it internally.  Parts of the software organized in overlays are:   MIMIN (input)– reads in user simulation program and data,  MIMCO (compiler) – compiles the user program and creates an in-core array of instructions,  MIMSO (sort)– sorts the instructions array after dependencies of variables,  MIMAS (assembler) – converts the BCD instructions into machine-oriented code ,  MIMEX (execute)– executes the user program by integrating,  MIMOUT (output)– puts out the data as a list or diagram of data.   Example   Problem:   Consider a predator-prey model from the field of marine biology to determine the dynamics of fish and shark populations. As a simple model, we choose the Lotka–Volterra equation and the constants given in a tutorial. 2  If   f (t): Fish population over time (fish)  s (t): Shark population over time (sharks)  d f / dt or    f  ˙     normal-˙  f    \dot{f}   : growth rate of fish population (fish/year)  d s / dt or    s  ˙     normal-˙  s    \dot{s}   : growth rate of shark population (sharks/year)     α   α   \alpha   : growth rate of fish in the absence of sharks (1/year)     β   β   \beta   : death rate per encounter of fish with sharks (1/sharks and year).     γ   γ   \gamma   : death rate of sharks in the absence of their prey, fish (1/year)     ϵ   ϵ   \epsilon   : efficiency of turning predated fish into sharks (sharks/fish)   then       f  ˙   =    α  f   -   β  f  s         normal-˙  f       α  f     β  f  s      \dot{f}=\alpha f-\beta fs          s  ˙   =    ϵ  β  f  s   -   γ  s         normal-˙  s       ϵ  β  f  s     γ  s      \dot{s}=\epsilon\beta fs-\gamma s   wlth initial conditions       f   (  0  )    =   f  o         f  0    subscript  f  o     f(0)=f_{o}          s   (  0  )    =   s  o         s  0    subscript  s  o     s(0)=s_{o}     The problem's constants are given as:       f  o     subscript  f  o    f_{o}   = 600 fish      s  o     subscript  s  o    s_{o}   = 50 sharks     α   α   \alpha   = 0.7 fish/year     β   β   \beta   = 0.007 fish/shark and year     γ   γ   \gamma   = 0.5 shark/year     ϵ   ϵ   \epsilon   = 0.1 shark/fish  tmax = 50 year    Code sample:   Card columns  0        1         2         3         4         5         6         7  12345678901234567890123456789012345678901234567890123456789012345678901  -----------------------------------------------------------------------  * A SIMPLE PREDATOR-PREY MODEL FROM MARINE BIOLOGY  / (TUTORIAL 2: NUMERICAL SOLUTION OF ODE'S - 19/08/02)  / ENVIRONMENTAL FLUID MECHANICS LAB  / DEPT OF CIVIL AND ENVIRONMENTAL ENGINEERİNG  / STANFORD UNIVERSITY  *  * LOTKA–VOLTERRA EQUATION  CON(F0,S0,TMAX)  CON(ALPHA,BETA,GAMMA,EPS)  1DF   = ALPHA*F-BETA*F*S  F     = INT(1DF,F0)  1DS   = EPS*BETA*F*S-GAMMA*S  S     = INT(1DS,S0)  HDR(TIME,FISH,SHARK)  OUT(T,F,S)  PLO(F,S)  FIN(T,TMAX)  END   600.       50.          50.  0.7        0.007        0.5         0.1   References   Notes    Control Data MIMIC; A Digital Simulation Language, Reference Manual, Publication Number 4461n400, Control Data Corporation, Special Systems Publications, St. Paul, Minnesota (April 1968)  MIMIC, An Alternative Programming Language for Industrial Dynamics, N.D. Peterson, Socio-Econ Plan Sci. 6, Pergamon 1972  MIMIC Manual (1969), Computer Center Oregon State University   "  Category:Object-oriented programming languages  Category:Numerical programming languages  Category:Simulation programming languages  Category:CDC software  Category:Wright-Patterson Air Force Base  Category:Programming languages created in 1964     [ http://stinet.dtic.mil/oai/oai?verb=getRecord&metadataPrefix; ;=html&identifier;=AD0656301 Defense Technical Information Center] ↩  ↩     