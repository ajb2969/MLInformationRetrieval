   Q zero      Q zero   Q 0 is Peter Andrews' formulation of the simply-typed lambda calculus , and provides a foundation for mathematics comparable to first-order logic plus set theory. It is a form of higher-order logic and closely related to the logics of the HOL theorem prover family.  The theorem proving systems TPS and ETPS are based on Q 0 . In August 2009, TPS won the first-ever competition among higher-order theorem proving systems. 1  Axioms of Q 0  The system has just five axioms, which can be stated as:      (  1  )    1   (1)         g   o  o    T  and   g   o  o    F   =   ∀     x  o   ∙   g   o  o      x  o            subscript  g    o  o    T  italic- and   subscript  g    o  o    F    for-all     normal-∙   subscript  x  o    subscript  g    o  o      subscript  x  o       g_{oo}T\and g_{oo}F=\forall x_{o}\centerdot g_{oo}x_{o}       (   2  α   )     superscript  2  α    (2^{\alpha})        [   x  α   =   y  α   ]   ⊃  ∙   h   o  α     x  α   =   h   o  α     y  α      fragments   fragments  normal-[   subscript  x  α     subscript  y  α   normal-]   superset-of  normal-∙   subscript  h    o  α     subscript  x  α     subscript  h    o  α     subscript  y  α     [x_{\alpha}=y_{\alpha}]\supset\centerdot\,h_{o\alpha}x_{\alpha}=h_{o\alpha}y_{\alpha}       (   3   α  β    )     superscript  3    α  β     (3^{\alpha\beta})        f   α  β    =   g   α  β    =   ∀     x  β   ∙   f   α  β      x  β     =    g   α  β     x  β           subscript  f    α  β     subscript  g    α  β          for-all     normal-∙   subscript  x  β    subscript  f    α  β      subscript  x  β             subscript  g    α  β     subscript  x  β       f_{\alpha\beta}=g_{\alpha\beta}=\forall x_{\beta}\centerdot f_{\alpha\beta}x_{%
 \beta}=g_{\alpha\beta}x_{\beta}       (  4  )    4   (4)         [   λ   𝕩  α    𝔹  β    ]    𝔸  α    =    𝕊   A  α    𝕩  α     𝔹  β           delimited-[]    λ   subscript  𝕩  α    subscript  𝔹  β      subscript  𝔸  α       subscript   superscript  𝕊   subscript  𝕩  α     subscript  A  α     subscript  𝔹  β      [\lambda\mathbb{x_{\alpha}}\mathbb{B}_{\beta}]\mathbb{A}_{\alpha}=\mathbb{S}^{%
 \mathbb{x}_{\alpha}}_{A_{\alpha}}\mathbb{B}_{\beta}       (  5  )    5   (5)         ι   i   (   o  i   )      [    Q   o  i  i     y  i    ]    =    y  i           subscript  ι    i    o  i      delimited-[]     subscript  Q    o  i  i     subscript  y  i       subscript  y  i     \iota_{i(oi)}[\text{Q}_{oii}y_{i}]=y_{i}\,     (Axioms 2, 3, and 4 are axiom schemas—families of similar axioms. Instances of Axiom 2 and Axiom 3 vary only by the types of variables and constants, but instances of Axiom 4 can have any expression replacing A and B .)  The subscripted " o " is the type symbol for boolean values, and subscripted " i " is the type symbol for individual (non-boolean) values. Sequences of these represent types of functions, and can include parentheses to distinguish different function types. Subscripted Greek letters such as α and β are syntactic variables for type symbols. Bold capital letters such as   𝐀   𝐀   \mathbf{A}   ,   𝐁   𝐁   \mathbf{B}   , and   𝐂   𝐂   \mathbf{C}   are syntactic variables for WFFs, and bold lower case letters such as   𝐱   𝐱   \mathbf{x}   ,   𝐲   𝐲   \mathbf{y}   are syntactic variables for variables.   𝐒   𝐒   \mathbf{S}   indicates syntactic substitution at all free occurrences.  The only primitive constants are , denoting equality of members of each type α, and , denoting a description operator for individuals, the unique element of a set containing exactly one individual. The symbols λ and brackets ("[" and "]") are syntax of the language. All other symbols are abbreviations for terms containing these, including quantifiers ∀ and ∃.  In Axiom 4,   𝐱   𝐱   \mathbf{x}   must be free for   𝐀   𝐀   \mathbf{A}   in   𝐁   𝐁   \mathbf{B}   , meaning that the substitution does not cause any occurrences of free variables of   𝐀   𝐀   \mathbf{A}   to become bound in the result of the substitution.  About the axioms   Axiom 1 expresses the idea that   T   T   T   and   F   F   F   are the only boolean values.  Axiom schemas 2 α and 3 αβ express fundamental properties of functions.  Axiom schema 4 defines the nature of λ notation.  Axiom 5 says that the selection operator is the inverse of the equality function on individuals. (Given one argument,   Q   Q   Q   maps that individual to the set/predicate containing the individual. In Q 0 ,    x  =  y      x  y    x=y   is an abbreviation for    Q  x  y      Q  x  y    Qxy   , which is an abbreviation for     (   Q  x   )   y        Q  x   y    (Qx)y   .)   In , Axiom 4 is developed in five subparts that break down the process of substitution. The axiom as given here is discussed as an alternative and proved from the subparts.  Inference in Q 0  Q 0 has a single rule of inference.  Rule R. From   𝐂   𝐂   \mathbf{C}   and  B α }} to infer the result of replacing one occurrence of in   𝐂   𝐂   \mathbf{C}   by an occurrence of , provided that the occurrence of in   𝐂   𝐂   \mathbf{C}   is not (an occurrence of a variable) immediately preceded by   λ   λ   λ   .  Derived rule of inference R′ enables reasoning from a set of hypotheses H .  Rule R′. If  B α }} , and    H  ⊦  𝐂      H  normal-⊦  𝐂    H⊦\mathbf{C}   , and   𝐃   𝐃   \mathbf{D}   is obtained from   𝐂   𝐂   \mathbf{C}   by replacing one occurrence of by an occurrence of , then    H  ⊦  𝐃      H  normal-⊦  𝐃    H⊦\mathbf{D}   , provided that:   The occurrence of in   𝐂   𝐂   \mathbf{C}   is not an occurrence of a variable immediately preceded by   λ   λ   λ   , and  no variable free in  B α }} and a member of   H   H   H   is bound in   𝐂   𝐂   \mathbf{C}   at the replaced occurrence of .   Note: The restriction on replacement of by in   𝐂   𝐂   \mathbf{C}   ensures that any variable free in both a hypothesis and  B α }} continues to be constrained to have the same value in both after the replacement is done.  The Deduction Theorem for Q 0 shows that proofs from hypotheses using Rule R′ can be converted into proofs without hypotheses and using Rule R.  Unlike some similar systems, inference in Q 0 replaces a subexpression at any depth within a WFF with an equal expression. So for example given axioms:  1.    ∃  x  P  x      normal-∃  x  P  x    ∃xPx    2.    P  x  ⊃  Q  x      P  x  normal-⊃  Q  x    Px⊃Qx     and the fact that    A  ⊃  B  ≡   (   A  ≡  A  ∧  B   )       A  normal-⊃  B  normal-≡    A  normal-≡  A  normal-∧  B     A⊃B≡(A≡A∧B)   , we can proceed without removing the quantifier:  3.    P  x  ≡   (   P  x  ∧  Q  x   )       P  x  normal-≡    P  x  normal-∧  Q  x     Px≡(Px∧Qx)   instantiating for A and B 4.    ∃  x   (   P  x  ∧  Q  x   )       normal-∃  x    P  x  normal-∧  Q  x     ∃x(Px∧Qx)   rule R substituting into line 1 using line 3.  Notes  References    See also http://www.springer.com/mathematics/book/978-1-4020-0763-7 .    Further reading  A description of Q 0 in more depth; part of an article on Church's Type Theory in the Stanford Encyclopedia of Philosophy.  "  Category:Logic in computer science     The CADE-22 ATP System Competition (CASC-22) ↩     