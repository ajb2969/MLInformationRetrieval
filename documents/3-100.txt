   Discretization      Discretization   In mathematics , discretization concerns the process of transferring continuous functions, models and equations into discrete counterparts. This process is usually carried out as a first step toward making them suitable for numerical evaluation and implementation on digital computers. Processing on a digital computer requires another process called quantization . Dichotomization is the special case of discretization in which the number of discrete classes is 2, which can approximate a continuous variable as a binary variable (creating a dichotomy for modeling purposes).   Euler–Maruyama method  Zero-order hold   Discretization is also related to discrete mathematics , and is an important component of granular computing . In this context, discretization may also refer to modification of variable or category granularity , as when multiple discrete variables are aggregated or multiple discrete categories fused.  Whenever continuous data is discretized , there is always some amount of discretization error . The goal is to reduce the amount to a level considered negligible for the modeling purposes at hand.  Discretization of linear state space models  Discretization is also concerned with the transformation of continuous differential equations into discrete difference equations , suitable for numerical computing .  The following continuous-time state space model        𝐱  ˙    (  t  )    =    𝐀𝐱   (  t  )    +   𝐁𝐮   (  t  )    +   𝐰   (  t  )            normal-˙  𝐱   t       𝐀𝐱  t     𝐁𝐮  t     𝐰  t      \dot{\mathbf{x}}(t)=\mathbf{A}\mathbf{x}(t)+\mathbf{B}\mathbf{u}(t)+\mathbf{w}%
 (t)          𝐲   (  t  )    =    𝐂𝐱   (  t  )    +   𝐃𝐮   (  t  )    +   𝐯   (  t  )           𝐲  t       𝐂𝐱  t     𝐃𝐮  t     𝐯  t      \mathbf{y}(t)=\mathbf{C}\mathbf{x}(t)+\mathbf{D}\mathbf{u}(t)+\mathbf{v}(t)     where v and w are continuous zero-mean white noise sources with covariances       𝐰   (  t  )    ∼   N   (  0  ,  𝐐  )       similar-to    𝐰  t     N   0  𝐐      \mathbf{w}(t)\sim N(0,\mathbf{Q})          𝐯   (  t  )    ∼   N   (  0  ,  𝐑  )       similar-to    𝐯  t     N   0  𝐑      \mathbf{v}(t)\sim N(0,\mathbf{R})     can be discretized, assuming zero-order hold for the input u and continuous integration for the noise v , to       𝐱   [   k  +  1   ]    =     𝐀  d   𝐱   [  k  ]    +    𝐁  d   𝐮   [  k  ]    +   𝐰   [  k  ]           𝐱   delimited-[]    k  1          subscript  𝐀  d   𝐱   delimited-[]  k       subscript  𝐁  d   𝐮   delimited-[]  k      𝐰   delimited-[]  k       \mathbf{x}[k+1]=\mathbf{A}_{d}\mathbf{x}[k]+\mathbf{B}_{d}\mathbf{u}[k]+%
 \mathbf{w}[k]          𝐲   [  k  ]    =     𝐂  d   𝐱   [  k  ]    +    𝐃  d   𝐮   [  k  ]    +   𝐯   [  k  ]           𝐲   delimited-[]  k         subscript  𝐂  d   𝐱   delimited-[]  k       subscript  𝐃  d   𝐮   delimited-[]  k      𝐯   delimited-[]  k       \mathbf{y}[k]=\mathbf{C}_{d}\mathbf{x}[k]+\mathbf{D}_{d}\mathbf{u}[k]+\mathbf{%
 v}[k]     with covariances       𝐰   [  k  ]    ∼   N   (  0  ,   𝐐  d   )       similar-to    𝐰   delimited-[]  k      N   0   subscript  𝐐  d       \mathbf{w}[k]\sim N(0,\mathbf{Q}_{d})          𝐯   [  k  ]    ∼   N   (  0  ,   𝐑  d   )       similar-to    𝐯   delimited-[]  k      N   0   subscript  𝐑  d       \mathbf{v}[k]\sim N(0,\mathbf{R}_{d})     where       𝐀  d   =   e   𝐀  T    =    ℒ   -  1      {    (    s  𝐈   -  𝐀   )    -  1    }    t  =  T            subscript  𝐀  d    superscript  e    𝐀  T            superscript  ℒ    1     subscript    superscript      s  𝐈   𝐀     1       t  T        \mathbf{A}_{d}=e^{\mathbf{A}T}=\mathcal{L}^{-1}\{(s\mathbf{I}-\mathbf{A})^{-1}%
 \}_{t=T}          𝐁  d   =    (    ∫   τ  =  0   T     e   𝐀  τ    d  τ    )   𝐁   =    𝐀   -  1     (    𝐀  d   -  I   )   𝐁          subscript  𝐁  d       superscript   subscript     τ  0    T      superscript  e    𝐀  τ    d  τ    𝐁           superscript  𝐀    1       subscript  𝐀  d   I   𝐁      \mathbf{B}_{d}=\left(\int_{\tau=0}^{T}e^{\mathbf{A}\tau}d\tau\right)\mathbf{B}%
 =\mathbf{A}^{-1}(\mathbf{A}_{d}-I)\mathbf{B}   , if   𝐀   𝐀   \mathbf{A}   is nonsingular       𝐂  d   =  𝐂       subscript  𝐂  d   𝐂    \mathbf{C}_{d}=\mathbf{C}          𝐃  d   =  𝐃       subscript  𝐃  d   𝐃    \mathbf{D}_{d}=\mathbf{D}          𝐐  d   =    ∫   τ  =  0   T     e   𝐀  τ    𝐐   e    𝐀  T   τ    d  τ         subscript  𝐐  d     superscript   subscript     τ  0    T      superscript  e    𝐀  τ    𝐐   superscript  e     superscript  𝐀  T   τ    d  τ      \mathbf{Q}_{d}=\int_{\tau=0}^{T}e^{\mathbf{A}\tau}\mathbf{Q}e^{\mathbf{A}^{T}%
 \tau}d\tau          𝐑  d   =    1  T   𝐑        subscript  𝐑  d       1  T   𝐑     \mathbf{R}_{d}=\frac{1}{T}\mathbf{R}     and   T   T   T   is the sample time, although    𝐀  T     superscript  𝐀  T    \mathbf{A}^{T}   is the transposed matrix of   𝐀   𝐀   \mathbf{A}   .  A clever trick to compute A d and B d in one step is by utilizing the following property: 1       e    [     𝐀    𝐁      𝟎    𝟎     ]   T    =   [      𝐌  𝟏𝟏      𝐌  𝟏𝟐       𝟎    𝐈     ]        superscript  e      𝐀  𝐁    0  0    T       subscript  𝐌  11    subscript  𝐌  12     0  𝐈      e^{\begin{bmatrix}\mathbf{A}&\mathbf{B}\\
 \mathbf{0}&\mathbf{0}\end{bmatrix}T}=\begin{bmatrix}\mathbf{M_{11}}&\mathbf{M_%
 {12}}\\
 \mathbf{0}&\mathbf{I}\end{bmatrix}     and then having       𝐀  d   =   𝐌  11        subscript  𝐀  d    subscript  𝐌  11     \mathbf{A}_{d}=\mathbf{M}_{11}          𝐁  d   =   𝐌  12        subscript  𝐁  d    subscript  𝐌  12     \mathbf{B}_{d}=\mathbf{M}_{12}     Discretization of process noise  Numerical evaluation of    𝐐  d     subscript  𝐐  d    \mathbf{Q}_{d}   is a bit trickier due to the matrix exponential integral. It can, however, be computed by first constructing a matrix, and computing the exponential of it (Van Loan, 1978):      𝐅  =    [      -  𝐀     𝐐      𝟎     𝐀  T      ]   T       𝐅        𝐀   𝐐    0   superscript  𝐀  T     T     \mathbf{F}=\begin{bmatrix}-\mathbf{A}&\mathbf{Q}\\
 \mathbf{0}&\mathbf{A}^{T}\end{bmatrix}T          𝐆  =   e  𝐅   =   [     …      𝐀  d   -  1     𝐐  d        𝟎     𝐀  d  T      ]    .        𝐆   superscript  e  𝐅          normal-…     superscript   subscript  𝐀  d     1     subscript  𝐐  d      0   superscript   subscript  𝐀  d   T        \mathbf{G}=e^{\mathbf{F}}=\begin{bmatrix}\dots&\mathbf{A}_{d}^{-1}\mathbf{Q}_{%
 d}\\
 \mathbf{0}&\mathbf{A}_{d}^{T}\end{bmatrix}.   The discretized process noise is then evaluated by multiplying the transpose of the lower-right partition of G with the upper-right partition of G :        𝐐  d   =     (   𝐀  d  T   )   T    (    𝐀  d   -  1     𝐐  d    )     .       subscript  𝐐  d      superscript   superscript   subscript  𝐀  d   T   T      superscript   subscript  𝐀  d     1     subscript  𝐐  d       \mathbf{Q}_{d}=(\mathbf{A}_{d}^{T})^{T}(\mathbf{A}_{d}^{-1}\mathbf{Q}_{d}).     Derivation  Starting with the continuous model        𝐱  ˙    (  t  )    =    𝐀𝐱   (  t  )    +   𝐁𝐮   (  t  )            normal-˙  𝐱   t       𝐀𝐱  t     𝐁𝐮  t      \mathbf{\dot{x}}(t)=\mathbf{A}\mathbf{x}(t)+\mathbf{B}\mathbf{u}(t)   we know that the matrix exponential is        d   d  t     e   𝐀  t     =   𝐀   e   𝐀  t     =    e   𝐀  t    𝐀             d    d  t     superscript  e    𝐀  t       𝐀   superscript  e    𝐀  t             superscript  e    𝐀  t    𝐀      \frac{d}{dt}e^{\mathbf{A}t}=\mathbf{A}e^{\mathbf{A}t}=e^{\mathbf{A}t}\mathbf{A}   and by premultiplying the model we get        e   -   𝐀  t      𝐱  ˙    (  t  )    =     e   -   𝐀  t     𝐀𝐱   (  t  )    +    e   -   𝐀  t     𝐁𝐮   (  t  )            superscript  e      𝐀  t      normal-˙  𝐱   t        superscript  e      𝐀  t     𝐀𝐱  t      superscript  e      𝐀  t     𝐁𝐮  t      e^{-\mathbf{A}t}\mathbf{\dot{x}}(t)=e^{-\mathbf{A}t}\mathbf{A}\mathbf{x}(t)+e^%
 {-\mathbf{A}t}\mathbf{B}\mathbf{u}(t)   which we recognize as        d   d  t     (    e   -   𝐀  t     𝐱   (  t  )    )    =    e   -   𝐀  t     𝐁𝐮   (  t  )            d    d  t       superscript  e      𝐀  t     𝐱  t       superscript  e      𝐀  t     𝐁𝐮  t     \frac{d}{dt}(e^{-\mathbf{A}t}\mathbf{x}(t))=e^{-\mathbf{A}t}\mathbf{B}\mathbf{%
 u}(t)   and by integrating..         e   -   𝐀  t     𝐱   (  t  )    -    e  0   𝐱   (  0  )     =    ∫  0  t     e   -   𝐀  τ     𝐁𝐮   (  τ  )   d  τ             superscript  e      𝐀  t     𝐱  t      superscript  e  0   𝐱  0      superscript   subscript   0   t      superscript  e      𝐀  τ     𝐁𝐮  τ  d  τ      e^{-\mathbf{A}t}\mathbf{x}(t)-e^{0}\mathbf{x}(0)=\int_{0}^{t}e^{-\mathbf{A}%
 \tau}\mathbf{B}\mathbf{u}(\tau)d\tau          𝐱   (  t  )    =     e   𝐀  t    𝐱   (  0  )    +    ∫  0  t     e   𝐀   (   t  -  τ   )     𝐁𝐮   (  τ  )   d  τ           𝐱  t        superscript  e    𝐀  t    𝐱  0     superscript   subscript   0   t      superscript  e    𝐀    t  τ     𝐁𝐮  τ  d  τ       \mathbf{x}(t)=e^{\mathbf{A}t}\mathbf{x}(0)+\int_{0}^{t}e^{\mathbf{A}(t-\tau)}%
 \mathbf{B}\mathbf{u}(\tau)d\tau   which is an analytical solution to the continuous model.  Now we want to discretise the above expression. We assume that u is constant during each timestep.       𝐱   [  k  ]      =  def     𝐱   (   k  T   )        superscript   def     𝐱   delimited-[]  k      𝐱    k  T      \mathbf{x}[k]\ \stackrel{\mathrm{def}}{=}\ \mathbf{x}(kT)          𝐱   [  k  ]    =     e   𝐀  k  T    𝐱   (  0  )    +    ∫  0   k  T      e   𝐀   (    k  T   -  τ   )     𝐁𝐮   (  τ  )   d  τ           𝐱   delimited-[]  k         superscript  e    𝐀  k  T    𝐱  0     superscript   subscript   0     k  T       superscript  e    𝐀      k  T   τ     𝐁𝐮  τ  d  τ       \mathbf{x}[k]=e^{\mathbf{A}kT}\mathbf{x}(0)+\int_{0}^{kT}e^{\mathbf{A}(kT-\tau%
 )}\mathbf{B}\mathbf{u}(\tau)d\tau          𝐱   [   k  +  1   ]    =     e   𝐀   (   k  +  1   )   T    𝐱   (  0  )    +    ∫  0    (   k  +  1   )   T      e   𝐀   (     (   k  +  1   )   T   -  τ   )     𝐁𝐮   (  τ  )   d  τ           𝐱   delimited-[]    k  1          superscript  e    𝐀    k  1   T    𝐱  0     superscript   subscript   0       k  1   T       superscript  e    𝐀        k  1   T   τ     𝐁𝐮  τ  d  τ       \mathbf{x}[k+1]=e^{\mathbf{A}(k+1)T}\mathbf{x}(0)+\int_{0}^{(k+1)T}e^{\mathbf{%
 A}((k+1)T-\tau)}\mathbf{B}\mathbf{u}(\tau)d\tau          𝐱   [   k  +  1   ]    =     e   𝐀  T     [     e   𝐀  k  T    𝐱   (  0  )    +    ∫  0   k  T      e   𝐀   (    k  T   -  τ   )     𝐁𝐮   (  τ  )   d  τ     ]    +    ∫   k  T     (   k  +  1   )   T      e   𝐀   (     k  T   +  T   -  τ   )     𝐁𝐮   (  τ  )   d  τ           𝐱   delimited-[]    k  1          superscript  e    𝐀  T     delimited-[]       superscript  e    𝐀  k  T    𝐱  0     superscript   subscript   0     k  T       superscript  e    𝐀      k  T   τ     𝐁𝐮  τ  d  τ         superscript   subscript     k  T        k  1   T       superscript  e    𝐀        k  T   T   τ     𝐁𝐮  τ  d  τ       \mathbf{x}[k+1]=e^{\mathbf{A}T}\left[e^{\mathbf{A}kT}\mathbf{x}(0)+\int_{0}^{%
 kT}e^{\mathbf{A}(kT-\tau)}\mathbf{B}\mathbf{u}(\tau)d\tau\right]+\int_{kT}^{(k%
 +1)T}e^{\mathbf{A}(kT+T-\tau)}\mathbf{B}\mathbf{u}(\tau)d\tau   We recognize the bracketed expression as    𝐱   [  k  ]       𝐱   delimited-[]  k     \mathbf{x}[k]   , and the second term can be simplified by substituting    v  =     k  T   +  T   -  τ       v        k  T   T   τ     v=kT+T-\tau   . We also assume that   𝐮   𝐮   \mathbf{u}   is constant during the integral , which in turn yields         𝐱   [   k  +  1   ]      =       e   𝐀  T    𝐱   [  k  ]    +    (     ∫  0  T      e   𝐀  v    d  v    )   𝐁𝐮   [  k  ]            =     e   ;   𝐀  T    𝐱   [  k  ]   +   𝐀   -  1     (   e   𝐀  T    -  𝐈  )   𝐁𝐮   [  k  ]            𝐱   delimited-[]    k  1           superscript  e    𝐀  T    𝐱   delimited-[]  k        superscript   subscript   0   T      superscript  e    𝐀  v    d  v    𝐁𝐮   delimited-[]  k       absent    fragments  e   superscript  normal-;    𝐀  T    x   fragments  normal-[  k  normal-]     superscript  𝐀    1     fragments  normal-(   superscript  e    𝐀  T     I  normal-)   Bu   fragments  normal-[  k  normal-]       \begin{matrix}\mathbf{x}[k+1]&=&e^{\mathbf{A}T}\mathbf{x}[k]+\left(\int_{0}^{T%
 }e^{\mathbf{A}v}dv\right)\mathbf{B}\mathbf{u}[k]\\
 &=&e^{\mathbf{A}T}\mathbf{x}[k]+\mathbf{A}^{-1}\left(e^{\mathbf{A}T}-\mathbf{%
 I}\right)\mathbf{B}\mathbf{u}[k]\end{matrix}   which is an exact solution to the discretization problem.  Approximations  Exact discretization may sometimes be intractable due to the heavy matrix exponential and integral operations involved. It is much easier to calculate an approximate discrete model, based on that for small timesteps     e   𝐀  T    ≈   𝐈  +   𝐀  T         superscript  e    𝐀  T      𝐈    𝐀  T      e^{\mathbf{A}T}\approx\mathbf{I}+\mathbf{A}T   . The approximate solution then becomes:       𝐱   [   k  +  1   ]    ≈     (   𝐈  +   𝐀  T    )   𝐱   [  k  ]    +   T  𝐁𝐮   [  k  ]           𝐱   delimited-[]    k  1           𝐈    𝐀  T    𝐱   delimited-[]  k      T  𝐁𝐮   delimited-[]  k       \mathbf{x}[k+1]\approx(\mathbf{I}+\mathbf{A}T)\mathbf{x}[k]+T\mathbf{B}\mathbf%
 {u}[k]     Other possible approximations are     e   𝐀  T    ≈    (   𝐈  -   𝐀  T    )    -  1         superscript  e    𝐀  T     superscript    𝐈    𝐀  T      1      e^{\mathbf{A}T}\approx\left(\mathbf{I}-\mathbf{A}T\right)^{-1}   and     e   𝐀  T    ≈    (   𝐈  +    1  2   𝐀  T    )     (   𝐈  -    1  2   𝐀  T    )    -  1          superscript  e    𝐀  T        𝐈      1  2   𝐀  T     superscript    𝐈      1  2   𝐀  T      1       e^{\mathbf{A}T}\approx\left(\mathbf{I}+\frac{1}{2}\mathbf{A}T\right)\left(%
 \mathbf{I}-\frac{1}{2}\mathbf{A}T\right)^{-1}   . Each of them have different stability properties. The last one is known as the bilinear transform , or Tustin transform, and preserves the (in)stability of the continuous-time system.  Discretization of continuous features  In statistics and machine learning, discretization refers to the process of converting continuous features or variables to discretized or nominal features. This can be useful when creating probability mass functions.  See also   Discrete space  Time-scale calculus  Discrete event simulation  Stochastic simulation  Finite volume method for unsteady flow   References          External links  de:Diskretisierung  hr:Diskretizacija  it:Discretizzazione  pl:Dyskretyzacja (matematyka)  zh:离散化 "  Category:Numerical analysis  Category:Applied mathematics  Category:Functional analysis  Category:Iterative methods  Category:Control theory     Raymond DeCarlo: Linear Systems: A State Variable Approach with Numerical Implementation , Prentice Hall, NJ, 1989 ↩     