   Data synchronization      Data synchronization   Data synchronization is the process of establishing consistency among data from a source to a target data storage and vice versa and the continuous harmonization of the data over time. It is fundamental to a wide variety of applications, including file synchronization and mobile device synchronization e.g., for PDAs . 1  File-based solutions  There are tools available for file synchronization , version control ( CVS , Subversion , etc.), distributed filesystems ( Coda , etc.), and mirroring ( rsync , etc.), in that all these attempt to keep sets of files synchronized. However, only version control and file synchronization tools can deal with modifications to more than one copy of the files.   File synchronization is commonly used for home backups on external hard drives or updating for transport on USB flash drives . The automatic process prevents copying already identical files, thus can save considerable time relative to a manual copy, also being faster and less error prone. 2  Version control tools are intended to deal with situations where more than one user attempts to simultaneously modify the same file, while file synchronizers are optimized for situations where only one copy of the file will be edited at a time. For this reason, although version control tools can be used for file synchronization, dedicated programs require less overhead .  Distributed filesystems may also be seen as ensuring multiple versions of a file are synchronized. This normally requires that the devices storing the files are always connected, but some distributed file systems like Coda allow disconnected operation followed by reconciliation. The merging facilities of a distributed file system are typically more limited than those of a version control system because most file systems do not keep a version graph.  Mirror (computing) : A mirror is an exact copy of a data set. On the Internet, a mirror site is an exact copy of another Internet site. Mirror sites are most commonly used to provide multiple sources of the same information, and are of particular value as a way of providing reliable access to large downloads.   Synchronization can also be useful in encryption for synchronizing Public Key Servers. 3  Theoretical models  Several theoretical models of data synchronization exist in the research literature, and the problem is also related to the problem of Slepian–Wolf coding in information theory . The models are classified based on how they consider the data to be synchronized.  Unordered data  The problem of synchronizing unordered data (also known as the set reconciliation problem ) is modeled as an attempt to compute the symmetric difference      S  A   ⊕   S  B    =    (    S  A   -   S  B    )   ∪   (    S  B   -   S  A    )         direct-sum   subscript  S  A    subscript  S  B         subscript  S  A    subscript  S  B       subscript  S  B    subscript  S  A       S_{A}\oplus S_{B}=(S_{A}-S_{B})\cup(S_{B}-S_{A})   between two remote sets    S  A     subscript  S  A    S_{A}   and    S  B     subscript  S  B    S_{B}   of b-bit numbers. 4 Some solutions to this problem are typified by:   Wholesale transfer: In this case all data is transferred to one host for a local comparison. Timestamp synchronization: In this case all changes to the data are marked with timestamps. Synchronization proceeds by transferring all data with a timestamp later than the previous synchronization. 5 Mathematical synchronization: In this case data are treated as mathematical objects and synchronization corresponds to a mathematical process. 6 7 8   Ordered data  In this case, two remote strings    σ  A     subscript  σ  A    \sigma_{A}   and    σ  B     subscript  σ  B    \sigma_{B}   need to be reconcilied. Typically, it is assumed that these strings differ by up to a fixed number of edits (i.e. character insertions, deletions, or modifications). Then data synchronization is the process of reducing edit distance between    σ  A     subscript  σ  A    \sigma_{A}   and    σ  B     subscript  σ  B    \sigma_{B}   , up to the ideal distance of zero. This is applied in all filesystem based synchronizations (where the data is ordered). Many practical applications of this are discussed or referenced above.  It is sometimes possible to transform the problem to one of unordered data through a process known as shingling (splitting the strings into shingles ). 9  See also   SyncML , a standard mainly for calendar, contact and email synchronization  Synchronization (computer science)   Notes  "  *  Category:Fault-tolerant computer systems     ↩  ↩  sks.dnsalias.net ↩  ↩  Palm developer knowledgebase manuals ↩   ↩  Y. Minsky and A. Trachtenberg, Scalable set reconciliation, Allerton Conference on Communication, Control, and Computing, Oct. 2002 ↩  ↩     