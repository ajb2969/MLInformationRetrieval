   Naccache–Stern knapsack cryptosystem      Naccache–Stern knapsack cryptosystem   Note: this is not to be confused with the Naccache–Stern cryptosystem based on the higher residuosity problem .  The Naccache–Stern Knapsack Cryptosystem is an atypical public-key cryptosystem developed by David Naccache and Jacques Stern in 1997. This cryptosystem is deterministic , and hence is not semantically secure . This system also lacks provable security .  System Overview  This system is based on a type of knapsack problem . Specifically, the underlying problem is this: given integers c , n , p and v 0 ,..., v n , find a vector    x  ∈    {  0  ,  1  }   n       x   superscript   0  1   n     x\in\{0,1\}^{n}   such that      c  ≡     ∏   i  =  0   n    v  i   x  i     mod  p       c   modulo    superscript   subscript  product    i  0    n    superscript   subscript  v  i    subscript  x  i     p     c\equiv\prod_{i=0}^{n}v_{i}^{x_{i}}\mod p     The idea here is that when the v i are relatively prime and much smaller than the modulus p this problem can be solved easily. It is this observation which allows decryption.  Key Generation  To generate a public/private key pair   Pick a large prime modulus p .  Pick a positive integer n and for i from 0 to n , set p i to be the i th prime, starting with p 0 = 2 and such that      ∏   i  =  0   n    p  i    <  p        superscript   subscript  product    i  0    n    subscript  p  i    p    \prod_{i=0}^{n}p_{i}   .  Pick a secret integer s < p -1, such that gcd( p -1, s ) = 1.  Set     v  i   =     p  i   s   mod  p        subscript  v  i    modulo     s    subscript  p  i    p     v_{i}=\sqrt[s]{p_{i}}\mod p   .   The public key is then p , n and v 0 ,..., v n . The private key is s .  Encryption  To encrypt an n -bit long message m , calculate      c  =     ∏   i  =  0   n    v  i   m  i     mod  p       c   modulo    superscript   subscript  product    i  0    n    superscript   subscript  v  i    subscript  m  i     p     c=\prod_{i=0}^{n}v_{i}^{m_{i}}\mod p     where m i is the i th bit of the message m .  Decryption  To decrypt a message c , calculate      m  =    ∑   i  =  0   n      2  i     p  i   -  1    ×   (    gcd   (   p  i   ,    c  s   mod  p   )    -  1   )         m    superscript   subscript     i  0    n        superscript  2  i      subscript  p  i   1         subscript  p  i    modulo   superscript  c  s   p    1       m=\sum_{i=0}^{n}\frac{2^{i}}{p_{i}-1}\times\left(\gcd(p_{i},c^{s}\mod p)-1\right)     This works because the fraction        gcd   (   p  i   ,    c  s   mod  p   )    -  1     p  i   -  1            subscript  p  i    modulo   superscript  c  s   p    1      subscript  p  i   1     \frac{\gcd(p_{i},c^{s}\mod p)-1}{p_{i}-1}     is 0 or 1 depending on whether p i divides c s mod p .  See also   Merkle–Hellman knapsack cryptosystem  Graham–Shamir knapsack cryptosystem   References   Original Paper  Recent bandwidth improvement   "  Category:Public-key encryption schemes   