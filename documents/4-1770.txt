   Arnoldi iteration      Arnoldi iteration   In numerical  linear algebra , the Arnoldi iteration is an eigenvalue algorithm and an important example of iterative methods . Arnoldi finds the eigenvalues of general (possibly non- Hermitian ) matrices ; an analogous method for Hermitian matrices is the Lanczos iteration . The Arnoldi iteration was invented by W. E. Arnoldi in 1951.  The term iterative method , used to describe Arnoldi, can perhaps be somewhat confusing. Note that all general eigenvalue algorithms must be iterative. This is not what is referred to when we say Arnoldi is an iterative method. Rather, Arnoldi belongs to a class of linear algebra algorithms (based on the idea of Krylov subspaces ) that give a partial result after a relatively small number of iterations. This is in contrast to so-called direct methods , which must complete to give any useful results.  Arnoldi iteration is a typical large sparse matrix algorithm: It does not access the elements of the matrix directly, but rather makes the matrix map vectors and makes its conclusions from their images. This is the motivation for building the Krylov subspace .  Krylov subspaces and the power iteration  An intuitive method for finding an eigenvalue (specifically the largest eigenvalue) of a given m √ó m matrix   A   A   A   is the power iteration . Starting with an initial random  vector  b , this method calculates Ab , A 2 b , A 3 b ,‚Ä¶ iteratively storing and normalizing the result into b on every turn. This sequence converges to the eigenvector corresponding to the largest eigenvalue,    Œª  1     subscript  Œª  1    \lambda_{1}   . However, much potentially useful computation is wasted by using only the final result,     A   n  -  1    b       superscript  A    n  1    b    A^{n-1}b   . This suggests that instead, we form the so-called Krylov matrix :        K  n   =   [     b     A  b       A  2   b     ‚ãØ      A   n  -  1    b      ]    .       subscript  K  n     b    A  b      superscript  A  2   b   normal-‚ãØ     superscript  A    n  1    b       K_{n}=\begin{bmatrix}b&Ab&A^{2}b&\cdots&A^{n-1}b\end{bmatrix}.     The columns of this matrix are not orthogonal , but in principle, we can extract an orthogonal basis , via a method such as Gram‚ÄìSchmidt orthogonalization . The resulting vectors are a basis of the Krylov subspace ,    ùí¶  n     subscript  ùí¶  n    \mathcal{K}_{n}   . We may expect the vectors of this basis to give good approximations of the eigenvectors corresponding to the   n   n   n   largest eigenvalues, for the same reason that     A   n  -  1    b       superscript  A    n  1    b    A^{n-1}b   approximates the dominant eigenvector.  The Arnoldi iteration  The process described above is intuitive. Unfortunately, it is also unstable . This is where the Arnoldi iteration enters.  The Arnoldi iteration uses the stabilized Gram‚ÄìSchmidt process to produce a sequence of orthonormal vectors, q 1 , q 2 , q 3 , ‚Ä¶, called the Arnoldi vectors , such that for every n , the vectors q 1 , ‚Ä¶, q n span the Krylov subspace    ùí¶  n     subscript  ùí¶  n    \mathcal{K}_{n}   . Explicitly, the algorithm is as follows:   Start with an arbitrary vector q 1 with norm 1.  Repeat for k = 2, 3, ‚Ä¶       q  k   ‚Üê   A    q   k  -  1         normal-‚Üê   subscript  q  k     A   subscript  q    k  1       q_{k}\leftarrow Aq_{k-1}\,     for  j from 1 to k ‚àí 1       h   j  ,   k  -  1     ‚Üê    q  j  *     q  k        normal-‚Üê   subscript  h   j    k  1        superscript   subscript  q  j      subscript  q  k      h_{j,k-1}\leftarrow q_{j}^{*}q_{k}\,          q  k   ‚Üê    q  k   -    h   j  ,   k  -  1       q  j         normal-‚Üê   subscript  q  k      subscript  q  k      subscript  h   j    k  1      subscript  q  j       q_{k}\leftarrow q_{k}-h_{j,k-1}q_{j}\,           h   k  ,   k  -  1     ‚Üê   ‚à•   q  k   ‚à•      normal-‚Üê   subscript  h   k    k  1      norm   subscript  q  k      h_{k,k-1}\leftarrow\|q_{k}\|\,          q  k   ‚Üê     q  k    h   k  ,   k  -  1          normal-‚Üê   subscript  q  k      subscript  q  k    subscript  h   k    k  1        q_{k}\leftarrow\frac{q_{k}}{h_{k,k-1}}\,       The j -loop projects out the component of    q  k     subscript  q  k    q_{k}   in the directions of     q  1   ,  ‚Ä¶  ,   q   k  -  1        subscript  q  1   normal-‚Ä¶   subscript  q    k  1      q_{1},\dots,q_{k-1}   . This ensures the orthogonality of all the generated vectors.  The algorithm breaks down when q k is the zero vector. This happens when the minimal polynomial of A is of degree k . In most applications of the Arnoldi iteration, including the eigenvalue algorithm below and GMRES , the algorithm has converged at this point.  Every step of the k -loop takes one matrix-vector product and approximately 4 mk floating point operations.  Properties of the Arnoldi iteration  Let Q n denote the m -by- n matrix formed by the first n Arnoldi vectors q 1 , q 2 , ‚Ä¶, q n , and let H n be the (upper Hessenberg ) matrix formed by the numbers h j , k computed by the algorithm:        H  n   =   [      h   1  ,  1       h   1  ,  2       h   1  ,  3      ‚ãØ     h   1  ,  n         h   2  ,  1       h   2  ,  2       h   2  ,  3      ‚ãØ     h   2  ,  n        0     h   3  ,  2       h   3  ,  3      ‚ãØ     h   3  ,  n        ‚ãÆ    ‚ã±    ‚ã±    ‚ã±    ‚ãÆ      0    ‚ãØ    0     h   n  ,   n  -  1        h   n  ,  n       ]    .       subscript  H  n      subscript  h   1  1     subscript  h   1  2     subscript  h   1  3    normal-‚ãØ   subscript  h   1  n       subscript  h   2  1     subscript  h   2  2     subscript  h   2  3    normal-‚ãØ   subscript  h   2  n      0   subscript  h   3  2     subscript  h   3  3    normal-‚ãØ   subscript  h   3  n      normal-‚ãÆ  normal-‚ã±  normal-‚ã±  normal-‚ã±  normal-‚ãÆ    0  normal-‚ãØ  0   subscript  h   n    n  1      subscript  h   n  n        H_{n}=\begin{bmatrix}h_{1,1}&h_{1,2}&h_{1,3}&\cdots&h_{1,n}\\
 h_{2,1}&h_{2,2}&h_{2,3}&\cdots&h_{2,n}\\
 0&h_{3,2}&h_{3,3}&\cdots&h_{3,n}\\
 \vdots&\ddots&\ddots&\ddots&\vdots\\
 0&\cdots&0&h_{n,n-1}&h_{n,n}\end{bmatrix}.   We then have        H  n   =    Q  n  *   A   Q  n     .       subscript  H  n      superscript   subscript  Q  n     A   subscript  Q  n      H_{n}=Q_{n}^{*}AQ_{n}.\,   This yields an alternative interpretation of the Arnoldi iteration as a (partial) orthogonal reduction of A to Hessenberg form. The matrix H n can be viewed as the representation in the basis formed by the Arnoldi vectors of the orthogonal projection of A onto the Krylov subspace    ùí¶  n     subscript  ùí¶  n    \mathcal{K}_{n}   .  The matrix H n can be characterized by the following optimality condition. The characteristic polynomial of H n minimizes || p ( A ) q 1 || 2 among all monic polynomials of degree n . This optimality problem has a unique solution if and only if the Arnoldi iteration does not break down.  The relation between the Q matrices in subsequent iterations is given by       A   Q  n    =    Q   n  +  1      H  ~   n          A   subscript  Q  n       subscript  Q    n  1     subscript   normal-~  H   n      AQ_{n}=Q_{n+1}\tilde{H}_{n}   where        H  ~   n   =   [      h   1  ,  1       h   1  ,  2       h   1  ,  3      ‚ãØ     h   1  ,  n         h   2  ,  1       h   2  ,  2       h   2  ,  3      ‚ãØ     h   2  ,  n        0     h   3  ,  2       h   3  ,  3      ‚ãØ     h   3  ,  n        ‚ãÆ    ‚ã±    ‚ã±    ‚ã±    ‚ãÆ      ‚ãÆ       0     h   n  ,   n  -  1        h   n  ,  n        0    ‚ãØ    ‚ãØ    0     h    n  +  1   ,  n       ]        subscript   normal-~  H   n      subscript  h   1  1     subscript  h   1  2     subscript  h   1  3    normal-‚ãØ   subscript  h   1  n       subscript  h   2  1     subscript  h   2  2     subscript  h   2  3    normal-‚ãØ   subscript  h   2  n      0   subscript  h   3  2     subscript  h   3  3    normal-‚ãØ   subscript  h   3  n      normal-‚ãÆ  normal-‚ã±  normal-‚ã±  normal-‚ã±  normal-‚ãÆ    normal-‚ãÆ  absent  0   subscript  h   n    n  1      subscript  h   n  n      0  normal-‚ãØ  normal-‚ãØ  0   subscript  h     n  1   n        \tilde{H}_{n}=\begin{bmatrix}h_{1,1}&h_{1,2}&h_{1,3}&\cdots&h_{1,n}\\
 h_{2,1}&h_{2,2}&h_{2,3}&\cdots&h_{2,n}\\
 0&h_{3,2}&h_{3,3}&\cdots&h_{3,n}\\
 \vdots&\ddots&\ddots&\ddots&\vdots\\
 \vdots&&0&h_{n,n-1}&h_{n,n}\\
 0&\cdots&\cdots&0&h_{n+1,n}\end{bmatrix}   is an ( n +1)-by- n matrix formed by adding an extra row to H n .  Finding eigenvalues with the Arnoldi iteration  The idea of the Arnoldi iteration as an eigenvalue algorithm is to compute the eigenvalues of the orthogonal projection of A onto the Krylov subspace. This projection is represented by H n . The eigenvalues of H n are called the Ritz eigenvalues . Since H n is a Hessenberg matrix of modest size, its eigenvalues can be computed efficiently, for instance with the QR algorithm . This is an example of the Rayleigh-Ritz method .  It is often observed in practice that some of the Ritz eigenvalues converge to eigenvalues of A . Since H n is n -by- n , it has at most n eigenvalues, and not all eigenvalues of A can be approximated. Typically, the Ritz eigenvalues converge to the extreme eigenvalues of A . This can be related to the characterization of H n as the matrix whose characteristic polynomial minimizes || p ( A ) q 1 || in the following way. A good way to get p ( A ) small is to choose the polynomial p such that p ( x ) is small whenever x is an eigenvalue of A . Hence, the zeros of p (and thus the Ritz eigenvalues) will be close to the eigenvalues of A .  However, the details are not fully understood yet. This is in contrast to the case where A is symmetric . In that situation, the Arnoldi iteration becomes the Lanczos iteration , for which the theory is more complete.  Implicitly restarted Arnoldi method (IRAM)  Due to practical storage consideration, common implementations of Arnoldi methods typically restart after some number of iterations. One major innovation in restarting was due to Lehoucq and Sorensen who proposed the Implicitly Restarted Arnoldi Method. 1 They also implemented the algorithm in a freely available software package called ARPACK . 2 This has spurred a number of other variations including Implicitly Restarted Lanczos method. 3 4 5 It also influenced how other restarted methods are analyzed. 6 Theoretical results have shown that convergence improves with an increase in the Krylov subspace dimension n . However, an a-priori value of n which would lead to optimal convergence is not known. Recently a dynamic switching strategy 7 has been proposed which fluctuates the dimension n before each restart and thus leads to acceleration in the rate of convergence.  See also  The generalized minimal residual method (GMRES) is a method for solving Ax = b based on Arnoldi iteration.  References   W. E. Arnoldi, "The principle of minimized iterations in the solution of the matrix eigenvalue problem," Quarterly of Applied Mathematics , volume 9, pages 17‚Äì29, 1951.  Yousef Saad , Numerical Methods for Large Eigenvalue Problems , Manchester University Press, 1992. ISBN 0-7190-3386-1.  Lloyd N. Trefethen and David Bau, III, Numerical Linear Algebra , Society for Industrial and Applied Mathematics, 1997. ISBN 0-89871-361-7.  Jaschke, Leonhard: Preconditioned Arnoldi Methods for Systems of Nonlinear Equations . (2004). ISBN 2-84976-001-3  Implementation: Matlab comes with ARPACK built-in. Both stored and implicit matrices can be analyzed through the eigs() function.   "  Category:Numerical linear algebra     ‚Ü©  ‚Ü©  ‚Ü©  ‚Ü©  ‚Ü©  ‚Ü©  ‚Ü©     