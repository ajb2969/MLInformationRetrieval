


TP model transformation in control theory




TP model transformation in control theory

Baranyi and Yam proposed the TP model transformation 123 as a new concept in quasi-LPV (qLPV) based control, which plays a central role in the highly desirable bridging between identification and polytopic systems theories. It is uniquely effective in manipulating the convex hull of polytopic forms, and, hence, has revealed and proved the fact that convex hull manipulation is a necessary and crucial step in achieving optimal solutions and decreasing conservativeness in modern linear matrix inequality based control theory. Thus, although it is a transformation in a mathematical sense, it has established a conceptually new direction in control theory and has laid the ground for further new approaches towards optimality.
For details please visit: TP model transformation
Key features for control analysis and design

The TP model transformation transforms a given qLPV model into a (tensor product type) polytopic form, irrespective of whether the model is given in the form of analytical equations resulting from physical considerations, or as an outcome of soft computing based identification techniques (such as neural networks or fuzzy logic based methods, or as a result of a black-box identification).
Further the TP model transformation is capable of manipulating the convex hull defined by the polytopic form that is a necessary step in polytopic qLPV model based control analysis and design theories.

Related definitions

Linear Parameter-Varying (LPV) state-space model:







\begin{pmatrix}
 {{\mathbf{{\dot{x}}}}}(t) \\
 {\mathbf{y}}(t)
\end{pmatrix}={\mathbf{S}}({\mathbf{p}}(t))\begin{pmatrix}
 {\mathbf{x}}(t) \\
 {\mathbf{u}}(t)
\end{pmatrix}, 
with input 
 
 
 
 , output 
 
 
 
  and state vector 
 
 
 
 . The system matrix 
 
 
 
 
  is a parameter-varying object, where 
 
 
 
  is a time varying 
 
 
 
 -dimensional parameter vector which is an element of closed hypercube 
 
 
 
 . As a matter of fact, further parameter dependent channels can be inserted to 
 
 
 
  that represent various control performance requirements.

quasi Linear Parameter-Varying (qLPV) state-space model:



 
  in the above LPV model can also include some elements of the state vector 
 
 
 
 , and, hence this model belongs to the class of non-linear systems, and is also referred to as a quasi LPV (qLPV) model.

TP type polytopic Linear Parameter-Varying (LPV) state-space model:







\begin{pmatrix}
 {{\mathbf{{\dot{x}}}}}(t) \\
 {\mathbf{y}}(t)
\end{pmatrix}=\mathcal{S}\boxtimes_{n=1}^N\mathbf{w}_n(p_n(t))\begin{pmatrix}
 {\mathbf{x}}(t) \\
 {\mathbf{u}}(t)
\end{pmatrix}, 
with input 
 
 
 
 , output 
 
 
 
  and state vector 
 
 
 
 . The system matrix 
 
 
 
  is a parameter-varying object, where 
 
 
 
  is a time varying 
 
 
 
 -dimensional parameter vector which is an element of closed hypercube 
 
 
 
 , and the weighting functions 
 
 
 
  are the elements of vector 
 
 
 
 . Core tensor contains elements 
 
 
 
  which are the vertexes of the system. As a matter of fact, further parameter dependent channels can be inserted to 
 
 
 
  that represent various control performance requirements. Here




 
  and 
 
 




This means that 
 
 
 
  is within the vertexes 
 
 
 
  of the system (within the convex hull defined by the vertexes) for all 
 
 
 
 . Note that the TP type polytopic model can always be given in the form








where the vertexes are the same as in the TP type polytopic form and the multi variable weighting functions are the product of the one variable weighting functions according to the TP type polytopic form, and r is the linear index equivalent of the multi-linear indexing 
 
 
 
 .

TP model transformation for qLPV models:

Assume a given qLPV model 
 
 
 
 , where 
 
 
 
 , whose TP polytopic structure may be unknown (e.g. it is given by neural networks). The TP model transformation determines its TP polytopic structure as




 
 ,
 



namely it generates core tensor 
 
 
 
  and weighting functions of 
 
 
 
  for all 
 
 
 
 . Its free MATLAB implementation is downloadable at 1 or at MATLAB Central 2.
If the given model does not have (finite element) TP polytopic structure, then the TP model transformation determines its approximation:








where trade-off is offered by the TP model transformation between complexity (number of vertexes stored in the core tensor or the number of weighting functions) and the approximation accuracy.4 The TP model can be generated according to various constrains. Typical TP models generated by the TP model transformation are:

HOSVD canonical form of qLPV models,
Various kinds of TP type polytopic form (this feature is very important in control performance optimization).

TP model based control design

Key methodology:

Since the TP type polytopic model is a subset of the polytopic model representations, the analysis and design methodologies developed for polytopic representations are applicable for the TP type polytopic models as well. One typical way is to search the nonlinear controller in the form:








where the vertexes 
 
 
 
  of the controller is calculated from 
 
 
 
 . Typically, the vertexes 
 
 
 
  are substituted into Linear Matrix Inequalities in order to determine 
 
 
 
 .
In TP type polytopic form the controller is:








where the vertexes 
 
 
 
  stored in the core tensor 
 
 
 
  are determined from the vertexes 
 
 
 
  stored in 
 
 
 
 . Note that the polytopic observer or other components can be generated in similar way, such as these vertexes are also generated from 
 
 
 
 .

Convex hull manipulation based optimization:

The polytopic representation of a given qLPV model is not invariant. I.e. a given 
 
 
 
  has 
 
 
 
  number of different representation as:








where 
 
 
 
 . In order to generate an optimal control of the given model 
 
 
 
  we apply, for instance LMIs. Thus, if we apply the selected LMIs to the above polytopic model we arrive at:








Since the LMIs realize a non-linear mapping between the vertexes in 
 
 
 
  and 
 
 
 
  we may find very different controllers for each 
 
 
 
 . This means that we have 
 
 
 
  different number of "optimal" controllers to the same system 
 
 
 
 . Thus, the question is: which one of the "optimal" controllers is really the optimal one. The TP model transformation let us to manipulate the weighting functions systematically that is equivalent to the manipulation of the vertexes. The geometrical meaning of this manipulation is the manipulation of the convex hull defined by the vertexes. We can easily demonstrate the following facts:

Tightening the convex hull typically decreases the conservativeness of the solution, so as may lead to better control performance. For instance, if we have a polytopic representation









of a given model 
 
 
 
 , then we can generate a controller as








then we solved the control problem of all systems 
 
 
 
  that can be given by the same vertexes, but with different weighting functions as:








where








If one of these systems are very hardly controllable (or even uncontrollable) then we arrive at a very conservative solution (or unfeasible LMIs). Therefore we expect that during tightening the convex hull we exclude such problematic systems.

It can also be easily demonstrated that the observer design is typically needs large convex hull. So, as when we design controller and observer we need to find the optimal convex hull between the tight one and the large one. Same papers also demonstrate that using different convex hulls (if the separation principal is applicable) for observer and controller may lead to even better solution.

Properties of the TP model transformation in qLPV theories

It can be executed uniformly (irrespective of whether the model is given in the form of analytical equations resulting from physical considerations, or as an outcome of soft computing based identification techniques (such as neural networks or fuzzy logic based methods, or as a result of a black-box identification), without analytical interaction, within a reasonable amount of time. Thus, the transformation replaces the analytical and in many cases complex and not obvious conversions to numerical, tractable, straightforward operations that can be carried out in a routine fashion.


It generates the HOSVD-based canonical form of qLPV models, which is a unique representation. This form extracts the unique structure of a given qLPV model in the same sense as the HOSVD does for tensors and matrices, in a way such that:

:* the number of LTI components are minimized;
:* the weighting functions are one variable functions of the parameter vector in an orthonormed system for each parameter (singular functions);
:* the LTI components (vertex components) are also in orthogonal positions;
:* the LTI systems and the weighting functions are ordered according to the higher-order singular values of the parameter vector;
:* it has a unique form (except for some special cases);
:* introduces and defines the rank of the qLPV model by the dimensions of the parameter vector;

The core step of the TP model transformation was extended to generate different types of convex polytopic models, in order to focus on the systematic (numerical and automatic) modification of the convex hull instead of developing new LMI equations for feasible controller design (this is the widely adopted approach). It is worth noting that both the TP model transformation and the LMI-based control design methods are numerically executable one after the other, and this makes the resolution of a wide class of problems possible in a straightforward and tractable, numerical way.


Based on the higher-order singular values (which express the rank properties of the given qLPV model, see above, for each element of the parameter vector in 
 
 
 
  norm), the TP model transformation offers a trade-off between the complexity of the TP model (polytopic form),5 hence, the LMI design and the accuracy of the resulting TP model.


The TP model transformation is executed before utilizing the LMI design. This means that when we start the LMI design we already have the global weighting functions and during control we do not need to determine a local weighting of the LTI systems for feedback gains to compute the control value at every point of the hyperspace the system should go through. Having predefined continuous weighting functions also ensures that there is no friction in the weighting during control.

References


'
Category:Control theory



P. Baranyi (April 2004). "TP model transformation as a way to LMI based controller design". IEEE Transaction on Industrial Electronics 51 (2): 387–400.↩
P. Baranyi and D. Tikk and Y. Yam and R. J. Patton (2003). "From Differential Equations to PDC Controller Design via Numerical Transformation". Computers in Industry, Elsevier Science 51: 281–297.↩
↩
↩





