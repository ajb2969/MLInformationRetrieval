


Residue numeral system




Residue numeral system

A residue numeral system (RNS) represents a large integer using a set of smaller integers, so that computation may be performed more efficiently. It relies on the Chinese remainder theorem of modular arithmetic for its operation, a mathematical idea from Sun Tsu Suan-Ching (Master Sun’s Arithmetic Manual) in the 4th century AD.
Practical applications
RNS have applications in the field of digital computer arithmetic. By decomposing in this a large integer into a set of smaller integers, a large calculation can be performed as a series of smaller calculations that can be performed independently and in parallel.
Defining a residue numeral system
A residue numeral system is defined by a set of N integer constants,

{m1, m2, m3, ... , mN },
 

referred to as the moduli. Let M be the least common multiple of all the mi.
Any arbitrary integer X smaller than M can be represented in the defined residue numeral system as a set of N smaller integers

{x1, x2, x3, ... , xN}
 

with

xi = X modulo mi


representing the residue class of X to that modulus.
Note that for maximum representational efficiency it is imperative that all the moduli are pairwise coprime; that is, no modulus may have a common factor with any other. M is then the product of all the mi.
For example RNS(4|2) has non-coprime moduli, with an LCM of 4, and a product of 8, resulting in the same representation for different values smaller than the produt.1
 (3)decimal = (3|1)RNS(4|2)
 (7)decimal = (3|1)RNS(4|2)
Operations on RNS numbers
Once represented in RNS, many arithmetic operations can be efficiently performed on the encoded integer. For the following operations, consider two integers, A and B, represented by ai and bi in an RNS system defined by mi (for i from 0 ≤ i ≤ N).
Addition and subtraction
Addition (or subtraction) can be accomplished by simply adding (or subtracting) the small integer values, modulo their specific moduli. That is,


 
  can be calculated in RNS as



One does not have to check for overflow in these operations.
Multiplication
Multiplication can be accomplished in a manner similar to addition and subtraction. To calculate


 
  we can calculate:


 
  Again overflows are not possible.
Division
Division in residue numeral systems is problematic. A paper describing one possible algorithm is available at 1. On the other hand, if B is coprime with M (that is 
 
 
 
 ) then


 
  can be easily calculated by


 
  where 
 
 
 
  is multiplicative inverse of B modulo M, and 
 
 
 
  is multiplicative inverse of 
 
 
 
  modulo 
 
 
 
 
 .
Integer factorization
The RNS can improve efficiency of trial division. Let 
 
 
 
  a semiprime. Let 
 
 
 
  represent first N primes. Assume that 
 
 
 
 , 
 
 
 
 . Then 
 
 
 
 
 , where 
 
 
 
 . The method of trial division is the method of exhaustion, and the RNS automatically eliminates all Y and Z such that 
 
 
 
  or 
 
 
 
 , that is we only need to check


 
  numbers below M. For example, N = 3, the RNS can automatically eliminate all numbers but

1,7,11,13,17,19,23,29 mod 30
 

or 73% of numbers. For N = 25 when 
 
 
 
 
  are all prime numbers below 100, the RNS eliminates about 88% of numbers. One can see from the above formula the diminishing returns from the larger sets of moduli.
Associated mixed radix system
A numeral given by 
 
 
 
  in the RNS can be naturally represented in the associated mixed radix system (AMRS)


 
  where


 
  for 
 
 
 
  and $0\leq x_i
 
 Note that after conversion from the RNS to AMRS, the comparison of numbers becomes straightforward.
 
 ==See also==
 * [[Covering system]]
 * [[Reduced residue system]]
 
 ==References==
 
 
 * [http://hal-lirmm.ccsd.cnrs.fr/docs/00/10/64/70/PDF/D547.PDF Efﬁcient RNS bases for Cryptography]  // IMACS'05: World Congress: Scientific ComputationApplied Mathematics and Simulation. 2005.
 [[Category:Modular arithmetic]]
 [[Category:Computer arithmetic]]"$



Parhami, Computer Arithmetic, Algorithms and Hardware Design




